#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_PlayerGameOverPlayerTile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_PlayerGameOverPlayerTile.Widget_PlayerGameOverPlayerTile_C
// 0x0040 (0x0310 - 0x02D0)
class UWidget_PlayerGameOverPlayerTile_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SelectAnimation;                                   // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_0;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_PlayerAvatarElement_C*          Widget_PlayerAvatarElement;                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UWidget* PressedWidget)> OnPressed;                          // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ARPlayerState*                          PlayerState;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetSelected(bool New_Selected);
	class UWidget* Get_Icon_ToolTipWidget();
	void ExecuteUbergraph_Widget_PlayerGameOverPlayerTile(int32 EntryPoint);
	void Construct();
	void BndEvt__Widget_PlayerGameOverPlayerTile_Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_PlayerGameOverPlayerTile_C">();
	}
	static class UWidget_PlayerGameOverPlayerTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_PlayerGameOverPlayerTile_C>();
	}
};
static_assert(alignof(UWidget_PlayerGameOverPlayerTile_C) == 0x000008, "Wrong alignment on UWidget_PlayerGameOverPlayerTile_C");
static_assert(sizeof(UWidget_PlayerGameOverPlayerTile_C) == 0x000310, "Wrong size on UWidget_PlayerGameOverPlayerTile_C");
static_assert(offsetof(UWidget_PlayerGameOverPlayerTile_C, UberGraphFrame) == 0x0002D0, "Member 'UWidget_PlayerGameOverPlayerTile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWidget_PlayerGameOverPlayerTile_C, SelectAnimation) == 0x0002D8, "Member 'UWidget_PlayerGameOverPlayerTile_C::SelectAnimation' has a wrong offset!");
static_assert(offsetof(UWidget_PlayerGameOverPlayerTile_C, Button_0) == 0x0002E0, "Member 'UWidget_PlayerGameOverPlayerTile_C::Button_0' has a wrong offset!");
static_assert(offsetof(UWidget_PlayerGameOverPlayerTile_C, Widget_PlayerAvatarElement) == 0x0002E8, "Member 'UWidget_PlayerGameOverPlayerTile_C::Widget_PlayerAvatarElement' has a wrong offset!");
static_assert(offsetof(UWidget_PlayerGameOverPlayerTile_C, OnPressed) == 0x0002F0, "Member 'UWidget_PlayerGameOverPlayerTile_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UWidget_PlayerGameOverPlayerTile_C, PlayerState) == 0x000300, "Member 'UWidget_PlayerGameOverPlayerTile_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UWidget_PlayerGameOverPlayerTile_C, IsSelected) == 0x000308, "Member 'UWidget_PlayerGameOverPlayerTile_C::IsSelected' has a wrong offset!");

}

