#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShootingRangeDummy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ShootingRangeDummy.BP_ShootingRangeDummy_C
// 0x0020 (0x4808 - 0x47E8)
class ABP_ShootingRangeDummy_C : public ARNPCPawnBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x47E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x47F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x47F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ShootingRange_Target_Board_01;                  // 0x4800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void Activate(int32 ID, bool Positive);
	void ExecuteUbergraph_BP_ShootingRangeDummy(int32 EntryPoint);
	void OnDamageTaken_Event(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEvent);
	void ReceiveBeginPlay();
	void SetDummyActive(bool Active);

	bool ShouldShowOnRadar() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ShootingRangeDummy_C">();
	}
	static class ABP_ShootingRangeDummy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ShootingRangeDummy_C>();
	}
};
static_assert(alignof(ABP_ShootingRangeDummy_C) == 0x000008, "Wrong alignment on ABP_ShootingRangeDummy_C");
static_assert(sizeof(ABP_ShootingRangeDummy_C) == 0x004808, "Wrong size on ABP_ShootingRangeDummy_C");
static_assert(offsetof(ABP_ShootingRangeDummy_C, UberGraphFrame) == 0x0047E8, "Member 'ABP_ShootingRangeDummy_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ShootingRangeDummy_C, SpotLight) == 0x0047F0, "Member 'ABP_ShootingRangeDummy_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_ShootingRangeDummy_C, Decal) == 0x0047F8, "Member 'ABP_ShootingRangeDummy_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_ShootingRangeDummy_C, SM_ShootingRange_Target_Board_01) == 0x004800, "Member 'ABP_ShootingRangeDummy_C::SM_ShootingRange_Target_Board_01' has a wrong offset!");

}

