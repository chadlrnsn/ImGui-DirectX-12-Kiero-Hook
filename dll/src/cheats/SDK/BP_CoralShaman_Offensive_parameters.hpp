#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CoralShaman_Offensive

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_CoralShaman_Offensive.BP_CoralShaman_Offensive_C.Destroy Staff
// 0x0001 (0x0001 - 0x0000)
struct BP_CoralShaman_Offensive_C_Destroy_Staff final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoralShaman_Offensive_C_Destroy_Staff) == 0x000001, "Wrong alignment on BP_CoralShaman_Offensive_C_Destroy_Staff");
static_assert(sizeof(BP_CoralShaman_Offensive_C_Destroy_Staff) == 0x000001, "Wrong size on BP_CoralShaman_Offensive_C_Destroy_Staff");
static_assert(offsetof(BP_CoralShaman_Offensive_C_Destroy_Staff, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_CoralShaman_Offensive_C_Destroy_Staff::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_CoralShaman_Offensive.BP_CoralShaman_Offensive_C.ExecuteUbergraph_BP_CoralShaman_Offensive
// 0x0098 (0x0098 - 0x0000)
struct BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive) == 0x000008, "Wrong alignment on BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive");
static_assert(sizeof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive) == 0x000098, "Wrong size on BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, EntryPoint) == 0x000000, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, K2Node_CustomEvent_NotifyName_4) == 0x000004, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, K2Node_CustomEvent_NotifyName_3) == 0x00000C, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, K2Node_CustomEvent_NotifyName_2) == 0x000024, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, K2Node_CustomEvent_NotifyName_1) == 0x00003C, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, K2Node_CustomEvent_NotifyName) == 0x000054, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, Temp_name_Variable) == 0x00006C, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, K2Node_CreateDelegate_OutputDelegate_4) == 0x000074, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000088, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BP_CoralShaman_Offensive_C_ExecuteUbergraph_BP_CoralShaman_Offensive::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_CoralShaman_Offensive.BP_CoralShaman_Offensive_C.OnBlendOut_B1AD104349E84DEEEEE1C0A0E304C662
// 0x0008 (0x0008 - 0x0000)
struct BP_CoralShaman_Offensive_C_OnBlendOut_B1AD104349E84DEEEEE1C0A0E304C662 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoralShaman_Offensive_C_OnBlendOut_B1AD104349E84DEEEEE1C0A0E304C662) == 0x000004, "Wrong alignment on BP_CoralShaman_Offensive_C_OnBlendOut_B1AD104349E84DEEEEE1C0A0E304C662");
static_assert(sizeof(BP_CoralShaman_Offensive_C_OnBlendOut_B1AD104349E84DEEEEE1C0A0E304C662) == 0x000008, "Wrong size on BP_CoralShaman_Offensive_C_OnBlendOut_B1AD104349E84DEEEEE1C0A0E304C662");
static_assert(offsetof(BP_CoralShaman_Offensive_C_OnBlendOut_B1AD104349E84DEEEEE1C0A0E304C662, NotifyName) == 0x000000, "Member 'BP_CoralShaman_Offensive_C_OnBlendOut_B1AD104349E84DEEEEE1C0A0E304C662::NotifyName' has a wrong offset!");

// Function BP_CoralShaman_Offensive.BP_CoralShaman_Offensive_C.OnCompleted_B1AD104349E84DEEEEE1C0A0E304C662
// 0x0008 (0x0008 - 0x0000)
struct BP_CoralShaman_Offensive_C_OnCompleted_B1AD104349E84DEEEEE1C0A0E304C662 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoralShaman_Offensive_C_OnCompleted_B1AD104349E84DEEEEE1C0A0E304C662) == 0x000004, "Wrong alignment on BP_CoralShaman_Offensive_C_OnCompleted_B1AD104349E84DEEEEE1C0A0E304C662");
static_assert(sizeof(BP_CoralShaman_Offensive_C_OnCompleted_B1AD104349E84DEEEEE1C0A0E304C662) == 0x000008, "Wrong size on BP_CoralShaman_Offensive_C_OnCompleted_B1AD104349E84DEEEEE1C0A0E304C662");
static_assert(offsetof(BP_CoralShaman_Offensive_C_OnCompleted_B1AD104349E84DEEEEE1C0A0E304C662, NotifyName) == 0x000000, "Member 'BP_CoralShaman_Offensive_C_OnCompleted_B1AD104349E84DEEEEE1C0A0E304C662::NotifyName' has a wrong offset!");

// Function BP_CoralShaman_Offensive.BP_CoralShaman_Offensive_C.OnInterrupted_B1AD104349E84DEEEEE1C0A0E304C662
// 0x0008 (0x0008 - 0x0000)
struct BP_CoralShaman_Offensive_C_OnInterrupted_B1AD104349E84DEEEEE1C0A0E304C662 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoralShaman_Offensive_C_OnInterrupted_B1AD104349E84DEEEEE1C0A0E304C662) == 0x000004, "Wrong alignment on BP_CoralShaman_Offensive_C_OnInterrupted_B1AD104349E84DEEEEE1C0A0E304C662");
static_assert(sizeof(BP_CoralShaman_Offensive_C_OnInterrupted_B1AD104349E84DEEEEE1C0A0E304C662) == 0x000008, "Wrong size on BP_CoralShaman_Offensive_C_OnInterrupted_B1AD104349E84DEEEEE1C0A0E304C662");
static_assert(offsetof(BP_CoralShaman_Offensive_C_OnInterrupted_B1AD104349E84DEEEEE1C0A0E304C662, NotifyName) == 0x000000, "Member 'BP_CoralShaman_Offensive_C_OnInterrupted_B1AD104349E84DEEEEE1C0A0E304C662::NotifyName' has a wrong offset!");

// Function BP_CoralShaman_Offensive.BP_CoralShaman_Offensive_C.OnNotifyBegin_B1AD104349E84DEEEEE1C0A0E304C662
// 0x0008 (0x0008 - 0x0000)
struct BP_CoralShaman_Offensive_C_OnNotifyBegin_B1AD104349E84DEEEEE1C0A0E304C662 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoralShaman_Offensive_C_OnNotifyBegin_B1AD104349E84DEEEEE1C0A0E304C662) == 0x000004, "Wrong alignment on BP_CoralShaman_Offensive_C_OnNotifyBegin_B1AD104349E84DEEEEE1C0A0E304C662");
static_assert(sizeof(BP_CoralShaman_Offensive_C_OnNotifyBegin_B1AD104349E84DEEEEE1C0A0E304C662) == 0x000008, "Wrong size on BP_CoralShaman_Offensive_C_OnNotifyBegin_B1AD104349E84DEEEEE1C0A0E304C662");
static_assert(offsetof(BP_CoralShaman_Offensive_C_OnNotifyBegin_B1AD104349E84DEEEEE1C0A0E304C662, NotifyName) == 0x000000, "Member 'BP_CoralShaman_Offensive_C_OnNotifyBegin_B1AD104349E84DEEEEE1C0A0E304C662::NotifyName' has a wrong offset!");

// Function BP_CoralShaman_Offensive.BP_CoralShaman_Offensive_C.OnNotifyEnd_B1AD104349E84DEEEEE1C0A0E304C662
// 0x0008 (0x0008 - 0x0000)
struct BP_CoralShaman_Offensive_C_OnNotifyEnd_B1AD104349E84DEEEEE1C0A0E304C662 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoralShaman_Offensive_C_OnNotifyEnd_B1AD104349E84DEEEEE1C0A0E304C662) == 0x000004, "Wrong alignment on BP_CoralShaman_Offensive_C_OnNotifyEnd_B1AD104349E84DEEEEE1C0A0E304C662");
static_assert(sizeof(BP_CoralShaman_Offensive_C_OnNotifyEnd_B1AD104349E84DEEEEE1C0A0E304C662) == 0x000008, "Wrong size on BP_CoralShaman_Offensive_C_OnNotifyEnd_B1AD104349E84DEEEEE1C0A0E304C662");
static_assert(offsetof(BP_CoralShaman_Offensive_C_OnNotifyEnd_B1AD104349E84DEEEEE1C0A0E304C662, NotifyName) == 0x000000, "Member 'BP_CoralShaman_Offensive_C_OnNotifyEnd_B1AD104349E84DEEEEE1C0A0E304C662::NotifyName' has a wrong offset!");

}

