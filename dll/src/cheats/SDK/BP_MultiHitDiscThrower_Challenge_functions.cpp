#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MultiHitDiscThrower_Challenge

#include "Basic.hpp"

#include "BP_MultiHitDiscThrower_Challenge_classes.hpp"
#include "BP_MultiHitDiscThrower_Challenge_parameters.hpp"


namespace SDK
{

// Function BP_MultiHitDiscThrower_Challenge.BP_MultiHitDiscThrower_Challenge_C.ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MultiHitDiscThrower_Challenge_C::ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiHitDiscThrower_Challenge_C", "ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge");

	Params::BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiHitDiscThrower_Challenge.BP_MultiHitDiscThrower_Challenge_C.OnApplicableRunStarted
// (Event, Public, BlueprintEvent)

void UBP_MultiHitDiscThrower_Challenge_C::OnApplicableRunStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiHitDiscThrower_Challenge_C", "OnApplicableRunStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiHitDiscThrower_Challenge.BP_MultiHitDiscThrower_Challenge_C.OnDealtDamage_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPawnBase*                       Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FDamageCombatEvent&        DamageEventData                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_MultiHitDiscThrower_Challenge_C::OnDealtDamage_Event(class ARPawnBase* Pawn, const struct FDamageCombatEvent& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiHitDiscThrower_Challenge_C", "OnDealtDamage_Event");

	Params::BP_MultiHitDiscThrower_Challenge_C_OnDealtDamage_Event Parms{};

	Parms.Pawn = Pawn;
	Parms.DamageEventData = std::move(DamageEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiHitDiscThrower_Challenge.BP_MultiHitDiscThrower_Challenge_C.OnFinishRun
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RunFailed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MultiHitDiscThrower_Challenge_C::OnFinishRun(bool RunFailed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiHitDiscThrower_Challenge_C", "OnFinishRun");

	Params::BP_MultiHitDiscThrower_Challenge_C_OnFinishRun Parms{};

	Parms.RunFailed = RunFailed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiHitDiscThrower_Challenge.BP_MultiHitDiscThrower_Challenge_C.ResetProgress
// (BlueprintCallable, BlueprintEvent)

void UBP_MultiHitDiscThrower_Challenge_C::ResetProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiHitDiscThrower_Challenge_C", "ResetProgress");

	UObject::ProcessEvent(Func, nullptr);
}

}

