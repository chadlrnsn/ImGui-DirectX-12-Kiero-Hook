#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_SkillTree2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_SkillTree2.Widget_SkillTree2_C
// 0x0198 (0x05D0 - 0x0438)
class UWidget_SkillTree2_C final : public URCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Construct_Aniamtion;                               // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundLightFX_Top;                             // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_161;                                   // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    CommonActionWidget_161;                            // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    CommonActionWidget_272;                            // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_141;                                         // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_AbilityAbundance1;                            // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_AbilityAbundance2;                            // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_AbyssalStamina;                               // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_Bartering;                                    // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_BeginnersCharm;                               // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_BountifulBottles;                             // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_BountifulBottles2;                            // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_CharmPower;                                   // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_EnhancedWeapons;                              // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_FinerCharms;                                  // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_ForgeAltar;                                   // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_GambleAltars;                                 // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_HealAltarBoatyard;                            // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_HealAltarGardens;                             // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_HealAltarSanctuary;                           // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_KeenVision;                                   // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_Locksmith;                                    // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_MagazineMadness;                              // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_MutatorReroll;                                // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_MutatorReroll2;                               // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_RapidFire;                                    // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_SecondWind;                                   // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_Shockwave;                                    // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_TimelyReward;                                 // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_UpgradeAltar;                                 // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_UpgradedInventions;                           // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTreeNode2_C*               Node_Wellfare;                                     // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_237;                                   // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SoulFragments;                                     // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SkillTree_TierSeparator_C*      Tier1Separator;                                    // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Vignette;                                          // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_SimpleText_C*                 W_Button_Close;                                    // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_SimpleText_C*                 W_Button_Reset;                                    // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         DemoLockNodesAfterRow;                             // 0x0578(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, int32>                            RowRequiredPointsMap;                              // 0x0580(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

public:
	void BndEvt__Widget_SkillTree2_W_Button_Close_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__Widget_SkillTree2_W_Button_Reset_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void Construct();
	void ExecuteUbergraph_Widget_SkillTree2(int32 EntryPoint);
	void GetPointsAssignedInNextRows(int32 Row, int32* Points);
	void GetPointsAssignedInPreviousRows(int32 Row, int32* Points);
	void GetPointsAssignedInRow(int32 Row, int32* Points);
	void GetPointsSpentOnNode(class URMutatorPrimaryAsset* RMutatorPrimaryAsset, int32* SpentSoulFragments);
	void GetRowRequiredPointsMap(TMap<int32, int32>* Map);
	void OnInitialized();
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void SetupExplicitNav();
	void SetupRow1ExplicitNav();
	void SetupRow2ExplicitNav();
	void SetupRow3ExplicitNav();
	void SetupRow4ExplicitNav();
	void SetupRow5ExplicitNav();
	void SetupRow6ExplicitNav();
	void UpdateNodes();
	void UpdateSoulFragmentsText();
	void UpdateTierSeparatorText();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_SkillTree2_C">();
	}
	static class UWidget_SkillTree2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_SkillTree2_C>();
	}
};
static_assert(alignof(UWidget_SkillTree2_C) == 0x000008, "Wrong alignment on UWidget_SkillTree2_C");
static_assert(sizeof(UWidget_SkillTree2_C) == 0x0005D0, "Wrong size on UWidget_SkillTree2_C");
static_assert(offsetof(UWidget_SkillTree2_C, UberGraphFrame) == 0x000438, "Member 'UWidget_SkillTree2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Construct_Aniamtion) == 0x000440, "Member 'UWidget_SkillTree2_C::Construct_Aniamtion' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, BackgroundLightFX_Top) == 0x000448, "Member 'UWidget_SkillTree2_C::BackgroundLightFX_Top' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, CanvasPanel_161) == 0x000450, "Member 'UWidget_SkillTree2_C::CanvasPanel_161' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, CommonActionWidget_161) == 0x000458, "Member 'UWidget_SkillTree2_C::CommonActionWidget_161' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, CommonActionWidget_272) == 0x000460, "Member 'UWidget_SkillTree2_C::CommonActionWidget_272' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Image_141) == 0x000468, "Member 'UWidget_SkillTree2_C::Image_141' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_AbilityAbundance1) == 0x000470, "Member 'UWidget_SkillTree2_C::Node_AbilityAbundance1' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_AbilityAbundance2) == 0x000478, "Member 'UWidget_SkillTree2_C::Node_AbilityAbundance2' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_AbyssalStamina) == 0x000480, "Member 'UWidget_SkillTree2_C::Node_AbyssalStamina' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_Bartering) == 0x000488, "Member 'UWidget_SkillTree2_C::Node_Bartering' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_BeginnersCharm) == 0x000490, "Member 'UWidget_SkillTree2_C::Node_BeginnersCharm' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_BountifulBottles) == 0x000498, "Member 'UWidget_SkillTree2_C::Node_BountifulBottles' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_BountifulBottles2) == 0x0004A0, "Member 'UWidget_SkillTree2_C::Node_BountifulBottles2' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_CharmPower) == 0x0004A8, "Member 'UWidget_SkillTree2_C::Node_CharmPower' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_EnhancedWeapons) == 0x0004B0, "Member 'UWidget_SkillTree2_C::Node_EnhancedWeapons' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_FinerCharms) == 0x0004B8, "Member 'UWidget_SkillTree2_C::Node_FinerCharms' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_ForgeAltar) == 0x0004C0, "Member 'UWidget_SkillTree2_C::Node_ForgeAltar' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_GambleAltars) == 0x0004C8, "Member 'UWidget_SkillTree2_C::Node_GambleAltars' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_HealAltarBoatyard) == 0x0004D0, "Member 'UWidget_SkillTree2_C::Node_HealAltarBoatyard' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_HealAltarGardens) == 0x0004D8, "Member 'UWidget_SkillTree2_C::Node_HealAltarGardens' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_HealAltarSanctuary) == 0x0004E0, "Member 'UWidget_SkillTree2_C::Node_HealAltarSanctuary' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_KeenVision) == 0x0004E8, "Member 'UWidget_SkillTree2_C::Node_KeenVision' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_Locksmith) == 0x0004F0, "Member 'UWidget_SkillTree2_C::Node_Locksmith' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_MagazineMadness) == 0x0004F8, "Member 'UWidget_SkillTree2_C::Node_MagazineMadness' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_MutatorReroll) == 0x000500, "Member 'UWidget_SkillTree2_C::Node_MutatorReroll' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_MutatorReroll2) == 0x000508, "Member 'UWidget_SkillTree2_C::Node_MutatorReroll2' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_RapidFire) == 0x000510, "Member 'UWidget_SkillTree2_C::Node_RapidFire' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_SecondWind) == 0x000518, "Member 'UWidget_SkillTree2_C::Node_SecondWind' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_Shockwave) == 0x000520, "Member 'UWidget_SkillTree2_C::Node_Shockwave' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_TimelyReward) == 0x000528, "Member 'UWidget_SkillTree2_C::Node_TimelyReward' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_UpgradeAltar) == 0x000530, "Member 'UWidget_SkillTree2_C::Node_UpgradeAltar' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_UpgradedInventions) == 0x000538, "Member 'UWidget_SkillTree2_C::Node_UpgradedInventions' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Node_Wellfare) == 0x000540, "Member 'UWidget_SkillTree2_C::Node_Wellfare' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, RetainerBox_237) == 0x000548, "Member 'UWidget_SkillTree2_C::RetainerBox_237' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, SoulFragments) == 0x000550, "Member 'UWidget_SkillTree2_C::SoulFragments' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Tier1Separator) == 0x000558, "Member 'UWidget_SkillTree2_C::Tier1Separator' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, Vignette) == 0x000560, "Member 'UWidget_SkillTree2_C::Vignette' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, W_Button_Close) == 0x000568, "Member 'UWidget_SkillTree2_C::W_Button_Close' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, W_Button_Reset) == 0x000570, "Member 'UWidget_SkillTree2_C::W_Button_Reset' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, DemoLockNodesAfterRow) == 0x000578, "Member 'UWidget_SkillTree2_C::DemoLockNodesAfterRow' has a wrong offset!");
static_assert(offsetof(UWidget_SkillTree2_C, RowRequiredPointsMap) == 0x000580, "Member 'UWidget_SkillTree2_C::RowRequiredPointsMap' has a wrong offset!");

}

