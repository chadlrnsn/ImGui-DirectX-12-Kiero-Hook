#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseCharacterScript

#include "Basic.hpp"

#include "BP_BaseCharacterScript_classes.hpp"
#include "BP_BaseCharacterScript_parameters.hpp"


namespace SDK
{

// Function BP_BaseCharacterScript.BP_BaseCharacterScript_C.CheckEnemiesRecentlyKilled
// (BlueprintCallable, BlueprintEvent)

void UBP_BaseCharacterScript_C::CheckEnemiesRecentlyKilled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseCharacterScript_C", "CheckEnemiesRecentlyKilled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseCharacterScript.BP_BaseCharacterScript_C.ExecuteUbergraph_BP_BaseCharacterScript
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BaseCharacterScript_C::ExecuteUbergraph_BP_BaseCharacterScript(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseCharacterScript_C", "ExecuteUbergraph_BP_BaseCharacterScript");

	Params::BP_BaseCharacterScript_C_ExecuteUbergraph_BP_BaseCharacterScript Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseCharacterScript.BP_BaseCharacterScript_C.IsLocalControllerNullChecked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AController*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BaseCharacterScript_C::IsLocalControllerNullChecked(class AController* Target, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseCharacterScript_C", "IsLocalControllerNullChecked");

	Params::BP_BaseCharacterScript_C_IsLocalControllerNullChecked Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_BaseCharacterScript.BP_BaseCharacterScript_C.K2_ActivateScript
// (Event, Public, BlueprintEvent)

void UBP_BaseCharacterScript_C::K2_ActivateScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseCharacterScript_C", "K2_ActivateScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseCharacterScript.BP_BaseCharacterScript_C.K2_OnDamageTaken
// (Event, Public, BlueprintEvent)
// Parameters:
// class URHealthComponent*                Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FDamageCombatEvent&        DamageData                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_BaseCharacterScript_C::K2_OnDamageTaken(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseCharacterScript_C", "K2_OnDamageTaken");

	Params::BP_BaseCharacterScript_C_K2_OnDamageTaken Parms{};

	Parms.Component = Component;
	Parms.DamageData = std::move(DamageData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseCharacterScript.BP_BaseCharacterScript_C.K2_OnEnemyKilled
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           KilledActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BaseCharacterScript_C::K2_OnEnemyKilled(class AActor* KilledActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseCharacterScript_C", "K2_OnEnemyKilled");

	Params::BP_BaseCharacterScript_C_K2_OnEnemyKilled Parms{};

	Parms.KilledActor = KilledActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseCharacterScript.BP_BaseCharacterScript_C.OnHealthRegained
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class URHealthComponent*                Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// float                                   currentHealth                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   healthDelta                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHealCombatEvent&          HealEvent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UBP_BaseCharacterScript_C::OnHealthRegained(class URHealthComponent* Component, float currentHealth, float healthDelta, const struct FHealCombatEvent& HealEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseCharacterScript_C", "OnHealthRegained");

	Params::BP_BaseCharacterScript_C_OnHealthRegained Parms{};

	Parms.Component = Component;
	Parms.currentHealth = currentHealth;
	Parms.healthDelta = healthDelta;
	Parms.HealEvent = std::move(HealEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseCharacterScript.BP_BaseCharacterScript_C.OnPlayerPawnRevived_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPlayerPawn*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BaseCharacterScript_C::OnPlayerPawnRevived_Event(class ARPlayerPawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseCharacterScript_C", "OnPlayerPawnRevived_Event");

	Params::BP_BaseCharacterScript_C_OnPlayerPawnRevived_Event Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseCharacterScript.BP_BaseCharacterScript_C.OnRespawn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPlayerPawn*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BaseCharacterScript_C::OnRespawn(class ARPlayerPawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseCharacterScript_C", "OnRespawn");

	Params::BP_BaseCharacterScript_C_OnRespawn Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseCharacterScript.BP_BaseCharacterScript_C.OnRevivedCastStarted_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPlayerPawn*                     RevivingPlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   CastTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentCastTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BaseCharacterScript_C::OnRevivedCastStarted_Event(class ARPlayerPawn* RevivingPlayer, float CastTime, float CurrentCastTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseCharacterScript_C", "OnRevivedCastStarted_Event");

	Params::BP_BaseCharacterScript_C_OnRevivedCastStarted_Event Parms{};

	Parms.RevivingPlayer = RevivingPlayer;
	Parms.CastTime = CastTime;
	Parms.CurrentCastTime = CurrentCastTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseCharacterScript.BP_BaseCharacterScript_C.SpawnDamageTakenSFX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlatingLost                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Mask                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector_NetQuantize&       HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DamageNormalized                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentHealthNormalized                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BarrierDamage                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BaseCharacterScript_C::SpawnDamageTakenSFX(int32 PlatingLost, int32 Mask, const struct FVector_NetQuantize& HitLocation, double DamageNormalized, double CurrentHealthNormalized, double BarrierDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseCharacterScript_C", "SpawnDamageTakenSFX");

	Params::BP_BaseCharacterScript_C_SpawnDamageTakenSFX Parms{};

	Parms.PlatingLost = PlatingLost;
	Parms.Mask = Mask;
	Parms.HitLocation = std::move(HitLocation);
	Parms.DamageNormalized = DamageNormalized;
	Parms.CurrentHealthNormalized = CurrentHealthNormalized;
	Parms.BarrierDamage = BarrierDamage;

	UObject::ProcessEvent(Func, &Parms);
}

}

