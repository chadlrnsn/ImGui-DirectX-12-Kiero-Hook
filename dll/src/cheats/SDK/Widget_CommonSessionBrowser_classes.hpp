#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_CommonSessionBrowser

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_CommonSessionBrowser.Widget_CommonSessionBrowser_C
// 0x0080 (0x04B8 - 0x0438)
class UWidget_CommonSessionBrowser_C final : public URCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_Button_SimpleText_C*                 ApplyFilterButton;                                 // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    CommonActionWidget_146;                            // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    CommonActionWidget_239;                            // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_Session_InputFilter_C*          MaxPlayers_Filter;                                 // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_Session_InputFilter_C*          MinPlayers_Filter;                                 // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SessionToggleFilter_C*          MustHaveOpenSlots_Filter;                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SessionToggleFilter_C*          PasswordProtected_Filter;                          // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UListView*                              SessionList;                                       // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SessionResultText;                                 // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_SimpleText_C*                 W_Button_Back;                                     // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_SimpleText_C*                 W_Button_Refresh;                                  // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_Divider_C*                      Widget_Divider;                                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_LoadingIndicator_Common_C*      Widget_LoadingIndicator;                           // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        LastRequestTimestamp;                              // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PingUpdateFrequency;                               // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UnlockPopulateSessionBrowser();
	void Success_89DC13C346A98A5EE7ADA9A586F0AEA2(const class FString& Error, const TArray<struct FBlueprintSessionResult>& Result);
	void SetRefreshButtonsEnabled(bool Enabled);
	void PopulateSessionBrowser();
	void NoSessionsFound();
	class UWidget* NavigateToFirstSession(EUINavigation Navigation_0);
	void FindSessions();
	void Fail_89DC13C346A98A5EE7ADA9A586F0AEA2(const class FString& Error, const TArray<struct FBlueprintSessionResult>& Result);
	void ExecuteUbergraph_Widget_CommonSessionBrowser(int32 EntryPoint);
	void Construct();
	void BuildFilter(TMap<class FName, struct FDMSearchSetting>* OutFilterMap);
	void BndEvt__Widget_SessionBrowser_MinPlayers_Filter_K2Node_ComponentBoundEvent_7_OnFilterChanged__DelegateSignature(const class FString& Text);
	void BndEvt__Widget_SessionBrowser_MaxPlayers_Filter_K2Node_ComponentBoundEvent_8_OnFilterChanged__DelegateSignature(const class FString& Text);
	void BndEvt__Widget_SessionBrowser_Fix_SessionList_K2Node_ComponentBoundEvent_1_OnListEntryInitializedDynamic__DelegateSignature(class UObject* Item, class UUserWidget* Widget);
	void BndEvt__Widget_CommonSessionBrowser_W_Button_SimpleText_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__Widget_CommonSessionBrowser_W_Button_Refresh_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__Widget_CommonSessionBrowser_W_Button_Back_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_CommonSessionBrowser_C">();
	}
	static class UWidget_CommonSessionBrowser_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_CommonSessionBrowser_C>();
	}
};
static_assert(alignof(UWidget_CommonSessionBrowser_C) == 0x000008, "Wrong alignment on UWidget_CommonSessionBrowser_C");
static_assert(sizeof(UWidget_CommonSessionBrowser_C) == 0x0004B8, "Wrong size on UWidget_CommonSessionBrowser_C");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, UberGraphFrame) == 0x000438, "Member 'UWidget_CommonSessionBrowser_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, ApplyFilterButton) == 0x000440, "Member 'UWidget_CommonSessionBrowser_C::ApplyFilterButton' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, CommonActionWidget_146) == 0x000448, "Member 'UWidget_CommonSessionBrowser_C::CommonActionWidget_146' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, CommonActionWidget_239) == 0x000450, "Member 'UWidget_CommonSessionBrowser_C::CommonActionWidget_239' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, MaxPlayers_Filter) == 0x000458, "Member 'UWidget_CommonSessionBrowser_C::MaxPlayers_Filter' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, MinPlayers_Filter) == 0x000460, "Member 'UWidget_CommonSessionBrowser_C::MinPlayers_Filter' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, MustHaveOpenSlots_Filter) == 0x000468, "Member 'UWidget_CommonSessionBrowser_C::MustHaveOpenSlots_Filter' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, PasswordProtected_Filter) == 0x000470, "Member 'UWidget_CommonSessionBrowser_C::PasswordProtected_Filter' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, SessionList) == 0x000478, "Member 'UWidget_CommonSessionBrowser_C::SessionList' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, SessionResultText) == 0x000480, "Member 'UWidget_CommonSessionBrowser_C::SessionResultText' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, W_Button_Back) == 0x000488, "Member 'UWidget_CommonSessionBrowser_C::W_Button_Back' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, W_Button_Refresh) == 0x000490, "Member 'UWidget_CommonSessionBrowser_C::W_Button_Refresh' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, Widget_Divider) == 0x000498, "Member 'UWidget_CommonSessionBrowser_C::Widget_Divider' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, Widget_LoadingIndicator) == 0x0004A0, "Member 'UWidget_CommonSessionBrowser_C::Widget_LoadingIndicator' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, LastRequestTimestamp) == 0x0004A8, "Member 'UWidget_CommonSessionBrowser_C::LastRequestTimestamp' has a wrong offset!");
static_assert(offsetof(UWidget_CommonSessionBrowser_C, PingUpdateFrequency) == 0x0004B0, "Member 'UWidget_CommonSessionBrowser_C::PingUpdateFrequency' has a wrong offset!");

}

