#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PlayerTurret

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_PlayerTurret.ABP_PlayerTurret_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_PlayerTurret_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_PlayerTurret_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_PlayerTurret_C_AnimGraph");
static_assert(sizeof(ABP_PlayerTurret_C_AnimGraph) == 0x000010, "Wrong size on ABP_PlayerTurret_C_AnimGraph");
static_assert(offsetof(ABP_PlayerTurret_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_PlayerTurret_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_PlayerTurret.ABP_PlayerTurret_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_PlayerTurret_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlayerTurret_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_PlayerTurret_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_PlayerTurret_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_PlayerTurret_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_PlayerTurret_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_PlayerTurret_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_PlayerTurret.ABP_PlayerTurret_C.ExecuteUbergraph_ABP_PlayerTurret
// 0x01B0 (0x01B0 - 0x0000)
struct ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ARProjectile* Projectile)> K2Node_CreateDelegate_OutputDelegate;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Turret_C*                           K2Node_DynamicCast_AsBP_Turret;                    // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue_1;   // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARProjectile*                           K2Node_CustomEvent_Projectile;                     // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_InvertedTurretVerticalRotation_ImplicitCast; // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast;         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast_1;       // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Turret_Vertical_Rotation_ImplicitCast; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Target_ImplicitCast;            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Turret_Horizontal_Rotation_ImplicitCast; // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret) == 0x000010, "Wrong alignment on ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret");
static_assert(sizeof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret) == 0x0001B0, "Wrong size on ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, EntryPoint) == 0x000000, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000004, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000006, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000007, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000010, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000020, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000021, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, K2Node_Event_DeltaTimeX) == 0x000034, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_GetOwningActor_ReturnValue) == 0x000038, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, K2Node_DynamicCast_AsBP_Turret) == 0x000040, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::K2Node_DynamicCast_AsBP_Turret' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, Temp_bool_IsClosed_Variable) == 0x000049, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_IsValid_ReturnValue) == 0x00004A, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000058, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_InverseTransformRotation_ReturnValue) == 0x0000D0, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_MakeRotator_ReturnValue) == 0x0000E8, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_BreakRotator_Roll) == 0x000100, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_BreakRotator_Pitch) == 0x000104, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_BreakRotator_Yaw) == 0x000108, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_InverseTransformRotation_ReturnValue_1) == 0x000110, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_InverseTransformRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_BreakRotator_Roll_1) == 0x000128, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_BreakRotator_Pitch_1) == 0x00012C, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_BreakRotator_Yaw_1) == 0x000130, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, K2Node_CustomEvent_Projectile) == 0x000138, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::K2Node_CustomEvent_Projectile' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000140, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_FInterpTo_ReturnValue) == 0x000148, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_FInterpTo_ReturnValue_1) == 0x000150, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_Add_IntInt_ReturnValue) == 0x000158, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00015C, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x00015D, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x00015E, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x00015F, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000160, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000168, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, K2Node_VariableSet_InvertedTurretVerticalRotation_ImplicitCast) == 0x000170, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::K2Node_VariableSet_InvertedTurretVerticalRotation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_FInterpTo_DeltaTime_ImplicitCast) == 0x000178, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_FInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_FInterpTo_DeltaTime_ImplicitCast_1) == 0x000180, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_FInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_FClamp_Value_ImplicitCast) == 0x000188, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, K2Node_VariableSet_Turret_Vertical_Rotation_ImplicitCast) == 0x000190, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::K2Node_VariableSet_Turret_Vertical_Rotation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_FInterpTo_Target_ImplicitCast) == 0x000198, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_FInterpTo_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, CallFunc_FInterpTo_Current_ImplicitCast) == 0x0001A0, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret, K2Node_VariableSet_Turret_Horizontal_Rotation_ImplicitCast) == 0x0001A8, "Member 'ABP_PlayerTurret_C_ExecuteUbergraph_ABP_PlayerTurret::K2Node_VariableSet_Turret_Horizontal_Rotation_ImplicitCast' has a wrong offset!");

// Function ABP_PlayerTurret.ABP_PlayerTurret_C.OnProjectileFired_Event_0
// 0x0008 (0x0008 - 0x0000)
struct ABP_PlayerTurret_C_OnProjectileFired_Event_0 final
{
public:
	class ARProjectile*                           Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlayerTurret_C_OnProjectileFired_Event_0) == 0x000008, "Wrong alignment on ABP_PlayerTurret_C_OnProjectileFired_Event_0");
static_assert(sizeof(ABP_PlayerTurret_C_OnProjectileFired_Event_0) == 0x000008, "Wrong size on ABP_PlayerTurret_C_OnProjectileFired_Event_0");
static_assert(offsetof(ABP_PlayerTurret_C_OnProjectileFired_Event_0, Projectile) == 0x000000, "Member 'ABP_PlayerTurret_C_OnProjectileFired_Event_0::Projectile' has a wrong offset!");

}

