#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootTable_AbilityWeaponSelector

#include "Basic.hpp"

#include "RGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.AddGeneratedLootOptionForController
// 0x0020 (0x0020 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_AddGeneratedLootOptionForController final
{
public:
	TArray<struct FRLootSelectionOption>          LootOption;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasChosenLoot;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_AddGeneratedLootOptionForController) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_AddGeneratedLootOptionForController");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_AddGeneratedLootOptionForController) == 0x000020, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_AddGeneratedLootOptionForController");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_AddGeneratedLootOptionForController, LootOption) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_AddGeneratedLootOptionForController::LootOption' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_AddGeneratedLootOptionForController, PlayerController) == 0x000010, "Member 'BP_LootTable_AbilityWeaponSelector_C_AddGeneratedLootOptionForController::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_AddGeneratedLootOptionForController, bHasChosenLoot) == 0x000018, "Member 'BP_LootTable_AbilityWeaponSelector_C_AddGeneratedLootOptionForController::bHasChosenLoot' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentExit__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentExit__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentExit__DelegateSignature) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentExit__DelegateSignature");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentExit__DelegateSignature) == 0x000008, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentExit__DelegateSignature");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentExit__DelegateSignature, Actor) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentExit__DelegateSignature::Actor' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentEnter__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentEnter__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentEnter__DelegateSignature) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentEnter__DelegateSignature");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentEnter__DelegateSignature) == 0x000008, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentEnter__DelegateSignature");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentEnter__DelegateSignature, Actor) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentEnter__DelegateSignature::Actor' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature) == 0x000008, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature, Actor) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature::Actor' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature) == 0x000008, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature, Actor) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature::Actor' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.CanInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_CanInteract final
{
public:
	class APlayerController*                      Controller_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAssociatedSpawnAreaSegmentCompleted_ReturnValue; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_CanInteract) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_CanInteract");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_CanInteract) == 0x000010, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_CanInteract");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CanInteract, Controller_0) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_CanInteract::Controller_0' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CanInteract, ReturnValue) == 0x000008, "Member 'BP_LootTable_AbilityWeaponSelector_C_CanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CanInteract, CallFunc_IsAssociatedSpawnAreaSegmentCompleted_ReturnValue) == 0x000009, "Member 'BP_LootTable_AbilityWeaponSelector_C_CanInteract::CallFunc_IsAssociatedSpawnAreaSegmentCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CanInteract, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BP_LootTable_AbilityWeaponSelector_C_CanInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CanInteract, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000B, "Member 'BP_LootTable_AbilityWeaponSelector_C_CanInteract::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CanInteract, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'BP_LootTable_AbilityWeaponSelector_C_CanInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CanInteract, CallFunc_BooleanAND_ReturnValue_1) == 0x00000D, "Member 'BP_LootTable_AbilityWeaponSelector_C_CanInteract::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.CheckAndUpdateLootOptions
// 0x0070 (0x0070 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions final
{
public:
	class AController*                            Controller_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerState*                          K2Node_DynamicCast_AsRPlayer_State;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetUniqueNetIdString_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRUniqueAltarLootOptions               CallFunc_Array_Get_Item;                           // 0x0040(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions) == 0x000070, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, Controller_0) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::Controller_0' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, K2Node_DynamicCast_AsRPlayer_State) == 0x000010, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::K2Node_DynamicCast_AsRPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, CallFunc_GetUniqueNetIdString_ReturnValue) == 0x000020, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::CallFunc_GetUniqueNetIdString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, CallFunc_BooleanAND_ReturnValue) == 0x00006D, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00006E, "Member 'BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector
// 0x0500 (0x0500 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FRLootSelectionOption& LootSelectionOption)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const TArray<struct FRLootSelectionOption>& NewLootOptions)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BehaviourName;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRoutedObjectData                      K2Node_Event_RoutedData;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      K2Node_Event_controller;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AREnemySpawnAreaSegment*                K2Node_CustomEvent_EnemySpawnAreaSegment;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AREnemySpawnManager*                    CallFunc_GetSpawnManager_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Reward_Spawn_Pos_Pos;                 // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMutatorRarity                                CallFunc_GetWeightedRarity_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRLootSelectionOption>          K2Node_CustomEvent_NewLootOptions;                 // 0x0090(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRLootSelectionOption                  K2Node_CustomEvent_LootSelectionOption;            // 0x00A8(0x0010)(NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URMutatorPrimaryAsset*                  K2Node_DynamicCast_AsRMutator_Primary_Asset;       // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget_MutatorSelectScreen_Forge_C*    CallFunc_PushWidget_OutWidget;                     // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x0128(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult_1;  // 0x0248(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_ComponentBoundEvent_Actor_3;                // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Actor_2;                // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Actor_1;                // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Actor;                  // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool* RetValue)>               K2Node_CreateDelegate_OutputDelegate_4;            // 0x037C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue; // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFCInvokeBlueprintProxy*                CallFunc_CreateInvokeProxyObject_ReturnValue;      // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 K2Node_DynamicCast_AsRGame_Player_Controller;      // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRUniqueAltarLootOptions               CallFunc_Array_Get_Item;                           // 0x03B8(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x03E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA[0x2];                                      // 0x03FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVoiceQueryDataPair>            Temp_struct_Variable;                              // 0x0408(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRLootSelectionOption>          K2Node_Event_LootOption;                           // 0x0420(0x0010)(ConstParm, ReferenceParm)
	class APlayerController*                      K2Node_Event_PlayerController;                     // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasChosenLoot;                       // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43A[0x6];                                      // 0x043A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerState*                          K2Node_DynamicCast_AsRPlayer_State;                // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A[0x6];                                      // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetUniqueNetIdString_ReturnValue;         // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRUniqueAltarLootOptions               K2Node_MakeStruct_RUniqueAltarLootOptions;         // 0x0468(0x0028)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 K2Node_DynamicCast_AsRGame_Player_Controller_1;    // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EMutatorRarity, float>                   CallFunc_GetWeightedRarity_MutatorChances_ImplicitCast; // 0x04A8(0x0050)()
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector) == 0x000500, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, EntryPoint) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_Event_BehaviourName) == 0x000028, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_Event_BehaviourName' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_Event_RoutedData) == 0x000030, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_Event_RoutedData' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_Event_controller) == 0x000038, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_Event_controller' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000040, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, Temp_bool_True_if_break_was_hit_Variable) == 0x000041, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_CustomEvent_EnemySpawnAreaSegment) == 0x000048, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_CustomEvent_EnemySpawnAreaSegment' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_GetSpawnManager_ReturnValue) == 0x000068, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_GetSpawnManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Get_Reward_Spawn_Pos_Pos) == 0x000070, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Get_Reward_Spawn_Pos_Pos' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_GetWeightedRarity_ReturnValue) == 0x000088, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_GetWeightedRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_CustomEvent_NewLootOptions) == 0x000090, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_CustomEvent_NewLootOptions' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_CustomEvent_LootSelectionOption) == 0x0000A8, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_CustomEvent_LootSelectionOption' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_DynamicCast_AsRMutator_Primary_Asset) == 0x0000C0, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_DynamicCast_AsRMutator_Primary_Asset' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_PushWidget_OutWidget) == 0x0000D0, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_PushWidget_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_IsValid_ReturnValue_1) == 0x0000D8, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000DC, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000F0, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000F8, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000100, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000108, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_MakeRotator_ReturnValue) == 0x000110, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x000128, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000228, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_MakeRotator_ReturnValue_1) == 0x000230, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_K2_AddRelativeRotation_SweepHitResult_1) == 0x000248, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_K2_AddRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_ComponentBoundEvent_Actor_3) == 0x000348, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_ComponentBoundEvent_Actor_3' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_ComponentBoundEvent_Actor_2) == 0x000350, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_ComponentBoundEvent_Actor_2' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_ComponentBoundEvent_Actor_1) == 0x000358, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_ComponentBoundEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_ComponentBoundEvent_Actor) == 0x000360, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_ComponentBoundEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_K2_GetPawn_ReturnValue) == 0x000368, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000370, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_DynamicCast_bSuccess_1) == 0x000378, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_CreateDelegate_OutputDelegate_4) == 0x00037C, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_GetFirstLocalGamePlayerController_ReturnValue) == 0x000390, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_GetFirstLocalGamePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_CreateInvokeProxyObject_ReturnValue) == 0x000398, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_CreateInvokeProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_IsValid_ReturnValue_2) == 0x0003A0, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_DynamicCast_AsRGame_Player_Controller) == 0x0003A8, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_DynamicCast_AsRGame_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_DynamicCast_bSuccess_2) == 0x0003B0, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Array_Get_Item) == 0x0003B8, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Array_Length_ReturnValue_1) == 0x0003E0, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, Temp_int_Loop_Counter_Variable) == 0x0003E4, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_CreateDelegate_OutputDelegate_5) == 0x0003E8, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Less_IntInt_ReturnValue) == 0x0003F8, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_BooleanAND_ReturnValue) == 0x0003F9, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Add_IntInt_ReturnValue) == 0x0003FC, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_HasAuthority_ReturnValue) == 0x000400, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, Temp_struct_Variable) == 0x000408, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Not_PreBool_ReturnValue_1) == 0x000418, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_Event_LootOption) == 0x000420, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_Event_LootOption' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_Event_PlayerController) == 0x000430, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_Event_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_Event_bHasChosenLoot) == 0x000438, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_Event_bHasChosenLoot' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_IsValid_ReturnValue_3) == 0x000439, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_DynamicCast_AsRPlayer_State) == 0x000440, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_DynamicCast_AsRPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_DynamicCast_bSuccess_3) == 0x000448, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_IsValid_ReturnValue_4) == 0x000449, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_GetUniqueNetIdString_ReturnValue) == 0x000450, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_GetUniqueNetIdString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000460, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_MakeStruct_RUniqueAltarLootOptions) == 0x000468, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_MakeStruct_RUniqueAltarLootOptions' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_Array_Add_ReturnValue) == 0x000490, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_DynamicCast_AsRGame_Player_Controller_1) == 0x000498, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_DynamicCast_AsRGame_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, K2Node_DynamicCast_bSuccess_4) == 0x0004A0, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_GetWeightedRarity_MutatorChances_ImplicitCast) == 0x0004A8, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_GetWeightedRarity_MutatorChances_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0004F8, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x0004FC, "Member 'BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.GenerateLootOptions
// 0x0168 (0x0168 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URMutatorRewardCategoryDataAsset*       RandomizedMutatorCategory;                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 K2Node_DynamicCast_AsRGame_Player_Controller;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 K2Node_DynamicCast_AsRGame_Player_Controller_1;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRLootSelectionOption                  K2Node_MakeStruct_RLootSelectionOption;            // 0x0068(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class URMutatorRewardCategoryDataAsset> CallFunc_Array_Get_Item;                  // 0x0080(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadObjectFromSoftObjectPtr_ReturnValue;  // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URMutatorRewardCategoryDataAsset*       K2Node_DynamicCast_AsRMutator_Reward_Category_Data_Asset; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRLootSelectionOption                  K2Node_MakeStruct_RLootSelectionOption_1;          // 0x00D0(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URMutatorRewardCategoryDataAsset*> CallFunc_GetMutatorRewardCategoryDataAssets_ReturnValue; // 0x00F0(0x0010)(ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_GetUniqueRewardCategoriesFromRewardCategryoDataAssets_ReturnValue; // 0x0100(0x0020)()
	bool                                          CallFunc_HasCappedMutatorRewardCategories_ReturnValue; // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URMutatorRewardCategoryDataAsset*> CallFunc_GetMutatorRewardCategoryDataAssetsByTags_ReturnValue; // 0x0128(0x0010)(ReferenceParm)
	TArray<class URMutatorRewardCategoryDataAsset*> K2Node_Select_Default;                           // 0x0138(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URMutatorRewardCategoryDataAsset*       CallFunc_Array_Random_OutItem;                     // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions) == 0x000168, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, PlayerController) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, RandomizedMutatorCategory) == 0x000008, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::RandomizedMutatorCategory' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, K2Node_DynamicCast_AsRGame_Player_Controller) == 0x000018, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::K2Node_DynamicCast_AsRGame_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, K2Node_DynamicCast_AsRGame_Player_Controller_1) == 0x000028, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::K2Node_DynamicCast_AsRGame_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_K2_GetPawn_ReturnValue) == 0x000038, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000048, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, Temp_bool_Variable) == 0x000058, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, Temp_int_Variable) == 0x00005C, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, K2Node_MakeStruct_RLootSelectionOption) == 0x000068, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::K2Node_MakeStruct_RLootSelectionOption' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Array_AddUnique_ReturnValue) == 0x000078, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000A8, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_LoadObjectFromSoftObjectPtr_ReturnValue) == 0x0000B0, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_LoadObjectFromSoftObjectPtr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, K2Node_DynamicCast_AsRMutator_Reward_Category_Data_Asset) == 0x0000C0, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::K2Node_DynamicCast_AsRMutator_Reward_Category_Data_Asset' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, K2Node_MakeStruct_RLootSelectionOption_1) == 0x0000D0, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::K2Node_MakeStruct_RLootSelectionOption_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000E0, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000E4, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_GetMutatorRewardCategoryDataAssets_ReturnValue) == 0x0000F0, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_GetMutatorRewardCategoryDataAssets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_GetUniqueRewardCategoriesFromRewardCategryoDataAssets_ReturnValue) == 0x000100, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_GetUniqueRewardCategoriesFromRewardCategryoDataAssets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_HasCappedMutatorRewardCategories_ReturnValue) == 0x000120, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_HasCappedMutatorRewardCategories_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_GetMutatorRewardCategoryDataAssetsByTags_ReturnValue) == 0x000128, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_GetMutatorRewardCategoryDataAssetsByTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, K2Node_Select_Default) == 0x000138, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Not_PreBool_ReturnValue) == 0x000148, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Array_RemoveItem_ReturnValue) == 0x000149, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Subtract_IntInt_ReturnValue) == 0x00014C, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000150, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Array_Random_OutItem) == 0x000158, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions, CallFunc_Array_Random_OutIndex) == 0x000160, "Member 'BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions::CallFunc_Array_Random_OutIndex' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.Get Reward Spawn Pos
// 0x00C0 (0x00C0 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PointWithPolarOffset_ReturnValue;         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PointWithPolarOffset_Angle_ImplicitCast;  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos) == 0x0000C0, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, Pos) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::Pos' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_MakeVector_ReturnValue) == 0x000080, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_PointWithPolarOffset_ReturnValue) == 0x000098, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_PointWithPolarOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos, CallFunc_PointWithPolarOffset_Angle_ImplicitCast) == 0x0000B8, "Member 'BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos::CallFunc_PointWithPolarOffset_Angle_ImplicitCast' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.GetGeneratedLootOptionsForController
// 0x0060 (0x0060 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController final
{
public:
	class FString                                 NetIDString;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FRLootSelectionOption>          Loot_Selection_Options;                            // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRUniqueAltarLootOptions               CallFunc_Array_Get_Item;                           // 0x0030(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController) == 0x000060, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController, NetIDString) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController::NetIDString' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController, Loot_Selection_Options) == 0x000010, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController::Loot_Selection_Options' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000059, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.GetNumEquippedMutatorsOfCategory
// 0x0030 (0x0030 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory final
{
public:
	class URMutatorRewardCategoryDataAsset*       CategoryDA;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      Controller_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumEquippedMutatorsInGodCategory_ReturnValue; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory) == 0x000030, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory, CategoryDA) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory::CategoryDA' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory, Controller_0) == 0x000008, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory::Controller_0' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory, Num) == 0x000010, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory::Num' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000020, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory, CallFunc_GetNumEquippedMutatorsInGodCategory_ReturnValue) == 0x00002C, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory::CallFunc_GetNumEquippedMutatorsInGodCategory_ReturnValue' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.HideHighlight
// 0x0008 (0x0008 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_HideHighlight final
{
public:
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_HideHighlight) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_HideHighlight");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_HideHighlight) == 0x000008, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_HideHighlight");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_HideHighlight, CallFunc_GetWidget_ReturnValue) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_HideHighlight::CallFunc_GetWidget_ReturnValue' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_OnInteract final
{
public:
	class APlayerController*                      Controller_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_OnInteract) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_OnInteract");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_OnInteract) == 0x000008, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_OnInteract");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_OnInteract, Controller_0) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_OnInteract::Controller_0' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.OnLootOptionsChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_OnLootOptionsChanged final
{
public:
	TArray<struct FRLootSelectionOption>          NewLootOptions;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_OnLootOptionsChanged) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_OnLootOptionsChanged");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_OnLootOptionsChanged) == 0x000010, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_OnLootOptionsChanged");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_OnLootOptionsChanged, NewLootOptions) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_OnLootOptionsChanged::NewLootOptions' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.OnLootOptionSelected_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_OnLootOptionSelected_Event final
{
public:
	struct FRLootSelectionOption                  LootSelectionOption;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_OnLootOptionSelected_Event) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_OnLootOptionSelected_Event");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_OnLootOptionSelected_Event) == 0x000010, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_OnLootOptionSelected_Event");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_OnLootOptionSelected_Event, LootSelectionOption) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_OnLootOptionSelected_Event::LootSelectionOption' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.OnSegmentCompleted
// 0x0008 (0x0008 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_OnSegmentCompleted final
{
public:
	class AREnemySpawnAreaSegment*                EnemySpawnAreaSegment;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_OnSegmentCompleted) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_OnSegmentCompleted");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_OnSegmentCompleted) == 0x000008, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_OnSegmentCompleted");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_OnSegmentCompleted, EnemySpawnAreaSegment) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_OnSegmentCompleted::EnemySpawnAreaSegment' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.PlayerStateIsValid
// 0x0018 (0x0018 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid) == 0x000018, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid, IsValid) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid::IsValid' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid, CallFunc_GetFirstLocalGamePlayerController_ReturnValue) == 0x000008, "Member 'BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid::CallFunc_GetFirstLocalGamePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.RemoveCappedCategories
// 0x0060 (0x0060 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories final
{
public:
	class APlayerController*                      Controller_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URMutatorRewardCategoryDataAsset*       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumEquippedMutatorsOfCategory_Num;     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARLootTableManager*                     CallFunc_GetLootTableManager_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMutatorLootTableRow>           CallFunc_GetEnabledMutatorRowsByCategory_ReturnValue; // 0x0038(0x0010)(ReferenceParm)
	TArray<struct FMutatorLootTableRow>           CallFunc_FilterMutatorRowsByTriggersAndPassivesWeighting_ReturnValue; // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories) == 0x000060, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, Controller_0) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::Controller_0' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, CallFunc_Array_RemoveItem_ReturnValue) == 0x000025, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, CallFunc_GetNumEquippedMutatorsOfCategory_Num) == 0x000028, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::CallFunc_GetNumEquippedMutatorsOfCategory_Num' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, CallFunc_GetLootTableManager_ReturnValue) == 0x000030, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::CallFunc_GetLootTableManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, CallFunc_GetEnabledMutatorRowsByCategory_ReturnValue) == 0x000038, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::CallFunc_GetEnabledMutatorRowsByCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, CallFunc_FilterMutatorRowsByTriggersAndPassivesWeighting_ReturnValue) == 0x000048, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::CallFunc_FilterMutatorRowsByTriggersAndPassivesWeighting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.RunRoutedObjectBehaviourByName
// 0x0008 (0x0008 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourByName final
{
public:
	class FName                                   BehaviourName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourByName) == 0x000004, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourByName");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourByName) == 0x000008, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourByName");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourByName, BehaviourName) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourByName::BehaviourName' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.RunRoutedObjectBehaviourWithData
// 0x0008 (0x0008 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourWithData final
{
public:
	struct FRoutedObjectData                      RoutedData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourWithData) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourWithData");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourWithData) == 0x000008, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourWithData");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourWithData, RoutedData) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourWithData::RoutedData' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.ShowHighlight
// 0x0038 (0x0038 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_ShowHighlight final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0010)()
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0018(0x0010)()
	class URObjectHighlightWidget*                K2Node_DynamicCast_AsRObject_Highlight_Widget;     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_ShowHighlight) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_ShowHighlight");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_ShowHighlight) == 0x000038, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_ShowHighlight");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ShowHighlight, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_ShowHighlight::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ShowHighlight, CallFunc_GetWidget_ReturnValue) == 0x000010, "Member 'BP_LootTable_AbilityWeaponSelector_C_ShowHighlight::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ShowHighlight, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000018, "Member 'BP_LootTable_AbilityWeaponSelector_C_ShowHighlight::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ShowHighlight, K2Node_DynamicCast_AsRObject_Highlight_Widget) == 0x000028, "Member 'BP_LootTable_AbilityWeaponSelector_C_ShowHighlight::K2Node_DynamicCast_AsRObject_Highlight_Widget' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ShowHighlight, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_LootTable_AbilityWeaponSelector_C_ShowHighlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_Get_Reward_Spawn_Pos_Pos;                 // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_UserConstructionScript");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_UserConstructionScript) == 0x000018, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_UserConstructionScript");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_UserConstructionScript, CallFunc_Get_Reward_Spawn_Pos_Pos) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_UserConstructionScript::CallFunc_Get_Reward_Spawn_Pos_Pos' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.GetInteractionIndicatorWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_GetInteractionIndicatorWidget final
{
public:
	class UWidgetComponent*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_GetInteractionIndicatorWidget) == 0x000008, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_GetInteractionIndicatorWidget");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_GetInteractionIndicatorWidget) == 0x000008, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_GetInteractionIndicatorWidget");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_GetInteractionIndicatorWidget, ReturnValue) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_GetInteractionIndicatorWidget::ReturnValue' has a wrong offset!");

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.ShouldShowOnRadar
// 0x0004 (0x0004 - 0x0000)
struct BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowOnRadar_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar) == 0x000001, "Wrong alignment on BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar");
static_assert(sizeof(BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar) == 0x000004, "Wrong size on BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar, ReturnValue) == 0x000000, "Member 'BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar, CallFunc_ShouldShowOnRadar_ReturnValue) == 0x000001, "Member 'BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar::CallFunc_ShouldShowOnRadar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

