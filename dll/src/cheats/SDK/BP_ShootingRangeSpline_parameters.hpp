#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShootingRangeSpline

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.Activate
// 0x0008 (0x0008 - 0x0000)
struct BP_ShootingRangeSpline_C_Activate final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Positive;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShootingRangeSpline_C_Activate) == 0x000004, "Wrong alignment on BP_ShootingRangeSpline_C_Activate");
static_assert(sizeof(BP_ShootingRangeSpline_C_Activate) == 0x000008, "Wrong size on BP_ShootingRangeSpline_C_Activate");
static_assert(offsetof(BP_ShootingRangeSpline_C_Activate, ID) == 0x000000, "Member 'BP_ShootingRangeSpline_C_Activate::ID' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_Activate, Positive) == 0x000004, "Member 'BP_ShootingRangeSpline_C_Activate::Positive' has a wrong offset!");

// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.BP_ShootingRangeSpline_AutoGenFunc
// 0x0003 (0x0003 - 0x0000)
struct BP_ShootingRangeSpline_C_BP_ShootingRangeSpline_AutoGenFunc final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShootingRangeSpline_C_BP_ShootingRangeSpline_AutoGenFunc) == 0x000001, "Wrong alignment on BP_ShootingRangeSpline_C_BP_ShootingRangeSpline_AutoGenFunc");
static_assert(sizeof(BP_ShootingRangeSpline_C_BP_ShootingRangeSpline_AutoGenFunc) == 0x000003, "Wrong size on BP_ShootingRangeSpline_C_BP_ShootingRangeSpline_AutoGenFunc");
static_assert(offsetof(BP_ShootingRangeSpline_C_BP_ShootingRangeSpline_AutoGenFunc, RetValue) == 0x000000, "Member 'BP_ShootingRangeSpline_C_BP_ShootingRangeSpline_AutoGenFunc::RetValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_BP_ShootingRangeSpline_AutoGenFunc, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_ShootingRangeSpline_C_BP_ShootingRangeSpline_AutoGenFunc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_BP_ShootingRangeSpline_AutoGenFunc, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_ShootingRangeSpline_C_BP_ShootingRangeSpline_AutoGenFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.ExecuteUbergraph_BP_ShootingRangeSpline
// 0x0330 (0x0330 - 0x0000)
struct BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSplineTimeForAccumulatedTime_SplineTime; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ID;                                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Positive;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerPausedHandle_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00F0(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSplineTimeForAccumulatedTime_SplineTime_1; // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue;            // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSplineTimeForAccumulatedTime_SplineTime_2; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue_1;          // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0270(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ShootingRangeDummy_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URPawnMovementComponent*                CallFunc_GetRPawnMovementComponent_ReturnValue;    // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue_2;          // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtTime_Time_ImplicitCast;      // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtTime_Time_ImplicitCast_1;    // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtTime_Time_ImplicitCast_2;    // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline) == 0x000010, "Wrong alignment on BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline");
static_assert(sizeof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline) == 0x000330, "Wrong size on BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, EntryPoint) == 0x000000, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_GetSplineTimeForAccumulatedTime_SplineTime) == 0x000008, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_GetSplineTimeForAccumulatedTime_SplineTime' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, K2Node_Event_ID) == 0x00002C, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::K2Node_Event_ID' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, K2Node_Event_Positive) == 0x000030, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::K2Node_Event_Positive' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000038, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_RandomFloatInRange_ReturnValue) == 0x000050, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_K2_IsTimerPausedHandle_ReturnValue) == 0x000058, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_K2_IsTimerPausedHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_HasAuthority_ReturnValue) == 0x000070, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_HasAuthority_ReturnValue_1) == 0x000081, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000088, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_GetActorScale3D_ReturnValue) == 0x0000A0, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_VLerp_ReturnValue) == 0x0000D0, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000E8, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000F0, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001F0, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0001F8, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000200, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_GetSplineTimeForAccumulatedTime_SplineTime_1) == 0x000218, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_GetSplineTimeForAccumulatedTime_SplineTime_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000220, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_GetLocationAtTime_ReturnValue) == 0x000228, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_GetLocationAtTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_BooleanAND_ReturnValue) == 0x000240, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_Not_PreBool_ReturnValue) == 0x000241, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_GetSplineTimeForAccumulatedTime_SplineTime_2) == 0x000248, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_GetSplineTimeForAccumulatedTime_SplineTime_2' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_GetLocationAtTime_ReturnValue_1) == 0x000250, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_GetLocationAtTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, Temp_bool_Variable) == 0x000268, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_MakeTransform_ReturnValue) == 0x000270, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002D0, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002D8, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002E0, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_GetRPawnMovementComponent_ReturnValue) == 0x0002E8, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_GetRPawnMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_GetLocationAtTime_ReturnValue_2) == 0x0002F0, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_GetLocationAtTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_GetLocationAtTime_Time_ImplicitCast) == 0x000308, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_GetLocationAtTime_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_VLerp_Alpha_ImplicitCast) == 0x00030C, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000310, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000318, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_GetLocationAtTime_Time_ImplicitCast_1) == 0x000320, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_GetLocationAtTime_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline, CallFunc_GetLocationAtTime_Time_ImplicitCast_2) == 0x000324, "Member 'BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline::CallFunc_GetLocationAtTime_Time_ImplicitCast_2' has a wrong offset!");

// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.GetSplineTimeForAccumulatedTime
// 0x0020 (0x0020 - 0x0000)
struct BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime final
{
public:
	double                                        SplineTime;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime) == 0x000008, "Wrong alignment on BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime");
static_assert(sizeof(BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime) == 0x000020, "Wrong size on BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime");
static_assert(offsetof(BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime, SplineTime) == 0x000000, "Member 'BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime::SplineTime' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime, CallFunc_Abs_ReturnValue) == 0x000018, "Member 'BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime::CallFunc_Abs_ReturnValue' has a wrong offset!");

// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ShootingRangeSpline_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShootingRangeSpline_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ShootingRangeSpline_C_ReceiveTick");
static_assert(sizeof(BP_ShootingRangeSpline_C_ReceiveTick) == 0x000004, "Wrong size on BP_ShootingRangeSpline_C_ReceiveTick");
static_assert(offsetof(BP_ShootingRangeSpline_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ShootingRangeSpline_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.UserConstructionScript
// 0x02D0 (0x02D0 - 0x0000)
struct BP_ShootingRangeSpline_C_UserConstructionScript final
{
public:
	class UActorComponent*                        CallFunc_FindDefaultComponentByClass_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0080(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSplineTimeForAccumulatedTime_SplineTime; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue;            // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x01B8(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetLocationAtTime_Time_ImplicitCast;      // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_SplineLenght_ImplicitCast;      // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShootingRangeSpline_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_ShootingRangeSpline_C_UserConstructionScript");
static_assert(sizeof(BP_ShootingRangeSpline_C_UserConstructionScript) == 0x0002D0, "Wrong size on BP_ShootingRangeSpline_C_UserConstructionScript");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, CallFunc_FindDefaultComponentByClass_ReturnValue) == 0x000000, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::CallFunc_FindDefaultComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000008, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, CallFunc_GetRelativeTransform_ReturnValue) == 0x000020, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000080, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000180, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, CallFunc_GetSplineTimeForAccumulatedTime_SplineTime) == 0x000188, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::CallFunc_GetSplineTimeForAccumulatedTime_SplineTime' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, CallFunc_GetSplineLength_ReturnValue) == 0x000190, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000198, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, CallFunc_GetLocationAtTime_ReturnValue) == 0x0001A0, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::CallFunc_GetLocationAtTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0001B8, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, CallFunc_GetLocationAtTime_Time_ImplicitCast) == 0x0002B8, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::CallFunc_GetLocationAtTime_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0002C0, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShootingRangeSpline_C_UserConstructionScript, K2Node_VariableSet_SplineLenght_ImplicitCast) == 0x0002C8, "Member 'BP_ShootingRangeSpline_C_UserConstructionScript::K2Node_VariableSet_SplineLenght_ImplicitCast' has a wrong offset!");

}

