#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_BarrierGauge

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "RGame_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Widget_BarrierGauge.Widget_BarrierGauge_C.ExecuteUbergraph_Widget_BarrierGauge
// 0x0278 (0x0278 - 0x0000)
struct Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URHealthComponent*                      K2Node_CustomEvent_Component_2;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_currentHealth_1;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_healthDelta_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHealCombatEvent                       K2Node_CustomEvent_HealEvent_1;                    // 0x0018(0x0038)(ContainsInstancedReference)
	class URHealthComponent*                      K2Node_CustomEvent_Component_1;                    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_currentHealth;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_healthDelta;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHealCombatEvent                       K2Node_CustomEvent_HealEvent;                      // 0x0060(0x0038)(ContainsInstancedReference)
	float                                         CallFunc_GetCurrentBarrier_ReturnValue;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class URHealthComponent* Component, float currentHealth, float healthDelta, const struct FHealCombatEvent& HealEvent)> K2Node_CreateDelegate_OutputDelegate; // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class URHealthComponent* Component, float currentHealth, float healthDelta, const struct FHealCombatEvent& HealEvent)> K2Node_CreateDelegate_OutputDelegate_1; // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEventData)> K2Node_CreateDelegate_OutputDelegate_2; // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URHealthComponent*                      K2Node_CustomEvent_Component;                      // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     K2Node_CustomEvent_DamageEventData;                // 0x00E0(0x00C0)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01BC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxBarrier_ReturnValue;                // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentBarrier_ReturnValue_1;          // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGaugePercent_Percent_ImplicitCast;     // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast_1;              // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast_1;              // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge) == 0x000008, "Wrong alignment on Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge");
static_assert(sizeof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge) == 0x000278, "Wrong size on Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, EntryPoint) == 0x000000, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CustomEvent_Component_2) == 0x000008, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CustomEvent_Component_2' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CustomEvent_currentHealth_1) == 0x000010, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CustomEvent_currentHealth_1' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CustomEvent_healthDelta_1) == 0x000014, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CustomEvent_healthDelta_1' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CustomEvent_HealEvent_1) == 0x000018, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CustomEvent_HealEvent_1' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CustomEvent_Component_1) == 0x000050, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CustomEvent_Component_1' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CustomEvent_currentHealth) == 0x000058, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CustomEvent_currentHealth' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CustomEvent_healthDelta) == 0x00005C, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CustomEvent_healthDelta' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CustomEvent_HealEvent) == 0x000060, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CustomEvent_HealEvent' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_GetCurrentBarrier_ReturnValue) == 0x000098, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_GetCurrentBarrier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CreateDelegate_OutputDelegate) == 0x00009C, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000AC, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000BC, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_SafeDivide_ReturnValue) == 0x0000D0, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CustomEvent_Component) == 0x0000D8, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CustomEvent_Component' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_CustomEvent_DamageEventData) == 0x0000E0, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_CustomEvent_DamageEventData' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_GetOwningPlayer_ReturnValue) == 0x0001A0, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_K2_GetPawn_ReturnValue) == 0x0001A8, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x0001B0, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_Event_MyGeometry) == 0x0001BC, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, K2Node_Event_InDeltaTime) == 0x0001F4, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0001F8, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000200, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_GetMaxBarrier_ReturnValue) == 0x000208, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_GetMaxBarrier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_GetCurrentBarrier_ReturnValue_1) == 0x00020C, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_GetCurrentBarrier_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_SafeDivide_ReturnValue_1) == 0x000210, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_SelectFloat_ReturnValue) == 0x000218, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000220, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_Lerp_ReturnValue) == 0x000228, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_Not_PreBool_ReturnValue) == 0x000230, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_SafeDivide_A_ImplicitCast) == 0x000238, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_SafeDivide_B_ImplicitCast) == 0x000240, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_SetGaugePercent_Percent_ImplicitCast) == 0x000248, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_SetGaugePercent_Percent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000250, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_Lerp_A_ImplicitCast) == 0x000258, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_SafeDivide_B_ImplicitCast_1) == 0x000260, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_SafeDivide_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_SafeDivide_A_ImplicitCast_1) == 0x000268, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_SafeDivide_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000270, "Member 'Widget_BarrierGauge_C_ExecuteUbergraph_Widget_BarrierGauge::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function Widget_BarrierGauge.Widget_BarrierGauge_C.GagueBlocked
// 0x0008 (0x0008 - 0x0000)
struct Widget_BarrierGauge_C_GagueBlocked final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_BarrierGauge_C_GagueBlocked) == 0x000008, "Wrong alignment on Widget_BarrierGauge_C_GagueBlocked");
static_assert(sizeof(Widget_BarrierGauge_C_GagueBlocked) == 0x000008, "Wrong size on Widget_BarrierGauge_C_GagueBlocked");
static_assert(offsetof(Widget_BarrierGauge_C_GagueBlocked, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'Widget_BarrierGauge_C_GagueBlocked::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function Widget_BarrierGauge.Widget_BarrierGauge_C.GaugeReset
// 0x0010 (0x0010 - 0x0000)
struct Widget_BarrierGauge_C_GaugeReset final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_BarrierGauge_C_GaugeReset) == 0x000008, "Wrong alignment on Widget_BarrierGauge_C_GaugeReset");
static_assert(sizeof(Widget_BarrierGauge_C_GaugeReset) == 0x000010, "Wrong size on Widget_BarrierGauge_C_GaugeReset");
static_assert(offsetof(Widget_BarrierGauge_C_GaugeReset, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000000, "Member 'Widget_BarrierGauge_C_GaugeReset::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_GaugeReset, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'Widget_BarrierGauge_C_GaugeReset::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function Widget_BarrierGauge.Widget_BarrierGauge_C.OnBarrierChanged_HealthComponent
// 0x0048 (0x0048 - 0x0000)
struct Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent final
{
public:
	class URHealthComponent*                      Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         currentHealth;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         healthDelta;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHealCombatEvent                       HealEvent;                                         // 0x0010(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent) == 0x000008, "Wrong alignment on Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent");
static_assert(sizeof(Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent) == 0x000048, "Wrong size on Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent");
static_assert(offsetof(Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent, Component) == 0x000000, "Member 'Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent::Component' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent, currentHealth) == 0x000008, "Member 'Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent::currentHealth' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent, healthDelta) == 0x00000C, "Member 'Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent::healthDelta' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent, HealEvent) == 0x000010, "Member 'Widget_BarrierGauge_C_OnBarrierChanged_HealthComponent::HealEvent' has a wrong offset!");

// Function Widget_BarrierGauge.Widget_BarrierGauge_C.OnBarrierDepleted_HealthComponent
// 0x00C8 (0x00C8 - 0x0000)
struct Widget_BarrierGauge_C_OnBarrierDepleted_HealthComponent final
{
public:
	class URHealthComponent*                      Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     DamageEventData;                                   // 0x0008(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Widget_BarrierGauge_C_OnBarrierDepleted_HealthComponent) == 0x000008, "Wrong alignment on Widget_BarrierGauge_C_OnBarrierDepleted_HealthComponent");
static_assert(sizeof(Widget_BarrierGauge_C_OnBarrierDepleted_HealthComponent) == 0x0000C8, "Wrong size on Widget_BarrierGauge_C_OnBarrierDepleted_HealthComponent");
static_assert(offsetof(Widget_BarrierGauge_C_OnBarrierDepleted_HealthComponent, Component) == 0x000000, "Member 'Widget_BarrierGauge_C_OnBarrierDepleted_HealthComponent::Component' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_OnBarrierDepleted_HealthComponent, DamageEventData) == 0x000008, "Member 'Widget_BarrierGauge_C_OnBarrierDepleted_HealthComponent::DamageEventData' has a wrong offset!");

// Function Widget_BarrierGauge.Widget_BarrierGauge_C.OnBarrierRegained_HealthComponent
// 0x0048 (0x0048 - 0x0000)
struct Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent final
{
public:
	class URHealthComponent*                      Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         currentHealth;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         healthDelta;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHealCombatEvent                       HealEvent;                                         // 0x0010(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent) == 0x000008, "Wrong alignment on Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent");
static_assert(sizeof(Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent) == 0x000048, "Wrong size on Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent");
static_assert(offsetof(Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent, Component) == 0x000000, "Member 'Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent::Component' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent, currentHealth) == 0x000008, "Member 'Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent::currentHealth' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent, healthDelta) == 0x00000C, "Member 'Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent::healthDelta' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent, HealEvent) == 0x000010, "Member 'Widget_BarrierGauge_C_OnBarrierRegained_HealthComponent::HealEvent' has a wrong offset!");

// Function Widget_BarrierGauge.Widget_BarrierGauge_C.SetGaugePercent
// 0x0010 (0x0010 - 0x0000)
struct Widget_BarrierGauge_C_SetGaugePercent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_TargetGaugePrecentage_ImplicitCast; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_BarrierGauge_C_SetGaugePercent) == 0x000008, "Wrong alignment on Widget_BarrierGauge_C_SetGaugePercent");
static_assert(sizeof(Widget_BarrierGauge_C_SetGaugePercent) == 0x000010, "Wrong size on Widget_BarrierGauge_C_SetGaugePercent");
static_assert(offsetof(Widget_BarrierGauge_C_SetGaugePercent, Percent) == 0x000000, "Member 'Widget_BarrierGauge_C_SetGaugePercent::Percent' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_SetGaugePercent, K2Node_VariableSet_TargetGaugePrecentage_ImplicitCast) == 0x000008, "Member 'Widget_BarrierGauge_C_SetGaugePercent::K2Node_VariableSet_TargetGaugePrecentage_ImplicitCast' has a wrong offset!");

// Function Widget_BarrierGauge.Widget_BarrierGauge_C.SetGaugeVisibility
// 0x0018 (0x0018 - 0x0000)
struct Widget_BarrierGauge_C_SetGaugeVisibility final
{
public:
	ESlateVisibility                              Visibility_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_BarrierGauge_C_SetGaugeVisibility) == 0x000008, "Wrong alignment on Widget_BarrierGauge_C_SetGaugeVisibility");
static_assert(sizeof(Widget_BarrierGauge_C_SetGaugeVisibility) == 0x000018, "Wrong size on Widget_BarrierGauge_C_SetGaugeVisibility");
static_assert(offsetof(Widget_BarrierGauge_C_SetGaugeVisibility, Visibility_0) == 0x000000, "Member 'Widget_BarrierGauge_C_SetGaugeVisibility::Visibility_0' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_SetGaugeVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Widget_BarrierGauge_C_SetGaugeVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_SetGaugeVisibility, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'Widget_BarrierGauge_C_SetGaugeVisibility::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_SetGaugeVisibility, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000010, "Member 'Widget_BarrierGauge_C_SetGaugeVisibility::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");

// Function Widget_BarrierGauge.Widget_BarrierGauge_C.ThresholdReached
// 0x0010 (0x0010 - 0x0000)
struct Widget_BarrierGauge_C_ThresholdReached final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_BarrierGauge_C_ThresholdReached) == 0x000008, "Wrong alignment on Widget_BarrierGauge_C_ThresholdReached");
static_assert(sizeof(Widget_BarrierGauge_C_ThresholdReached) == 0x000010, "Wrong size on Widget_BarrierGauge_C_ThresholdReached");
static_assert(offsetof(Widget_BarrierGauge_C_ThresholdReached, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'Widget_BarrierGauge_C_ThresholdReached::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_ThresholdReached, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000008, "Member 'Widget_BarrierGauge_C_ThresholdReached::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");

// Function Widget_BarrierGauge.Widget_BarrierGauge_C.Tick
// 0x003C (0x003C - 0x0000)
struct Widget_BarrierGauge_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_BarrierGauge_C_Tick) == 0x000004, "Wrong alignment on Widget_BarrierGauge_C_Tick");
static_assert(sizeof(Widget_BarrierGauge_C_Tick) == 0x00003C, "Wrong size on Widget_BarrierGauge_C_Tick");
static_assert(offsetof(Widget_BarrierGauge_C_Tick, MyGeometry) == 0x000000, "Member 'Widget_BarrierGauge_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Widget_BarrierGauge_C_Tick, InDeltaTime) == 0x000038, "Member 'Widget_BarrierGauge_C_Tick::InDeltaTime' has a wrong offset!");

}

