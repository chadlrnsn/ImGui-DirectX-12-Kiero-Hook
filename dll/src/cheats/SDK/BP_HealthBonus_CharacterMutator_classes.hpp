#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HealthBonus_CharacterMutator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HealthBonus_CharacterMutator.BP_HealthBonus_CharacterMutator_C
// 0x0048 (0x0150 - 0x0108)
class UBP_HealthBonus_CharacterMutator_C final : public URGCharacterMutatorScript
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0108(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        BonusHPIncrease;                                   // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         InternalRank;                                      // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MutableFloatKey;                                   // 0x011C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class URMutatorPrimaryAsset>   SoftBloodPassive1Mutator;                          // 0x0128(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void AddHealthBonus();
	void ExecuteUbergraph_BP_HealthBonus_CharacterMutator(int32 EntryPoint);
	void GetBloodPassive1Bonus(double* PercentBonus);
	void IsPlayerStateValid(bool* RetValue);
	void K2_ActivateScript();
	void K2_DeactivateScript();
	void OnInvoke_F80534834BB0A3FB2767E69FFD9A9EE0();
	void OnReconnectDoneServer(const struct FRDisconnectedPlayerData& PlayerData);
	void SetNewRank(int32 NewRank);

	class FText GetDescription() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HealthBonus_CharacterMutator_C">();
	}
	static class UBP_HealthBonus_CharacterMutator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HealthBonus_CharacterMutator_C>();
	}
};
static_assert(alignof(UBP_HealthBonus_CharacterMutator_C) == 0x000008, "Wrong alignment on UBP_HealthBonus_CharacterMutator_C");
static_assert(sizeof(UBP_HealthBonus_CharacterMutator_C) == 0x000150, "Wrong size on UBP_HealthBonus_CharacterMutator_C");
static_assert(offsetof(UBP_HealthBonus_CharacterMutator_C, UberGraphFrame) == 0x000108, "Member 'UBP_HealthBonus_CharacterMutator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HealthBonus_CharacterMutator_C, BonusHPIncrease) == 0x000110, "Member 'UBP_HealthBonus_CharacterMutator_C::BonusHPIncrease' has a wrong offset!");
static_assert(offsetof(UBP_HealthBonus_CharacterMutator_C, InternalRank) == 0x000118, "Member 'UBP_HealthBonus_CharacterMutator_C::InternalRank' has a wrong offset!");
static_assert(offsetof(UBP_HealthBonus_CharacterMutator_C, MutableFloatKey) == 0x00011C, "Member 'UBP_HealthBonus_CharacterMutator_C::MutableFloatKey' has a wrong offset!");
static_assert(offsetof(UBP_HealthBonus_CharacterMutator_C, SoftBloodPassive1Mutator) == 0x000128, "Member 'UBP_HealthBonus_CharacterMutator_C::SoftBloodPassive1Mutator' has a wrong offset!");

}

