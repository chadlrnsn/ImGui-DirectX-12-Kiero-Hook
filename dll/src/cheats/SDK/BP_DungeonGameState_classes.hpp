#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DungeonGameState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DungeonGameState.BP_DungeonGameState_C
// 0x0078 (0x0FA0 - 0x0F28)
class ABP_DungeonGameState_C final : public ARGameState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0F28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0F30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidget_ChoiceDialog_C*                 ExitCurrentGameWidget;                             // 0x0F38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerState*>                   PendingLoading;                                    // 0x0F40(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              LoadingScreenPopped;                               // 0x0F50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   DifficultyScriptCategory;                          // 0x0F60(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              AreaTimerExpired;                                  // 0x0F68(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class URCommonActivatableWidget*              CommonWaitDialog;                                  // 0x0F78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URCommonActivatableWidget*              CommonLoadingScreen;                               // 0x0F80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  LastEnemyKiller;                                   // 0x0F88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWidget_CommonInputDialog_C*            PasswordWidget;                                    // 0x0F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CachedCurrentNodeID;                               // 0x0F98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdatePlayerCosmetics_Multicast(class ARPlayerPawn* RPlayerPawn, const struct FPlayerCosmeticOption& CosmeticsOptionData);
	void UpdatePlayerCosmetics(class ARPlayerPawn* RPlayerPawn, const struct FPlayerCosmeticOption& CosmeticOptionData);
	void UpdatePlayerClothes_Multicast(class ARPlayerPawn* PlayerPawn, class UStaticMesh* NewHeadMesh, const struct FVector4& Color);
	void UpdatePlayerClothes(class ARPlayerPawn* RPlayerPawn, class UStaticMesh* NewHeadMesh, const struct FVector4& Color);
	void Success_F5C97407439107F5AD7268A51B9F5908(const class FString& Error);
	void Success_760276604B9A33B23DF305B2B3748627(const class FString& Error);
	void Success_6DA6FB9C4A61DB7F7FC3ED9DFDF502AC(const class FString& Error, const struct FBlueprintSessionResult& Result);
	void Success_373CD0904C4C2D66CF3B3EA1790A81A8(const class FString& TravelURL, const class FString& Error);
	void Save_Player_Stats(bool RunFailed);
	void RunStarted();
	void RunFinished(bool RunFailed);
	void RetryPassword();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void PushMidRunLoadingScreen();
	void PushDemoEndScreen_Multicast();
	void PopMidRunLoadingScreen();
	void PlayerLeft(class APlayerState* PlayerState);
	void PlayerJoined(class APlayerState* PlayerState);
	void PlayerFinishMidRunLoading(class APlayerState* PlayerState);
	void OnSessionUserInviteAcceptedSteam(const class FString& SessionId);
	void OnSessionUserInviteAcceptedEOS(const struct FBlueprintSessionResult& Session, bool bWasSuccesful);
	void OnSegmentStarted_VoiceEvent(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment);
	void OnSegmentCompleted_VoiceEvent(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment);
	void OnSegmentCompleted_Event(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment);
	void OnLevelChanged();
	void OnJoinConfirmedSteam();
	void OnJoinConfirmed();
	void OnEnemyKilled_VoiceEvent(class ARNPCPawnBase* EnemyPawn);
	void OnCancelJoin();
	void JoinSession(const struct FBlueprintSessionResult& Session);
	void IsDemoEndNode(bool* Value);
	void GetEnterAreaVoicelineEvent(class FName* EventName);
	void FailedToJoinGame(const class FString& Error);
	void Fail_F5C97407439107F5AD7268A51B9F5908(const class FString& Error);
	void Fail_760276604B9A33B23DF305B2B3748627(const class FString& Error);
	void Fail_6DA6FB9C4A61DB7F7FC3ED9DFDF502AC(const class FString& Error, const struct FBlueprintSessionResult& Result);
	void Fail_373CD0904C4C2D66CF3B3EA1790A81A8(const class FString& TravelURL, const class FString& Error);
	void ExecuteUbergraph_BP_DungeonGameState(int32 EntryPoint);
	void CheckEliteSegment(class AREnemySpawnAreaSegment* Segment, bool* IsElite);
	void AutoApplyDifficultyEffects();
	void AcceptEvent(const class FText& Input);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DungeonGameState_C">();
	}
	static class ABP_DungeonGameState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DungeonGameState_C>();
	}
};
static_assert(alignof(ABP_DungeonGameState_C) == 0x000008, "Wrong alignment on ABP_DungeonGameState_C");
static_assert(sizeof(ABP_DungeonGameState_C) == 0x000FA0, "Wrong size on ABP_DungeonGameState_C");
static_assert(offsetof(ABP_DungeonGameState_C, UberGraphFrame) == 0x000F28, "Member 'ABP_DungeonGameState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DungeonGameState_C, DefaultSceneRoot) == 0x000F30, "Member 'ABP_DungeonGameState_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DungeonGameState_C, ExitCurrentGameWidget) == 0x000F38, "Member 'ABP_DungeonGameState_C::ExitCurrentGameWidget' has a wrong offset!");
static_assert(offsetof(ABP_DungeonGameState_C, PendingLoading) == 0x000F40, "Member 'ABP_DungeonGameState_C::PendingLoading' has a wrong offset!");
static_assert(offsetof(ABP_DungeonGameState_C, LoadingScreenPopped) == 0x000F50, "Member 'ABP_DungeonGameState_C::LoadingScreenPopped' has a wrong offset!");
static_assert(offsetof(ABP_DungeonGameState_C, DifficultyScriptCategory) == 0x000F60, "Member 'ABP_DungeonGameState_C::DifficultyScriptCategory' has a wrong offset!");
static_assert(offsetof(ABP_DungeonGameState_C, AreaTimerExpired) == 0x000F68, "Member 'ABP_DungeonGameState_C::AreaTimerExpired' has a wrong offset!");
static_assert(offsetof(ABP_DungeonGameState_C, CommonWaitDialog) == 0x000F78, "Member 'ABP_DungeonGameState_C::CommonWaitDialog' has a wrong offset!");
static_assert(offsetof(ABP_DungeonGameState_C, CommonLoadingScreen) == 0x000F80, "Member 'ABP_DungeonGameState_C::CommonLoadingScreen' has a wrong offset!");
static_assert(offsetof(ABP_DungeonGameState_C, LastEnemyKiller) == 0x000F88, "Member 'ABP_DungeonGameState_C::LastEnemyKiller' has a wrong offset!");
static_assert(offsetof(ABP_DungeonGameState_C, PasswordWidget) == 0x000F90, "Member 'ABP_DungeonGameState_C::PasswordWidget' has a wrong offset!");
static_assert(offsetof(ABP_DungeonGameState_C, CachedCurrentNodeID) == 0x000F98, "Member 'ABP_DungeonGameState_C::CachedCurrentNodeID' has a wrong offset!");

}

