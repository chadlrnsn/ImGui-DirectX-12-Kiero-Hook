#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PCGGeometryScriptInterop

#include "Basic.hpp"

#include "PCG_structs.hpp"


namespace SDK::Params
{

// Function PCGGeometryScriptInterop.PCGDynamicMeshData.K2_Initialize
// 0x0020 (0x0020 - 0x0000)
struct PCGDynamicMeshData_K2_Initialize final
{
public:
	class UDynamicMesh*                           InMesh;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             InMaterials;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bCanTakeOwnership;                                 // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCGDynamicMeshData_K2_Initialize) == 0x000008, "Wrong alignment on PCGDynamicMeshData_K2_Initialize");
static_assert(sizeof(PCGDynamicMeshData_K2_Initialize) == 0x000020, "Wrong size on PCGDynamicMeshData_K2_Initialize");
static_assert(offsetof(PCGDynamicMeshData_K2_Initialize, InMesh) == 0x000000, "Member 'PCGDynamicMeshData_K2_Initialize::InMesh' has a wrong offset!");
static_assert(offsetof(PCGDynamicMeshData_K2_Initialize, InMaterials) == 0x000008, "Member 'PCGDynamicMeshData_K2_Initialize::InMaterials' has a wrong offset!");
static_assert(offsetof(PCGDynamicMeshData_K2_Initialize, bCanTakeOwnership) == 0x000018, "Member 'PCGDynamicMeshData_K2_Initialize::bCanTakeOwnership' has a wrong offset!");

// Function PCGGeometryScriptInterop.PCGDynamicMeshData.SetMaterials
// 0x0010 (0x0010 - 0x0000)
struct PCGDynamicMeshData_SetMaterials final
{
public:
	TArray<class UMaterialInterface*>             InMaterials;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCGDynamicMeshData_SetMaterials) == 0x000008, "Wrong alignment on PCGDynamicMeshData_SetMaterials");
static_assert(sizeof(PCGDynamicMeshData_SetMaterials) == 0x000010, "Wrong size on PCGDynamicMeshData_SetMaterials");
static_assert(offsetof(PCGDynamicMeshData_SetMaterials, InMaterials) == 0x000000, "Member 'PCGDynamicMeshData_SetMaterials::InMaterials' has a wrong offset!");

// Function PCGGeometryScriptInterop.PCGGeometryBlueprintElement.ProcessDynamicMesh
// 0x0018 (0x0018 - 0x0000)
struct PCGGeometryBlueprintElement_ProcessDynamicMesh final
{
public:
	class UDynamicMesh*                           InDynMesh;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         OutTags;                                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCGGeometryBlueprintElement_ProcessDynamicMesh) == 0x000008, "Wrong alignment on PCGGeometryBlueprintElement_ProcessDynamicMesh");
static_assert(sizeof(PCGGeometryBlueprintElement_ProcessDynamicMesh) == 0x000018, "Wrong size on PCGGeometryBlueprintElement_ProcessDynamicMesh");
static_assert(offsetof(PCGGeometryBlueprintElement_ProcessDynamicMesh, InDynMesh) == 0x000000, "Member 'PCGGeometryBlueprintElement_ProcessDynamicMesh::InDynMesh' has a wrong offset!");
static_assert(offsetof(PCGGeometryBlueprintElement_ProcessDynamicMesh, OutTags) == 0x000008, "Member 'PCGGeometryBlueprintElement_ProcessDynamicMesh::OutTags' has a wrong offset!");

// Function PCGGeometryScriptInterop.PCGGeometryBlueprintElement.CopyOrStealInputData
// 0x0070 (0x0070 - 0x0000)
struct PCGGeometryBlueprintElement_CopyOrStealInputData final
{
public:
	struct FPCGTaggedData                         InTaggedData;                                      // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UPCGDynamicMeshData*                    ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCGGeometryBlueprintElement_CopyOrStealInputData) == 0x000008, "Wrong alignment on PCGGeometryBlueprintElement_CopyOrStealInputData");
static_assert(sizeof(PCGGeometryBlueprintElement_CopyOrStealInputData) == 0x000070, "Wrong size on PCGGeometryBlueprintElement_CopyOrStealInputData");
static_assert(offsetof(PCGGeometryBlueprintElement_CopyOrStealInputData, InTaggedData) == 0x000000, "Member 'PCGGeometryBlueprintElement_CopyOrStealInputData::InTaggedData' has a wrong offset!");
static_assert(offsetof(PCGGeometryBlueprintElement_CopyOrStealInputData, ReturnValue) == 0x000068, "Member 'PCGGeometryBlueprintElement_CopyOrStealInputData::ReturnValue' has a wrong offset!");

}

