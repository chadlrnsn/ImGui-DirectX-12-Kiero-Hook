#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JumpPadPrototype

#include "Basic.hpp"

#include "BP_JumpPadPrototype_classes.hpp"
#include "BP_JumpPadPrototype_parameters.hpp"


namespace SDK
{

// Function BP_JumpPadPrototype.BP_JumpPadPrototype_C.Activate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Positive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_JumpPadPrototype_C::Activate(int32 ID, bool Positive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JumpPadPrototype_C", "Activate");

	Params::BP_JumpPadPrototype_C_Activate Parms{};

	Parms.ID = ID;
	Parms.Positive = Positive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JumpPadPrototype.BP_JumpPadPrototype_C.ExecuteUbergraph_BP_JumpPadPrototype
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_JumpPadPrototype_C::ExecuteUbergraph_BP_JumpPadPrototype(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JumpPadPrototype_C", "ExecuteUbergraph_BP_JumpPadPrototype");

	Params::BP_JumpPadPrototype_C_ExecuteUbergraph_BP_JumpPadPrototype Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JumpPadPrototype.BP_JumpPadPrototype_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_JumpPadPrototype_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JumpPadPrototype_C", "ReceiveActorBeginOverlap");

	Params::BP_JumpPadPrototype_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JumpPadPrototype.BP_JumpPadPrototype_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_JumpPadPrototype_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JumpPadPrototype_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JumpPadPrototype.BP_JumpPadPrototype_C.SetJumpPadEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_JumpPadPrototype_C::SetJumpPadEnable(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JumpPadPrototype_C", "SetJumpPadEnable");

	Params::BP_JumpPadPrototype_C_SetJumpPadEnable Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}

}

