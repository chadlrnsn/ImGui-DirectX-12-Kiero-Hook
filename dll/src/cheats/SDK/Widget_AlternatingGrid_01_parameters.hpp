#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_AlternatingGrid_01

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Widget_AlternatingGrid_01.Widget_AlternatingGrid_01_C.SetGridNavigationData
// 0x0080 (0x0080 - 0x0000)
struct Widget_AlternatingGrid_01_C_SetGridNavigationData final
{
public:
	class UWidget*                                InGridElement;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         InElemIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InRow;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ElemRow;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ElemIndex;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                GridElem;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget_MutatorGridElement_01_C*        K2Node_DynamicCast_AsWidget_Mutator_Grid_Element_01; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget_MutatorGridElement_01_C*        K2Node_DynamicCast_AsWidget_Mutator_Grid_Element_01_1; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_AlternatingGrid_01_C_SetGridNavigationData) == 0x000008, "Wrong alignment on Widget_AlternatingGrid_01_C_SetGridNavigationData");
static_assert(sizeof(Widget_AlternatingGrid_01_C_SetGridNavigationData) == 0x000080, "Wrong size on Widget_AlternatingGrid_01_C_SetGridNavigationData");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, InGridElement) == 0x000000, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::InGridElement' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, InElemIndex) == 0x000008, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::InElemIndex' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, InRow) == 0x00000C, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::InRow' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, ElemRow) == 0x000010, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::ElemRow' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, ElemIndex) == 0x000014, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::ElemIndex' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, GridElem) == 0x000018, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::GridElem' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, Temp_int_Variable) == 0x000020, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_SelectInt_ReturnValue) == 0x000028, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, K2Node_DynamicCast_AsWidget_Mutator_Grid_Element_01) == 0x000030, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::K2Node_DynamicCast_AsWidget_Mutator_Grid_Element_01' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_Array_Get_Item) == 0x000040, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000049, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_SelectInt_ReturnValue_1) == 0x00004C, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000050, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, K2Node_DynamicCast_AsWidget_Mutator_Grid_Element_01_1) == 0x000058, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::K2Node_DynamicCast_AsWidget_Mutator_Grid_Element_01_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000064, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000070, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_SetGridNavigationData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000078, "Member 'Widget_AlternatingGrid_01_C_SetGridNavigationData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Widget_AlternatingGrid_01.Widget_AlternatingGrid_01_C.RemoveWidgetFromGrid
// 0x0010 (0x0010 - 0x0000)
struct Widget_AlternatingGrid_01_C_RemoveWidgetFromGrid final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_AlternatingGrid_01_C_RemoveWidgetFromGrid) == 0x000008, "Wrong alignment on Widget_AlternatingGrid_01_C_RemoveWidgetFromGrid");
static_assert(sizeof(Widget_AlternatingGrid_01_C_RemoveWidgetFromGrid) == 0x000010, "Wrong size on Widget_AlternatingGrid_01_C_RemoveWidgetFromGrid");
static_assert(offsetof(Widget_AlternatingGrid_01_C_RemoveWidgetFromGrid, Widget) == 0x000000, "Member 'Widget_AlternatingGrid_01_C_RemoveWidgetFromGrid::Widget' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_RemoveWidgetFromGrid, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Widget_AlternatingGrid_01_C_RemoveWidgetFromGrid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_RemoveWidgetFromGrid, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'Widget_AlternatingGrid_01_C_RemoveWidgetFromGrid::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Widget_AlternatingGrid_01.Widget_AlternatingGrid_01_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Widget_AlternatingGrid_01_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_AlternatingGrid_01_C_PreConstruct) == 0x000001, "Wrong alignment on Widget_AlternatingGrid_01_C_PreConstruct");
static_assert(sizeof(Widget_AlternatingGrid_01_C_PreConstruct) == 0x000001, "Wrong size on Widget_AlternatingGrid_01_C_PreConstruct");
static_assert(offsetof(Widget_AlternatingGrid_01_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Widget_AlternatingGrid_01_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Widget_AlternatingGrid_01.Widget_AlternatingGrid_01_C.GeneratePreviewElements
// 0x0018 (0x0018 - 0x0000)
struct Widget_AlternatingGrid_01_C_GeneratePreviewElements final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget_MutatorGridElement_01_C*        CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_AlternatingGrid_01_C_GeneratePreviewElements) == 0x000008, "Wrong alignment on Widget_AlternatingGrid_01_C_GeneratePreviewElements");
static_assert(sizeof(Widget_AlternatingGrid_01_C_GeneratePreviewElements) == 0x000018, "Wrong size on Widget_AlternatingGrid_01_C_GeneratePreviewElements");
static_assert(offsetof(Widget_AlternatingGrid_01_C_GeneratePreviewElements, Temp_int_Variable) == 0x000000, "Member 'Widget_AlternatingGrid_01_C_GeneratePreviewElements::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_GeneratePreviewElements, CallFunc_Multiply_IntInt_ReturnValue) == 0x000004, "Member 'Widget_AlternatingGrid_01_C_GeneratePreviewElements::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_GeneratePreviewElements, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Widget_AlternatingGrid_01_C_GeneratePreviewElements::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_GeneratePreviewElements, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'Widget_AlternatingGrid_01_C_GeneratePreviewElements::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_GeneratePreviewElements, CallFunc_Create_ReturnValue) == 0x000010, "Member 'Widget_AlternatingGrid_01_C_GeneratePreviewElements::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function Widget_AlternatingGrid_01.Widget_AlternatingGrid_01_C.ExecuteUbergraph_Widget_AlternatingGrid_01
// 0x0108 (0x0108 - 0x0000)
struct Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01) == 0x000008, "Wrong alignment on Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01");
static_assert(sizeof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01) == 0x000108, "Wrong size on Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, EntryPoint) == 0x000000, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, Temp_byte_Variable) == 0x000004, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000005, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, K2Node_Event_IsDesignTime) == 0x000018, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Max_ReturnValue) == 0x000024, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000030, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_FTrunc_ReturnValue) == 0x000050, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000058, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Percent_IntInt_ReturnValue) == 0x000060, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Divide_IntInt_ReturnValue) == 0x000070, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000074, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Add_IntInt_ReturnValue_3) == 0x000078, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Add_IntInt_ReturnValue_4) == 0x00007C, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000080, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Array_Get_Item) == 0x000090, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_MakeVector2D_ReturnValue) == 0x000098, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0000A8, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000B0, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, K2Node_Select_Default) == 0x0000C8, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_BreakVector2D_X) == 0x0000E0, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, CallFunc_BreakVector2D_Y) == 0x0000E8, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, K2Node_MakeStruct_Margin) == 0x0000F0, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, K2Node_MakeStruct_Left_ImplicitCast) == 0x000100, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01, K2Node_MakeStruct_Top_ImplicitCast) == 0x000104, "Member 'Widget_AlternatingGrid_01_C_ExecuteUbergraph_Widget_AlternatingGrid_01::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");

// Function Widget_AlternatingGrid_01.Widget_AlternatingGrid_01_C.ClearGrid
// 0x0030 (0x0030 - 0x0000)
struct Widget_AlternatingGrid_01_C_ClearGrid final
{
public:
	TArray<class UWidget*>                        LoopGridElements;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_AlternatingGrid_01_C_ClearGrid) == 0x000008, "Wrong alignment on Widget_AlternatingGrid_01_C_ClearGrid");
static_assert(sizeof(Widget_AlternatingGrid_01_C_ClearGrid) == 0x000030, "Wrong size on Widget_AlternatingGrid_01_C_ClearGrid");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ClearGrid, LoopGridElements) == 0x000000, "Member 'Widget_AlternatingGrid_01_C_ClearGrid::LoopGridElements' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ClearGrid, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Widget_AlternatingGrid_01_C_ClearGrid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ClearGrid, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Widget_AlternatingGrid_01_C_ClearGrid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ClearGrid, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Widget_AlternatingGrid_01_C_ClearGrid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ClearGrid, CallFunc_Array_Get_Item) == 0x000020, "Member 'Widget_AlternatingGrid_01_C_ClearGrid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ClearGrid, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Widget_AlternatingGrid_01_C_ClearGrid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_ClearGrid, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'Widget_AlternatingGrid_01_C_ClearGrid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Widget_AlternatingGrid_01.Widget_AlternatingGrid_01_C.AddWidgetToGrid
// 0x0018 (0x0018 - 0x0000)
struct Widget_AlternatingGrid_01_C_AddWidgetToGrid final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_AlternatingGrid_01_C_AddWidgetToGrid) == 0x000008, "Wrong alignment on Widget_AlternatingGrid_01_C_AddWidgetToGrid");
static_assert(sizeof(Widget_AlternatingGrid_01_C_AddWidgetToGrid) == 0x000018, "Wrong size on Widget_AlternatingGrid_01_C_AddWidgetToGrid");
static_assert(offsetof(Widget_AlternatingGrid_01_C_AddWidgetToGrid, Widget) == 0x000000, "Member 'Widget_AlternatingGrid_01_C_AddWidgetToGrid::Widget' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_AddWidgetToGrid, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'Widget_AlternatingGrid_01_C_AddWidgetToGrid::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AlternatingGrid_01_C_AddWidgetToGrid, CallFunc_AddChild_ReturnValue) == 0x000010, "Member 'Widget_AlternatingGrid_01_C_AddWidgetToGrid::CallFunc_AddChild_ReturnValue' has a wrong offset!");

}

