#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_PlayerGameOverChallengeEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Widget_PlayerGameOverChallengeEntry.Widget_PlayerGameOverChallengeEntry_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct Widget_PlayerGameOverChallengeEntry_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_PlayerGameOverChallengeEntry_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on Widget_PlayerGameOverChallengeEntry_C_OnListItemObjectSet");
static_assert(sizeof(Widget_PlayerGameOverChallengeEntry_C_OnListItemObjectSet) == 0x000008, "Wrong size on Widget_PlayerGameOverChallengeEntry_C_OnListItemObjectSet");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'Widget_PlayerGameOverChallengeEntry_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function Widget_PlayerGameOverChallengeEntry.Widget_PlayerGameOverChallengeEntry_C.GetToolTipWidget
// 0x00F8 (0x00F8 - 0x0000)
struct Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_ParseChallengeDescription_ReturnValue;    // 0x0068(0x0010)()
	class UWidget_BaseTooltip_C*                  CallFunc_Create_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x00E8(0x0010)()
};
static_assert(alignof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget) == 0x000008, "Wrong alignment on Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget");
static_assert(sizeof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget) == 0x0000F8, "Wrong size on Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget, ReturnValue) == 0x000000, "Member 'Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget, Temp_bool_Variable) == 0x000008, "Member 'Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget, CallFunc_TextIsEmpty_ReturnValue) == 0x000058, "Member 'Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget, CallFunc_ParseChallengeDescription_ReturnValue) == 0x000068, "Member 'Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget::CallFunc_ParseChallengeDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget, CallFunc_Create_ReturnValue) == 0x000078, "Member 'Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget, K2Node_MakeArray_Array) == 0x0000C8, "Member 'Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget, K2Node_Select_Default) == 0x0000E8, "Member 'Widget_PlayerGameOverChallengeEntry_C_GetToolTipWidget::K2Node_Select_Default' has a wrong offset!");

// Function Widget_PlayerGameOverChallengeEntry.Widget_PlayerGameOverChallengeEntry_C.ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry
// 0x0020 (0x0020 - 0x0000)
struct Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URChallengeGridItem*                    K2Node_DynamicCast_AsRChallenge_Grid_Item;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry) == 0x000008, "Wrong alignment on Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry");
static_assert(sizeof(Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry) == 0x000020, "Wrong size on Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry, EntryPoint) == 0x000000, "Member 'Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry, K2Node_Event_bIsExpanded) == 0x000004, "Member 'Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry, K2Node_Event_bIsSelected) == 0x000005, "Member 'Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry, K2Node_Event_ListItemObject) == 0x000008, "Member 'Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry, K2Node_DynamicCast_AsRChallenge_Grid_Item) == 0x000010, "Member 'Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry::K2Node_DynamicCast_AsRChallenge_Grid_Item' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Widget_PlayerGameOverChallengeEntry_C_ExecuteUbergraph_Widget_PlayerGameOverChallengeEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Widget_PlayerGameOverChallengeEntry.Widget_PlayerGameOverChallengeEntry_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct Widget_PlayerGameOverChallengeEntry_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_PlayerGameOverChallengeEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on Widget_PlayerGameOverChallengeEntry_C_BP_OnItemSelectionChanged");
static_assert(sizeof(Widget_PlayerGameOverChallengeEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on Widget_PlayerGameOverChallengeEntry_C_BP_OnItemSelectionChanged");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'Widget_PlayerGameOverChallengeEntry_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function Widget_PlayerGameOverChallengeEntry.Widget_PlayerGameOverChallengeEntry_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct Widget_PlayerGameOverChallengeEntry_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_PlayerGameOverChallengeEntry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on Widget_PlayerGameOverChallengeEntry_C_BP_OnItemExpansionChanged");
static_assert(sizeof(Widget_PlayerGameOverChallengeEntry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on Widget_PlayerGameOverChallengeEntry_C_BP_OnItemExpansionChanged");
static_assert(offsetof(Widget_PlayerGameOverChallengeEntry_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'Widget_PlayerGameOverChallengeEntry_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

}

