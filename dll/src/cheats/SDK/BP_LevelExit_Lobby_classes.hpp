#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelExit_Lobby

#include "Basic.hpp"

#include "BP_LevelExit_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LevelExit_Lobby.BP_LevelExit_Lobby_C
// 0x0008 (0x0338 - 0x0330)
class ABP_LevelExit_Lobby_C final : public ABP_LevelExit_C
{
public:
	class UBPC_InteractableIndicator_C*           BPC_InteractableIndicator;                         // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	class FText GetInteractableDescription() const;
	class FText GetInteractableName() const;
	struct FLinearColor GetRadarIconColor() const;
	struct FVector2D GetRadarIconSize() const;
	class USlateBrushAsset* GetRadarObjectIcon() const;
	bool ShouldShowOnRadar() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LevelExit_Lobby_C">();
	}
	static class ABP_LevelExit_Lobby_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LevelExit_Lobby_C>();
	}
};
static_assert(alignof(ABP_LevelExit_Lobby_C) == 0x000008, "Wrong alignment on ABP_LevelExit_Lobby_C");
static_assert(sizeof(ABP_LevelExit_Lobby_C) == 0x000338, "Wrong size on ABP_LevelExit_Lobby_C");
static_assert(offsetof(ABP_LevelExit_Lobby_C, BPC_InteractableIndicator) == 0x000330, "Member 'ABP_LevelExit_Lobby_C::BPC_InteractableIndicator' has a wrong offset!");

}

