#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DungeonGameMode

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.VoteToProceedShortcutBP
// 0x0008 (0x0008 - 0x0000)
struct BP_DungeonGameMode_C_VoteToProceedShortcutBP final
{
public:
	class ARGamePlayerController*                 VotingPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_VoteToProceedShortcutBP) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_VoteToProceedShortcutBP");
static_assert(sizeof(BP_DungeonGameMode_C_VoteToProceedShortcutBP) == 0x000008, "Wrong size on BP_DungeonGameMode_C_VoteToProceedShortcutBP");
static_assert(offsetof(BP_DungeonGameMode_C_VoteToProceedShortcutBP, VotingPlayer) == 0x000000, "Member 'BP_DungeonGameMode_C_VoteToProceedShortcutBP::VotingPlayer' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.VoteToProceedShortcut
// 0x0008 (0x0008 - 0x0000)
struct BP_DungeonGameMode_C_VoteToProceedShortcut final
{
public:
	class ARGamePlayerController*                 VotingPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_VoteToProceedShortcut) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_VoteToProceedShortcut");
static_assert(sizeof(BP_DungeonGameMode_C_VoteToProceedShortcut) == 0x000008, "Wrong size on BP_DungeonGameMode_C_VoteToProceedShortcut");
static_assert(offsetof(BP_DungeonGameMode_C_VoteToProceedShortcut, VotingPlayer) == 0x000000, "Member 'BP_DungeonGameMode_C_VoteToProceedShortcut::VotingPlayer' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.UpdateWaitingForPlayersStatus
// 0x0048 (0x0048 - 0x0000)
struct BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus final
{
public:
	bool                                          IsDone;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameInstance*                         K2Node_DynamicCast_AsRGame_Instance;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSingleplayer_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldClearVotesAndTimers_DidClear;       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus");
static_assert(sizeof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus) == 0x000048, "Wrong size on BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, IsDone) == 0x000000, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::IsDone' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, K2Node_DynamicCast_AsRGame_Instance) == 0x000018, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::K2Node_DynamicCast_AsRGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, CallFunc_IsSingleplayer_ReturnValue) == 0x000021, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::CallFunc_IsSingleplayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, CallFunc_ShouldClearVotesAndTimers_DidClear) == 0x000022, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::CallFunc_ShouldClearVotesAndTimers_DidClear' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting) == 0x000024, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, CallFunc_GetRGameState_ReturnValue) == 0x000030, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::CallFunc_GetRGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000041, "Member 'BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.Success_2EB2ADF74DF25EBBAFD42B8BBC2DF16D
// 0x0010 (0x0010 - 0x0000)
struct BP_DungeonGameMode_C_Success_2EB2ADF74DF25EBBAFD42B8BBC2DF16D final
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_Success_2EB2ADF74DF25EBBAFD42B8BBC2DF16D) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_Success_2EB2ADF74DF25EBBAFD42B8BBC2DF16D");
static_assert(sizeof(BP_DungeonGameMode_C_Success_2EB2ADF74DF25EBBAFD42B8BBC2DF16D) == 0x000010, "Wrong size on BP_DungeonGameMode_C_Success_2EB2ADF74DF25EBBAFD42B8BBC2DF16D");
static_assert(offsetof(BP_DungeonGameMode_C_Success_2EB2ADF74DF25EBBAFD42B8BBC2DF16D, Error) == 0x000000, "Member 'BP_DungeonGameMode_C_Success_2EB2ADF74DF25EBBAFD42B8BBC2DF16D::Error' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.StopWaitingForPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_DungeonGameMode_C_StopWaitingForPlayer final
{
public:
	class ARGamePlayerController*                 GamePlayerController;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_StopWaitingForPlayer) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_StopWaitingForPlayer");
static_assert(sizeof(BP_DungeonGameMode_C_StopWaitingForPlayer) == 0x000008, "Wrong size on BP_DungeonGameMode_C_StopWaitingForPlayer");
static_assert(offsetof(BP_DungeonGameMode_C_StopWaitingForPlayer, GamePlayerController) == 0x000000, "Member 'BP_DungeonGameMode_C_StopWaitingForPlayer::GamePlayerController' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.StartWaitingForPlayers
// 0x0008 (0x0008 - 0x0000)
struct BP_DungeonGameMode_C_StartWaitingForPlayers final
{
public:
	class ARGamePlayerController*                 GamePlayerController;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_StartWaitingForPlayers) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_StartWaitingForPlayers");
static_assert(sizeof(BP_DungeonGameMode_C_StartWaitingForPlayers) == 0x000008, "Wrong size on BP_DungeonGameMode_C_StartWaitingForPlayers");
static_assert(offsetof(BP_DungeonGameMode_C_StartWaitingForPlayers, GamePlayerController) == 0x000000, "Member 'BP_DungeonGameMode_C_StartWaitingForPlayers::GamePlayerController' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.ShouldClearVotesAndTimers
// 0x0001 (0x0001 - 0x0000)
struct BP_DungeonGameMode_C_ShouldClearVotesAndTimers final
{
public:
	bool                                          DidClear;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_ShouldClearVotesAndTimers) == 0x000001, "Wrong alignment on BP_DungeonGameMode_C_ShouldClearVotesAndTimers");
static_assert(sizeof(BP_DungeonGameMode_C_ShouldClearVotesAndTimers) == 0x000001, "Wrong size on BP_DungeonGameMode_C_ShouldClearVotesAndTimers");
static_assert(offsetof(BP_DungeonGameMode_C_ShouldClearVotesAndTimers, DidClear) == 0x000000, "Member 'BP_DungeonGameMode_C_ShouldClearVotesAndTimers::DidClear' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.SetPrereleaseSaveGameDataFlag
// 0x0010 (0x0010 - 0x0000)
struct BP_DungeonGameMode_C_SetPrereleaseSaveGameDataFlag final
{
public:
	class URSaveGame*                             CallFunc_GetCurrentSaveGame_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_SetPrereleaseSaveGameDataFlag) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_SetPrereleaseSaveGameDataFlag");
static_assert(sizeof(BP_DungeonGameMode_C_SetPrereleaseSaveGameDataFlag) == 0x000010, "Wrong size on BP_DungeonGameMode_C_SetPrereleaseSaveGameDataFlag");
static_assert(offsetof(BP_DungeonGameMode_C_SetPrereleaseSaveGameDataFlag, CallFunc_GetCurrentSaveGame_ReturnValue) == 0x000000, "Member 'BP_DungeonGameMode_C_SetPrereleaseSaveGameDataFlag::CallFunc_GetCurrentSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_SetPrereleaseSaveGameDataFlag, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_DungeonGameMode_C_SetPrereleaseSaveGameDataFlag::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.SetDemoSaveGameDataFlag
// 0x0010 (0x0010 - 0x0000)
struct BP_DungeonGameMode_C_SetDemoSaveGameDataFlag final
{
public:
	class URSaveGame*                             CallFunc_GetCurrentSaveGame_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDemoBuild_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_SetDemoSaveGameDataFlag) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_SetDemoSaveGameDataFlag");
static_assert(sizeof(BP_DungeonGameMode_C_SetDemoSaveGameDataFlag) == 0x000010, "Wrong size on BP_DungeonGameMode_C_SetDemoSaveGameDataFlag");
static_assert(offsetof(BP_DungeonGameMode_C_SetDemoSaveGameDataFlag, CallFunc_GetCurrentSaveGame_ReturnValue) == 0x000000, "Member 'BP_DungeonGameMode_C_SetDemoSaveGameDataFlag::CallFunc_GetCurrentSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_SetDemoSaveGameDataFlag, CallFunc_GetIsDemoBuild_ReturnValue) == 0x000008, "Member 'BP_DungeonGameMode_C_SetDemoSaveGameDataFlag::CallFunc_GetIsDemoBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_SetDemoSaveGameDataFlag, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_DungeonGameMode_C_SetDemoSaveGameDataFlag::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.ReevaluateDifficultyCoefficient
// 0x0060 (0x0060 - 0x0000)
struct BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRoomDifficulty_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDifficultySettingFactor_ReturnValue;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_DifficultyCoefficient_ImplicitCast; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient");
static_assert(sizeof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient) == 0x000060, "Wrong size on BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, ReturnValue) == 0x000000, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, CallFunc_GetRGameState_ReturnValue) == 0x000008, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::CallFunc_GetRGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, CallFunc_GetRoomDifficulty_ReturnValue) == 0x000014, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::CallFunc_GetRoomDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, CallFunc_GetDifficultySettingFactor_ReturnValue) == 0x000018, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::CallFunc_GetDifficultySettingFactor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000038, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast) == 0x000050, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient, K2Node_VariableSet_DifficultyCoefficient_ImplicitCast) == 0x000058, "Member 'BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient::K2Node_VariableSet_DifficultyCoefficient_ImplicitCast' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.Get Num Players Waiting
// 0x0038 (0x0038 - 0x0000)
struct BP_DungeonGameMode_C_Get_Num_Players_Waiting final
{
public:
	int32                                         NumPlayersWaiting;                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 K2Node_DynamicCast_AsRGame_Player_Controller;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_Get_Num_Players_Waiting) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_Get_Num_Players_Waiting");
static_assert(sizeof(BP_DungeonGameMode_C_Get_Num_Players_Waiting) == 0x000038, "Wrong size on BP_DungeonGameMode_C_Get_Num_Players_Waiting");
static_assert(offsetof(BP_DungeonGameMode_C_Get_Num_Players_Waiting, NumPlayersWaiting) == 0x000000, "Member 'BP_DungeonGameMode_C_Get_Num_Players_Waiting::NumPlayersWaiting' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Get_Num_Players_Waiting, Value) == 0x000004, "Member 'BP_DungeonGameMode_C_Get_Num_Players_Waiting::Value' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Get_Num_Players_Waiting, Temp_int_Variable) == 0x000008, "Member 'BP_DungeonGameMode_C_Get_Num_Players_Waiting::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Get_Num_Players_Waiting, Temp_int_Variable_1) == 0x00000C, "Member 'BP_DungeonGameMode_C_Get_Num_Players_Waiting::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Get_Num_Players_Waiting, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_DungeonGameMode_C_Get_Num_Players_Waiting::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Get_Num_Players_Waiting, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_DungeonGameMode_C_Get_Num_Players_Waiting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Get_Num_Players_Waiting, K2Node_DynamicCast_AsRGame_Player_Controller) == 0x000020, "Member 'BP_DungeonGameMode_C_Get_Num_Players_Waiting::K2Node_DynamicCast_AsRGame_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Get_Num_Players_Waiting, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_DungeonGameMode_C_Get_Num_Players_Waiting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Get_Num_Players_Waiting, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_DungeonGameMode_C_Get_Num_Players_Waiting::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Get_Num_Players_Waiting, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_DungeonGameMode_C_Get_Num_Players_Waiting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Get_Num_Players_Waiting, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_DungeonGameMode_C_Get_Num_Players_Waiting::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.FinishedWaitingForPlayers
// 0x0098 (0x0098 - 0x0000)
struct BP_DungeonGameMode_C_FinishedWaitingForPlayers final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARGamePlayerController*                 K2Node_DynamicCast_AsRGame_Player_Controller;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARPlayerState*                          K2Node_DynamicCast_AsRPlayer_State;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentNodeId_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARGamePlayerController*                 K2Node_DynamicCast_AsRGame_Player_Controller_1;    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerId_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_FinishedWaitingForPlayers) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_FinishedWaitingForPlayers");
static_assert(sizeof(BP_DungeonGameMode_C_FinishedWaitingForPlayers) == 0x000098, "Wrong size on BP_DungeonGameMode_C_FinishedWaitingForPlayers");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, Temp_int_Variable) == 0x000000, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, K2Node_DynamicCast_AsRGame_Player_Controller) == 0x000010, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::K2Node_DynamicCast_AsRGame_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, K2Node_DynamicCast_AsRPlayer_State) == 0x000020, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::K2Node_DynamicCast_AsRPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_GetOverworldManager_ReturnValue) == 0x000030, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_GetOverworldManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_GetCurrentNodeId_ReturnValue) == 0x000048, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_GetCurrentNodeId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_SelectInt_ReturnValue) == 0x000054, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_Not_PreBool_ReturnValue_1) == 0x000058, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, Temp_int_Variable_1) == 0x00005C, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_GetRGameState_ReturnValue) == 0x000060, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_GetRGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_GetPlayerController_ReturnValue_1) == 0x000068, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, K2Node_DynamicCast_AsRGame_Player_Controller_1) == 0x000070, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::K2Node_DynamicCast_AsRGame_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_GetPlayerId_ReturnValue) == 0x00007C, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_GetPlayerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_Add_IntInt_ReturnValue_2) == 0x000084, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_GetGameState_ReturnValue_1) == 0x000088, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_FinishedWaitingForPlayers, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000094, "Member 'BP_DungeonGameMode_C_FinishedWaitingForPlayers::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.Fail_2EB2ADF74DF25EBBAFD42B8BBC2DF16D
// 0x0010 (0x0010 - 0x0000)
struct BP_DungeonGameMode_C_Fail_2EB2ADF74DF25EBBAFD42B8BBC2DF16D final
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_Fail_2EB2ADF74DF25EBBAFD42B8BBC2DF16D) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_Fail_2EB2ADF74DF25EBBAFD42B8BBC2DF16D");
static_assert(sizeof(BP_DungeonGameMode_C_Fail_2EB2ADF74DF25EBBAFD42B8BBC2DF16D) == 0x000010, "Wrong size on BP_DungeonGameMode_C_Fail_2EB2ADF74DF25EBBAFD42B8BBC2DF16D");
static_assert(offsetof(BP_DungeonGameMode_C_Fail_2EB2ADF74DF25EBBAFD42B8BBC2DF16D, Error) == 0x000000, "Member 'BP_DungeonGameMode_C_Fail_2EB2ADF74DF25EBBAFD42B8BBC2DF16D::Error' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.ExecuteUbergraph_BP_DungeonGameMode
// 0x01B0 (0x01B0 - 0x0000)
struct BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USPStartSessionBlueprintProxy*          CallFunc_CreateStartSessionProxyObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARGameState*                            K2Node_DynamicCast_AsRGame_State;                  // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARGamePlayerController*                 K2Node_Event_GamePlayerController_1;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateWaitingForPlayersStatus_IsDone;     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 K2Node_Event_GamePlayerController;                 // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Error;                          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_1;     // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 K2Node_CustomEvent_VotingPlayer;                   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& Error)>   K2Node_CreateDelegate_OutputDelegate_2;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumPlayerStates_ReturnValue;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting_1; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 K2Node_Event_VotingPlayer;                         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 K2Node_DynamicCast_AsRGame_Player_Controller;      // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInUngluArena_ReturnValue;               // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLobby_ReturnValue;                    // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_163[0x5];                                      // 0x0163(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Error_1;                        // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetAliveControllersArray_ReturnValue;     // 0x0180(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& Error)>   K2Node_CreateDelegate_OutputDelegate_4;            // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode");
static_assert(sizeof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode) == 0x0001B0, "Wrong size on BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, EntryPoint) == 0x000000, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, Temp_string_Variable) == 0x000008, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_CreateStartSessionProxyObject_ReturnValue) == 0x000028, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_CreateStartSessionProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_GetGameState_ReturnValue) == 0x000050, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_DynamicCast_AsRGame_State) == 0x000058, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_DynamicCast_AsRGame_State' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_GetRGameState_ReturnValue) == 0x000068, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_GetRGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_CreateDelegate_OutputDelegate_1) == 0x000070, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_Event_GamePlayerController_1) == 0x000080, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_Event_GamePlayerController_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_UpdateWaitingForPlayersStatus_IsDone) == 0x000088, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_UpdateWaitingForPlayersStatus_IsDone' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000089, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_Event_GamePlayerController) == 0x000090, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_Event_GamePlayerController' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_CustomEvent_Error) == 0x000098, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_CustomEvent_Error' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_FTrunc_ReturnValue) == 0x0000A8, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_K2_IsTimerActiveHandle_ReturnValue_1) == 0x0000AC, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_K2_IsTimerActiveHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_CustomEvent_VotingPlayer) == 0x0000B0, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_CustomEvent_VotingPlayer' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B9, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000BC, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000CC, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting) == 0x0000DC, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000E0, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000E8, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_GetNumPlayerStates_ReturnValue) == 0x0000F0, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_GetNumPlayerStates_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting_1) == 0x0000F4, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F9, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000100, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_BooleanAND_ReturnValue) == 0x000108, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_SafeDivide_ReturnValue) == 0x000110, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000118, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_BooleanAND_ReturnValue_1) == 0x000119, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_Event_VotingPlayer) == 0x000120, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_Event_VotingPlayer' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, Temp_int_Variable) == 0x000128, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_GetPlayerController_ReturnValue) == 0x000130, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_IsValid_ReturnValue_1) == 0x000138, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_DynamicCast_AsRGame_Player_Controller) == 0x000140, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_DynamicCast_AsRGame_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000149, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_Add_IntInt_ReturnValue) == 0x00014C, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_IsStandalone_ReturnValue) == 0x000150, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_GetOverworldManager_ReturnValue) == 0x000158, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_GetOverworldManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_IsValid_ReturnValue_2) == 0x000160, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_IsInUngluArena_ReturnValue) == 0x000161, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_IsInUngluArena_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_IsInLobby_ReturnValue) == 0x000162, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_IsInLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_CustomEvent_Error_1) == 0x000168, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_CustomEvent_Error_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_Not_PreBool_ReturnValue_2) == 0x000178, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_GetAliveControllersArray_ReturnValue) == 0x000180, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_GetAliveControllersArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_Array_Length_ReturnValue) == 0x000190, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000194, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, K2Node_CreateDelegate_OutputDelegate_4) == 0x000198, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode, CallFunc_BooleanAND_ReturnValue_2) == 0x0001A8, "Member 'BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.BroadcastOnVoteToProceedTimerTick
// 0x0060 (0x0060 - 0x0000)
struct BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldClearVotesAndTimers_DidClear;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumPlayerStates_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 K2Node_DynamicCast_AsRGame_Player_Controller;      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick");
static_assert(sizeof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick) == 0x000060, "Wrong size on BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, Temp_int_Variable) == 0x000000, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_ShouldClearVotesAndTimers_DidClear) == 0x000004, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_ShouldClearVotesAndTimers_DidClear' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting) == 0x000008, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_GetNumPlayerStates_ReturnValue) == 0x00000C, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_GetNumPlayerStates_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_SafeDivide_ReturnValue) == 0x000028, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, Temp_int_Variable_1) == 0x000030, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000034, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, K2Node_DynamicCast_AsRGame_Player_Controller) == 0x000048, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::K2Node_DynamicCast_AsRGame_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000051, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'BP_DungeonGameMode_C_BroadcastOnVoteToProceedTimerTick::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.Broadcast On Vote To Proceed
// 0x0038 (0x0038 - 0x0000)
struct BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 K2Node_DynamicCast_AsRGame_Player_Controller;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumPlayerControllers_ReturnValue;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed) == 0x000008, "Wrong alignment on BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed");
static_assert(sizeof(BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed) == 0x000038, "Wrong size on BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed");
static_assert(offsetof(BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed, Temp_int_Variable) == 0x000000, "Member 'BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed, K2Node_DynamicCast_AsRGame_Player_Controller) == 0x000018, "Member 'BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed::K2Node_DynamicCast_AsRGame_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000021, "Member 'BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed, CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting) == 0x000028, "Member 'BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed::CallFunc_Get_Num_Players_Waiting_NumPlayersWaiting' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed, CallFunc_FTrunc_ReturnValue) == 0x00002C, "Member 'BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed, CallFunc_GetNumPlayerControllers_ReturnValue) == 0x000030, "Member 'BP_DungeonGameMode_C_Broadcast_On_Vote_To_Proceed::CallFunc_GetNumPlayerControllers_ReturnValue' has a wrong offset!");

}

