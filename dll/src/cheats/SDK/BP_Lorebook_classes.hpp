#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lorebook

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lorebook.BP_Lorebook_C
// 0x0068 (0x0318 - 0x02B0)
class ABP_Lorebook_C final : public ARPingableActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDMActorProximityBoxComponent*          DMActorProximityBox;                               // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       IndicatorWidget;                                   // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   InteractableMesh;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FText                                   Header_Text;                                       // 0x02E0(0x0010)(Edit, BlueprintVisible)
	class FText                                   Description_Text;                                  // 0x02F0(0x0010)(Edit, BlueprintVisible)
	bool                                          HasInteracted;                                     // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Item_Description;                                  // 0x0308(0x0010)(Edit, BlueprintVisible)

public:
	void BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature(class AActor* Actor);
	void BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature(class AActor* Actor);
	bool CanInteract(class APlayerController* Controller);
	void ExecuteUbergraph_BP_Lorebook(int32 EntryPoint);
	void OnFocus(class APlayerController* Controller);
	void OnFocusGone(class APlayerController* Controller);
	void OnInteract(class APlayerController* Controller);
	void ReceiveBeginPlay();
	void ToggleInteractionIndicatorVisibility(class AActor* InteractingActor, const bool NewVisible);

	class FText GetInteractableAlternativeDescription() const;
	int32 GetInteractableCost() const;
	class FText GetInteractableCostCurrencyType() const;
	class FText GetInteractableDescription() const;
	class FText GetInteractableName() const;
	class FText GetInteractableSubHeader() const;
	class UWidgetComponent* GetInteractionIndicatorWidget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lorebook_C">();
	}
	static class ABP_Lorebook_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lorebook_C>();
	}
};
static_assert(alignof(ABP_Lorebook_C) == 0x000008, "Wrong alignment on ABP_Lorebook_C");
static_assert(sizeof(ABP_Lorebook_C) == 0x000318, "Wrong size on ABP_Lorebook_C");
static_assert(offsetof(ABP_Lorebook_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_Lorebook_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Lorebook_C, DMActorProximityBox) == 0x0002B8, "Member 'ABP_Lorebook_C::DMActorProximityBox' has a wrong offset!");
static_assert(offsetof(ABP_Lorebook_C, IndicatorWidget) == 0x0002C0, "Member 'ABP_Lorebook_C::IndicatorWidget' has a wrong offset!");
static_assert(offsetof(ABP_Lorebook_C, PointLight) == 0x0002C8, "Member 'ABP_Lorebook_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Lorebook_C, InteractableMesh) == 0x0002D0, "Member 'ABP_Lorebook_C::InteractableMesh' has a wrong offset!");
static_assert(offsetof(ABP_Lorebook_C, StaticMesh) == 0x0002D8, "Member 'ABP_Lorebook_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Lorebook_C, Header_Text) == 0x0002E0, "Member 'ABP_Lorebook_C::Header_Text' has a wrong offset!");
static_assert(offsetof(ABP_Lorebook_C, Description_Text) == 0x0002F0, "Member 'ABP_Lorebook_C::Description_Text' has a wrong offset!");
static_assert(offsetof(ABP_Lorebook_C, HasInteracted) == 0x000300, "Member 'ABP_Lorebook_C::HasInteracted' has a wrong offset!");
static_assert(offsetof(ABP_Lorebook_C, Item_Description) == 0x000308, "Member 'ABP_Lorebook_C::Item_Description' has a wrong offset!");

}

