#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DungeonGameMode

#include "Basic.hpp"

#include "BP_DungeonGameMode_classes.hpp"
#include "BP_DungeonGameMode_parameters.hpp"


namespace SDK
{

// Function BP_DungeonGameMode.BP_DungeonGameMode_C.VoteToProceedStartTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_DungeonGameMode_C::VoteToProceedStartTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "VoteToProceedStartTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.VoteToProceedShortcutBP
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARGamePlayerController*           VotingPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DungeonGameMode_C::VoteToProceedShortcutBP(class ARGamePlayerController* VotingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "VoteToProceedShortcutBP");

	Params::BP_DungeonGameMode_C_VoteToProceedShortcutBP Parms{};

	Parms.VotingPlayer = VotingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.VoteToProceedShortcut
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARGamePlayerController*           VotingPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DungeonGameMode_C::VoteToProceedShortcut(class ARGamePlayerController* VotingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "VoteToProceedShortcut");

	Params::BP_DungeonGameMode_C_VoteToProceedShortcut Parms{};

	Parms.VotingPlayer = VotingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.VoteToProceedPortalBP
// (BlueprintCallable, BlueprintEvent)

void ABP_DungeonGameMode_C::VoteToProceedPortalBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "VoteToProceedPortalBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.VoteToProceedPortal
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DungeonGameMode_C::VoteToProceedPortal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "VoteToProceedPortal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.UpdateWaitingForPlayersStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsDone                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DungeonGameMode_C::UpdateWaitingForPlayersStatus(bool* IsDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "UpdateWaitingForPlayersStatus");

	Params::BP_DungeonGameMode_C_UpdateWaitingForPlayersStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDone != nullptr)
		*IsDone = Parms.IsDone;
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.UpdateWaitingForPlayersEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_DungeonGameMode_C::UpdateWaitingForPlayersEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "UpdateWaitingForPlayersEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.Success_2EB2ADF74DF25EBBAFD42B8BBC2DF16D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_DungeonGameMode_C::Success_2EB2ADF74DF25EBBAFD42B8BBC2DF16D(const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "Success_2EB2ADF74DF25EBBAFD42B8BBC2DF16D");

	Params::BP_DungeonGameMode_C_Success_2EB2ADF74DF25EBBAFD42B8BBC2DF16D Parms{};

	Parms.Error = std::move(Error);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.StopWaitingForPlayer
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARGamePlayerController*           GamePlayerController                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DungeonGameMode_C::StopWaitingForPlayer(class ARGamePlayerController* GamePlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "StopWaitingForPlayer");

	Params::BP_DungeonGameMode_C_StopWaitingForPlayer Parms{};

	Parms.GamePlayerController = GamePlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.StartWaitingForPlayers
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARGamePlayerController*           GamePlayerController                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DungeonGameMode_C::StartWaitingForPlayers(class ARGamePlayerController* GamePlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "StartWaitingForPlayers");

	Params::BP_DungeonGameMode_C_StartWaitingForPlayers Parms{};

	Parms.GamePlayerController = GamePlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.ShouldClearVotesAndTimers
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   DidClear                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DungeonGameMode_C::ShouldClearVotesAndTimers(bool* DidClear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "ShouldClearVotesAndTimers");

	Params::BP_DungeonGameMode_C_ShouldClearVotesAndTimers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DidClear != nullptr)
		*DidClear = Parms.DidClear;
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.SetPrereleaseSaveGameDataFlag
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_DungeonGameMode_C::SetPrereleaseSaveGameDataFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "SetPrereleaseSaveGameDataFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.SetDemoSaveGameDataFlag
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DungeonGameMode_C::SetDemoSaveGameDataFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "SetDemoSaveGameDataFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.ReevaluateDifficultyCoefficient
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_DungeonGameMode_C::ReevaluateDifficultyCoefficient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "ReevaluateDifficultyCoefficient");

	Params::BP_DungeonGameMode_C_ReevaluateDifficultyCoefficient Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DungeonGameMode_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.OnStartRun
// (BlueprintCallable, BlueprintEvent)

void ABP_DungeonGameMode_C::OnStartRun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "OnStartRun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.Get Num Players Waiting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  NumPlayersWaiting                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DungeonGameMode_C::Get_Num_Players_Waiting(int32* NumPlayersWaiting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "Get Num Players Waiting");

	Params::BP_DungeonGameMode_C_Get_Num_Players_Waiting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NumPlayersWaiting != nullptr)
		*NumPlayersWaiting = Parms.NumPlayersWaiting;
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.FinishWaitingForPlayers
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DungeonGameMode_C::FinishWaitingForPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "FinishWaitingForPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.FinishWaiting
// (BlueprintCallable, BlueprintEvent)

void ABP_DungeonGameMode_C::FinishWaiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "FinishWaiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.FinishedWaitingForPlayers
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_DungeonGameMode_C::FinishedWaitingForPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "FinishedWaitingForPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.Fail_2EB2ADF74DF25EBBAFD42B8BBC2DF16D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_DungeonGameMode_C::Fail_2EB2ADF74DF25EBBAFD42B8BBC2DF16D(const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "Fail_2EB2ADF74DF25EBBAFD42B8BBC2DF16D");

	Params::BP_DungeonGameMode_C_Fail_2EB2ADF74DF25EBBAFD42B8BBC2DF16D Parms{};

	Parms.Error = std::move(Error);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.ExecuteUbergraph_BP_DungeonGameMode
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DungeonGameMode_C::ExecuteUbergraph_BP_DungeonGameMode(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "ExecuteUbergraph_BP_DungeonGameMode");

	Params::BP_DungeonGameMode_C_ExecuteUbergraph_BP_DungeonGameMode Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.ClearVoteTimer
// (Event, Public, BlueprintEvent)

void ABP_DungeonGameMode_C::ClearVoteTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "ClearVoteTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.BroadcastOnVoteToProceedTimerTick
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DungeonGameMode_C::BroadcastOnVoteToProceedTimerTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "BroadcastOnVoteToProceedTimerTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DungeonGameMode.BP_DungeonGameMode_C.Broadcast On Vote To Proceed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DungeonGameMode_C::Broadcast_On_Vote_To_Proceed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DungeonGameMode_C", "Broadcast On Vote To Proceed");

	UObject::ProcessEvent(Func, nullptr);
}

}

