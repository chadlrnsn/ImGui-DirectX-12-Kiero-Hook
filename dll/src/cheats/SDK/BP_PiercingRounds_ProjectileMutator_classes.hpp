#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PiercingRounds_ProjectileMutator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PiercingRounds_ProjectileMutator.BP_PiercingRounds_ProjectileMutator_C
// 0x0020 (0x00F0 - 0x00D0)
class UBP_PiercingRounds_ProjectileMutator_C final : public URGProjectileMutatorScript
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         PierceCount;                                       // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PierceMultiplierPerHit;                            // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentPierceMultiplier;                           // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PiercingRounds_ProjectileMutator(int32 EntryPoint);
	class FText GetMutatorDescription();
	void K2_ActivateScript();
	void OnProjectilePierce(class ARProjectileBase* Projectile);

	class FText GetDescription() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PiercingRounds_ProjectileMutator_C">();
	}
	static class UBP_PiercingRounds_ProjectileMutator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PiercingRounds_ProjectileMutator_C>();
	}
};
static_assert(alignof(UBP_PiercingRounds_ProjectileMutator_C) == 0x000008, "Wrong alignment on UBP_PiercingRounds_ProjectileMutator_C");
static_assert(sizeof(UBP_PiercingRounds_ProjectileMutator_C) == 0x0000F0, "Wrong size on UBP_PiercingRounds_ProjectileMutator_C");
static_assert(offsetof(UBP_PiercingRounds_ProjectileMutator_C, UberGraphFrame) == 0x0000D0, "Member 'UBP_PiercingRounds_ProjectileMutator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PiercingRounds_ProjectileMutator_C, PierceCount) == 0x0000D8, "Member 'UBP_PiercingRounds_ProjectileMutator_C::PierceCount' has a wrong offset!");
static_assert(offsetof(UBP_PiercingRounds_ProjectileMutator_C, PierceMultiplierPerHit) == 0x0000E0, "Member 'UBP_PiercingRounds_ProjectileMutator_C::PierceMultiplierPerHit' has a wrong offset!");
static_assert(offsetof(UBP_PiercingRounds_ProjectileMutator_C, CurrentPierceMultiplier) == 0x0000E8, "Member 'UBP_PiercingRounds_ProjectileMutator_C::CurrentPierceMultiplier' has a wrong offset!");

}

