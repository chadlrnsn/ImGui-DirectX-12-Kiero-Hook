#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_OffScreenIndication_Door

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Widget_OffScreenIndication_Door.Widget_OffScreenIndication_Door_C.ExecuteUbergraph_Widget_OffScreenIndication_Door
// 0x0010 (0x0010 - 0x0000)
struct Widget_OffScreenIndication_Door_C_ExecuteUbergraph_Widget_OffScreenIndication_Door final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_OffScreenIndication_Door_C_ExecuteUbergraph_Widget_OffScreenIndication_Door) == 0x000008, "Wrong alignment on Widget_OffScreenIndication_Door_C_ExecuteUbergraph_Widget_OffScreenIndication_Door");
static_assert(sizeof(Widget_OffScreenIndication_Door_C_ExecuteUbergraph_Widget_OffScreenIndication_Door) == 0x000010, "Wrong size on Widget_OffScreenIndication_Door_C_ExecuteUbergraph_Widget_OffScreenIndication_Door");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_ExecuteUbergraph_Widget_OffScreenIndication_Door, EntryPoint) == 0x000000, "Member 'Widget_OffScreenIndication_Door_C_ExecuteUbergraph_Widget_OffScreenIndication_Door::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_ExecuteUbergraph_Widget_OffScreenIndication_Door, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'Widget_OffScreenIndication_Door_C_ExecuteUbergraph_Widget_OffScreenIndication_Door::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function Widget_OffScreenIndication_Door.Widget_OffScreenIndication_Door_C.UpdateTarget
// 0x0040 (0x0040 - 0x0000)
struct Widget_OffScreenIndication_Door_C_UpdateTarget final
{
public:
	class AActor*                                 TargetActor_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DangerousRadius;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CloseRadius;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CriticalDanger;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DangerousLocation;                                 // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_OffScreenIndication_Door_C_UpdateTarget) == 0x000008, "Wrong alignment on Widget_OffScreenIndication_Door_C_UpdateTarget");
static_assert(sizeof(Widget_OffScreenIndication_Door_C_UpdateTarget) == 0x000040, "Wrong size on Widget_OffScreenIndication_Door_C_UpdateTarget");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTarget, TargetActor_0) == 0x000000, "Member 'Widget_OffScreenIndication_Door_C_UpdateTarget::TargetActor_0' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTarget, DangerousRadius) == 0x000008, "Member 'Widget_OffScreenIndication_Door_C_UpdateTarget::DangerousRadius' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTarget, CloseRadius) == 0x000010, "Member 'Widget_OffScreenIndication_Door_C_UpdateTarget::CloseRadius' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTarget, CriticalDanger) == 0x000018, "Member 'Widget_OffScreenIndication_Door_C_UpdateTarget::CriticalDanger' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTarget, DangerousLocation) == 0x000020, "Member 'Widget_OffScreenIndication_Door_C_UpdateTarget::DangerousLocation' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTarget, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000038, "Member 'Widget_OffScreenIndication_Door_C_UpdateTarget::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function Widget_OffScreenIndication_Door.Widget_OffScreenIndication_Door_C.UpdateTransform
// 0x01B8 (0x01B8 - 0x0000)
struct Widget_OffScreenIndication_Door_C_UpdateTransform final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCrosshairWorldTransform_WorldLocation; // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCrosshairWorldTransform_WorldDirection; // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_OffScreenIndication_Door_C_UpdateTransform) == 0x000008, "Wrong alignment on Widget_OffScreenIndication_Door_C_UpdateTransform");
static_assert(sizeof(Widget_OffScreenIndication_Door_C_UpdateTransform) == 0x0001B8, "Wrong size on Widget_OffScreenIndication_Door_C_UpdateTransform");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, TargetLocation) == 0x000000, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::TargetLocation' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x000020, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000030, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000050, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000058, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_GetOwningPlayerPawn_ReturnValue_1) == 0x000068, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_GetOwningPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_GetCrosshairWorldTransform_WorldLocation) == 0x000070, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_GetCrosshairWorldTransform_WorldLocation' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_GetCrosshairWorldTransform_WorldDirection) == 0x000088, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_GetCrosshairWorldTransform_WorldDirection' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A0, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B8, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_Normal_ReturnValue) == 0x0000E8, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_Normal_ReturnValue_1) == 0x000100, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000118, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000130, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_BreakRotator_Roll) == 0x000148, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_BreakRotator_Pitch) == 0x00014C, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_BreakRotator_Yaw) == 0x000150, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_Normal_ReturnValue_2) == 0x000158, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000170, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_BreakRotator_Roll_1) == 0x000188, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_BreakRotator_Pitch_1) == 0x00018C, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_BreakRotator_Yaw_1) == 0x000190, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000198, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0001A0, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0001A8, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_OffScreenIndication_Door_C_UpdateTransform, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x0001B0, "Member 'Widget_OffScreenIndication_Door_C_UpdateTransform::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

}

