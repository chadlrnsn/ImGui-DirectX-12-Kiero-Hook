#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillTree

#include "Basic.hpp"

#include "BP_SkillTree_classes.hpp"
#include "BP_SkillTree_parameters.hpp"


namespace SDK
{

// Function BP_SkillTree.BP_SkillTree_C.CanInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_SkillTree_C::CanInteract(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "CanInteract");

	Params::BP_SkillTree_C_CanInteract Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillTree.BP_SkillTree_C.ExecuteUbergraph_BP_SkillTree
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkillTree_C::ExecuteUbergraph_BP_SkillTree(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "ExecuteUbergraph_BP_SkillTree");

	Params::BP_SkillTree_C_ExecuteUbergraph_BP_SkillTree Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillTree.BP_SkillTree_C.GetPercentPointsAssigned
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Percent                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkillTree_C::GetPercentPointsAssigned(double* Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "GetPercentPointsAssigned");

	Params::BP_SkillTree_C_GetPercentPointsAssigned Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Percent != nullptr)
		*Percent = Parms.Percent;
}


// Function BP_SkillTree.BP_SkillTree_C.OnFocus
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkillTree_C::OnFocus(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "OnFocus");

	Params::BP_SkillTree_C_OnFocus Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillTree.BP_SkillTree_C.OnFocusGone
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkillTree_C::OnFocusGone(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "OnFocusGone");

	Params::BP_SkillTree_C_OnFocusGone Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillTree.BP_SkillTree_C.OnInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkillTree_C::OnInteract(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "OnInteract");

	Params::BP_SkillTree_C_OnInteract Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillTree.BP_SkillTree_C.OnPlayerJoined_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkillTree_C::OnPlayerJoined_Event(class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "OnPlayerJoined_Event");

	Params::BP_SkillTree_C_OnPlayerJoined_Event Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillTree.BP_SkillTree_C.OnSkillTreeUpdated
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumPointsAssigned                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumMaxPoints                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkillTree_C::OnSkillTreeUpdated(int32 NumPointsAssigned, int32 NumMaxPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "OnSkillTreeUpdated");

	Params::BP_SkillTree_C_OnSkillTreeUpdated Parms{};

	Parms.NumPointsAssigned = NumPointsAssigned;
	Parms.NumMaxPoints = NumMaxPoints;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillTree.BP_SkillTree_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SkillTree_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillTree.BP_SkillTree_C.ToggleInteractionIndicatorVisibility
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const bool                              NewVisible                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkillTree_C::ToggleInteractionIndicatorVisibility(class AActor* InteractingActor, const bool NewVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "ToggleInteractionIndicatorVisibility");

	Params::BP_SkillTree_C_ToggleInteractionIndicatorVisibility Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.NewVisible = NewVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillTree.BP_SkillTree_C.UpdateVisuals
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Percentage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkillTree_C::UpdateVisuals(double Percentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "UpdateVisuals");

	Params::BP_SkillTree_C_UpdateVisuals Parms{};

	Parms.Percentage = Percentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillTree.BP_SkillTree_C.GetInteractableAlternativeDescription
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_SkillTree_C::GetInteractableAlternativeDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "GetInteractableAlternativeDescription");

	Params::BP_SkillTree_C_GetInteractableAlternativeDescription Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillTree.BP_SkillTree_C.GetInteractableCost
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_SkillTree_C::GetInteractableCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "GetInteractableCost");

	Params::BP_SkillTree_C_GetInteractableCost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillTree.BP_SkillTree_C.GetInteractableCostCurrencyType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_SkillTree_C::GetInteractableCostCurrencyType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "GetInteractableCostCurrencyType");

	Params::BP_SkillTree_C_GetInteractableCostCurrencyType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillTree.BP_SkillTree_C.GetInteractableDescription
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_SkillTree_C::GetInteractableDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "GetInteractableDescription");

	Params::BP_SkillTree_C_GetInteractableDescription Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillTree.BP_SkillTree_C.GetInteractableName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_SkillTree_C::GetInteractableName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "GetInteractableName");

	Params::BP_SkillTree_C_GetInteractableName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillTree.BP_SkillTree_C.GetInteractableSubHeader
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_SkillTree_C::GetInteractableSubHeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "GetInteractableSubHeader");

	Params::BP_SkillTree_C_GetInteractableSubHeader Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillTree.BP_SkillTree_C.GetInteractionIndicatorWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidgetComponent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidgetComponent* ABP_SkillTree_C::GetInteractionIndicatorWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "GetInteractionIndicatorWidget");

	Params::BP_SkillTree_C_GetInteractionIndicatorWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillTree.BP_SkillTree_C.GetRadarIconColor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor ABP_SkillTree_C::GetRadarIconColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "GetRadarIconColor");

	Params::BP_SkillTree_C_GetRadarIconColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillTree.BP_SkillTree_C.GetRadarIconSize
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D ABP_SkillTree_C::GetRadarIconSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "GetRadarIconSize");

	Params::BP_SkillTree_C_GetRadarIconSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillTree.BP_SkillTree_C.GetRadarObjectIcon
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USlateBrushAsset*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class USlateBrushAsset* ABP_SkillTree_C::GetRadarObjectIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "GetRadarObjectIcon");

	Params::BP_SkillTree_C_GetRadarObjectIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillTree.BP_SkillTree_C.ShouldShowOnRadar
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_SkillTree_C::ShouldShowOnRadar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillTree_C", "ShouldShowOnRadar");

	Params::BP_SkillTree_C_ShouldShowOnRadar Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

