#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemySpawnManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EnemySpawnManager.BP_EnemySpawnManager_C
// 0x0050 (0x05D8 - 0x0588)
class ABP_EnemySpawnManager_C final : public AREnemySpawnManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0588(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_EnemySpawnDecoy_C*>          PooledSpawnBPs;                                    // 0x0598(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          InvalidPooledSpawnBPFound;                         // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OutlineThreshold;                                  // 0x05AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   SoftFrenziedMutatorRef;                            // 0x05B0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void UpdateEnemyOutline(class ARPawnBase* EnemyPawn, bool renderDepth);
	void ReceiveOnEnemySpawnPrimed(class UClass* EnemyClass, float SpawnDuration, const struct FTransform& SpawnTransform);
	void ReceiveBeginPlay();
	void PopulatePool(int32 Num);
	void OnSpawned(class ARNPCPawnBase* EnemyPawn);
	void OnKilled(class ARNPCPawnBase* EnemyPawn);
	void GetVFXAssets(class UMaterialInstance** DecoyMaterial, class UNiagaraSystem** NiagaraSystemAsset);
	void GetPooledSpawnBP(class ABP_EnemySpawnDecoy_C** SpawnBP);
	void GetEliteVFXAssets(class UNiagaraSystem** NiagaraSystemAsset);
	void ExecuteUbergraph_BP_EnemySpawnManager(int32 EntryPoint);
	void CheckOutlineThresholdReached();
	void CheckLastEnemyOfEncounter();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EnemySpawnManager_C">();
	}
	static class ABP_EnemySpawnManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EnemySpawnManager_C>();
	}
};
static_assert(alignof(ABP_EnemySpawnManager_C) == 0x000008, "Wrong alignment on ABP_EnemySpawnManager_C");
static_assert(sizeof(ABP_EnemySpawnManager_C) == 0x0005D8, "Wrong size on ABP_EnemySpawnManager_C");
static_assert(offsetof(ABP_EnemySpawnManager_C, UberGraphFrame) == 0x000588, "Member 'ABP_EnemySpawnManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EnemySpawnManager_C, DefaultSceneRoot) == 0x000590, "Member 'ABP_EnemySpawnManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_EnemySpawnManager_C, PooledSpawnBPs) == 0x000598, "Member 'ABP_EnemySpawnManager_C::PooledSpawnBPs' has a wrong offset!");
static_assert(offsetof(ABP_EnemySpawnManager_C, InvalidPooledSpawnBPFound) == 0x0005A8, "Member 'ABP_EnemySpawnManager_C::InvalidPooledSpawnBPFound' has a wrong offset!");
static_assert(offsetof(ABP_EnemySpawnManager_C, OutlineThreshold) == 0x0005AC, "Member 'ABP_EnemySpawnManager_C::OutlineThreshold' has a wrong offset!");
static_assert(offsetof(ABP_EnemySpawnManager_C, SoftFrenziedMutatorRef) == 0x0005B0, "Member 'ABP_EnemySpawnManager_C::SoftFrenziedMutatorRef' has a wrong offset!");

}

