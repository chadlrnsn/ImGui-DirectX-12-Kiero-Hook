#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UnlockAllShotgunMods_Challenge

#include "Basic.hpp"

#include "BP_UnlockAllShotgunMods_Challenge_classes.hpp"
#include "BP_UnlockAllShotgunMods_Challenge_parameters.hpp"


namespace SDK
{

// Function BP_UnlockAllShotgunMods_Challenge.BP_UnlockAllShotgunMods_Challenge_C.CheckCompletedChallenges
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  CompletedChallenges                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UnlockAllShotgunMods_Challenge_C::CheckCompletedChallenges(int32* CompletedChallenges)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UnlockAllShotgunMods_Challenge_C", "CheckCompletedChallenges");

	Params::BP_UnlockAllShotgunMods_Challenge_C_CheckCompletedChallenges Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CompletedChallenges != nullptr)
		*CompletedChallenges = Parms.CompletedChallenges;
}


// Function BP_UnlockAllShotgunMods_Challenge.BP_UnlockAllShotgunMods_Challenge_C.ExecuteUbergraph_BP_UnlockAllShotgunMods_Challenge
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UnlockAllShotgunMods_Challenge_C::ExecuteUbergraph_BP_UnlockAllShotgunMods_Challenge(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UnlockAllShotgunMods_Challenge_C", "ExecuteUbergraph_BP_UnlockAllShotgunMods_Challenge");

	Params::BP_UnlockAllShotgunMods_Challenge_C_ExecuteUbergraph_BP_UnlockAllShotgunMods_Challenge Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UnlockAllShotgunMods_Challenge.BP_UnlockAllShotgunMods_Challenge_C.OnApplicableRunStarted
// (Event, Public, BlueprintEvent)

void UBP_UnlockAllShotgunMods_Challenge_C::OnApplicableRunStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UnlockAllShotgunMods_Challenge_C", "OnApplicableRunStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UnlockAllShotgunMods_Challenge.BP_UnlockAllShotgunMods_Challenge_C.OnChallengeCompleted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRChallenge&               Challenge                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_UnlockAllShotgunMods_Challenge_C::OnChallengeCompleted(const struct FRChallenge& Challenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UnlockAllShotgunMods_Challenge_C", "OnChallengeCompleted");

	Params::BP_UnlockAllShotgunMods_Challenge_C_OnChallengeCompleted Parms{};

	Parms.Challenge = std::move(Challenge);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UnlockAllShotgunMods_Challenge.BP_UnlockAllShotgunMods_Challenge_C.OnRunFinished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RunFailed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UnlockAllShotgunMods_Challenge_C::OnRunFinished(bool RunFailed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UnlockAllShotgunMods_Challenge_C", "OnRunFinished");

	Params::BP_UnlockAllShotgunMods_Challenge_C_OnRunFinished Parms{};

	Parms.RunFailed = RunFailed;

	UObject::ProcessEvent(Func, &Parms);
}

}

