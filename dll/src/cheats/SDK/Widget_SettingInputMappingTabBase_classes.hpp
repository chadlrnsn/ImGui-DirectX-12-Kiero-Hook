#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_SettingInputMappingTabBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "Widget_SettingTabBase_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_SettingInputMappingTabBase.Widget_SettingInputMappingTabBase_C
// 0x00B0 (0x0388 - 0x02D8)
class UWidget_SettingInputMappingTabBase_C : public UWidget_SettingTabBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Widget_SettingInputMappingTabBase_C; // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsGamepadInput;                                    // 0x02E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInputMappingContext*>           MappableIMCs;                                      // 0x02E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FPlayerKeyMapping                      MappableKey;                                       // 0x02F8(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UInputAction*>                   BlacklistedIAs;                                    // 0x0378(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly)

public:
	void Construct();
	void ExecuteUbergraph_Widget_SettingInputMappingTabBase(int32 EntryPoint);
	void GetEnhancedUserSettings(class UEnhancedInputUserSettings** UserSettings);
	void GetInputMappingsPanelWidget(class UPanelWidget** Result);
	void GetMappableIMCs(TArray<class UInputMappingContext*>* MappableIMCs_0);
	void PopulatePanelWithMappableInputs();
	void Refresh(int32 FocusIndex);
	void RegisterMappableIMCs();
	void ResetSettings();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_SettingInputMappingTabBase_C">();
	}
	static class UWidget_SettingInputMappingTabBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_SettingInputMappingTabBase_C>();
	}
};
static_assert(alignof(UWidget_SettingInputMappingTabBase_C) == 0x000008, "Wrong alignment on UWidget_SettingInputMappingTabBase_C");
static_assert(sizeof(UWidget_SettingInputMappingTabBase_C) == 0x000388, "Wrong size on UWidget_SettingInputMappingTabBase_C");
static_assert(offsetof(UWidget_SettingInputMappingTabBase_C, UberGraphFrame_Widget_SettingInputMappingTabBase_C) == 0x0002D8, "Member 'UWidget_SettingInputMappingTabBase_C::UberGraphFrame_Widget_SettingInputMappingTabBase_C' has a wrong offset!");
static_assert(offsetof(UWidget_SettingInputMappingTabBase_C, IsGamepadInput) == 0x0002E0, "Member 'UWidget_SettingInputMappingTabBase_C::IsGamepadInput' has a wrong offset!");
static_assert(offsetof(UWidget_SettingInputMappingTabBase_C, MappableIMCs) == 0x0002E8, "Member 'UWidget_SettingInputMappingTabBase_C::MappableIMCs' has a wrong offset!");
static_assert(offsetof(UWidget_SettingInputMappingTabBase_C, MappableKey) == 0x0002F8, "Member 'UWidget_SettingInputMappingTabBase_C::MappableKey' has a wrong offset!");
static_assert(offsetof(UWidget_SettingInputMappingTabBase_C, BlacklistedIAs) == 0x000378, "Member 'UWidget_SettingInputMappingTabBase_C::BlacklistedIAs' has a wrong offset!");

}

