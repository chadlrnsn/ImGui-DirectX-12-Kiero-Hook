#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CosmeticWardrobe

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CosmeticWardrobe.BP_CosmeticWardrobe_C
// 0x0070 (0x0320 - 0x02B0)
class ABP_CosmeticWardrobe_C final : public ARPingableActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SuitSKM;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Pivot;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_InteractableIndicator_C*           BPC_InteractableIndicator;                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   HeadSM;                                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Human_Furniture_Cabinet_02;                     // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CachedPlayerController;                            // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWidget_CosmeticsMenu_C*                OutWidget;                                         // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        AddativeRotationTarget;                            // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RotationTimer;                                     // 0x0310(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             VoiceLineDatatable;                                // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyCurrentSaveGameCosmetics();
	bool CanInteract(class APlayerController* Controller);
	void CosmeticPreview(const struct FPlayerCosmeticOption& CosmeticOptionData);
	void CosmeticPreviewEnd(const struct FPlayerCosmeticOption& CosmeticOptionData);
	void ExecuteUbergraph_BP_CosmeticWardrobe(int32 EntryPoint);
	void GetPlayerCurrentPaintJobMaterial(class UMaterialInstance** MaterialInstance);
	void OnBlendOut_775D592C4E557A80499F199E957797F1(class FName NotifyName);
	void OnBlendOut_947F2FB5458A06D17B2B06BA920BCEC0(class FName NotifyName);
	void OnCompleted_775D592C4E557A80499F199E957797F1(class FName NotifyName);
	void OnCompleted_947F2FB5458A06D17B2B06BA920BCEC0(class FName NotifyName);
	void OnCosmeticsApplied_Event(const struct FPlayerCosmeticOption& CosmeticOptionData, class APlayerController* PlayerController);
	void OnCosmeticsPreviewed_Event(const struct FPlayerCosmeticOption& CosmeticOptionData);
	void OnCosmeticsPreviewedEnd_Event(const struct FPlayerCosmeticOption& CosmeticOptionData);
	void OnFocus(class APlayerController* Controller);
	void OnFocusGone(class APlayerController* Controller);
	void OnInteract(class APlayerController* Controller);
	void OnInterrupted_775D592C4E557A80499F199E957797F1(class FName NotifyName);
	void OnInterrupted_947F2FB5458A06D17B2B06BA920BCEC0(class FName NotifyName);
	void OnMenuClosed_Event();
	void OnMouseMove(const struct FVector2D& Movement_Delta);
	void OnNotifyBegin_775D592C4E557A80499F199E957797F1(class FName NotifyName);
	void OnNotifyBegin_947F2FB5458A06D17B2B06BA920BCEC0(class FName NotifyName);
	void OnNotifyEnd_775D592C4E557A80499F199E957797F1(class FName NotifyName);
	void OnNotifyEnd_947F2FB5458A06D17B2B06BA920BCEC0(class FName NotifyName);
	void PlayVoiceLinePreview(const struct FPlayerVoiceSettings& PlayerVoiceSettings);
	void ReceiveBeginPlay();
	void RotateCharacter();
	void SetCameraToWardrobeFocus(bool bFocusWardrobe, float BlendTime, EViewTargetBlendFunction BlendFunc);
	void ToggleInteractionIndicatorVisibility(class AActor* InteractingActor, const bool NewVisible);

	class FText GetInteractableAlternativeDescription() const;
	int32 GetInteractableCost() const;
	class FText GetInteractableCostCurrencyType() const;
	class FText GetInteractableDescription() const;
	class FText GetInteractableName() const;
	class FText GetInteractableSubHeader() const;
	class UWidgetComponent* GetInteractionIndicatorWidget() const;
	struct FLinearColor GetRadarIconColor() const;
	struct FVector2D GetRadarIconSize() const;
	class USlateBrushAsset* GetRadarObjectIcon() const;
	bool ShouldShowOnRadar() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CosmeticWardrobe_C">();
	}
	static class ABP_CosmeticWardrobe_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CosmeticWardrobe_C>();
	}
};
static_assert(alignof(ABP_CosmeticWardrobe_C) == 0x000008, "Wrong alignment on ABP_CosmeticWardrobe_C");
static_assert(sizeof(ABP_CosmeticWardrobe_C) == 0x000320, "Wrong size on ABP_CosmeticWardrobe_C");
static_assert(offsetof(ABP_CosmeticWardrobe_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_CosmeticWardrobe_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, SuitSKM) == 0x0002B8, "Member 'ABP_CosmeticWardrobe_C::SuitSKM' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, Pivot) == 0x0002C0, "Member 'ABP_CosmeticWardrobe_C::Pivot' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, BPC_InteractableIndicator) == 0x0002C8, "Member 'ABP_CosmeticWardrobe_C::BPC_InteractableIndicator' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, HeadSM) == 0x0002D0, "Member 'ABP_CosmeticWardrobe_C::HeadSM' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, SpotLight) == 0x0002D8, "Member 'ABP_CosmeticWardrobe_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, Camera) == 0x0002E0, "Member 'ABP_CosmeticWardrobe_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, SM_Human_Furniture_Cabinet_02) == 0x0002E8, "Member 'ABP_CosmeticWardrobe_C::SM_Human_Furniture_Cabinet_02' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, DefaultSceneRoot) == 0x0002F0, "Member 'ABP_CosmeticWardrobe_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, CachedPlayerController) == 0x0002F8, "Member 'ABP_CosmeticWardrobe_C::CachedPlayerController' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, OutWidget) == 0x000300, "Member 'ABP_CosmeticWardrobe_C::OutWidget' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, AddativeRotationTarget) == 0x000308, "Member 'ABP_CosmeticWardrobe_C::AddativeRotationTarget' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, RotationTimer) == 0x000310, "Member 'ABP_CosmeticWardrobe_C::RotationTimer' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticWardrobe_C, VoiceLineDatatable) == 0x000318, "Member 'ABP_CosmeticWardrobe_C::VoiceLineDatatable' has a wrong offset!");

}

