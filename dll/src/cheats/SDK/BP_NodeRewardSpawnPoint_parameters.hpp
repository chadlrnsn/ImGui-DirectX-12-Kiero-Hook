#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NodeRewardSpawnPoint

#include "Basic.hpp"

#include "RGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.CheckAndUpdateCharmSpawn
// 0x0070 (0x0070 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerState*                          K2Node_DynamicCast_AsRPlayer_State;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetUniqueNetIdString_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRUniqueCharmSpawn                     CallFunc_Array_Get_Item;                           // 0x0048(0x0020)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn) == 0x000008, "Wrong alignment on BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn) == 0x000070, "Wrong size on BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, Controller) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::Controller' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, K2Node_DynamicCast_AsRPlayer_State) == 0x000010, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::K2Node_DynamicCast_AsRPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, CallFunc_GetUniqueNetIdString_ReturnValue) == 0x000020, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::CallFunc_GetUniqueNetIdString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00006A, "Member 'BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.CheckSkillTreePoints
// 0x0020 (0x0020 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints final
{
public:
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints) == 0x000008, "Wrong alignment on BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints) == 0x000020, "Wrong size on BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints, CallFunc_GetFirstLocalGamePlayerController_ReturnValue) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints::CallFunc_GetFirstLocalGamePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000010, "Member 'BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_NodeRewardSpawnPoint_C_CheckSkillTreePoints::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.ExecuteUbergraph_BP_NodeRewardSpawnPoint
// 0x0190 (0x0190 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URMutatorPrimaryAsset*                  CallFunc_GetMutatorPrimaryAsset_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ARPickupableItem* PickedUpItem, int32 PickupCost, class APlayerController* PlayerController)> K2Node_CreateDelegate_OutputDelegate; // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PruneEventNodeRewards_WasPruned;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARLevelGenerator*                       CallFunc_GetLevelManager_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_EncounterRoomPos;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class URMutatorPrimaryAsset* NewPrimaryAsset)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URMutatorPrimaryAsset*                  K2Node_CustomEvent_NewPrimaryAsset;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URMutatorPrimaryAsset*                  K2Node_Event_CharmPrimaryAsset;                    // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCharmPickedUp;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PlayerController;                     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerState*                          K2Node_DynamicCast_AsRPlayer_State;                // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetUniqueNetIdString_ReturnValue;         // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRUniqueCharmSpawn                     K2Node_MakeStruct_RUniqueCharmSpawn;               // 0x00C8(0x0020)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRUniqueCharmSpawn                     CallFunc_Array_Get_Item;                           // 0x0100(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool* RetValue)>               K2Node_CreateDelegate_OutputDelegate_5;            // 0x013C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue_1; // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFCInvokeBlueprintProxy*                CallFunc_CreateInvokeProxyObject_ReturnValue;      // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPickupableItem*                       K2Node_CustomEvent_PickedUpItem;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PickupCost;                     // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController;               // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARGamePlayerController*                 K2Node_DynamicCast_AsRGame_Player_Controller;      // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint) == 0x000008, "Wrong alignment on BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint) == 0x000190, "Wrong size on BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, EntryPoint) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_GetMutatorPrimaryAsset_ReturnValue) == 0x000008, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_GetMutatorPrimaryAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_PruneEventNodeRewards_WasPruned) == 0x000029, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_PruneEventNodeRewards_WasPruned' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_IsServer_ReturnValue) == 0x00002A, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002B, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_GetLevelManager_ReturnValue) == 0x000030, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_GetLevelManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_BooleanOR_ReturnValue) == 0x000038, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_CustomEvent_EncounterRoomPos) == 0x00003C, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_CustomEvent_EncounterRoomPos' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000050, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_CreateDelegate_OutputDelegate_2) == 0x000058, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_CustomEvent_NewPrimaryAsset) == 0x000070, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_CustomEvent_NewPrimaryAsset' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_GetFirstLocalGamePlayerController_ReturnValue) == 0x000080, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_GetFirstLocalGamePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_Event_CharmPrimaryAsset) == 0x000088, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_Event_CharmPrimaryAsset' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_Event_bCharmPickedUp) == 0x000090, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_Event_bCharmPickedUp' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_Event_PlayerController) == 0x000098, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_Event_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_DynamicCast_AsRPlayer_State) == 0x0000A8, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_DynamicCast_AsRPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_IsValid_ReturnValue_2) == 0x0000B1, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_GetUniqueNetIdString_ReturnValue) == 0x0000B8, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_GetUniqueNetIdString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_MakeStruct_RUniqueCharmSpawn) == 0x0000C8, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_MakeStruct_RUniqueCharmSpawn' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000E8, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000F8, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_Array_Get_Item) == 0x000100, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_Not_PreBool_ReturnValue_3) == 0x000125, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_BooleanAND_ReturnValue) == 0x000126, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000127, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_Array_Add_ReturnValue) == 0x000128, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_CreateDelegate_OutputDelegate_4) == 0x00012C, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_CreateDelegate_OutputDelegate_5) == 0x00013C, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_GetFirstLocalGamePlayerController_ReturnValue_1) == 0x000150, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_GetFirstLocalGamePlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_CreateInvokeProxyObject_ReturnValue) == 0x000158, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_CreateInvokeProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_IsValid_ReturnValue_3) == 0x000160, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, CallFunc_Not_PreBool_ReturnValue_4) == 0x000161, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_CustomEvent_PickedUpItem) == 0x000168, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_CustomEvent_PickedUpItem' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_CustomEvent_PickupCost) == 0x000170, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_CustomEvent_PickupCost' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_CustomEvent_PlayerController) == 0x000178, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_DynamicCast_AsRGame_Player_Controller) == 0x000180, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_DynamicCast_AsRGame_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.GetCurrentOverworldNodeRewardClass
// 0x0038 (0x0038 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass final
{
public:
	class UClass*                                 RewardClass;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URNodeData*                             CallFunc_GetCurrentNodeData_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassFromSoftClassPtr_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass) == 0x000008, "Wrong alignment on BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass) == 0x000038, "Wrong size on BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass, RewardClass) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass::RewardClass' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass, CallFunc_GetOverworldManager_ReturnValue) == 0x000008, "Member 'BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass::CallFunc_GetOverworldManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass, CallFunc_GetCurrentNodeData_ReturnValue) == 0x000010, "Member 'BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass::CallFunc_GetCurrentNodeData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x00001A, "Member 'BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass, CallFunc_LoadClassFromSoftClassPtr_ReturnValue) == 0x000020, "Member 'BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass::CallFunc_LoadClassFromSoftClassPtr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass, K2Node_ClassDynamicCast_AsActor) == 0x000028, "Member 'BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass, K2Node_ClassDynamicCast_bSuccess) == 0x000030, "Member 'BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass, CallFunc_IsValidClass_ReturnValue) == 0x000031, "Member 'BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.GetRewardClass
// 0x0078 (0x0078 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_GetRewardClass final
{
public:
	class UClass*                                 RewardClass;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URNodeChoicePrimaryAsset*               K2Node_DynamicCast_AsRNode_Choice_Primary_Asset;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URNodeData*                             CallFunc_GetCurrentNodeData_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassFromSoftClassPtr_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetCurrentOverworldNodeRewardClass_RewardClass; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassFromSoftClassPtr_ReturnValue_1;  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor_1;                 // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue_1;  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_GetRewardClass) == 0x000008, "Wrong alignment on BP_NodeRewardSpawnPoint_C_GetRewardClass");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_GetRewardClass) == 0x000078, "Wrong size on BP_NodeRewardSpawnPoint_C_GetRewardClass");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, RewardClass) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::RewardClass' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_GetOverworldManager_ReturnValue) == 0x000008, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_GetOverworldManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_GetOverworldManager_ReturnValue_1) == 0x000010, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_GetOverworldManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, K2Node_DynamicCast_AsRNode_Choice_Primary_Asset) == 0x000020, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::K2Node_DynamicCast_AsRNode_Choice_Primary_Asset' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_GetCurrentNodeData_ReturnValue) == 0x000030, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_GetCurrentNodeData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_LoadClassFromSoftClassPtr_ReturnValue) == 0x000038, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_LoadClassFromSoftClassPtr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, K2Node_ClassDynamicCast_AsActor) == 0x000048, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, K2Node_ClassDynamicCast_bSuccess) == 0x000050, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_IsValidClass_ReturnValue) == 0x000051, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000052, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_GetCurrentOverworldNodeRewardClass_RewardClass) == 0x000058, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_GetCurrentOverworldNodeRewardClass_RewardClass' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_LoadClassFromSoftClassPtr_ReturnValue_1) == 0x000060, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_LoadClassFromSoftClassPtr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, K2Node_ClassDynamicCast_AsActor_1) == 0x000068, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::K2Node_ClassDynamicCast_AsActor_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, K2Node_ClassDynamicCast_bSuccess_1) == 0x000070, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_IsValidClass_ReturnValue_1) == 0x000071, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_IsValidSoftClassReference_ReturnValue_1) == 0x000072, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_IsValidSoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000073, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_GetRewardClass, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000074, "Member 'BP_NodeRewardSpawnPoint_C_GetRewardClass::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.OnCharmPASet
// 0x0008 (0x0008 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_OnCharmPASet final
{
public:
	class URMutatorPrimaryAsset*                  NewPrimaryAsset;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_OnCharmPASet) == 0x000008, "Wrong alignment on BP_NodeRewardSpawnPoint_C_OnCharmPASet");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_OnCharmPASet) == 0x000008, "Wrong size on BP_NodeRewardSpawnPoint_C_OnCharmPASet");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_OnCharmPASet, NewPrimaryAsset) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_OnCharmPASet::NewPrimaryAsset' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.OnMutatorPickedUp
// 0x0018 (0x0018 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_OnMutatorPickedUp final
{
public:
	class ARPickupableItem*                       PickedUpItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         PickupCost;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_OnMutatorPickedUp) == 0x000008, "Wrong alignment on BP_NodeRewardSpawnPoint_C_OnMutatorPickedUp");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_OnMutatorPickedUp) == 0x000018, "Wrong size on BP_NodeRewardSpawnPoint_C_OnMutatorPickedUp");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_OnMutatorPickedUp, PickedUpItem) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_OnMutatorPickedUp::PickedUpItem' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_OnMutatorPickedUp, PickupCost) == 0x000008, "Member 'BP_NodeRewardSpawnPoint_C_OnMutatorPickedUp::PickupCost' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_OnMutatorPickedUp, PlayerController) == 0x000010, "Member 'BP_NodeRewardSpawnPoint_C_OnMutatorPickedUp::PlayerController' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.PlayerStateIsValid
// 0x0018 (0x0018 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_PlayerStateIsValid final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_PlayerStateIsValid) == 0x000008, "Wrong alignment on BP_NodeRewardSpawnPoint_C_PlayerStateIsValid");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_PlayerStateIsValid) == 0x000018, "Wrong size on BP_NodeRewardSpawnPoint_C_PlayerStateIsValid");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PlayerStateIsValid, IsValid) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_PlayerStateIsValid::IsValid' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PlayerStateIsValid, CallFunc_GetFirstLocalGamePlayerController_ReturnValue) == 0x000008, "Member 'BP_NodeRewardSpawnPoint_C_PlayerStateIsValid::CallFunc_GetFirstLocalGamePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PlayerStateIsValid, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_NodeRewardSpawnPoint_C_PlayerStateIsValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PlayerStateIsValid, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_NodeRewardSpawnPoint_C_PlayerStateIsValid::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.PruneEventNodeRewards
// 0x0030 (0x0030 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards final
{
public:
	bool                                          WasPruned;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URNodeData*                             CallFunc_GetCurrentNodeData_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards) == 0x000008, "Wrong alignment on BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards) == 0x000030, "Wrong size on BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards, WasPruned) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards::WasPruned' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards, CallFunc_GetOverworldManager_ReturnValue) == 0x000008, "Member 'BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards::CallFunc_GetOverworldManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000010, "Member 'BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards, CallFunc_GetOverworldManager_ReturnValue_1) == 0x000018, "Member 'BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards::CallFunc_GetOverworldManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards, CallFunc_GetCurrentNodeData_ReturnValue) == 0x000020, "Member 'BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards::CallFunc_GetCurrentNodeData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.RetrySelectRewardType
// 0x0004 (0x0004 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_RetrySelectRewardType final
{
public:
	int32                                         EncounterRoomPos;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_RetrySelectRewardType) == 0x000004, "Wrong alignment on BP_NodeRewardSpawnPoint_C_RetrySelectRewardType");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_RetrySelectRewardType) == 0x000004, "Wrong size on BP_NodeRewardSpawnPoint_C_RetrySelectRewardType");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RetrySelectRewardType, EncounterRoomPos) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_RetrySelectRewardType::EncounterRoomPos' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.RewardRequirementsMet
// 0x06B0 (0x06B0 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_RewardRequirementsMet final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnePlayerHasRequiredMutator;                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLevelGenerationSettings               LastConnectorLevelGenSetting;                      // 0x0010(0x01B0)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARPlayerPawn*>                   CallFunc_GetAllPlayerPawnsInLevel_ReturnValue;     // 0x01D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue;          // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_1;                 // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0250(0x0010)()
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0270(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x02B8(0x0010)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02E0(0x0048)(HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARLevelGenerator*                       CallFunc_GetLevelManager_ReturnValue;              // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLevelGenerationSettings>       CallFunc_GetCurrentLevelSettings_ReturnValue;      // 0x0368(0x0010)(ReferenceParm)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLevelGenerationSettings               CallFunc_Array_Get_Item;                           // 0x0380(0x01B0)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0535(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_2;                 // 0x0536(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537[0x1];                                      // 0x0537(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D[0x3];                                      // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0548(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0598(0x0010)(ReferenceParm)
	class ARPlayerPawn*                           CallFunc_Array_Get_Item_1;                         // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x05B0(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x05C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue_1;        // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1[0x7];                                      // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x05F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBox_ReturnValue;                 // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URNodeData*                             CallFunc_GetCurrentNodeData_ReturnValue;           // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_622[0x6];                                      // 0x0622(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue_2;        // 0x0628(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x3];                                      // 0x0631(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentNodeId_ReturnValue;             // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FROverworldArea                        CallFunc_GetCurrentOverworldArea_ReturnValue;      // 0x0638(0x0028)()
	int32                                         CallFunc_GetAreaIndex_ReturnValue;                 // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0665(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_666[0x2];                                      // 0x0666(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue; // 0x0668(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0680(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadObjectFromSoftObjectPtr_ReturnValue;  // 0x0690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69A[0x6];                                      // 0x069A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URMutatorPrimaryAsset*                  K2Node_DynamicCast_AsRMutator_Primary_Asset;       // 0x06A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue;                   // 0x06A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue_1;                 // 0x06AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet) == 0x000010, "Wrong alignment on BP_NodeRewardSpawnPoint_C_RewardRequirementsMet");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet) == 0x0006B0, "Wrong size on BP_NodeRewardSpawnPoint_C_RewardRequirementsMet");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, Value) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::Value' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, OnePlayerHasRequiredMutator) == 0x000001, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::OnePlayerHasRequiredMutator' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, LastConnectorLevelGenSetting) == 0x000010, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::LastConnectorLevelGenSetting' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, Temp_int_Array_Index_Variable) == 0x0001C0, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, Temp_int_Loop_Counter_Variable) == 0x0001C4, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Add_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_GetAllPlayerPawnsInLevel_ReturnValue) == 0x0001D0, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_GetAllPlayerPawnsInLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Array_Length_ReturnValue) == 0x0001E0, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_MatchesTag_ReturnValue) == 0x0001E4, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, Temp_int_Loop_Counter_Variable_1) == 0x0001E8, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_GetOverworldManager_ReturnValue) == 0x0001F0, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_GetOverworldManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Less_IntInt_ReturnValue) == 0x0001F8, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_IsValid_ReturnValue) == 0x0001F9, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001FC, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_MatchesTag_ReturnValue_1) == 0x000200, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_MatchesTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000208, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Add_VectorVector_ReturnValue) == 0x000218, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000230, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000248, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Conv_NameToText_ReturnValue) == 0x000250, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_SelectString_ReturnValue) == 0x000260, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, K2Node_MakeStruct_FormatArgumentData) == 0x000270, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Conv_StringToText_ReturnValue) == 0x0002B8, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002C8, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002E0, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000328, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_GetLevelManager_ReturnValue) == 0x000340, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_GetLevelManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000348, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_IsValid_ReturnValue_1) == 0x000360, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_GetCurrentLevelSettings_ReturnValue) == 0x000368, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_GetCurrentLevelSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Array_Get_Item) == 0x000380, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Array_Length_ReturnValue_1) == 0x000530, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Less_IntInt_ReturnValue_1) == 0x000534, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_HasTag_ReturnValue) == 0x000535, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_MatchesTag_ReturnValue_2) == 0x000536, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_MatchesTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Array_Length_ReturnValue_2) == 0x000538, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_BooleanOR_ReturnValue) == 0x00053C, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000540, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, K2Node_MakeStruct_FormatArgumentData_2) == 0x000548, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, Temp_int_Array_Index_Variable_1) == 0x000590, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, K2Node_MakeArray_Array) == 0x000598, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Array_Get_Item_1) == 0x0005A8, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Format_ReturnValue) == 0x0005B0, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Conv_TextToString_ReturnValue) == 0x0005C0, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_GetOverworldManager_ReturnValue_1) == 0x0005D0, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_GetOverworldManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0005D8, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_IsValid_ReturnValue_2) == 0x0005F0, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0005F8, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_IsPointInBox_ReturnValue) == 0x000610, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_IsPointInBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_GetCurrentNodeData_ReturnValue) == 0x000618, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_GetCurrentNodeData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_IsValid_ReturnValue_3) == 0x000620, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_BooleanAND_ReturnValue) == 0x000621, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_GetOverworldManager_ReturnValue_2) == 0x000628, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_GetOverworldManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_IsValid_ReturnValue_4) == 0x000630, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_GetCurrentNodeId_ReturnValue) == 0x000634, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_GetCurrentNodeId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_GetCurrentOverworldArea_ReturnValue) == 0x000638, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_GetCurrentOverworldArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_GetAreaIndex_ReturnValue) == 0x000660, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_GetAreaIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000664, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000665, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_GetFirstLocalGamePlayerController_ReturnValue) == 0x000668, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_GetFirstLocalGamePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000670, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_K2_GetPawn_ReturnValue) == 0x000678, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000680, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, K2Node_DynamicCast_bSuccess) == 0x000688, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_LoadObjectFromSoftObjectPtr_ReturnValue) == 0x000690, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_LoadObjectFromSoftObjectPtr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000698, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_IsValid_ReturnValue_5) == 0x000699, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, K2Node_DynamicCast_AsRMutator_Primary_Asset) == 0x0006A0, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::K2Node_DynamicCast_AsRMutator_Primary_Asset' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, K2Node_DynamicCast_bSuccess_1) == 0x0006A8, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_HasMutator_ReturnValue) == 0x0006A9, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_HasMutator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_RewardRequirementsMet, CallFunc_HasMutator_ReturnValue_1) == 0x0006AA, "Member 'BP_NodeRewardSpawnPoint_C_RewardRequirementsMet::CallFunc_HasMutator_ReturnValue_1' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.SelectRewardType
// 0x00A8 (0x00A8 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_SelectRewardType final
{
public:
	int32                                         OutEncounterRoomPosition;                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EncounterRoomPosInOverworld;                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 RewardClass;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FREncounterExtraRewardData             CallFunc_Array_Get_Item;                           // 0x0038(0x0018)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0058(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEncounterRoomPositionOfActorInOverworld_ReturnValue; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARLevelGenerator*                       CallFunc_GetLevelManager_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IsActorInLastEncounterRoom_OutEncounterRoomPosition; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorInLastEncounterRoom_ReturnValue;   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetRewardClass_RewardClass;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_SelectRewardType) == 0x000008, "Wrong alignment on BP_NodeRewardSpawnPoint_C_SelectRewardType");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_SelectRewardType) == 0x0000A8, "Wrong size on BP_NodeRewardSpawnPoint_C_SelectRewardType");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, OutEncounterRoomPosition) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::OutEncounterRoomPosition' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, EncounterRoomPosInOverworld) == 0x000004, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::EncounterRoomPosInOverworld' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, RewardClass) == 0x000008, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::RewardClass' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, Temp_bool_True_if_break_was_hit_Variable) == 0x000014, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_Not_PreBool_ReturnValue) == 0x000015, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_IsValidClass_ReturnValue) == 0x000024, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000025, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_GetOverworldManager_ReturnValue) == 0x000028, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_GetOverworldManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000058, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_GetEncounterRoomPositionOfActorInOverworld_ReturnValue) == 0x000084, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_GetEncounterRoomPositionOfActorInOverworld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_GetLevelManager_ReturnValue) == 0x000088, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_GetLevelManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_IsActorInLastEncounterRoom_OutEncounterRoomPosition) == 0x000094, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_IsActorInLastEncounterRoom_OutEncounterRoomPosition' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_IsActorInLastEncounterRoom_ReturnValue) == 0x000098, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_IsActorInLastEncounterRoom_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SelectRewardType, CallFunc_GetRewardClass_RewardClass) == 0x0000A0, "Member 'BP_NodeRewardSpawnPoint_C_SelectRewardType::CallFunc_GetRewardClass_RewardClass' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.SetCharmForController
// 0x0018 (0x0018 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_SetCharmForController final
{
public:
	class URMutatorPrimaryAsset*                  CharmPrimaryAsset;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bCharmPickedUp;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_SetCharmForController) == 0x000008, "Wrong alignment on BP_NodeRewardSpawnPoint_C_SetCharmForController");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_SetCharmForController) == 0x000018, "Wrong size on BP_NodeRewardSpawnPoint_C_SetCharmForController");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SetCharmForController, CharmPrimaryAsset) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_SetCharmForController::CharmPrimaryAsset' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SetCharmForController, bCharmPickedUp) == 0x000008, "Member 'BP_NodeRewardSpawnPoint_C_SetCharmForController::bCharmPickedUp' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SetCharmForController, PlayerController) == 0x000010, "Member 'BP_NodeRewardSpawnPoint_C_SetCharmForController::PlayerController' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.SetNodeRewardType
// 0x0008 (0x0008 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_SetNodeRewardType final
{
public:
	struct FGameplayTag                           RewardTypeTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_SetNodeRewardType) == 0x000004, "Wrong alignment on BP_NodeRewardSpawnPoint_C_SetNodeRewardType");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_SetNodeRewardType) == 0x000008, "Wrong size on BP_NodeRewardSpawnPoint_C_SetNodeRewardType");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SetNodeRewardType, RewardTypeTag) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_SetNodeRewardType::RewardTypeTag' has a wrong offset!");

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.SpawnRewardFromClass
// 0x0180 (0x0180 - 0x0000)
struct BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass final
{
public:
	class UClass*                                 ActorClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SpawnedActor;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ARPickupableCharm*                      K2Node_DynamicCast_AsRPickupable_Charm;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HealAltar_C*                        K2Node_DynamicCast_AsBP_Heal_Altar;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARLootableActor*                        K2Node_DynamicCast_AsRLootable_Actor;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARLootableContainer*                    K2Node_DynamicCast_AsRLootable_Container;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NodeChoiceReward_Chest_C*           K2Node_DynamicCast_AsBP_Node_Choice_Reward_Chest;  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class ARPickupableItem* PickedUpItem, int32 PickupCost, class APlayerController* PlayerController)> K2Node_CreateDelegate_OutputDelegate; // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class URMutatorPrimaryAsset* NewPrimaryAsset)> K2Node_CreateDelegate_OutputDelegate_1; // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0xF];                                       // 0x00E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00F0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARLevelGenerator*                       CallFunc_GetLevelManager_ReturnValue;              // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RewardRequirementsMet_Value;              // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass) == 0x000010, "Wrong alignment on BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass");
static_assert(sizeof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass) == 0x000180, "Wrong size on BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, ActorClass) == 0x000000, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::ActorClass' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, SpawnedActor) == 0x000008, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::SpawnedActor' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, K2Node_DynamicCast_AsRPickupable_Charm) == 0x000020, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::K2Node_DynamicCast_AsRPickupable_Charm' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, K2Node_DynamicCast_AsBP_Heal_Altar) == 0x000030, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::K2Node_DynamicCast_AsBP_Heal_Altar' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, K2Node_DynamicCast_AsRLootable_Actor) == 0x000040, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::K2Node_DynamicCast_AsRLootable_Actor' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, K2Node_DynamicCast_AsRLootable_Container) == 0x000050, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::K2Node_DynamicCast_AsRLootable_Container' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, K2Node_DynamicCast_AsBP_Node_Choice_Reward_Chest) == 0x000060, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::K2Node_DynamicCast_AsBP_Node_Choice_Reward_Chest' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, K2Node_DynamicCast_bSuccess_4) == 0x000068, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_GetFirstLocalGamePlayerController_ReturnValue) == 0x000070, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_GetFirstLocalGamePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_GetDisplayName_ReturnValue_1) == 0x000078, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_HasAuthority_ReturnValue) == 0x000088, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, K2Node_CreateDelegate_OutputDelegate) == 0x0000B0, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C0, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D0, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_GetTransform_ReturnValue) == 0x0000F0, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000150, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000158, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_FinishSpawningActor_ReturnValue) == 0x000160, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_GetOverworldManager_ReturnValue) == 0x000168, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_GetOverworldManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_GetLevelManager_ReturnValue) == 0x000170, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_GetLevelManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_IsValid_ReturnValue_1) == 0x000178, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000179, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass, CallFunc_RewardRequirementsMet_Value) == 0x00017A, "Member 'BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass::CallFunc_RewardRequirementsMet_Value' has a wrong offset!");

}

