#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChargeBase_ModScript

#include "Basic.hpp"

#include "BP_Base_ModScript_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ChargeBase_ModScript.BP_ChargeBase_ModScript_C
// 0x0090 (0x01E0 - 0x0150)
class UBP_ChargeBase_ModScript_C final : public UBP_Base_ModScript_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ChargeBase_ModScript_C;          // 0x0150(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         MaxCharges;                                        // 0x0158(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DelayBetweenChargeUp;                              // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCharges;                                    // 0x0168(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              SweetspotTime;                                     // 0x0170(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WorldTimeOnFullCharge;                             // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ChargeIncrementCue;                                // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ChargeFinishedCue;                                 // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              ChargeHold;                                        // 0x0198(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class URGTask_WaitLoop*                       ChargeWaitLoopTask;                                // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           CachedRPlayerPawn;                                 // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousCharge;                                    // 0x01B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AvailableOverCharge;                               // 0x01BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  BlockingTags;                                      // 0x01C0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_ChargeBase_ModScript(int32 EntryPoint);
	void FinishFire();
	void FullyCharged();
	void GetChargeRatio(double* Ratio);
	void GetChargeTag(struct FGameplayTag* Tag);
	void GetOverChargeRatio(double* Ratio);
	void GetPreviousChargeRatio(double* Ratio);
	void HasBlockingInputs(class ARPlayerPawn* RPlayerPawn, bool* HasBlockingInputs_0);
	void IncrementCharge();
	void InterruptCharge(int32 AbilityIndex, class ARPlayerPawn* RPlayerPawn);
	void K2_ActivateScript();
	void K2_TickScript(float DeltaTime);
	void LoopBody_0B52C8F94E39ADCD1A1830863B387ADF(int32 Index_0);
	void OnAbilityUsed_Event(int32 AbilityIndex);
	void OnCancelled_0B52C8F94E39ADCD1A1830863B387ADF();
	void OnCancelled_3328078B45041DF40D467A88730E05D8();
	void OnCancelled_4C364A894C32E0BA94175A9F16DCEF85();
	void OnFinish_0B52C8F94E39ADCD1A1830863B387ADF();
	void OnFinish_3328078B45041DF40D467A88730E05D8();
	void OnFinish_4C364A894C32E0BA94175A9F16DCEF85();
	void PreFire();
	void ResetCurrentCharges();
	void StopWaitLoop();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChargeBase_ModScript_C">();
	}
	static class UBP_ChargeBase_ModScript_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ChargeBase_ModScript_C>();
	}
};
static_assert(alignof(UBP_ChargeBase_ModScript_C) == 0x000008, "Wrong alignment on UBP_ChargeBase_ModScript_C");
static_assert(sizeof(UBP_ChargeBase_ModScript_C) == 0x0001E0, "Wrong size on UBP_ChargeBase_ModScript_C");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, UberGraphFrame_BP_ChargeBase_ModScript_C) == 0x000150, "Member 'UBP_ChargeBase_ModScript_C::UberGraphFrame_BP_ChargeBase_ModScript_C' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, MaxCharges) == 0x000158, "Member 'UBP_ChargeBase_ModScript_C::MaxCharges' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, DelayBetweenChargeUp) == 0x000160, "Member 'UBP_ChargeBase_ModScript_C::DelayBetweenChargeUp' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, CurrentCharges) == 0x000168, "Member 'UBP_ChargeBase_ModScript_C::CurrentCharges' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, SweetspotTime) == 0x000170, "Member 'UBP_ChargeBase_ModScript_C::SweetspotTime' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, WorldTimeOnFullCharge) == 0x000180, "Member 'UBP_ChargeBase_ModScript_C::WorldTimeOnFullCharge' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, ChargeIncrementCue) == 0x000188, "Member 'UBP_ChargeBase_ModScript_C::ChargeIncrementCue' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, ChargeFinishedCue) == 0x000190, "Member 'UBP_ChargeBase_ModScript_C::ChargeFinishedCue' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, ChargeHold) == 0x000198, "Member 'UBP_ChargeBase_ModScript_C::ChargeHold' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, ChargeWaitLoopTask) == 0x0001A8, "Member 'UBP_ChargeBase_ModScript_C::ChargeWaitLoopTask' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, CachedRPlayerPawn) == 0x0001B0, "Member 'UBP_ChargeBase_ModScript_C::CachedRPlayerPawn' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, PreviousCharge) == 0x0001B8, "Member 'UBP_ChargeBase_ModScript_C::PreviousCharge' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, AvailableOverCharge) == 0x0001BC, "Member 'UBP_ChargeBase_ModScript_C::AvailableOverCharge' has a wrong offset!");
static_assert(offsetof(UBP_ChargeBase_ModScript_C, BlockingTags) == 0x0001C0, "Member 'UBP_ChargeBase_ModScript_C::BlockingTags' has a wrong offset!");

}

