#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DataflowEngine

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum DataflowEngine.EDataflowType
// NumValues: 0x0003
enum class EDataflowType : uint8
{
	Construction                             = 0,
	Simulation                               = 1,
	EDataflowType_MAX                        = 2,
};

// ScriptStruct DataflowEngine.StringValuePair
// 0x0020 (0x0020 - 0x0000)
struct FStringValuePair final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FStringValuePair) == 0x000008, "Wrong alignment on FStringValuePair");
static_assert(sizeof(FStringValuePair) == 0x000020, "Wrong size on FStringValuePair");
static_assert(offsetof(FStringValuePair, Key) == 0x000000, "Member 'FStringValuePair::Key' has a wrong offset!");
static_assert(offsetof(FStringValuePair, Value) == 0x000010, "Member 'FStringValuePair::Value' has a wrong offset!");

// ScriptStruct DataflowEngine.DataflowPreviewCacheParams
// 0x0010 (0x0010 - 0x0000)
struct FDataflowPreviewCacheParams final
{
public:
	int32                                         FrameRate;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2f                              TimeRange;                                         // 0x0004(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAsyncCaching;                                     // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDataflowPreviewCacheParams) == 0x000004, "Wrong alignment on FDataflowPreviewCacheParams");
static_assert(sizeof(FDataflowPreviewCacheParams) == 0x000010, "Wrong size on FDataflowPreviewCacheParams");
static_assert(offsetof(FDataflowPreviewCacheParams, FrameRate) == 0x000000, "Member 'FDataflowPreviewCacheParams::FrameRate' has a wrong offset!");
static_assert(offsetof(FDataflowPreviewCacheParams, TimeRange) == 0x000004, "Member 'FDataflowPreviewCacheParams::TimeRange' has a wrong offset!");
static_assert(offsetof(FDataflowPreviewCacheParams, bAsyncCaching) == 0x00000C, "Member 'FDataflowPreviewCacheParams::bAsyncCaching' has a wrong offset!");

}

