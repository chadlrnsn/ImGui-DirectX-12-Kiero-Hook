#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BowAccuracy_Challenge

#include "Basic.hpp"

#include "RGame_structs.hpp"


namespace SDK::Params
{

// Function BP_BowAccuracy_Challenge.BP_BowAccuracy_Challenge_C.ExecuteUbergraph_BP_BowAccuracy_Challenge
// 0x01A8 (0x01A8 - 0x0000)
struct BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ARPlayerPawn* Player, class AActor* HitActor, class ARProjectileBase* ProjectileActor)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPawnBase*                             K2Node_CustomEvent_Pawn;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     K2Node_CustomEvent_DamageEventData;                // 0x0020(0x00C0)()
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DamageSourceMaskHasFlag_ReturnValue;      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectASoftClass_ReturnValue;           // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectChildOfSoftClass_ReturnValue;     // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChallengeCompleted_ReturnValue;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerPawn*                           K2Node_CustomEvent_Player;                         // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARProjectileBase*                       K2Node_CustomEvent_ProjectileActor;                // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectASoftClass_ReturnValue_1;         // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectChildOfSoftClass_ReturnValue_1;   // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectASoftClass_ReturnValue_2;         // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectChildOfSoftClass_ReturnValue_2;   // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_127[0x1];                                      // 0x0127(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool RunFailed)>               K2Node_CreateDelegate_OutputDelegate_1;            // 0x0128(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ARPlayerPawn* Player, class AActor* HitActor, class ARProjectileBase* ProjectileActor)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0138(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ARPawnBase* Pawn, const struct FDamageCombatEvent& DamageEventData)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0148(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RunFailed;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue;                // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn_1;               // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool RunFailed)>               K2Node_CreateDelegate_OutputDelegate_4;            // 0x017C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue_1;              // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ARPawnBase* Pawn, const struct FDamageCombatEvent& DamageEventData)> K2Node_CreateDelegate_OutputDelegate_5; // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge) == 0x000008, "Wrong alignment on BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge");
static_assert(sizeof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge) == 0x0001A8, "Wrong size on BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, EntryPoint) == 0x000000, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_CustomEvent_Pawn) == 0x000018, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_CustomEvent_DamageEventData) == 0x000020, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_CustomEvent_DamageEventData' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_K2_GetPawn_ReturnValue) == 0x0000E0, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x0000E8, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_DamageSourceMaskHasFlag_ReturnValue) == 0x0000F1, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_DamageSourceMaskHasFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_IsObjectASoftClass_ReturnValue) == 0x0000F2, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_IsObjectASoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_IsObjectChildOfSoftClass_ReturnValue) == 0x0000F3, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_IsObjectChildOfSoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_BooleanOR_ReturnValue) == 0x0000F4, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_GetChallengeManager_ReturnValue) == 0x0000F8, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_IsChallengeCompleted_ReturnValue) == 0x000100, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_IsChallengeCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_Not_PreBool_ReturnValue) == 0x000101, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_CustomEvent_Player) == 0x000108, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_CustomEvent_HitActor) == 0x000110, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_CustomEvent_ProjectileActor) == 0x000118, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_CustomEvent_ProjectileActor' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_BooleanAND_ReturnValue) == 0x000120, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_IsObjectASoftClass_ReturnValue_1) == 0x000121, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_IsObjectASoftClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_IsObjectChildOfSoftClass_ReturnValue_1) == 0x000122, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_IsObjectChildOfSoftClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_IsObjectASoftClass_ReturnValue_2) == 0x000123, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_IsObjectASoftClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_BooleanOR_ReturnValue_1) == 0x000124, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_IsObjectChildOfSoftClass_ReturnValue_2) == 0x000125, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_IsObjectChildOfSoftClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_BooleanOR_ReturnValue_2) == 0x000126, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_CreateDelegate_OutputDelegate_1) == 0x000128, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_CreateDelegate_OutputDelegate_2) == 0x000138, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_CreateDelegate_OutputDelegate_3) == 0x000148, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_CustomEvent_RunFailed) == 0x000158, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_CustomEvent_RunFailed' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_GetRGameState_ReturnValue) == 0x000160, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_GetRGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000168, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_DynamicCast_AsRPlayer_Pawn_1) == 0x000170, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_DynamicCast_AsRPlayer_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_DynamicCast_bSuccess_1) == 0x000178, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_CreateDelegate_OutputDelegate_4) == 0x00017C, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, CallFunc_GetRGameState_ReturnValue_1) == 0x000190, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::CallFunc_GetRGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge, K2Node_CreateDelegate_OutputDelegate_5) == 0x000198, "Member 'BP_BowAccuracy_Challenge_C_ExecuteUbergraph_BP_BowAccuracy_Challenge::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");

// Function BP_BowAccuracy_Challenge.BP_BowAccuracy_Challenge_C.OnDealtDamage
// 0x00C8 (0x00C8 - 0x0000)
struct BP_BowAccuracy_Challenge_C_OnDealtDamage final
{
public:
	class ARPawnBase*                             Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     DamageEventData;                                   // 0x0008(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_BowAccuracy_Challenge_C_OnDealtDamage) == 0x000008, "Wrong alignment on BP_BowAccuracy_Challenge_C_OnDealtDamage");
static_assert(sizeof(BP_BowAccuracy_Challenge_C_OnDealtDamage) == 0x0000C8, "Wrong size on BP_BowAccuracy_Challenge_C_OnDealtDamage");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_OnDealtDamage, Pawn) == 0x000000, "Member 'BP_BowAccuracy_Challenge_C_OnDealtDamage::Pawn' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_OnDealtDamage, DamageEventData) == 0x000008, "Member 'BP_BowAccuracy_Challenge_C_OnDealtDamage::DamageEventData' has a wrong offset!");

// Function BP_BowAccuracy_Challenge.BP_BowAccuracy_Challenge_C.OnFinishRun
// 0x0001 (0x0001 - 0x0000)
struct BP_BowAccuracy_Challenge_C_OnFinishRun final
{
public:
	bool                                          RunFailed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BowAccuracy_Challenge_C_OnFinishRun) == 0x000001, "Wrong alignment on BP_BowAccuracy_Challenge_C_OnFinishRun");
static_assert(sizeof(BP_BowAccuracy_Challenge_C_OnFinishRun) == 0x000001, "Wrong size on BP_BowAccuracy_Challenge_C_OnFinishRun");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_OnFinishRun, RunFailed) == 0x000000, "Member 'BP_BowAccuracy_Challenge_C_OnFinishRun::RunFailed' has a wrong offset!");

// Function BP_BowAccuracy_Challenge.BP_BowAccuracy_Challenge_C.OnProjectileHit
// 0x0018 (0x0018 - 0x0000)
struct BP_BowAccuracy_Challenge_C_OnProjectileHit final
{
public:
	class ARPlayerPawn*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARProjectileBase*                       ProjectileActor;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BowAccuracy_Challenge_C_OnProjectileHit) == 0x000008, "Wrong alignment on BP_BowAccuracy_Challenge_C_OnProjectileHit");
static_assert(sizeof(BP_BowAccuracy_Challenge_C_OnProjectileHit) == 0x000018, "Wrong size on BP_BowAccuracy_Challenge_C_OnProjectileHit");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_OnProjectileHit, Player) == 0x000000, "Member 'BP_BowAccuracy_Challenge_C_OnProjectileHit::Player' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_OnProjectileHit, HitActor) == 0x000008, "Member 'BP_BowAccuracy_Challenge_C_OnProjectileHit::HitActor' has a wrong offset!");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_OnProjectileHit, ProjectileActor) == 0x000010, "Member 'BP_BowAccuracy_Challenge_C_OnProjectileHit::ProjectileActor' has a wrong offset!");

// Function BP_BowAccuracy_Challenge.BP_BowAccuracy_Challenge_C.ResetChallenge
// 0x0008 (0x0008 - 0x0000)
struct BP_BowAccuracy_Challenge_C_ResetChallenge final
{
public:
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BowAccuracy_Challenge_C_ResetChallenge) == 0x000008, "Wrong alignment on BP_BowAccuracy_Challenge_C_ResetChallenge");
static_assert(sizeof(BP_BowAccuracy_Challenge_C_ResetChallenge) == 0x000008, "Wrong size on BP_BowAccuracy_Challenge_C_ResetChallenge");
static_assert(offsetof(BP_BowAccuracy_Challenge_C_ResetChallenge, CallFunc_GetChallengeManager_ReturnValue) == 0x000000, "Member 'BP_BowAccuracy_Challenge_C_ResetChallenge::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");

}

