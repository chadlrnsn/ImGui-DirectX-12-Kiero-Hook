#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelExit

#include "Basic.hpp"

#include "BP_LevelExit_classes.hpp"
#include "BP_LevelExit_parameters.hpp"


namespace SDK
{

// Function BP_LevelExit.BP_LevelExit_C.ToggleInteractionIndicatorVisibility
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const bool                              NewVisible                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::ToggleInteractionIndicatorVisibility(class AActor* InteractingActor, const bool NewVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "ToggleInteractionIndicatorVisibility");

	Params::BP_LevelExit_C_ToggleInteractionIndicatorVisibility Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.NewVisible = NewVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelExit.BP_LevelExit_C.StartWaitingForPlayers
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::StartWaitingForPlayers(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "StartWaitingForPlayers");

	Params::BP_LevelExit_C_StartWaitingForPlayers Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelExit.BP_LevelExit_C.SkipWaitingForDisconnectedPlayers
// (BlueprintCallable, BlueprintEvent)

void ABP_LevelExit_C::SkipWaitingForDisconnectedPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "SkipWaitingForDisconnectedPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelExit.BP_LevelExit_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "ReceiveEndPlay");

	Params::BP_LevelExit_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelExit.BP_LevelExit_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_LevelExit_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelExit.BP_LevelExit_C.PruneGeneratedActors
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_LevelExit_C::PruneGeneratedActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "PruneGeneratedActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelExit.BP_LevelExit_C.OnSegmentCompleted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AREnemySpawnAreaSegment*          EnemySpawnAreaSegment                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::OnSegmentCompleted(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "OnSegmentCompleted");

	Params::BP_LevelExit_C_OnSegmentCompleted Parms{};

	Parms.EnemySpawnAreaSegment = EnemySpawnAreaSegment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelExit.BP_LevelExit_C.OnRep_bIsCorrupted
// (BlueprintCallable, BlueprintEvent)

void ABP_LevelExit_C::OnRep_bIsCorrupted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "OnRep_bIsCorrupted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelExit.BP_LevelExit_C.OnInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::OnInteract(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "OnInteract");

	Params::BP_LevelExit_C_OnInteract Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelExit.BP_LevelExit_C.OnFocusGone
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::OnFocusGone(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "OnFocusGone");

	Params::BP_LevelExit_C_OnFocusGone Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelExit.BP_LevelExit_C.OnFocus
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::OnFocus(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "OnFocus");

	Params::BP_LevelExit_C_OnFocus Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelExit.BP_LevelExit_C.MakeCorrupted
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_LevelExit_C::MakeCorrupted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "MakeCorrupted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelExit.BP_LevelExit_C.IsCorrupted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsCorrupted_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::IsCorrupted(bool* IsCorrupted_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "IsCorrupted");

	Params::BP_LevelExit_C_IsCorrupted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsCorrupted_0 != nullptr)
		*IsCorrupted_0 = Parms.IsCorrupted_0;
}


// Function BP_LevelExit.BP_LevelExit_C.Is Last Node Of Last Area
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   OutBool                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::Is_Last_Node_Of_Last_Area(bool* OutBool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "Is Last Node Of Last Area");

	Params::BP_LevelExit_C_Is_Last_Node_Of_Last_Area Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutBool != nullptr)
		*OutBool = Parms.OutBool;
}


// Function BP_LevelExit.BP_LevelExit_C.GetSpawnLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  InFloat                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   OutBool                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::GetSpawnLocation(double InFloat, struct FVector* Location, bool* OutBool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "GetSpawnLocation");

	Params::BP_LevelExit_C_GetSpawnLocation Parms{};

	Parms.InFloat = InFloat;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (OutBool != nullptr)
		*OutBool = Parms.OutBool;
}


// Function BP_LevelExit.BP_LevelExit_C.Force Load Lobby Level
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   ShouldForceLobby                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::Force_Load_Lobby_Level(bool* ShouldForceLobby)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "Force Load Lobby Level");

	Params::BP_LevelExit_C_Force_Load_Lobby_Level Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldForceLobby != nullptr)
		*ShouldForceLobby = Parms.ShouldForceLobby;
}


// Function BP_LevelExit.BP_LevelExit_C.ExecuteUbergraph_BP_LevelExit
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::ExecuteUbergraph_BP_LevelExit(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "ExecuteUbergraph_BP_LevelExit");

	Params::BP_LevelExit_C_ExecuteUbergraph_BP_LevelExit Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelExit.BP_LevelExit_C.CheckNodeChoice
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LevelExit_C::CheckNodeChoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "CheckNodeChoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelExit.BP_LevelExit_C.CheckDisconnectPlayers
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   HasDisconnectedPlayers                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelExit_C::CheckDisconnectPlayers(bool* HasDisconnectedPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "CheckDisconnectPlayers");

	Params::BP_LevelExit_C_CheckDisconnectPlayers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasDisconnectedPlayers != nullptr)
		*HasDisconnectedPlayers = Parms.HasDisconnectedPlayers;
}


// Function BP_LevelExit.BP_LevelExit_C.CanInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_LevelExit_C::CanInteract(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "CanInteract");

	Params::BP_LevelExit_C_CanInteract Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LevelExit.BP_LevelExit_C.ShouldShowOnRadar
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_LevelExit_C::ShouldShowOnRadar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "ShouldShowOnRadar");

	Params::BP_LevelExit_C_ShouldShowOnRadar Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LevelExit.BP_LevelExit_C.GetRadarObjectIcon
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USlateBrushAsset*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class USlateBrushAsset* ABP_LevelExit_C::GetRadarObjectIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "GetRadarObjectIcon");

	Params::BP_LevelExit_C_GetRadarObjectIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LevelExit.BP_LevelExit_C.GetRadarIconSize
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D ABP_LevelExit_C::GetRadarIconSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "GetRadarIconSize");

	Params::BP_LevelExit_C_GetRadarIconSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LevelExit.BP_LevelExit_C.GetRadarIconColor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor ABP_LevelExit_C::GetRadarIconColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "GetRadarIconColor");

	Params::BP_LevelExit_C_GetRadarIconColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LevelExit.BP_LevelExit_C.GetInteractionIndicatorWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidgetComponent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidgetComponent* ABP_LevelExit_C::GetInteractionIndicatorWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "GetInteractionIndicatorWidget");

	Params::BP_LevelExit_C_GetInteractionIndicatorWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LevelExit.BP_LevelExit_C.GetInteractableSubHeader
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_LevelExit_C::GetInteractableSubHeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "GetInteractableSubHeader");

	Params::BP_LevelExit_C_GetInteractableSubHeader Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LevelExit.BP_LevelExit_C.GetInteractableName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_LevelExit_C::GetInteractableName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "GetInteractableName");

	Params::BP_LevelExit_C_GetInteractableName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LevelExit.BP_LevelExit_C.GetInteractableDescription
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_LevelExit_C::GetInteractableDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "GetInteractableDescription");

	Params::BP_LevelExit_C_GetInteractableDescription Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LevelExit.BP_LevelExit_C.GetInteractableCostCurrencyType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_LevelExit_C::GetInteractableCostCurrencyType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "GetInteractableCostCurrencyType");

	Params::BP_LevelExit_C_GetInteractableCostCurrencyType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LevelExit.BP_LevelExit_C.GetInteractableCost
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_LevelExit_C::GetInteractableCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "GetInteractableCost");

	Params::BP_LevelExit_C_GetInteractableCost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LevelExit.BP_LevelExit_C.GetInteractableAlternativeDescription
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_LevelExit_C::GetInteractableAlternativeDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelExit_C", "GetInteractableAlternativeDescription");

	Params::BP_LevelExit_C_GetInteractableAlternativeDescription Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

