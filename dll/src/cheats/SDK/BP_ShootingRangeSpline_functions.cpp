#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShootingRangeSpline

#include "Basic.hpp"

#include "BP_ShootingRangeSpline_classes.hpp"
#include "BP_ShootingRangeSpline_parameters.hpp"


namespace SDK
{

// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.Activate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Positive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShootingRangeSpline_C::Activate(int32 ID, bool Positive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingRangeSpline_C", "Activate");

	Params::BP_ShootingRangeSpline_C_Activate Parms{};

	Parms.ID = ID;
	Parms.Positive = Positive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.BP_ShootingRangeSpline_AutoGenFunc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShootingRangeSpline_C::BP_ShootingRangeSpline_AutoGenFunc(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingRangeSpline_C", "BP_ShootingRangeSpline_AutoGenFunc");

	Params::BP_ShootingRangeSpline_C_BP_ShootingRangeSpline_AutoGenFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.EvaluateTargeLocationTick
// (BlueprintCallable, BlueprintEvent)

void ABP_ShootingRangeSpline_C::EvaluateTargeLocationTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingRangeSpline_C", "EvaluateTargeLocationTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.ExecuteUbergraph_BP_ShootingRangeSpline
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShootingRangeSpline_C::ExecuteUbergraph_BP_ShootingRangeSpline(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingRangeSpline_C", "ExecuteUbergraph_BP_ShootingRangeSpline");

	Params::BP_ShootingRangeSpline_C_ExecuteUbergraph_BP_ShootingRangeSpline Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.GetSplineTimeForAccumulatedTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 SplineTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShootingRangeSpline_C::GetSplineTimeForAccumulatedTime(double* SplineTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingRangeSpline_C", "GetSplineTimeForAccumulatedTime");

	Params::BP_ShootingRangeSpline_C_GetSplineTimeForAccumulatedTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SplineTime != nullptr)
		*SplineTime = Parms.SplineTime;
}


// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ShootingRangeSpline_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingRangeSpline_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShootingRangeSpline_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingRangeSpline_C", "ReceiveTick");

	Params::BP_ShootingRangeSpline_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.ResetDummyLocation
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ShootingRangeSpline_C::ResetDummyLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingRangeSpline_C", "ResetDummyLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.StartMovement
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ShootingRangeSpline_C::StartMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingRangeSpline_C", "StartMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.StopMovement
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ShootingRangeSpline_C::StopMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingRangeSpline_C", "StopMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShootingRangeSpline.BP_ShootingRangeSpline_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ShootingRangeSpline_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShootingRangeSpline_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

