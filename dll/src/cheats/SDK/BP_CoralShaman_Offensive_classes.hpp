#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CoralShaman_Offensive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CoralShaman_Offensive.BP_CoralShaman_Offensive_C
// 0x0048 (0x4E18 - 0x4DD0)
class ABP_CoralShaman_Offensive_C final : public AREnemyPawnBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x4DD0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      eyeVFX_L;                                          // 0x4DD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      eyeVFX_R;                                          // 0x4DE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Shaman_Staff_Body;                              // 0x4DE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TotemAttachPoint;                                  // 0x4DF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ARDummyTotem*                           ActiveTotemRef;                                    // 0x4DF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<ERTotemType>                           ValidTotemTypes;                                   // 0x4E00(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          TotemDestroyed;                                    // 0x4E10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Destroy_Staff();
	void ExecuteUbergraph_BP_CoralShaman_Offensive(int32 EntryPoint);
	void OnBlendOut_B1AD104349E84DEEEEE1C0A0E304C662(class FName NotifyName);
	void OnCompleted_B1AD104349E84DEEEEE1C0A0E304C662(class FName NotifyName);
	void OnInterrupted_B1AD104349E84DEEEEE1C0A0E304C662(class FName NotifyName);
	void OnNotifyBegin_B1AD104349E84DEEEEE1C0A0E304C662(class FName NotifyName);
	void OnNotifyEnd_B1AD104349E84DEEEEE1C0A0E304C662(class FName NotifyName);
	void ReceiveOnDamageTaken();
	void ReceiveOnDeath();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CoralShaman_Offensive_C">();
	}
	static class ABP_CoralShaman_Offensive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CoralShaman_Offensive_C>();
	}
};
static_assert(alignof(ABP_CoralShaman_Offensive_C) == 0x000008, "Wrong alignment on ABP_CoralShaman_Offensive_C");
static_assert(sizeof(ABP_CoralShaman_Offensive_C) == 0x004E18, "Wrong size on ABP_CoralShaman_Offensive_C");
static_assert(offsetof(ABP_CoralShaman_Offensive_C, UberGraphFrame) == 0x004DD0, "Member 'ABP_CoralShaman_Offensive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CoralShaman_Offensive_C, eyeVFX_L) == 0x004DD8, "Member 'ABP_CoralShaman_Offensive_C::eyeVFX_L' has a wrong offset!");
static_assert(offsetof(ABP_CoralShaman_Offensive_C, eyeVFX_R) == 0x004DE0, "Member 'ABP_CoralShaman_Offensive_C::eyeVFX_R' has a wrong offset!");
static_assert(offsetof(ABP_CoralShaman_Offensive_C, SK_Shaman_Staff_Body) == 0x004DE8, "Member 'ABP_CoralShaman_Offensive_C::SK_Shaman_Staff_Body' has a wrong offset!");
static_assert(offsetof(ABP_CoralShaman_Offensive_C, TotemAttachPoint) == 0x004DF0, "Member 'ABP_CoralShaman_Offensive_C::TotemAttachPoint' has a wrong offset!");
static_assert(offsetof(ABP_CoralShaman_Offensive_C, ActiveTotemRef) == 0x004DF8, "Member 'ABP_CoralShaman_Offensive_C::ActiveTotemRef' has a wrong offset!");
static_assert(offsetof(ABP_CoralShaman_Offensive_C, ValidTotemTypes) == 0x004E00, "Member 'ABP_CoralShaman_Offensive_C::ValidTotemTypes' has a wrong offset!");
static_assert(offsetof(ABP_CoralShaman_Offensive_C, TotemDestroyed) == 0x004E10, "Member 'ABP_CoralShaman_Offensive_C::TotemDestroyed' has a wrong offset!");

}

