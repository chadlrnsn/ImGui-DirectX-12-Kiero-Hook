#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MassEntity

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "MassEntity_structs.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class MassEntity.MassSubsystemBase
// 0x0008 (0x0038 - 0x0030)
class UMassSubsystemBase : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassSubsystemBase">();
	}
	static class UMassSubsystemBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassSubsystemBase>();
	}
};
static_assert(alignof(UMassSubsystemBase) == 0x000008, "Wrong alignment on UMassSubsystemBase");
static_assert(sizeof(UMassSubsystemBase) == 0x000038, "Wrong size on UMassSubsystemBase");

// Class MassEntity.MassTickableSubsystemBase
// 0x0008 (0x0048 - 0x0040)
class UMassTickableSubsystemBase final : public UTickableWorldSubsystem
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassTickableSubsystemBase">();
	}
	static class UMassTickableSubsystemBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassTickableSubsystemBase>();
	}
};
static_assert(alignof(UMassTickableSubsystemBase) == 0x000008, "Wrong alignment on UMassTickableSubsystemBase");
static_assert(sizeof(UMassTickableSubsystemBase) == 0x000048, "Wrong size on UMassTickableSubsystemBase");

// Class MassEntity.MassModuleSettings
// 0x0000 (0x0028 - 0x0028)
class UMassModuleSettings : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassModuleSettings">();
	}
	static class UMassModuleSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassModuleSettings>();
	}
};
static_assert(alignof(UMassModuleSettings) == 0x000008, "Wrong alignment on UMassModuleSettings");
static_assert(sizeof(UMassModuleSettings) == 0x000028, "Wrong size on UMassModuleSettings");

// Class MassEntity.MassEntitySettings
// 0x0108 (0x0130 - 0x0028)
class UMassEntitySettings final : public UMassModuleSettings
{
public:
	int32                                         ChunkMemorySize;                                   // 0x0028(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DumpDependencyGraphFileName;                       // 0x0030(0x0010)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassProcessingPhaseConfig             ProcessingPhasesConfig[0x6];                       // 0x0040(0x0020)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UMassProcessor*>                 ProcessorCDOs;                                     // 0x0100(0x0010)(Edit, ExportObject, EditFixedSize, ZeroConstructor, Transient, EditConst, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_110[0x20];                                     // 0x0110(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassEntitySettings">();
	}
	static class UMassEntitySettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassEntitySettings>();
	}
};
static_assert(alignof(UMassEntitySettings) == 0x000008, "Wrong alignment on UMassEntitySettings");
static_assert(sizeof(UMassEntitySettings) == 0x000130, "Wrong size on UMassEntitySettings");
static_assert(offsetof(UMassEntitySettings, ChunkMemorySize) == 0x000028, "Member 'UMassEntitySettings::ChunkMemorySize' has a wrong offset!");
static_assert(offsetof(UMassEntitySettings, DumpDependencyGraphFileName) == 0x000030, "Member 'UMassEntitySettings::DumpDependencyGraphFileName' has a wrong offset!");
static_assert(offsetof(UMassEntitySettings, ProcessingPhasesConfig) == 0x000040, "Member 'UMassEntitySettings::ProcessingPhasesConfig' has a wrong offset!");
static_assert(offsetof(UMassEntitySettings, ProcessorCDOs) == 0x000100, "Member 'UMassEntitySettings::ProcessorCDOs' has a wrong offset!");

// Class MassEntity.MassEntitySubsystem
// 0x0010 (0x0048 - 0x0038)
class UMassEntitySubsystem final : public UMassSubsystemBase
{
public:
	uint8                                         Pad_38[0x10];                                      // 0x0038(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassEntitySubsystem">();
	}
	static class UMassEntitySubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassEntitySubsystem>();
	}
};
static_assert(alignof(UMassEntitySubsystem) == 0x000008, "Wrong alignment on UMassEntitySubsystem");
static_assert(sizeof(UMassEntitySubsystem) == 0x000048, "Wrong size on UMassEntitySubsystem");

// Class MassEntity.MassProcessor
// 0x0088 (0x00B0 - 0x0028)
class UMassProcessor : public UObject
{
public:
	struct FMassProcessorExecutionOrder           ExecutionOrder;                                    // 0x0028(0x0028)(Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	EMassProcessingPhase                          ProcessingPhase;                                   // 0x0050(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         ExecutionFlags;                                    // 0x0051(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bAutoRegisterWithProcessingPhases : 1;             // 0x0052(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Config, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         BitPad_52_1 : 3;                                   // 0x0052(0x0001)(Fixing Bit-Field Size Between Bits [ Dumper-7 ])
	uint8                                         bRequiresGameThreadExecution : 1;                  // 0x0052(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, Config, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_53[0x5D];                                      // 0x0053(0x005D)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassProcessor">();
	}
	static class UMassProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassProcessor>();
	}
};
static_assert(alignof(UMassProcessor) == 0x000008, "Wrong alignment on UMassProcessor");
static_assert(sizeof(UMassProcessor) == 0x0000B0, "Wrong size on UMassProcessor");
static_assert(offsetof(UMassProcessor, ExecutionOrder) == 0x000028, "Member 'UMassProcessor::ExecutionOrder' has a wrong offset!");
static_assert(offsetof(UMassProcessor, ProcessingPhase) == 0x000050, "Member 'UMassProcessor::ProcessingPhase' has a wrong offset!");
static_assert(offsetof(UMassProcessor, ExecutionFlags) == 0x000051, "Member 'UMassProcessor::ExecutionFlags' has a wrong offset!");

// Class MassEntity.MassObserverProcessor
// 0x0018 (0x00C8 - 0x00B0)
class UMassObserverProcessor final : public UMassProcessor
{
public:
	bool                                          bAutoRegisterWithObserverRegistry;                 // 0x00B0(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptStruct*                          ObservedType;                                      // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C0[0x8];                                       // 0x00C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassObserverProcessor">();
	}
	static class UMassObserverProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassObserverProcessor>();
	}
};
static_assert(alignof(UMassObserverProcessor) == 0x000008, "Wrong alignment on UMassObserverProcessor");
static_assert(sizeof(UMassObserverProcessor) == 0x0000C8, "Wrong size on UMassObserverProcessor");
static_assert(offsetof(UMassObserverProcessor, bAutoRegisterWithObserverRegistry) == 0x0000B0, "Member 'UMassObserverProcessor::bAutoRegisterWithObserverRegistry' has a wrong offset!");
static_assert(offsetof(UMassObserverProcessor, ObservedType) == 0x0000B8, "Member 'UMassObserverProcessor::ObservedType' has a wrong offset!");

// Class MassEntity.MassObserverRegistry
// 0x0140 (0x0168 - 0x0028)
class UMassObserverRegistry final : public UObject
{
public:
	struct FMassEntityObserverClassesMap          FragmentObservers[0x2];                            // 0x0028(0x0050)(Protected, NativeAccessSpecifierProtected)
	struct FMassEntityObserverClassesMap          TagObservers[0x2];                                 // 0x00C8(0x0050)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassObserverRegistry">();
	}
	static class UMassObserverRegistry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassObserverRegistry>();
	}
};
static_assert(alignof(UMassObserverRegistry) == 0x000008, "Wrong alignment on UMassObserverRegistry");
static_assert(sizeof(UMassObserverRegistry) == 0x000168, "Wrong size on UMassObserverRegistry");
static_assert(offsetof(UMassObserverRegistry, FragmentObservers) == 0x000028, "Member 'UMassObserverRegistry::FragmentObservers' has a wrong offset!");
static_assert(offsetof(UMassObserverRegistry, TagObservers) == 0x0000C8, "Member 'UMassObserverRegistry::TagObservers' has a wrong offset!");

// Class MassEntity.MassCompositeProcessor
// 0x0040 (0x00F0 - 0x00B0)
class UMassCompositeProcessor final : public UMassProcessor
{
public:
	struct FMassRuntimePipeline                   ChildPipeline;                                     // 0x00B0(0x0018)(Edit, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   GroupName;                                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D0[0x20];                                      // 0x00D0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassCompositeProcessor">();
	}
	static class UMassCompositeProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassCompositeProcessor>();
	}
};
static_assert(alignof(UMassCompositeProcessor) == 0x000008, "Wrong alignment on UMassCompositeProcessor");
static_assert(sizeof(UMassCompositeProcessor) == 0x0000F0, "Wrong size on UMassCompositeProcessor");
static_assert(offsetof(UMassCompositeProcessor, ChildPipeline) == 0x0000B0, "Member 'UMassCompositeProcessor::ChildPipeline' has a wrong offset!");
static_assert(offsetof(UMassCompositeProcessor, GroupName) == 0x0000C8, "Member 'UMassCompositeProcessor::GroupName' has a wrong offset!");

// Class MassEntity.MassSettings
// 0x0050 (0x0088 - 0x0038)
class UMassSettings final : public UDeveloperSettings
{
public:
	TMap<class FName, class UMassModuleSettings*> ModuleSettings;                                    // 0x0038(0x0050)(Edit, EditFixedSize, EditConst, NoClear, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassSettings">();
	}
	static class UMassSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassSettings>();
	}
};
static_assert(alignof(UMassSettings) == 0x000008, "Wrong alignment on UMassSettings");
static_assert(sizeof(UMassSettings) == 0x000088, "Wrong size on UMassSettings");
static_assert(offsetof(UMassSettings, ModuleSettings) == 0x000038, "Member 'UMassSettings::ModuleSettings' has a wrong offset!");

}

