#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseChest

#include "Basic.hpp"

#include "RGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BaseChest.BP_BaseChest_C.BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature) == 0x000008, "Wrong alignment on BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature");
static_assert(sizeof(BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature) == 0x000008, "Wrong size on BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature");
static_assert(offsetof(BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature, Actor) == 0x000000, "Member 'BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature::Actor' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature) == 0x000008, "Wrong alignment on BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature");
static_assert(sizeof(BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature) == 0x000008, "Wrong size on BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature");
static_assert(offsetof(BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature, Actor) == 0x000000, "Member 'BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature::Actor' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.CanInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_BaseChest_C_CanInteract final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLooted_Value;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_CanInteract) == 0x000008, "Wrong alignment on BP_BaseChest_C_CanInteract");
static_assert(sizeof(BP_BaseChest_C_CanInteract) == 0x000010, "Wrong size on BP_BaseChest_C_CanInteract");
static_assert(offsetof(BP_BaseChest_C_CanInteract, Controller) == 0x000000, "Member 'BP_BaseChest_C_CanInteract::Controller' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CanInteract, ReturnValue) == 0x000008, "Member 'BP_BaseChest_C_CanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CanInteract, CallFunc_IsLooted_Value) == 0x000009, "Member 'BP_BaseChest_C_CanInteract::CallFunc_IsLooted_Value' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CanInteract, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BP_BaseChest_C_CanInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CanInteract, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000B, "Member 'BP_BaseChest_C_CanInteract::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CanInteract, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'BP_BaseChest_C_CanInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.CheckAndUpdateChestState
// 0x0068 (0x0068 - 0x0000)
struct BP_BaseChest_C_CheckAndUpdateChestState final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerState*                          K2Node_DynamicCast_AsRPlayer_State;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetUniqueNetIdString_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRUniqueChestState                     CallFunc_Array_Get_Item;                           // 0x0048(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_CheckAndUpdateChestState) == 0x000008, "Wrong alignment on BP_BaseChest_C_CheckAndUpdateChestState");
static_assert(sizeof(BP_BaseChest_C_CheckAndUpdateChestState) == 0x000068, "Wrong size on BP_BaseChest_C_CheckAndUpdateChestState");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, Controller) == 0x000000, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::Controller' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, K2Node_DynamicCast_AsRPlayer_State) == 0x000010, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::K2Node_DynamicCast_AsRPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, CallFunc_GetUniqueNetIdString_ReturnValue) == 0x000020, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::CallFunc_GetUniqueNetIdString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_CheckAndUpdateChestState, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000062, "Member 'BP_BaseChest_C_CheckAndUpdateChestState::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.ChestOpen
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseChest_C_ChestOpen final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_ChestOpen) == 0x000008, "Wrong alignment on BP_BaseChest_C_ChestOpen");
static_assert(sizeof(BP_BaseChest_C_ChestOpen) == 0x000008, "Wrong size on BP_BaseChest_C_ChestOpen");
static_assert(offsetof(BP_BaseChest_C_ChestOpen, PlayerController) == 0x000000, "Member 'BP_BaseChest_C_ChestOpen::PlayerController' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.ExecuteUbergraph_BP_BaseChest
// 0x0440 (0x0440 - 0x0000)
struct BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_BehaviourName;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRoutedObjectData                      K2Node_Event_RoutedData;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      K2Node_Event_controller;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_2;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_PlayerController_1;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<EMutatorRarity, float>                   K2Node_MakeMap_Map;                                // 0x0078(0x0050)()
	EMutatorRarity                                CallFunc_GetWeightedRarity_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue_1;           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_3;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Duration_2;                     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_From;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_To;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_4;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Duration_1;                     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ReferenceParm, ContainsInstancedReference)
	TDelegate<void(const struct FGameplayTag& ObjectiveTag, bool bCompleted)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Duration;                       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* ActorUsedOn)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x01C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ARPickupableItem* PickedUpItem, int32 PickupCost, class APlayerController* PlayerController)> K2Node_CreateDelegate_OutputDelegate_3; // 0x01D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_Generic_Chest_C*                   K2Node_DynamicCast_AsABP_Generic_Chest;            // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue;                // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetSpawnedItems_ReturnValue;              // 0x0268(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPickupableItem*                       K2Node_DynamicCast_AsRPickupable_Item;             // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPickupableMutator*                    K2Node_DynamicCast_AsRPickupable_Mutator;          // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPickupableItem*                       K2Node_CustomEvent_PickedUpItem;                   // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PickupCost;                     // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController;               // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue; // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_ActorUsedOn;                    // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Actor_1;                // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Actor;                  // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARObjectiveManager*                     CallFunc_GetObjectiveManager_ReturnValue;          // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AROverworldManager*                     CallFunc_GetOverworldManager_ReturnValue;          // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URNodeData*                             CallFunc_GetCurrentNodeData_ReturnValue;           // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ObjectiveTag;                   // 0x0328(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCompleted;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332[0x2];                                      // 0x0332(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChestState                                   K2Node_Event_NewChestState;                        // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PlayerController;                     // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerState*                          K2Node_DynamicCast_AsRPlayer_State;                // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A[0x6];                                      // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetUniqueNetIdString_ReturnValue;         // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRUniqueChestState                     K2Node_MakeStruct_RUniqueChestState;               // 0x0370(0x0018)()
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRUniqueChestState                     CallFunc_Array_Get_Item_3;                         // 0x0398(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB[0x1];                                      // 0x03BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool* RetValue)>               K2Node_CreateDelegate_OutputDelegate_4;            // 0x03BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue_1; // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFCInvokeBlueprintProxy*                CallFunc_CreateInvokeProxyObject_ReturnValue;      // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue_2; // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue_3; // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue_4; // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeMap_Value_0_ImplicitCast;               // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeMap_Value_1_ImplicitCast;               // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeMap_Value_2_ImplicitCast;               // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast_1;       // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast_2;       // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LootPickedUpUpdate_Delta_ImplicitCast;    // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest) == 0x000008, "Wrong alignment on BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest");
static_assert(sizeof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest) == 0x000440, "Wrong size on BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, EntryPoint) == 0x000000, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_Event_BehaviourName) == 0x000038, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_Event_BehaviourName' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_Event_RoutedData) == 0x000040, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_Event_RoutedData' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_Event_controller) == 0x000048, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_Event_controller' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_IsLocalController_ReturnValue) == 0x000050, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000058, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x000060, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_MakeLiteralDouble_ReturnValue_2) == 0x000068, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_MakeLiteralDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CustomEvent_PlayerController_1) == 0x000070, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CustomEvent_PlayerController_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_MakeMap_Map) == 0x000078, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetWeightedRarity_ReturnValue) == 0x0000C8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetWeightedRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_StartCameraShake_ReturnValue) == 0x0000D0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_StartCameraShake_ReturnValue_1) == 0x0000D8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_StartCameraShake_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000E0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0000F8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000110, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_MakeLiteralDouble_ReturnValue_3) == 0x000128, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_MakeLiteralDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000130, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CustomEvent_Duration_2) == 0x000138, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CustomEvent_Duration_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CustomEvent_From) == 0x000140, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CustomEvent_From' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CustomEvent_To) == 0x000148, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CustomEvent_To' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000150, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_MakeLiteralDouble_ReturnValue_4) == 0x000158, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_MakeLiteralDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, Temp_int_Array_Index_Variable_3) == 0x000160, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CustomEvent_Duration_1) == 0x000168, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CustomEvent_Duration_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000170, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Array_Get_Item) == 0x000178, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Array_Length_ReturnValue) == 0x000180, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_MakeArray_Array) == 0x000188, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CreateDelegate_OutputDelegate_1) == 0x000198, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Array_Get_Item_1) == 0x0001A8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Array_Length_ReturnValue_1) == 0x0001B0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CustomEvent_Duration) == 0x0001B8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001C0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0001D0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001D8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x0001E8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000200, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000218, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetAnimInstance_ReturnValue) == 0x000220, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_DynamicCast_AsABP_Generic_Chest) == 0x000228, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_DynamicCast_AsABP_Generic_Chest' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_DynamicCast_bSuccess) == 0x000230, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_IsValid_ReturnValue) == 0x000231, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000238, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, Temp_int_Loop_Counter_Variable_2) == 0x000250, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Less_IntInt_ReturnValue) == 0x000254, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Add_IntInt_ReturnValue_2) == 0x000258, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetRGameState_ReturnValue) == 0x000260, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetRGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetSpawnedItems_ReturnValue) == 0x000268, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetSpawnedItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Array_Get_Item_2) == 0x000278, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Array_Length_ReturnValue_2) == 0x000280, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_DynamicCast_AsRPickupable_Item) == 0x000288, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_DynamicCast_AsRPickupable_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_DynamicCast_bSuccess_1) == 0x000290, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Less_IntInt_ReturnValue_1) == 0x000291, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_DynamicCast_AsRPickupable_Mutator) == 0x000298, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_DynamicCast_AsRPickupable_Mutator' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_DynamicCast_bSuccess_2) == 0x0002A0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CustomEvent_PickedUpItem) == 0x0002A8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CustomEvent_PickedUpItem' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CustomEvent_PickupCost) == 0x0002B0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CustomEvent_PickupCost' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CustomEvent_PlayerController) == 0x0002B8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0002C0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetFirstLocalGamePlayerController_ReturnValue) == 0x0002C8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetFirstLocalGamePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0002D0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CustomEvent_ActorUsedOn) == 0x0002D8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CustomEvent_ActorUsedOn' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002E0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_ComponentBoundEvent_Actor_1) == 0x0002E8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_ComponentBoundEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_ComponentBoundEvent_Actor) == 0x0002F0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_ComponentBoundEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002F8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetObjectiveManager_ReturnValue) == 0x000300, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetObjectiveManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetOverworldManager_ReturnValue) == 0x000308, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetOverworldManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_IsValid_ReturnValue_1) == 0x000310, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_IsValid_ReturnValue_2) == 0x000311, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetCurrentNodeData_ReturnValue) == 0x000318, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetCurrentNodeData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_IsValid_ReturnValue_3) == 0x000320, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, Temp_int_Loop_Counter_Variable_3) == 0x000324, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CustomEvent_ObjectiveTag) == 0x000328, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CustomEvent_ObjectiveTag' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CustomEvent_bCompleted) == 0x000330, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CustomEvent_bCompleted' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Less_IntInt_ReturnValue_2) == 0x000331, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Add_IntInt_ReturnValue_3) == 0x000334, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_Event_NewChestState) == 0x000338, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_Event_NewChestState' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_Event_PlayerController) == 0x000340, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_Event_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_IsValid_ReturnValue_4) == 0x000348, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_DynamicCast_AsRPlayer_State) == 0x000350, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_DynamicCast_AsRPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_DynamicCast_bSuccess_3) == 0x000358, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_IsValid_ReturnValue_5) == 0x000359, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetUniqueNetIdString_ReturnValue) == 0x000360, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetUniqueNetIdString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_MakeStruct_RUniqueChestState) == 0x000370, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_MakeStruct_RUniqueChestState' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Lerp_ReturnValue) == 0x000388, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Not_PreBool_ReturnValue_1) == 0x000390, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Array_Get_Item_3) == 0x000398, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Array_Add_ReturnValue) == 0x0003B0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Array_Length_ReturnValue_3) == 0x0003B4, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0003B8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Less_IntInt_ReturnValue_3) == 0x0003B9, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_BooleanAND_ReturnValue) == 0x0003BA, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_CreateDelegate_OutputDelegate_4) == 0x0003BC, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetFirstLocalGamePlayerController_ReturnValue_1) == 0x0003D0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetFirstLocalGamePlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_CreateInvokeProxyObject_ReturnValue) == 0x0003D8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_CreateInvokeProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_IsValid_ReturnValue_6) == 0x0003E0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetFirstLocalGamePlayerController_ReturnValue_2) == 0x0003E8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetFirstLocalGamePlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetFirstLocalGamePlayerController_ReturnValue_3) == 0x0003F0, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetFirstLocalGamePlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_GetFirstLocalGamePlayerController_ReturnValue_4) == 0x0003F8, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_GetFirstLocalGamePlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_MakeMap_Value_0_ImplicitCast) == 0x000400, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_MakeMap_Value_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_MakeMap_Value_1_ImplicitCast) == 0x000404, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_MakeMap_Value_1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, K2Node_MakeMap_Value_2_ImplicitCast) == 0x000408, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::K2Node_MakeMap_Value_2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x00040C, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Delay_Duration_ImplicitCast) == 0x000410, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x000414, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000418, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_SetPlayRate_NewRate_ImplicitCast_1) == 0x00041C, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_SetPlayRate_NewRate_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_SetPlayRate_NewRate_ImplicitCast_2) == 0x000420, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_SetPlayRate_NewRate_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_LootPickedUpUpdate_Delta_ImplicitCast) == 0x000428, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_LootPickedUpUpdate_Delta_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000430, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000438, "Member 'BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.Get Reward Spawn Pos
// 0x0030 (0x0030 - 0x0000)
struct BP_BaseChest_C_Get_Reward_Spawn_Pos final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_Get_Reward_Spawn_Pos) == 0x000008, "Wrong alignment on BP_BaseChest_C_Get_Reward_Spawn_Pos");
static_assert(sizeof(BP_BaseChest_C_Get_Reward_Spawn_Pos) == 0x000030, "Wrong size on BP_BaseChest_C_Get_Reward_Spawn_Pos");
static_assert(offsetof(BP_BaseChest_C_Get_Reward_Spawn_Pos, Pos) == 0x000000, "Member 'BP_BaseChest_C_Get_Reward_Spawn_Pos::Pos' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_Get_Reward_Spawn_Pos, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'BP_BaseChest_C_Get_Reward_Spawn_Pos::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.HandleInteraction
// 0x0180 (0x0180 - 0x0000)
struct BP_BaseChest_C_HandleInteraction final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      InPlayerController;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARGamePlayerController*                 K2Node_DynamicCast_AsRGame_Player_Controller;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetControlledPlayerPawn_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URPlayerGScriptComponent*               CallFunc_GetPlayerGScriptComponent_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn_1;               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_3;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerState*                          K2Node_DynamicCast_AsRPlayer_State;                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0010)()
	bool                                          CallFunc_HasKeys_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_4;                 // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn_2;               // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0148(0x0010)()
	struct FRChatLogMessage                       K2Node_MakeStruct_RChatLogMessage;                 // 0x0158(0x0020)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_HandleInteraction) == 0x000008, "Wrong alignment on BP_BaseChest_C_HandleInteraction");
static_assert(sizeof(BP_BaseChest_C_HandleInteraction) == 0x000180, "Wrong size on BP_BaseChest_C_HandleInteraction");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, PlayerController) == 0x000000, "Member 'BP_BaseChest_C_HandleInteraction::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, InPlayerController) == 0x000008, "Member 'BP_BaseChest_C_HandleInteraction::InPlayerController' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_DynamicCast_AsRGame_Player_Controller) == 0x000018, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_DynamicCast_AsRGame_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_GetControlledPlayerPawn_ReturnValue) == 0x000028, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_GetControlledPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000030, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000040, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_GetPlayerGScriptComponent_ReturnValue) == 0x000048, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_GetPlayerGScriptComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000050, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_HasMutator_ReturnValue) == 0x000058, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_HasMutator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_DynamicCast_AsRPlayer_Pawn_1) == 0x000060, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_DynamicCast_AsRPlayer_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_K2_GetPawn_ReturnValue_3) == 0x000070, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_K2_GetPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_DynamicCast_AsRPlayer_State) == 0x000078, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_DynamicCast_AsRPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_GetPlayerName_ReturnValue) == 0x000088, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_HasKeys_ReturnValue) == 0x0000A8, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_HasKeys_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_MakeStruct_FormatArgumentData) == 0x0000B0, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_Format_ReturnValue) == 0x000108, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_Conv_TextToString_ReturnValue) == 0x000118, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_K2_GetPawn_ReturnValue_4) == 0x000128, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_K2_GetPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_Conv_StringToName_ReturnValue) == 0x000130, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_DynamicCast_AsRPlayer_Pawn_2) == 0x000138, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_DynamicCast_AsRPlayer_Pawn_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_DynamicCast_bSuccess_4) == 0x000140, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, CallFunc_Conv_NameToText_ReturnValue) == 0x000148, "Member 'BP_BaseChest_C_HandleInteraction::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_MakeStruct_RChatLogMessage) == 0x000158, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_MakeStruct_RChatLogMessage' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_HandleInteraction, K2Node_SwitchEnum_CmpSuccess) == 0x000178, "Member 'BP_BaseChest_C_HandleInteraction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.InitializeVisuals
// 0x0050 (0x0050 - 0x0000)
struct BP_BaseChest_C_InitializeVisuals final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_InitializeVisuals) == 0x000008, "Wrong alignment on BP_BaseChest_C_InitializeVisuals");
static_assert(sizeof(BP_BaseChest_C_InitializeVisuals) == 0x000050, "Wrong size on BP_BaseChest_C_InitializeVisuals");
static_assert(offsetof(BP_BaseChest_C_InitializeVisuals, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BaseChest_C_InitializeVisuals::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_InitializeVisuals, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BaseChest_C_InitializeVisuals::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_InitializeVisuals, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BaseChest_C_InitializeVisuals::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_InitializeVisuals, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_BaseChest_C_InitializeVisuals::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_InitializeVisuals, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_BaseChest_C_InitializeVisuals::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_InitializeVisuals, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000028, "Member 'BP_BaseChest_C_InitializeVisuals::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_InitializeVisuals, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_BaseChest_C_InitializeVisuals::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_InitializeVisuals, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000038, "Member 'BP_BaseChest_C_InitializeVisuals::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_InitializeVisuals, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_BaseChest_C_InitializeVisuals::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_InitializeVisuals, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BP_BaseChest_C_InitializeVisuals::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_InitializeVisuals, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_BaseChest_C_InitializeVisuals::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.IsLocked
// 0x0002 (0x0002 - 0x0000)
struct BP_BaseChest_C_IsLocked final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_IsLocked) == 0x000001, "Wrong alignment on BP_BaseChest_C_IsLocked");
static_assert(sizeof(BP_BaseChest_C_IsLocked) == 0x000002, "Wrong size on BP_BaseChest_C_IsLocked");
static_assert(offsetof(BP_BaseChest_C_IsLocked, Value) == 0x000000, "Member 'BP_BaseChest_C_IsLocked::Value' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_IsLocked, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_BaseChest_C_IsLocked::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.IsLooted
// 0x0002 (0x0002 - 0x0000)
struct BP_BaseChest_C_IsLooted final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_IsLooted) == 0x000001, "Wrong alignment on BP_BaseChest_C_IsLooted");
static_assert(sizeof(BP_BaseChest_C_IsLooted) == 0x000002, "Wrong size on BP_BaseChest_C_IsLooted");
static_assert(offsetof(BP_BaseChest_C_IsLooted, Value) == 0x000000, "Member 'BP_BaseChest_C_IsLooted::Value' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_IsLooted, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_BaseChest_C_IsLooted::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.LootPickedUpUpdate
// 0x0068 (0x0068 - 0x0000)
struct BP_BaseChest_C_LootPickedUpUpdate final
{
public:
	double                                        Delta;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_A_ImplicitCast_1;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_2; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_LootPickedUpUpdate) == 0x000008, "Wrong alignment on BP_BaseChest_C_LootPickedUpUpdate");
static_assert(sizeof(BP_BaseChest_C_LootPickedUpUpdate) == 0x000068, "Wrong size on BP_BaseChest_C_LootPickedUpUpdate");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, Delta) == 0x000000, "Member 'BP_BaseChest_C_LootPickedUpUpdate::Delta' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_Lerp_ReturnValue_1) == 0x000010, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_Lerp_ReturnValue_2) == 0x000018, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_Lerp_ReturnValue_3) == 0x000020, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_Lerp_ReturnValue_4) == 0x000028, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_Lerp_ReturnValue_5) == 0x000030, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast) == 0x000038, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x00003C, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000040, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000044, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_Lerp_A_ImplicitCast) == 0x000048, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x000050, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_Lerp_A_ImplicitCast_1) == 0x000058, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_Lerp_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_LootPickedUpUpdate, CallFunc_SetIntensity_NewIntensity_ImplicitCast_2) == 0x000060, "Member 'BP_BaseChest_C_LootPickedUpUpdate::CallFunc_SetIntensity_NewIntensity_ImplicitCast_2' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseChest_C_OnInteract final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_OnInteract) == 0x000008, "Wrong alignment on BP_BaseChest_C_OnInteract");
static_assert(sizeof(BP_BaseChest_C_OnInteract) == 0x000008, "Wrong size on BP_BaseChest_C_OnInteract");
static_assert(offsetof(BP_BaseChest_C_OnInteract, Controller) == 0x000000, "Member 'BP_BaseChest_C_OnInteract::Controller' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.OnItemPickedUp
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseChest_C_OnItemPickedUp final
{
public:
	class ARPickupableItem*                       PickedUpItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         PickupCost;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_OnItemPickedUp) == 0x000008, "Wrong alignment on BP_BaseChest_C_OnItemPickedUp");
static_assert(sizeof(BP_BaseChest_C_OnItemPickedUp) == 0x000018, "Wrong size on BP_BaseChest_C_OnItemPickedUp");
static_assert(offsetof(BP_BaseChest_C_OnItemPickedUp, PickedUpItem) == 0x000000, "Member 'BP_BaseChest_C_OnItemPickedUp::PickedUpItem' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_OnItemPickedUp, PickupCost) == 0x000008, "Member 'BP_BaseChest_C_OnItemPickedUp::PickupCost' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_OnItemPickedUp, PlayerController) == 0x000010, "Member 'BP_BaseChest_C_OnItemPickedUp::PlayerController' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.OnKeyUsed_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseChest_C_OnKeyUsed_Event final
{
public:
	class AActor*                                 ActorUsedOn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_OnKeyUsed_Event) == 0x000008, "Wrong alignment on BP_BaseChest_C_OnKeyUsed_Event");
static_assert(sizeof(BP_BaseChest_C_OnKeyUsed_Event) == 0x000008, "Wrong size on BP_BaseChest_C_OnKeyUsed_Event");
static_assert(offsetof(BP_BaseChest_C_OnKeyUsed_Event, ActorUsedOn) == 0x000000, "Member 'BP_BaseChest_C_OnKeyUsed_Event::ActorUsedOn' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.OnObjectiveEnded_Event
// 0x000C (0x000C - 0x0000)
struct BP_BaseChest_C_OnObjectiveEnded_Event final
{
public:
	struct FGameplayTag                           ObjectiveTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompleted;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_OnObjectiveEnded_Event) == 0x000004, "Wrong alignment on BP_BaseChest_C_OnObjectiveEnded_Event");
static_assert(sizeof(BP_BaseChest_C_OnObjectiveEnded_Event) == 0x00000C, "Wrong size on BP_BaseChest_C_OnObjectiveEnded_Event");
static_assert(offsetof(BP_BaseChest_C_OnObjectiveEnded_Event, ObjectiveTag) == 0x000000, "Member 'BP_BaseChest_C_OnObjectiveEnded_Event::ObjectiveTag' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_OnObjectiveEnded_Event, bCompleted) == 0x000008, "Member 'BP_BaseChest_C_OnObjectiveEnded_Event::bCompleted' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.PlayBuildupTimeline
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseChest_C_PlayBuildupTimeline final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        From;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        To;                                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_PlayBuildupTimeline) == 0x000008, "Wrong alignment on BP_BaseChest_C_PlayBuildupTimeline");
static_assert(sizeof(BP_BaseChest_C_PlayBuildupTimeline) == 0x000018, "Wrong size on BP_BaseChest_C_PlayBuildupTimeline");
static_assert(offsetof(BP_BaseChest_C_PlayBuildupTimeline, Duration) == 0x000000, "Member 'BP_BaseChest_C_PlayBuildupTimeline::Duration' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_PlayBuildupTimeline, From) == 0x000008, "Member 'BP_BaseChest_C_PlayBuildupTimeline::From' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_PlayBuildupTimeline, To) == 0x000010, "Member 'BP_BaseChest_C_PlayBuildupTimeline::To' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.PlayerStateIsValid
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseChest_C_PlayerStateIsValid final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGamePlayerController*                 CallFunc_GetFirstLocalGamePlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_PlayerStateIsValid) == 0x000008, "Wrong alignment on BP_BaseChest_C_PlayerStateIsValid");
static_assert(sizeof(BP_BaseChest_C_PlayerStateIsValid) == 0x000018, "Wrong size on BP_BaseChest_C_PlayerStateIsValid");
static_assert(offsetof(BP_BaseChest_C_PlayerStateIsValid, IsValid) == 0x000000, "Member 'BP_BaseChest_C_PlayerStateIsValid::IsValid' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_PlayerStateIsValid, CallFunc_GetFirstLocalGamePlayerController_ReturnValue) == 0x000008, "Member 'BP_BaseChest_C_PlayerStateIsValid::CallFunc_GetFirstLocalGamePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_PlayerStateIsValid, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BaseChest_C_PlayerStateIsValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_PlayerStateIsValid, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_BaseChest_C_PlayerStateIsValid::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.PlayIdleFadeoutTimeline
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseChest_C_PlayIdleFadeoutTimeline final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_PlayIdleFadeoutTimeline) == 0x000008, "Wrong alignment on BP_BaseChest_C_PlayIdleFadeoutTimeline");
static_assert(sizeof(BP_BaseChest_C_PlayIdleFadeoutTimeline) == 0x000008, "Wrong size on BP_BaseChest_C_PlayIdleFadeoutTimeline");
static_assert(offsetof(BP_BaseChest_C_PlayIdleFadeoutTimeline, Duration) == 0x000000, "Member 'BP_BaseChest_C_PlayIdleFadeoutTimeline::Duration' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.PlayPickedupTimeline
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseChest_C_PlayPickedupTimeline final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_PlayPickedupTimeline) == 0x000008, "Wrong alignment on BP_BaseChest_C_PlayPickedupTimeline");
static_assert(sizeof(BP_BaseChest_C_PlayPickedupTimeline) == 0x000008, "Wrong size on BP_BaseChest_C_PlayPickedupTimeline");
static_assert(offsetof(BP_BaseChest_C_PlayPickedupTimeline, Duration) == 0x000000, "Member 'BP_BaseChest_C_PlayPickedupTimeline::Duration' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.RunRoutedObjectBehaviourByName
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseChest_C_RunRoutedObjectBehaviourByName final
{
public:
	class FName                                   BehaviourName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_RunRoutedObjectBehaviourByName) == 0x000004, "Wrong alignment on BP_BaseChest_C_RunRoutedObjectBehaviourByName");
static_assert(sizeof(BP_BaseChest_C_RunRoutedObjectBehaviourByName) == 0x000008, "Wrong size on BP_BaseChest_C_RunRoutedObjectBehaviourByName");
static_assert(offsetof(BP_BaseChest_C_RunRoutedObjectBehaviourByName, BehaviourName) == 0x000000, "Member 'BP_BaseChest_C_RunRoutedObjectBehaviourByName::BehaviourName' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.RunRoutedObjectBehaviourWithData
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseChest_C_RunRoutedObjectBehaviourWithData final
{
public:
	struct FRoutedObjectData                      RoutedData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseChest_C_RunRoutedObjectBehaviourWithData) == 0x000008, "Wrong alignment on BP_BaseChest_C_RunRoutedObjectBehaviourWithData");
static_assert(sizeof(BP_BaseChest_C_RunRoutedObjectBehaviourWithData) == 0x000008, "Wrong size on BP_BaseChest_C_RunRoutedObjectBehaviourWithData");
static_assert(offsetof(BP_BaseChest_C_RunRoutedObjectBehaviourWithData, RoutedData) == 0x000000, "Member 'BP_BaseChest_C_RunRoutedObjectBehaviourWithData::RoutedData' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.SetChestStateForController
// 0x0010 (0x0010 - 0x0000)
struct BP_BaseChest_C_SetChestStateForController final
{
public:
	EChestState                                   NewChestState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_SetChestStateForController) == 0x000008, "Wrong alignment on BP_BaseChest_C_SetChestStateForController");
static_assert(sizeof(BP_BaseChest_C_SetChestStateForController) == 0x000010, "Wrong size on BP_BaseChest_C_SetChestStateForController");
static_assert(offsetof(BP_BaseChest_C_SetChestStateForController, NewChestState) == 0x000000, "Member 'BP_BaseChest_C_SetChestStateForController::NewChestState' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_SetChestStateForController, PlayerController) == 0x000008, "Member 'BP_BaseChest_C_SetChestStateForController::PlayerController' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.SpawnChestOpenSFX
// 0x0028 (0x0028 - 0x0000)
struct BP_BaseChest_C_SpawnChestOpenSFX final
{
public:
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_SpawnChestOpenSFX) == 0x000008, "Wrong alignment on BP_BaseChest_C_SpawnChestOpenSFX");
static_assert(sizeof(BP_BaseChest_C_SpawnChestOpenSFX) == 0x000028, "Wrong size on BP_BaseChest_C_SpawnChestOpenSFX");
static_assert(offsetof(BP_BaseChest_C_SpawnChestOpenSFX, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000000, "Member 'BP_BaseChest_C_SpawnChestOpenSFX::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_SpawnChestOpenSFX, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_BaseChest_C_SpawnChestOpenSFX::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_SpawnChestOpenSFX, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000020, "Member 'BP_BaseChest_C_SpawnChestOpenSFX::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.UpdateChainsVisibility
// 0x0020 (0x0020 - 0x0000)
struct BP_BaseChest_C_UpdateChainsVisibility final
{
public:
	EChestState                                   Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChestState                                   Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_UpdateChainsVisibility) == 0x000004, "Wrong alignment on BP_BaseChest_C_UpdateChainsVisibility");
static_assert(sizeof(BP_BaseChest_C_UpdateChainsVisibility) == 0x000020, "Wrong size on BP_BaseChest_C_UpdateChainsVisibility");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_byte_Variable) == 0x000000, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_bool_Variable) == 0x000001, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_bool_Variable_1) == 0x000002, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_bool_Variable_2) == 0x000003, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_bool_Variable_3) == 0x000004, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_bool_Variable_4) == 0x000005, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_byte_Variable_1) == 0x000006, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_bool_Variable_5) == 0x000007, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_bool_Variable_6) == 0x000008, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_bool_Variable_7) == 0x000009, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_bool_Variable_8) == 0x00000A, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_bool_Variable_9) == 0x00000B, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, Temp_int_Variable) == 0x00000C, "Member 'BP_BaseChest_C_UpdateChainsVisibility::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_BaseChest_C_UpdateChainsVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, K2Node_Select_Default) == 0x000014, "Member 'BP_BaseChest_C_UpdateChainsVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, K2Node_Select_Default_1) == 0x000015, "Member 'BP_BaseChest_C_UpdateChainsVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, CallFunc_GetNumMaterials_ReturnValue) == 0x000018, "Member 'BP_BaseChest_C_UpdateChainsVisibility::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BaseChest_C_UpdateChainsVisibility::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseChest_C_UpdateChainsVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x00001D, "Member 'BP_BaseChest_C_UpdateChainsVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.GetInteractionIndicatorWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseChest_C_GetInteractionIndicatorWidget final
{
public:
	class UWidgetComponent*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_GetInteractionIndicatorWidget) == 0x000008, "Wrong alignment on BP_BaseChest_C_GetInteractionIndicatorWidget");
static_assert(sizeof(BP_BaseChest_C_GetInteractionIndicatorWidget) == 0x000008, "Wrong size on BP_BaseChest_C_GetInteractionIndicatorWidget");
static_assert(offsetof(BP_BaseChest_C_GetInteractionIndicatorWidget, ReturnValue) == 0x000000, "Member 'BP_BaseChest_C_GetInteractionIndicatorWidget::ReturnValue' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.GetPingableIconTexture
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseChest_C_GetPingableIconTexture final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_GetPingableIconTexture) == 0x000008, "Wrong alignment on BP_BaseChest_C_GetPingableIconTexture");
static_assert(sizeof(BP_BaseChest_C_GetPingableIconTexture) == 0x000008, "Wrong size on BP_BaseChest_C_GetPingableIconTexture");
static_assert(offsetof(BP_BaseChest_C_GetPingableIconTexture, ReturnValue) == 0x000000, "Member 'BP_BaseChest_C_GetPingableIconTexture::ReturnValue' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.GetPingableName
// 0x0010 (0x0010 - 0x0000)
struct BP_BaseChest_C_GetPingableName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_BaseChest_C_GetPingableName) == 0x000008, "Wrong alignment on BP_BaseChest_C_GetPingableName");
static_assert(sizeof(BP_BaseChest_C_GetPingableName) == 0x000010, "Wrong size on BP_BaseChest_C_GetPingableName");
static_assert(offsetof(BP_BaseChest_C_GetPingableName, ReturnValue) == 0x000000, "Member 'BP_BaseChest_C_GetPingableName::ReturnValue' has a wrong offset!");

// Function BP_BaseChest.BP_BaseChest_C.IsCurrentlyPinged
// 0x0001 (0x0001 - 0x0000)
struct BP_BaseChest_C_IsCurrentlyPinged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseChest_C_IsCurrentlyPinged) == 0x000001, "Wrong alignment on BP_BaseChest_C_IsCurrentlyPinged");
static_assert(sizeof(BP_BaseChest_C_IsCurrentlyPinged) == 0x000001, "Wrong size on BP_BaseChest_C_IsCurrentlyPinged");
static_assert(offsetof(BP_BaseChest_C_IsCurrentlyPinged, ReturnValue) == 0x000000, "Member 'BP_BaseChest_C_IsCurrentlyPinged::ReturnValue' has a wrong offset!");

}

