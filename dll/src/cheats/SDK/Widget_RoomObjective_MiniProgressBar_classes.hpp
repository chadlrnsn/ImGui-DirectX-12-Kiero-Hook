#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_RoomObjective_MiniProgressBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_RoomObjective_MiniProgressBar.Widget_RoomObjective_MiniProgressBar_C
// 0x0050 (0x0320 - 0x02D0)
class UWidget_RoomObjective_MiniProgressBar_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Inactive_Trans;                                    // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Enter_Animation;                                   // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundShadow;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FillBackground;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame;                                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ProgressFillImage;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Thresholds;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ARRoomObjectiveObject*                  AssociatedRoomObjectiveObject;                     // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TargetProgress;                                    // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentProgress;                                   // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar(int32 EntryPoint);
	void Initialize();
	void OnInitialized();
	void OnRoomObjectiveCompleted();
	void OnRoomObjectiveObjectUpdated(float AmountCompleted, float AmountRequired);
	void SetProgress(float Porgress);
	void SetProgressBarThreshold(double Thershold);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_RoomObjective_MiniProgressBar_C">();
	}
	static class UWidget_RoomObjective_MiniProgressBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_RoomObjective_MiniProgressBar_C>();
	}
};
static_assert(alignof(UWidget_RoomObjective_MiniProgressBar_C) == 0x000008, "Wrong alignment on UWidget_RoomObjective_MiniProgressBar_C");
static_assert(sizeof(UWidget_RoomObjective_MiniProgressBar_C) == 0x000320, "Wrong size on UWidget_RoomObjective_MiniProgressBar_C");
static_assert(offsetof(UWidget_RoomObjective_MiniProgressBar_C, UberGraphFrame) == 0x0002D0, "Member 'UWidget_RoomObjective_MiniProgressBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWidget_RoomObjective_MiniProgressBar_C, Inactive_Trans) == 0x0002D8, "Member 'UWidget_RoomObjective_MiniProgressBar_C::Inactive_Trans' has a wrong offset!");
static_assert(offsetof(UWidget_RoomObjective_MiniProgressBar_C, Enter_Animation) == 0x0002E0, "Member 'UWidget_RoomObjective_MiniProgressBar_C::Enter_Animation' has a wrong offset!");
static_assert(offsetof(UWidget_RoomObjective_MiniProgressBar_C, BackgroundShadow) == 0x0002E8, "Member 'UWidget_RoomObjective_MiniProgressBar_C::BackgroundShadow' has a wrong offset!");
static_assert(offsetof(UWidget_RoomObjective_MiniProgressBar_C, FillBackground) == 0x0002F0, "Member 'UWidget_RoomObjective_MiniProgressBar_C::FillBackground' has a wrong offset!");
static_assert(offsetof(UWidget_RoomObjective_MiniProgressBar_C, Frame) == 0x0002F8, "Member 'UWidget_RoomObjective_MiniProgressBar_C::Frame' has a wrong offset!");
static_assert(offsetof(UWidget_RoomObjective_MiniProgressBar_C, ProgressFillImage) == 0x000300, "Member 'UWidget_RoomObjective_MiniProgressBar_C::ProgressFillImage' has a wrong offset!");
static_assert(offsetof(UWidget_RoomObjective_MiniProgressBar_C, Thresholds) == 0x000308, "Member 'UWidget_RoomObjective_MiniProgressBar_C::Thresholds' has a wrong offset!");
static_assert(offsetof(UWidget_RoomObjective_MiniProgressBar_C, AssociatedRoomObjectiveObject) == 0x000310, "Member 'UWidget_RoomObjective_MiniProgressBar_C::AssociatedRoomObjectiveObject' has a wrong offset!");
static_assert(offsetof(UWidget_RoomObjective_MiniProgressBar_C, TargetProgress) == 0x000318, "Member 'UWidget_RoomObjective_MiniProgressBar_C::TargetProgress' has a wrong offset!");
static_assert(offsetof(UWidget_RoomObjective_MiniProgressBar_C, CurrentProgress) == 0x00031C, "Member 'UWidget_RoomObjective_MiniProgressBar_C::CurrentProgress' has a wrong offset!");

}

