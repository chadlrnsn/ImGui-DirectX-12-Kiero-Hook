#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_EquipmentSelectButton

#include "Basic.hpp"

#include "RGame_structs.hpp"


namespace SDK::Params
{

// Function Widget_EquipmentSelectButton.Widget_EquipmentSelectButton_C.BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function Widget_EquipmentSelectButton.Widget_EquipmentSelectButton_C.BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function Widget_EquipmentSelectButton.Widget_EquipmentSelectButton_C.BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'Widget_EquipmentSelectButton_C_BndEvt__Widget_EquipmentSelectButton_W_WorkBench_ButtonStyle_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function Widget_EquipmentSelectButton.Widget_EquipmentSelectButton_C.ExecuteUbergraph_Widget_EquipmentSelectButton
// 0x01E8 (0x01E8 - 0x0000)
struct Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ObjectIsA_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_Locked;                          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_GetMeshOfDataAsset_PreviewStaticMesh;     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetMeshOfDataAsset_PreviewSkeletalMesh;   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_Locked_1;                        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URWeaponCosmeticPrimaryAsset*           K2Node_DynamicCast_AsRWeapon_Cosmetic_Primary_Asset; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRChallenge                            CallFunc_GetChallengeByRewardAsset_ReturnValue;    // 0x0068(0x0178)()
	bool                                          CallFunc_ChallengeExists_ReturnValue;              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton) == 0x000008, "Wrong alignment on Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton");
static_assert(sizeof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton) == 0x0001E8, "Wrong size on Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, EntryPoint) == 0x000000, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, CallFunc_GetChallengeManager_ReturnValue) == 0x000010, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, K2Node_ComponentBoundEvent_Button_2) == 0x000020, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, K2Node_ComponentBoundEvent_Button_1) == 0x000028, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, K2Node_ComponentBoundEvent_Button) == 0x000030, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, CallFunc_ObjectIsA_ReturnValue) == 0x000038, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::CallFunc_ObjectIsA_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, CallFunc_IsLocked_Locked) == 0x000039, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::CallFunc_IsLocked_Locked' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, CallFunc_GetMeshOfDataAsset_PreviewStaticMesh) == 0x000040, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::CallFunc_GetMeshOfDataAsset_PreviewStaticMesh' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, CallFunc_GetMeshOfDataAsset_PreviewSkeletalMesh) == 0x000048, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::CallFunc_GetMeshOfDataAsset_PreviewSkeletalMesh' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, CallFunc_IsLocked_Locked_1) == 0x000051, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::CallFunc_IsLocked_Locked_1' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, K2Node_Event_IsDesignTime) == 0x000052, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, K2Node_DynamicCast_AsRWeapon_Cosmetic_Primary_Asset) == 0x000058, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::K2Node_DynamicCast_AsRWeapon_Cosmetic_Primary_Asset' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, CallFunc_GetChallengeByRewardAsset_ReturnValue) == 0x000068, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::CallFunc_GetChallengeByRewardAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton, CallFunc_ChallengeExists_ReturnValue) == 0x0001E0, "Member 'Widget_EquipmentSelectButton_C_ExecuteUbergraph_Widget_EquipmentSelectButton::CallFunc_ChallengeExists_ReturnValue' has a wrong offset!");

// Function Widget_EquipmentSelectButton.Widget_EquipmentSelectButton_C.GetMeshOfDataAsset
// 0x0090 (0x0090 - 0x0000)
struct Widget_EquipmentSelectButton_C_GetMeshOfDataAsset final
{
public:
	class UStaticMesh*                            PreviewStaticMesh;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          PreviewSkeletalMesh;                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URMutatorPrimaryAsset*                  K2Node_DynamicCast_AsRMutator_Primary_Asset;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRMutatorPrimaryAssetMeshPair          CallFunc_Array_Get_Item;                           // 0x0030(0x0038)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadObjectFromSoftObjectPtr_ReturnValue;  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URMutatorPrimaryAsset*                  K2Node_DynamicCast_AsRMutator_Primary_Asset_1;     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset) == 0x000008, "Wrong alignment on Widget_EquipmentSelectButton_C_GetMeshOfDataAsset");
static_assert(sizeof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset) == 0x000090, "Wrong size on Widget_EquipmentSelectButton_C_GetMeshOfDataAsset");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, PreviewStaticMesh) == 0x000000, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::PreviewStaticMesh' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, PreviewSkeletalMesh) == 0x000008, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::PreviewSkeletalMesh' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, K2Node_DynamicCast_AsRMutator_Primary_Asset) == 0x000018, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::K2Node_DynamicCast_AsRMutator_Primary_Asset' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, CallFunc_Array_Get_Item) == 0x000030, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, CallFunc_LoadObjectFromSoftObjectPtr_ReturnValue) == 0x000070, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::CallFunc_LoadObjectFromSoftObjectPtr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000078, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, K2Node_DynamicCast_AsRMutator_Primary_Asset_1) == 0x000080, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::K2Node_DynamicCast_AsRMutator_Primary_Asset_1' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000089, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetMeshOfDataAsset, CallFunc_IsValid_ReturnValue) == 0x00008A, "Member 'Widget_EquipmentSelectButton_C_GetMeshOfDataAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Widget_EquipmentSelectButton.Widget_EquipmentSelectButton_C.GetPrimaryDataAsset
// 0x0008 (0x0008 - 0x0000)
struct Widget_EquipmentSelectButton_C_GetPrimaryDataAsset final
{
public:
	class URPrimaryDataAsset*                     RPrimaryDataAsset;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_EquipmentSelectButton_C_GetPrimaryDataAsset) == 0x000008, "Wrong alignment on Widget_EquipmentSelectButton_C_GetPrimaryDataAsset");
static_assert(sizeof(Widget_EquipmentSelectButton_C_GetPrimaryDataAsset) == 0x000008, "Wrong size on Widget_EquipmentSelectButton_C_GetPrimaryDataAsset");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetPrimaryDataAsset, RPrimaryDataAsset) == 0x000000, "Member 'Widget_EquipmentSelectButton_C_GetPrimaryDataAsset::RPrimaryDataAsset' has a wrong offset!");

// Function Widget_EquipmentSelectButton.Widget_EquipmentSelectButton_C.GetToolTipWidget
// 0x0050 (0x0050 - 0x0000)
struct Widget_EquipmentSelectButton_C_GetToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget_BaseTooltip_C*                  CreatedTooltip;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget_BaseTooltip_C*                  CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URCosmeticCategoryPrimaryAsset*         K2Node_DynamicCast_AsRCosmetic_Category_Primary_Asset; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDescription_ReturnValue;               // 0x0038(0x0010)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_EquipmentSelectButton_C_GetToolTipWidget) == 0x000008, "Wrong alignment on Widget_EquipmentSelectButton_C_GetToolTipWidget");
static_assert(sizeof(Widget_EquipmentSelectButton_C_GetToolTipWidget) == 0x000050, "Wrong size on Widget_EquipmentSelectButton_C_GetToolTipWidget");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetToolTipWidget, ReturnValue) == 0x000000, "Member 'Widget_EquipmentSelectButton_C_GetToolTipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetToolTipWidget, CreatedTooltip) == 0x000008, "Member 'Widget_EquipmentSelectButton_C_GetToolTipWidget::CreatedTooltip' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetToolTipWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'Widget_EquipmentSelectButton_C_GetToolTipWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetToolTipWidget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Widget_EquipmentSelectButton_C_GetToolTipWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetToolTipWidget, CallFunc_Create_ReturnValue) == 0x000020, "Member 'Widget_EquipmentSelectButton_C_GetToolTipWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetToolTipWidget, K2Node_DynamicCast_AsRCosmetic_Category_Primary_Asset) == 0x000028, "Member 'Widget_EquipmentSelectButton_C_GetToolTipWidget::K2Node_DynamicCast_AsRCosmetic_Category_Primary_Asset' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetToolTipWidget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Widget_EquipmentSelectButton_C_GetToolTipWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetToolTipWidget, CallFunc_GetDescription_ReturnValue) == 0x000038, "Member 'Widget_EquipmentSelectButton_C_GetToolTipWidget::CallFunc_GetDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_GetToolTipWidget, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'Widget_EquipmentSelectButton_C_GetToolTipWidget::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function Widget_EquipmentSelectButton.Widget_EquipmentSelectButton_C.HideUnlockInfo
// 0x0028 (0x0028 - 0x0000)
struct Widget_EquipmentSelectButton_C_HideUnlockInfo final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URWeaponCosmeticPrimaryAsset*           K2Node_DynamicCast_AsRWeapon_Cosmetic_Primary_Asset; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWeaponPaintUnlocked_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URSaveGame*                             CallFunc_GetCurrentSaveGame_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLoadoutOptionUnlocked_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_EquipmentSelectButton_C_HideUnlockInfo) == 0x000008, "Wrong alignment on Widget_EquipmentSelectButton_C_HideUnlockInfo");
static_assert(sizeof(Widget_EquipmentSelectButton_C_HideUnlockInfo) == 0x000028, "Wrong size on Widget_EquipmentSelectButton_C_HideUnlockInfo");
static_assert(offsetof(Widget_EquipmentSelectButton_C_HideUnlockInfo, Hide) == 0x000000, "Member 'Widget_EquipmentSelectButton_C_HideUnlockInfo::Hide' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_HideUnlockInfo, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Widget_EquipmentSelectButton_C_HideUnlockInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_HideUnlockInfo, K2Node_DynamicCast_AsRWeapon_Cosmetic_Primary_Asset) == 0x000008, "Member 'Widget_EquipmentSelectButton_C_HideUnlockInfo::K2Node_DynamicCast_AsRWeapon_Cosmetic_Primary_Asset' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_HideUnlockInfo, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Widget_EquipmentSelectButton_C_HideUnlockInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_HideUnlockInfo, CallFunc_IsWeaponPaintUnlocked_ReturnValue) == 0x000011, "Member 'Widget_EquipmentSelectButton_C_HideUnlockInfo::CallFunc_IsWeaponPaintUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_HideUnlockInfo, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'Widget_EquipmentSelectButton_C_HideUnlockInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_HideUnlockInfo, CallFunc_GetCurrentSaveGame_ReturnValue) == 0x000018, "Member 'Widget_EquipmentSelectButton_C_HideUnlockInfo::CallFunc_GetCurrentSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_HideUnlockInfo, CallFunc_IsLoadoutOptionUnlocked_ReturnValue) == 0x000020, "Member 'Widget_EquipmentSelectButton_C_HideUnlockInfo::CallFunc_IsLoadoutOptionUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_HideUnlockInfo, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'Widget_EquipmentSelectButton_C_HideUnlockInfo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function Widget_EquipmentSelectButton.Widget_EquipmentSelectButton_C.IsLocked
// 0x0002 (0x0002 - 0x0000)
struct Widget_EquipmentSelectButton_C_IsLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_EquipmentSelectButton_C_IsLocked) == 0x000001, "Wrong alignment on Widget_EquipmentSelectButton_C_IsLocked");
static_assert(sizeof(Widget_EquipmentSelectButton_C_IsLocked) == 0x000002, "Wrong size on Widget_EquipmentSelectButton_C_IsLocked");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsLocked, Locked) == 0x000000, "Member 'Widget_EquipmentSelectButton_C_IsLocked::Locked' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsLocked, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'Widget_EquipmentSelectButton_C_IsLocked::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function Widget_EquipmentSelectButton.Widget_EquipmentSelectButton_C.IsWeaponPaintUnlocked
// 0x01C8 (0x01C8 - 0x0000)
struct Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked final
{
public:
	class URPrimaryDataAsset*                     Asset;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URWeaponCosmeticPrimaryAsset*           K2Node_DynamicCast_AsRWeapon_Cosmetic_Primary_Asset; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URWeaponPrimaryAsset*                   CallFunc_GetCurrentWeaponPAInView_RWeaponPA;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URSaveGame*                             CallFunc_GetCurrentSaveGame_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLoadoutOptionUnlocked_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRChallenge                            CallFunc_GetChallengeByRewardAsset_ReturnValue;    // 0x0048(0x0178)()
	bool                                          CallFunc_IsChallengeCompleted_ReturnValue;         // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChallengeExists_ReturnValue;              // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked) == 0x000008, "Wrong alignment on Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked");
static_assert(sizeof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked) == 0x0001C8, "Wrong size on Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, Asset) == 0x000000, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::Asset' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, ReturnValue) == 0x000008, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, K2Node_DynamicCast_AsRWeapon_Cosmetic_Primary_Asset) == 0x000010, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::K2Node_DynamicCast_AsRWeapon_Cosmetic_Primary_Asset' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, CallFunc_GetCurrentWeaponPAInView_RWeaponPA) == 0x000020, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::CallFunc_GetCurrentWeaponPAInView_RWeaponPA' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, CallFunc_GetCurrentSaveGame_ReturnValue) == 0x000028, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::CallFunc_GetCurrentSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, CallFunc_IsLoadoutOptionUnlocked_ReturnValue) == 0x000030, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::CallFunc_IsLoadoutOptionUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000038, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, CallFunc_GetChallengeManager_ReturnValue) == 0x000040, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, CallFunc_GetChallengeByRewardAsset_ReturnValue) == 0x000048, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::CallFunc_GetChallengeByRewardAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, CallFunc_IsChallengeCompleted_ReturnValue) == 0x0001C0, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::CallFunc_IsChallengeCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked, CallFunc_ChallengeExists_ReturnValue) == 0x0001C1, "Member 'Widget_EquipmentSelectButton_C_IsWeaponPaintUnlocked::CallFunc_ChallengeExists_ReturnValue' has a wrong offset!");

// Function Widget_EquipmentSelectButton.Widget_EquipmentSelectButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Widget_EquipmentSelectButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_EquipmentSelectButton_C_PreConstruct) == 0x000001, "Wrong alignment on Widget_EquipmentSelectButton_C_PreConstruct");
static_assert(sizeof(Widget_EquipmentSelectButton_C_PreConstruct) == 0x000001, "Wrong size on Widget_EquipmentSelectButton_C_PreConstruct");
static_assert(offsetof(Widget_EquipmentSelectButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Widget_EquipmentSelectButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Widget_EquipmentSelectButton.Widget_EquipmentSelectButton_C.Update
// 0x0018 (0x0018 - 0x0000)
struct Widget_EquipmentSelectButton_C_Update final
{
public:
	class URPrimaryDataAsset*                     Asset;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceLock;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URPrimaryDataAsset*                     Asset_Local;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_EquipmentSelectButton_C_Update) == 0x000008, "Wrong alignment on Widget_EquipmentSelectButton_C_Update");
static_assert(sizeof(Widget_EquipmentSelectButton_C_Update) == 0x000018, "Wrong size on Widget_EquipmentSelectButton_C_Update");
static_assert(offsetof(Widget_EquipmentSelectButton_C_Update, Asset) == 0x000000, "Member 'Widget_EquipmentSelectButton_C_Update::Asset' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_Update, ForceLock) == 0x000008, "Member 'Widget_EquipmentSelectButton_C_Update::ForceLock' has a wrong offset!");
static_assert(offsetof(Widget_EquipmentSelectButton_C_Update, Asset_Local) == 0x000010, "Member 'Widget_EquipmentSelectButton_C_Update::Asset_Local' has a wrong offset!");

}

