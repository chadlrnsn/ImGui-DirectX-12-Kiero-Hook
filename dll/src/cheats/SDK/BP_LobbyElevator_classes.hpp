#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LobbyElevator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LobbyElevator.BP_LobbyElevator_C
// 0x0128 (0x03D0 - 0x02A8)
class ABP_LobbyElevator_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraShakeSourceComponent*            CameraShakeSource;                                 // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UText3DComponent*                       Text_Decend;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UText3DComponent*                       Text_Acend;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFilterVolumeComponent*                 FilterVolume;                                      // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioGameplayVolumeComponent*          AudioVolumeProxy;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   WarningLights;                                     // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Human_Vehicle_DivingBell_Bell_Interior;         // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Human_Vehicle_DivingBell_Base_Interior;         // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TeleportLoc4;                                      // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TeleportLoc3;                                      // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TeleportLoc2;                                      // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TeleportLoc1;                                      // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CraneLine;                                         // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   MainLight;                                         // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Human_Vehicle_DivingBell_Base;                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Human_Vehicle_DivingBell_Bell;                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SharedRoot;                                        // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnTimeline_Alpha_C19EFBB8470FA5674C73DC80AB2CBBDF; // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ReturnTimeline__Direction_C19EFBB8470FA5674C73DC80AB2CBBDF; // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ReturnTimeline;                                    // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         OpenTimeline_Alpha_4FA358F543EB6220D2AA4BA206042C11; // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OpenTimeline__Direction_4FA358F543EB6220D2AA4BA206042C11; // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OpenTimeline;                                      // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RaisedLocation;                                    // 0x0360(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ElevatorDescendDuration;                           // 0x0378(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARPlayerPawn*>                   RPlayerPawns;                                      // 0x0380(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          IsRaised;                                          // 0x0390(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceReqForTeleport;                            // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                TargetLocations;                                   // 0x03A0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, ContainsInstancedReference)
	class AActor*                                 CraneActor;                                        // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOpen;                                           // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          showCraneLine;                                     // 0x03B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARPlayerPawn*>                   FadedPlayerPawns;                                  // 0x03C0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void Close();
	void DescendTimerFinish();
	void ExecuteUbergraph_BP_LobbyElevator(int32 EntryPoint);
	void FadeCamera_Multicast(class APawn* Pawn, float FromAlpha, float ToAlpha, float Duration);
	void Lower();
	void MovePlayer_Multicast(class USceneComponent* TargetSceneComponent, class ARPawnBase* TeleportTarget, bool ShouldTeleport);
	void OnLobbyElevatorSequenceStart_Event();
	void OnRep_IsRaised();
	void OnSettingsUpdated();
	void Open();
	void OpenTimeline__CloseOpenCameraShake__EventFunc();
	void OpenTimeline__FinishedFunc();
	void OpenTimeline__UpdateFunc();
	void Raise();
	void ReceiveBeginPlay();
	void ReplicatedMove_Multicast(double Alpha);
	void ReturnTimeline__Event__EventFunc();
	void ReturnTimeline__FinishedFunc();
	void ReturnTimeline__StartCameraFade__EventFunc();
	void ReturnTimeline__UpdateFunc();
	void StartCameraShake_Multicast();
	void TeleportPlayers();
	void UserConstructionScript();

	bool ConditionMet() const;
	bool ConditionMet_Position(const struct FVector& Position) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LobbyElevator_C">();
	}
	static class ABP_LobbyElevator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LobbyElevator_C>();
	}
};
static_assert(alignof(ABP_LobbyElevator_C) == 0x000008, "Wrong alignment on ABP_LobbyElevator_C");
static_assert(sizeof(ABP_LobbyElevator_C) == 0x0003D0, "Wrong size on ABP_LobbyElevator_C");
static_assert(offsetof(ABP_LobbyElevator_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_LobbyElevator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, CameraShakeSource) == 0x0002B0, "Member 'ABP_LobbyElevator_C::CameraShakeSource' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, Text_Decend) == 0x0002B8, "Member 'ABP_LobbyElevator_C::Text_Decend' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, Text_Acend) == 0x0002C0, "Member 'ABP_LobbyElevator_C::Text_Acend' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, FilterVolume) == 0x0002C8, "Member 'ABP_LobbyElevator_C::FilterVolume' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, AudioVolumeProxy) == 0x0002D0, "Member 'ABP_LobbyElevator_C::AudioVolumeProxy' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, SpotLight) == 0x0002D8, "Member 'ABP_LobbyElevator_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, WarningLights) == 0x0002E0, "Member 'ABP_LobbyElevator_C::WarningLights' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, SM_Human_Vehicle_DivingBell_Bell_Interior) == 0x0002E8, "Member 'ABP_LobbyElevator_C::SM_Human_Vehicle_DivingBell_Bell_Interior' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, SM_Human_Vehicle_DivingBell_Base_Interior) == 0x0002F0, "Member 'ABP_LobbyElevator_C::SM_Human_Vehicle_DivingBell_Base_Interior' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, TeleportLoc4) == 0x0002F8, "Member 'ABP_LobbyElevator_C::TeleportLoc4' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, TeleportLoc3) == 0x000300, "Member 'ABP_LobbyElevator_C::TeleportLoc3' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, TeleportLoc2) == 0x000308, "Member 'ABP_LobbyElevator_C::TeleportLoc2' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, TeleportLoc1) == 0x000310, "Member 'ABP_LobbyElevator_C::TeleportLoc1' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, CraneLine) == 0x000318, "Member 'ABP_LobbyElevator_C::CraneLine' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, MainLight) == 0x000320, "Member 'ABP_LobbyElevator_C::MainLight' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, SM_Human_Vehicle_DivingBell_Base) == 0x000328, "Member 'ABP_LobbyElevator_C::SM_Human_Vehicle_DivingBell_Base' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, SM_Human_Vehicle_DivingBell_Bell) == 0x000330, "Member 'ABP_LobbyElevator_C::SM_Human_Vehicle_DivingBell_Bell' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, SharedRoot) == 0x000338, "Member 'ABP_LobbyElevator_C::SharedRoot' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, ReturnTimeline_Alpha_C19EFBB8470FA5674C73DC80AB2CBBDF) == 0x000340, "Member 'ABP_LobbyElevator_C::ReturnTimeline_Alpha_C19EFBB8470FA5674C73DC80AB2CBBDF' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, ReturnTimeline__Direction_C19EFBB8470FA5674C73DC80AB2CBBDF) == 0x000344, "Member 'ABP_LobbyElevator_C::ReturnTimeline__Direction_C19EFBB8470FA5674C73DC80AB2CBBDF' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, ReturnTimeline) == 0x000348, "Member 'ABP_LobbyElevator_C::ReturnTimeline' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, OpenTimeline_Alpha_4FA358F543EB6220D2AA4BA206042C11) == 0x000350, "Member 'ABP_LobbyElevator_C::OpenTimeline_Alpha_4FA358F543EB6220D2AA4BA206042C11' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, OpenTimeline__Direction_4FA358F543EB6220D2AA4BA206042C11) == 0x000354, "Member 'ABP_LobbyElevator_C::OpenTimeline__Direction_4FA358F543EB6220D2AA4BA206042C11' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, OpenTimeline) == 0x000358, "Member 'ABP_LobbyElevator_C::OpenTimeline' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, RaisedLocation) == 0x000360, "Member 'ABP_LobbyElevator_C::RaisedLocation' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, ElevatorDescendDuration) == 0x000378, "Member 'ABP_LobbyElevator_C::ElevatorDescendDuration' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, RPlayerPawns) == 0x000380, "Member 'ABP_LobbyElevator_C::RPlayerPawns' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, IsRaised) == 0x000390, "Member 'ABP_LobbyElevator_C::IsRaised' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, DistanceReqForTeleport) == 0x000398, "Member 'ABP_LobbyElevator_C::DistanceReqForTeleport' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, TargetLocations) == 0x0003A0, "Member 'ABP_LobbyElevator_C::TargetLocations' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, CraneActor) == 0x0003B0, "Member 'ABP_LobbyElevator_C::CraneActor' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, bIsOpen) == 0x0003B8, "Member 'ABP_LobbyElevator_C::bIsOpen' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, showCraneLine) == 0x0003B9, "Member 'ABP_LobbyElevator_C::showCraneLine' has a wrong offset!");
static_assert(offsetof(ABP_LobbyElevator_C, FadedPlayerPawns) == 0x0003C0, "Member 'ABP_LobbyElevator_C::FadedPlayerPawns' has a wrong offset!");

}

