#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WorldWidgetsPlugin

#include "Basic.hpp"

#include "WorldWidgetsPlugin_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WorldWidgetsPlugin.WorldWidgetCanvas.DestroyPushedWorldWidget
// 0x0010 (0x0010 - 0x0000)
struct WorldWidgetCanvas_DestroyPushedWorldWidget final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldWidgetCanvas_DestroyPushedWorldWidget) == 0x000008, "Wrong alignment on WorldWidgetCanvas_DestroyPushedWorldWidget");
static_assert(sizeof(WorldWidgetCanvas_DestroyPushedWorldWidget) == 0x000010, "Wrong size on WorldWidgetCanvas_DestroyPushedWorldWidget");
static_assert(offsetof(WorldWidgetCanvas_DestroyPushedWorldWidget, WorldContextObject) == 0x000000, "Member 'WorldWidgetCanvas_DestroyPushedWorldWidget::WorldContextObject' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_DestroyPushedWorldWidget, Widget) == 0x000008, "Member 'WorldWidgetCanvas_DestroyPushedWorldWidget::Widget' has a wrong offset!");

// Function WorldWidgetsPlugin.WorldWidgetCanvas.GetWorldWidgetScreenLocation
// 0x0020 (0x0020 - 0x0000)
struct WorldWidgetCanvas_GetWorldWidgetScreenLocation final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldWidgetCanvas_GetWorldWidgetScreenLocation) == 0x000008, "Wrong alignment on WorldWidgetCanvas_GetWorldWidgetScreenLocation");
static_assert(sizeof(WorldWidgetCanvas_GetWorldWidgetScreenLocation) == 0x000020, "Wrong size on WorldWidgetCanvas_GetWorldWidgetScreenLocation");
static_assert(offsetof(WorldWidgetCanvas_GetWorldWidgetScreenLocation, WorldContextObject) == 0x000000, "Member 'WorldWidgetCanvas_GetWorldWidgetScreenLocation::WorldContextObject' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_GetWorldWidgetScreenLocation, Widget) == 0x000008, "Member 'WorldWidgetCanvas_GetWorldWidgetScreenLocation::Widget' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_GetWorldWidgetScreenLocation, ReturnValue) == 0x000010, "Member 'WorldWidgetCanvas_GetWorldWidgetScreenLocation::ReturnValue' has a wrong offset!");

// Function WorldWidgetsPlugin.WorldWidgetCanvas.GetWorldWidgetSettings
// 0x0140 (0x0140 - 0x0000)
struct WorldWidgetCanvas_GetWorldWidgetSettings final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWorldWidgetInfo                       ReturnValue;                                       // 0x0010(0x0130)(Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldWidgetCanvas_GetWorldWidgetSettings) == 0x000008, "Wrong alignment on WorldWidgetCanvas_GetWorldWidgetSettings");
static_assert(sizeof(WorldWidgetCanvas_GetWorldWidgetSettings) == 0x000140, "Wrong size on WorldWidgetCanvas_GetWorldWidgetSettings");
static_assert(offsetof(WorldWidgetCanvas_GetWorldWidgetSettings, WorldContextObject) == 0x000000, "Member 'WorldWidgetCanvas_GetWorldWidgetSettings::WorldContextObject' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_GetWorldWidgetSettings, Widget) == 0x000008, "Member 'WorldWidgetCanvas_GetWorldWidgetSettings::Widget' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_GetWorldWidgetSettings, ReturnValue) == 0x000010, "Member 'WorldWidgetCanvas_GetWorldWidgetSettings::ReturnValue' has a wrong offset!");

// Function WorldWidgetsPlugin.WorldWidgetCanvas.HidePushedWorldWidget
// 0x0010 (0x0010 - 0x0000)
struct WorldWidgetCanvas_HidePushedWorldWidget final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldWidgetCanvas_HidePushedWorldWidget) == 0x000008, "Wrong alignment on WorldWidgetCanvas_HidePushedWorldWidget");
static_assert(sizeof(WorldWidgetCanvas_HidePushedWorldWidget) == 0x000010, "Wrong size on WorldWidgetCanvas_HidePushedWorldWidget");
static_assert(offsetof(WorldWidgetCanvas_HidePushedWorldWidget, WorldContextObject) == 0x000000, "Member 'WorldWidgetCanvas_HidePushedWorldWidget::WorldContextObject' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_HidePushedWorldWidget, Widget) == 0x000008, "Member 'WorldWidgetCanvas_HidePushedWorldWidget::Widget' has a wrong offset!");

// Function WorldWidgetsPlugin.WorldWidgetCanvas.PushAttachedWorldWidget
// 0x0160 (0x0160 - 0x0000)
struct WorldWidgetCanvas_PushAttachedWorldWidget final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                WidgetClass;                                       // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        AttachToComponent;                                 // 0x0018(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttachSocket;                                      // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWorldWidgetInfo                       widgetInfo;                                        // 0x0028(0x0130)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UUserWidget*                            ReturnValue;                                       // 0x0158(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldWidgetCanvas_PushAttachedWorldWidget) == 0x000008, "Wrong alignment on WorldWidgetCanvas_PushAttachedWorldWidget");
static_assert(sizeof(WorldWidgetCanvas_PushAttachedWorldWidget) == 0x000160, "Wrong size on WorldWidgetCanvas_PushAttachedWorldWidget");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidget, WorldContextObject) == 0x000000, "Member 'WorldWidgetCanvas_PushAttachedWorldWidget::WorldContextObject' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidget, PlayerController) == 0x000008, "Member 'WorldWidgetCanvas_PushAttachedWorldWidget::PlayerController' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidget, WidgetClass) == 0x000010, "Member 'WorldWidgetCanvas_PushAttachedWorldWidget::WidgetClass' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidget, AttachToComponent) == 0x000018, "Member 'WorldWidgetCanvas_PushAttachedWorldWidget::AttachToComponent' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidget, AttachSocket) == 0x000020, "Member 'WorldWidgetCanvas_PushAttachedWorldWidget::AttachSocket' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidget, widgetInfo) == 0x000028, "Member 'WorldWidgetCanvas_PushAttachedWorldWidget::widgetInfo' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidget, ReturnValue) == 0x000158, "Member 'WorldWidgetCanvas_PushAttachedWorldWidget::ReturnValue' has a wrong offset!");

// Function WorldWidgetsPlugin.WorldWidgetCanvas.PushAttachedWorldWidgetAllLocalPlayers
// 0x0160 (0x0160 - 0x0000)
struct WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                WidgetClass;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        AttachToComponent;                                 // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttachSocket;                                      // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWorldWidgetInfo                       widgetInfo;                                        // 0x0020(0x0130)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                    ReturnValue;                                       // 0x0150(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers) == 0x000008, "Wrong alignment on WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers");
static_assert(sizeof(WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers) == 0x000160, "Wrong size on WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers, WorldContextObject) == 0x000000, "Member 'WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers::WorldContextObject' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers, WidgetClass) == 0x000008, "Member 'WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers::WidgetClass' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers, AttachToComponent) == 0x000010, "Member 'WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers::AttachToComponent' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers, AttachSocket) == 0x000018, "Member 'WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers::AttachSocket' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers, widgetInfo) == 0x000020, "Member 'WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers::widgetInfo' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers, ReturnValue) == 0x000150, "Member 'WorldWidgetCanvas_PushAttachedWorldWidgetAllLocalPlayers::ReturnValue' has a wrong offset!");

// Function WorldWidgetsPlugin.WorldWidgetCanvas.PushWorldWidgetToLocation
// 0x0168 (0x0168 - 0x0000)
struct WorldWidgetCanvas_PushWorldWidgetToLocation final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                WidgetClass;                                       // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WorldLocation;                                     // 0x0018(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWorldWidgetInfo                       widgetInfo;                                        // 0x0030(0x0130)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UUserWidget*                            ReturnValue;                                       // 0x0160(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldWidgetCanvas_PushWorldWidgetToLocation) == 0x000008, "Wrong alignment on WorldWidgetCanvas_PushWorldWidgetToLocation");
static_assert(sizeof(WorldWidgetCanvas_PushWorldWidgetToLocation) == 0x000168, "Wrong size on WorldWidgetCanvas_PushWorldWidgetToLocation");
static_assert(offsetof(WorldWidgetCanvas_PushWorldWidgetToLocation, WorldContextObject) == 0x000000, "Member 'WorldWidgetCanvas_PushWorldWidgetToLocation::WorldContextObject' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushWorldWidgetToLocation, PlayerController) == 0x000008, "Member 'WorldWidgetCanvas_PushWorldWidgetToLocation::PlayerController' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushWorldWidgetToLocation, WidgetClass) == 0x000010, "Member 'WorldWidgetCanvas_PushWorldWidgetToLocation::WidgetClass' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushWorldWidgetToLocation, WorldLocation) == 0x000018, "Member 'WorldWidgetCanvas_PushWorldWidgetToLocation::WorldLocation' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushWorldWidgetToLocation, widgetInfo) == 0x000030, "Member 'WorldWidgetCanvas_PushWorldWidgetToLocation::widgetInfo' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushWorldWidgetToLocation, ReturnValue) == 0x000160, "Member 'WorldWidgetCanvas_PushWorldWidgetToLocation::ReturnValue' has a wrong offset!");

// Function WorldWidgetsPlugin.WorldWidgetCanvas.PushWorldWidgetToLocationAllLocalPlayer
// 0x0168 (0x0168 - 0x0000)
struct WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                WidgetClass;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WorldLocation;                                     // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWorldWidgetInfo                       widgetInfo;                                        // 0x0028(0x0130)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UUserWidget*>                    ReturnValue;                                       // 0x0158(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer) == 0x000008, "Wrong alignment on WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer");
static_assert(sizeof(WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer) == 0x000168, "Wrong size on WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer");
static_assert(offsetof(WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer, WorldContextObject) == 0x000000, "Member 'WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer::WorldContextObject' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer, WidgetClass) == 0x000008, "Member 'WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer::WidgetClass' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer, WorldLocation) == 0x000010, "Member 'WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer::WorldLocation' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer, widgetInfo) == 0x000028, "Member 'WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer::widgetInfo' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer, ReturnValue) == 0x000158, "Member 'WorldWidgetCanvas_PushWorldWidgetToLocationAllLocalPlayer::ReturnValue' has a wrong offset!");

// Function WorldWidgetsPlugin.WorldWidgetCanvas.ShowPushedWorldWidget
// 0x0010 (0x0010 - 0x0000)
struct WorldWidgetCanvas_ShowPushedWorldWidget final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldWidgetCanvas_ShowPushedWorldWidget) == 0x000008, "Wrong alignment on WorldWidgetCanvas_ShowPushedWorldWidget");
static_assert(sizeof(WorldWidgetCanvas_ShowPushedWorldWidget) == 0x000010, "Wrong size on WorldWidgetCanvas_ShowPushedWorldWidget");
static_assert(offsetof(WorldWidgetCanvas_ShowPushedWorldWidget, WorldContextObject) == 0x000000, "Member 'WorldWidgetCanvas_ShowPushedWorldWidget::WorldContextObject' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_ShowPushedWorldWidget, Widget) == 0x000008, "Member 'WorldWidgetCanvas_ShowPushedWorldWidget::Widget' has a wrong offset!");

// Function WorldWidgetsPlugin.WorldWidgetCanvas.UpdateWidgetLocation
// 0x0028 (0x0028 - 0x0000)
struct WorldWidgetCanvas_UpdateWidgetLocation final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                NewLocation;                                       // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldWidgetCanvas_UpdateWidgetLocation) == 0x000008, "Wrong alignment on WorldWidgetCanvas_UpdateWidgetLocation");
static_assert(sizeof(WorldWidgetCanvas_UpdateWidgetLocation) == 0x000028, "Wrong size on WorldWidgetCanvas_UpdateWidgetLocation");
static_assert(offsetof(WorldWidgetCanvas_UpdateWidgetLocation, WorldContextObject) == 0x000000, "Member 'WorldWidgetCanvas_UpdateWidgetLocation::WorldContextObject' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_UpdateWidgetLocation, Widget) == 0x000008, "Member 'WorldWidgetCanvas_UpdateWidgetLocation::Widget' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_UpdateWidgetLocation, NewLocation) == 0x000010, "Member 'WorldWidgetCanvas_UpdateWidgetLocation::NewLocation' has a wrong offset!");

// Function WorldWidgetsPlugin.WorldWidgetCanvas.UpdateWorldWidgetSettings
// 0x0140 (0x0140 - 0x0000)
struct WorldWidgetCanvas_UpdateWorldWidgetSettings final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWorldWidgetInfo                       newSettings;                                       // 0x0010(0x0130)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(WorldWidgetCanvas_UpdateWorldWidgetSettings) == 0x000008, "Wrong alignment on WorldWidgetCanvas_UpdateWorldWidgetSettings");
static_assert(sizeof(WorldWidgetCanvas_UpdateWorldWidgetSettings) == 0x000140, "Wrong size on WorldWidgetCanvas_UpdateWorldWidgetSettings");
static_assert(offsetof(WorldWidgetCanvas_UpdateWorldWidgetSettings, WorldContextObject) == 0x000000, "Member 'WorldWidgetCanvas_UpdateWorldWidgetSettings::WorldContextObject' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_UpdateWorldWidgetSettings, Widget) == 0x000008, "Member 'WorldWidgetCanvas_UpdateWorldWidgetSettings::Widget' has a wrong offset!");
static_assert(offsetof(WorldWidgetCanvas_UpdateWorldWidgetSettings, newSettings) == 0x000010, "Member 'WorldWidgetCanvas_UpdateWorldWidgetSettings::newSettings' has a wrong offset!");

}

