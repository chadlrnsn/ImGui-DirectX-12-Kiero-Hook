#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_Crosshair_DamageIndicator

#include "Basic.hpp"

#include "Widget_Crosshair_DamageIndicator_classes.hpp"
#include "Widget_Crosshair_DamageIndicator_parameters.hpp"


namespace SDK
{

// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWidget_Crosshair_DamageIndicator_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Crosshair_DamageIndicator_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.ExecuteUbergraph_Widget_Crosshair_DamageIndicator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_Crosshair_DamageIndicator_C::ExecuteUbergraph_Widget_Crosshair_DamageIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Crosshair_DamageIndicator_C", "ExecuteUbergraph_Widget_Crosshair_DamageIndicator");

	Params::Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.GetDamageSoundKey
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString*                          DamageSoundKey_0                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UWidget_Crosshair_DamageIndicator_C::GetDamageSoundKey(class FString* DamageSoundKey_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Crosshair_DamageIndicator_C", "GetDamageSoundKey");

	Params::Widget_Crosshair_DamageIndicator_C_GetDamageSoundKey Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DamageSoundKey_0 != nullptr)
		*DamageSoundKey_0 = std::move(Parms.DamageSoundKey_0);
}


// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.OnDealtDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPawnBase*                       Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FDamageCombatEvent&        DamageEventData                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UWidget_Crosshair_DamageIndicator_C::OnDealtDamage(class ARPawnBase* Pawn, const struct FDamageCombatEvent& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Crosshair_DamageIndicator_C", "OnDealtDamage");

	Params::Widget_Crosshair_DamageIndicator_C_OnDealtDamage Parms{};

	Parms.Pawn = Pawn;
	Parms.DamageEventData = std::move(DamageEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWidget_Crosshair_DamageIndicator_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Crosshair_DamageIndicator_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.OnWeaponEquipped_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARWeapon*                         Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWidget_Crosshair_DamageIndicator_C::OnWeaponEquipped_Event(class ARWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Crosshair_DamageIndicator_C", "OnWeaponEquipped_Event");

	Params::Widget_Crosshair_DamageIndicator_C_OnWeaponEquipped_Event Parms{};

	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.SetDamageSounds
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    DamageSoundKey_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class USoundBase*                       DirectDamageSound_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundBase*                       CriticalSound_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWidget_Crosshair_DamageIndicator_C::SetDamageSounds(const class FString& DamageSoundKey_0, class USoundBase* DirectDamageSound_0, class USoundBase* CriticalSound_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Crosshair_DamageIndicator_C", "SetDamageSounds");

	Params::Widget_Crosshair_DamageIndicator_C_SetDamageSounds Parms{};

	Parms.DamageSoundKey_0 = std::move(DamageSoundKey_0);
	Parms.DirectDamageSound_0 = DirectDamageSound_0;
	Parms.CriticalSound_0 = CriticalSound_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_Crosshair_DamageIndicator_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Crosshair_DamageIndicator_C", "Tick");

	Params::Widget_Crosshair_DamageIndicator_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

