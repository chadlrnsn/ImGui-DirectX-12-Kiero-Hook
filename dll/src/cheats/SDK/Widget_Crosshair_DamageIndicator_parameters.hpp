#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_Crosshair_DamageIndicator

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "RGame_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.ExecuteUbergraph_Widget_Crosshair_DamageIndicator
// 0x0200 (0x0200 - 0x0000)
struct Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ARWeapon* Weapon)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               CallFunc_GetAnchors_ReturnValue;                   // 0x0018(0x0020)(NoDestructor)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x004C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPawnBase*                             K2Node_CustomEvent_Pawn;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     K2Node_CustomEvent_DamageEventData;                // 0x0098(0x00C0)()
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue;         // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowCrosshair_ReturnValue;             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DamageSourceMaskHasFlag_ReturnValue;      // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDirectDamage_ReturnValue;               // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ObjectIsA_ReturnValue;                    // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ObjectIsA_ReturnValue_1;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_177[0x1];                                      // 0x0177(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ARPawnBase* Pawn, const struct FDamageCombatEvent& DamageEventData)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0188(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_2;                           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARWeapon*                               K2Node_CustomEvent_Weapon;                         // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn_1;               // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot_1;          // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator) == 0x000008, "Wrong alignment on Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator");
static_assert(sizeof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator) == 0x000200, "Wrong size on Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, EntryPoint) == 0x000000, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_GetAnchors_ReturnValue) == 0x000018, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_GetAnchors_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000038, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000040, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, Temp_bool_Variable) == 0x000049, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_Event_MyGeometry) == 0x00004C, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_Event_InDeltaTime) == 0x000084, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, Temp_bool_Variable_1) == 0x000088, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_CustomEvent_Pawn) == 0x000090, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_CustomEvent_DamageEventData) == 0x000098, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_CustomEvent_DamageEventData' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_GetRGameUserSettings_ReturnValue) == 0x000158, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_GetRGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_GetShowCrosshair_ReturnValue) == 0x000160, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_GetShowCrosshair_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_DamageSourceMaskHasFlag_ReturnValue) == 0x000161, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_DamageSourceMaskHasFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_Not_PreBool_ReturnValue) == 0x000162, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_IsDirectDamage_ReturnValue) == 0x000163, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_IsDirectDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_BooleanAND_ReturnValue) == 0x000164, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_Select_Default) == 0x000168, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000170, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000171, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_ObjectIsA_ReturnValue) == 0x000172, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_ObjectIsA_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_BooleanOR_ReturnValue) == 0x000173, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_ObjectIsA_ReturnValue_1) == 0x000174, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_ObjectIsA_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_BooleanOR_ReturnValue_1) == 0x000175, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_BooleanAND_ReturnValue_1) == 0x000176, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_PlayAnimation_ReturnValue) == 0x000178, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_Select_Default_1) == 0x000180, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000188, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, Temp_bool_Variable_2) == 0x000198, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_Select_Default_2) == 0x0001A0, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_GetOwningPlayer_ReturnValue) == 0x0001A8, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_K2_GetPawn_ReturnValue) == 0x0001B0, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_CustomEvent_Weapon) == 0x0001B8, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_CustomEvent_Weapon' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_DynamicCast_AsRPlayer_Pawn_1) == 0x0001C0, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_DynamicCast_AsRPlayer_Pawn_1' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_DynamicCast_bSuccess_1) == 0x0001C8, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x0001D0, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_DynamicCast_bSuccess_2) == 0x0001D8, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_DynamicCast_AsCanvas_Panel_Slot_1) == 0x0001E0, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_DynamicCast_AsCanvas_Panel_Slot_1' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, K2Node_DynamicCast_bSuccess_3) == 0x0001E8, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_IsValid_ReturnValue_1) == 0x0001E9, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0001F0, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0001F8, "Member 'Widget_Crosshair_DamageIndicator_C_ExecuteUbergraph_Widget_Crosshair_DamageIndicator::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.GetDamageSoundKey
// 0x0010 (0x0010 - 0x0000)
struct Widget_Crosshair_DamageIndicator_C_GetDamageSoundKey final
{
public:
	class FString                                 DamageSoundKey_0;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Crosshair_DamageIndicator_C_GetDamageSoundKey) == 0x000008, "Wrong alignment on Widget_Crosshair_DamageIndicator_C_GetDamageSoundKey");
static_assert(sizeof(Widget_Crosshair_DamageIndicator_C_GetDamageSoundKey) == 0x000010, "Wrong size on Widget_Crosshair_DamageIndicator_C_GetDamageSoundKey");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_GetDamageSoundKey, DamageSoundKey_0) == 0x000000, "Member 'Widget_Crosshair_DamageIndicator_C_GetDamageSoundKey::DamageSoundKey_0' has a wrong offset!");

// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.OnDealtDamage
// 0x00C8 (0x00C8 - 0x0000)
struct Widget_Crosshair_DamageIndicator_C_OnDealtDamage final
{
public:
	class ARPawnBase*                             Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     DamageEventData;                                   // 0x0008(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Widget_Crosshair_DamageIndicator_C_OnDealtDamage) == 0x000008, "Wrong alignment on Widget_Crosshair_DamageIndicator_C_OnDealtDamage");
static_assert(sizeof(Widget_Crosshair_DamageIndicator_C_OnDealtDamage) == 0x0000C8, "Wrong size on Widget_Crosshair_DamageIndicator_C_OnDealtDamage");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_OnDealtDamage, Pawn) == 0x000000, "Member 'Widget_Crosshair_DamageIndicator_C_OnDealtDamage::Pawn' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_OnDealtDamage, DamageEventData) == 0x000008, "Member 'Widget_Crosshair_DamageIndicator_C_OnDealtDamage::DamageEventData' has a wrong offset!");

// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.OnWeaponEquipped_Event
// 0x0008 (0x0008 - 0x0000)
struct Widget_Crosshair_DamageIndicator_C_OnWeaponEquipped_Event final
{
public:
	class ARWeapon*                               Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Crosshair_DamageIndicator_C_OnWeaponEquipped_Event) == 0x000008, "Wrong alignment on Widget_Crosshair_DamageIndicator_C_OnWeaponEquipped_Event");
static_assert(sizeof(Widget_Crosshair_DamageIndicator_C_OnWeaponEquipped_Event) == 0x000008, "Wrong size on Widget_Crosshair_DamageIndicator_C_OnWeaponEquipped_Event");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_OnWeaponEquipped_Event, Weapon) == 0x000000, "Member 'Widget_Crosshair_DamageIndicator_C_OnWeaponEquipped_Event::Weapon' has a wrong offset!");

// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.SetDamageSounds
// 0x0020 (0x0020 - 0x0000)
struct Widget_Crosshair_DamageIndicator_C_SetDamageSounds final
{
public:
	class FString                                 DamageSoundKey_0;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USoundBase*                             DirectDamageSound_0;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CriticalSound_0;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Crosshair_DamageIndicator_C_SetDamageSounds) == 0x000008, "Wrong alignment on Widget_Crosshair_DamageIndicator_C_SetDamageSounds");
static_assert(sizeof(Widget_Crosshair_DamageIndicator_C_SetDamageSounds) == 0x000020, "Wrong size on Widget_Crosshair_DamageIndicator_C_SetDamageSounds");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_SetDamageSounds, DamageSoundKey_0) == 0x000000, "Member 'Widget_Crosshair_DamageIndicator_C_SetDamageSounds::DamageSoundKey_0' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_SetDamageSounds, DirectDamageSound_0) == 0x000010, "Member 'Widget_Crosshair_DamageIndicator_C_SetDamageSounds::DirectDamageSound_0' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_SetDamageSounds, CriticalSound_0) == 0x000018, "Member 'Widget_Crosshair_DamageIndicator_C_SetDamageSounds::CriticalSound_0' has a wrong offset!");

// Function Widget_Crosshair_DamageIndicator.Widget_Crosshair_DamageIndicator_C.Tick
// 0x003C (0x003C - 0x0000)
struct Widget_Crosshair_DamageIndicator_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Crosshair_DamageIndicator_C_Tick) == 0x000004, "Wrong alignment on Widget_Crosshair_DamageIndicator_C_Tick");
static_assert(sizeof(Widget_Crosshair_DamageIndicator_C_Tick) == 0x00003C, "Wrong size on Widget_Crosshair_DamageIndicator_C_Tick");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_Tick, MyGeometry) == 0x000000, "Member 'Widget_Crosshair_DamageIndicator_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Widget_Crosshair_DamageIndicator_C_Tick, InDeltaTime) == 0x000038, "Member 'Widget_Crosshair_DamageIndicator_C_Tick::InDeltaTime' has a wrong offset!");

}

