#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayFab

#include "Basic.hpp"

#include "PlayFab_structs.hpp"


namespace SDK::Params
{

// Function PlayFab.PlayFabAdminAPI.AbortTaskInstance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_AbortTaskInstance final
{
public:
	struct FAdminAbortTaskInstanceRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)> onSuccess;  // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_AbortTaskInstance) == 0x000008, "Wrong alignment on PlayFabAdminAPI_AbortTaskInstance");
static_assert(sizeof(PlayFabAdminAPI_AbortTaskInstance) == 0x000050, "Wrong size on PlayFabAdminAPI_AbortTaskInstance");
static_assert(offsetof(PlayFabAdminAPI_AbortTaskInstance, Request) == 0x000000, "Member 'PlayFabAdminAPI_AbortTaskInstance::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AbortTaskInstance, onSuccess) == 0x000020, "Member 'PlayFabAdminAPI_AbortTaskInstance::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AbortTaskInstance, onFailure) == 0x000030, "Member 'PlayFabAdminAPI_AbortTaskInstance::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AbortTaskInstance, customData) == 0x000040, "Member 'PlayFabAdminAPI_AbortTaskInstance::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AbortTaskInstance, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_AbortTaskInstance::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.AddLocalizedNews
// 0x0080 (0x0080 - 0x0000)
struct PlayFabAdminAPI_AddLocalizedNews final
{
public:
	struct FAdminAddLocalizedNewsRequest          Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminAddLocalizedNewsResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_AddLocalizedNews) == 0x000008, "Wrong alignment on PlayFabAdminAPI_AddLocalizedNews");
static_assert(sizeof(PlayFabAdminAPI_AddLocalizedNews) == 0x000080, "Wrong size on PlayFabAdminAPI_AddLocalizedNews");
static_assert(offsetof(PlayFabAdminAPI_AddLocalizedNews, Request) == 0x000000, "Member 'PlayFabAdminAPI_AddLocalizedNews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddLocalizedNews, onSuccess) == 0x000050, "Member 'PlayFabAdminAPI_AddLocalizedNews::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddLocalizedNews, onFailure) == 0x000060, "Member 'PlayFabAdminAPI_AddLocalizedNews::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddLocalizedNews, customData) == 0x000070, "Member 'PlayFabAdminAPI_AddLocalizedNews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddLocalizedNews, ReturnValue) == 0x000078, "Member 'PlayFabAdminAPI_AddLocalizedNews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.AddNews
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_AddNews final
{
public:
	struct FAdminAddNewsRequest                   Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminAddNewsResult& Result, class UObject* customData)> onSuccess;  // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_AddNews) == 0x000008, "Wrong alignment on PlayFabAdminAPI_AddNews");
static_assert(sizeof(PlayFabAdminAPI_AddNews) == 0x000070, "Wrong size on PlayFabAdminAPI_AddNews");
static_assert(offsetof(PlayFabAdminAPI_AddNews, Request) == 0x000000, "Member 'PlayFabAdminAPI_AddNews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddNews, onSuccess) == 0x000040, "Member 'PlayFabAdminAPI_AddNews::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddNews, onFailure) == 0x000050, "Member 'PlayFabAdminAPI_AddNews::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddNews, customData) == 0x000060, "Member 'PlayFabAdminAPI_AddNews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddNews, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_AddNews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.AddPlayerTag
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_AddPlayerTag final
{
public:
	struct FAdminAddPlayerTagRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminAddPlayerTagResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_AddPlayerTag) == 0x000008, "Wrong alignment on PlayFabAdminAPI_AddPlayerTag");
static_assert(sizeof(PlayFabAdminAPI_AddPlayerTag) == 0x000060, "Wrong size on PlayFabAdminAPI_AddPlayerTag");
static_assert(offsetof(PlayFabAdminAPI_AddPlayerTag, Request) == 0x000000, "Member 'PlayFabAdminAPI_AddPlayerTag::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddPlayerTag, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_AddPlayerTag::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddPlayerTag, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_AddPlayerTag::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddPlayerTag, customData) == 0x000050, "Member 'PlayFabAdminAPI_AddPlayerTag::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddPlayerTag, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_AddPlayerTag::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.AddUserVirtualCurrency
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_AddUserVirtualCurrency final
{
public:
	struct FAdminAddUserVirtualCurrencyRequest    Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminModifyUserVirtualCurrencyResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_AddUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabAdminAPI_AddUserVirtualCurrency");
static_assert(sizeof(PlayFabAdminAPI_AddUserVirtualCurrency) == 0x000068, "Wrong size on PlayFabAdminAPI_AddUserVirtualCurrency");
static_assert(offsetof(PlayFabAdminAPI_AddUserVirtualCurrency, Request) == 0x000000, "Member 'PlayFabAdminAPI_AddUserVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddUserVirtualCurrency, onSuccess) == 0x000038, "Member 'PlayFabAdminAPI_AddUserVirtualCurrency::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddUserVirtualCurrency, onFailure) == 0x000048, "Member 'PlayFabAdminAPI_AddUserVirtualCurrency::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddUserVirtualCurrency, customData) == 0x000058, "Member 'PlayFabAdminAPI_AddUserVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddUserVirtualCurrency, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_AddUserVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.AddVirtualCurrencyTypes
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_AddVirtualCurrencyTypes final
{
public:
	struct FAdminAddVirtualCurrencyTypesRequest   Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminBlankResult& Result, class UObject* customData)> onSuccess;    // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_AddVirtualCurrencyTypes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_AddVirtualCurrencyTypes");
static_assert(sizeof(PlayFabAdminAPI_AddVirtualCurrencyTypes) == 0x000048, "Wrong size on PlayFabAdminAPI_AddVirtualCurrencyTypes");
static_assert(offsetof(PlayFabAdminAPI_AddVirtualCurrencyTypes, Request) == 0x000000, "Member 'PlayFabAdminAPI_AddVirtualCurrencyTypes::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddVirtualCurrencyTypes, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_AddVirtualCurrencyTypes::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddVirtualCurrencyTypes, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_AddVirtualCurrencyTypes::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddVirtualCurrencyTypes, customData) == 0x000038, "Member 'PlayFabAdminAPI_AddVirtualCurrencyTypes::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddVirtualCurrencyTypes, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_AddVirtualCurrencyTypes::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.BanUsers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_BanUsers final
{
public:
	struct FAdminBanUsersRequest                  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminBanUsersResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_BanUsers) == 0x000008, "Wrong alignment on PlayFabAdminAPI_BanUsers");
static_assert(sizeof(PlayFabAdminAPI_BanUsers) == 0x000050, "Wrong size on PlayFabAdminAPI_BanUsers");
static_assert(offsetof(PlayFabAdminAPI_BanUsers, Request) == 0x000000, "Member 'PlayFabAdminAPI_BanUsers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_BanUsers, onSuccess) == 0x000020, "Member 'PlayFabAdminAPI_BanUsers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_BanUsers, onFailure) == 0x000030, "Member 'PlayFabAdminAPI_BanUsers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_BanUsers, customData) == 0x000040, "Member 'PlayFabAdminAPI_BanUsers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_BanUsers, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_BanUsers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CheckLimitedEditionItemAvailability
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_CheckLimitedEditionItemAvailability final
{
public:
	struct FAdminCheckLimitedEditionItemAvailabilityRequest Request;                                 // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCheckLimitedEditionItemAvailabilityResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CheckLimitedEditionItemAvailability");
static_assert(sizeof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability) == 0x000058, "Wrong size on PlayFabAdminAPI_CheckLimitedEditionItemAvailability");
static_assert(offsetof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability, Request) == 0x000000, "Member 'PlayFabAdminAPI_CheckLimitedEditionItemAvailability::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_CheckLimitedEditionItemAvailability::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_CheckLimitedEditionItemAvailability::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability, customData) == 0x000048, "Member 'PlayFabAdminAPI_CheckLimitedEditionItemAvailability::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_CheckLimitedEditionItemAvailability::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreateActionsOnPlayersInSegmentTask
// 0x0080 (0x0080 - 0x0000)
struct PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask final
{
public:
	struct FAdminCreateActionsOnPlayerSegmentTaskRequest Request;                                    // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask");
static_assert(sizeof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask) == 0x000080, "Wrong size on PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask");
static_assert(offsetof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask, onSuccess) == 0x000050, "Member 'PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask, onFailure) == 0x000060, "Member 'PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask, customData) == 0x000070, "Member 'PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask, ReturnValue) == 0x000078, "Member 'PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreateCloudScriptTask
// 0x0080 (0x0080 - 0x0000)
struct PlayFabAdminAPI_CreateCloudScriptTask final
{
public:
	struct FAdminCreateCloudScriptTaskRequest     Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreateCloudScriptTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreateCloudScriptTask");
static_assert(sizeof(PlayFabAdminAPI_CreateCloudScriptTask) == 0x000080, "Wrong size on PlayFabAdminAPI_CreateCloudScriptTask");
static_assert(offsetof(PlayFabAdminAPI_CreateCloudScriptTask, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreateCloudScriptTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateCloudScriptTask, onSuccess) == 0x000050, "Member 'PlayFabAdminAPI_CreateCloudScriptTask::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateCloudScriptTask, onFailure) == 0x000060, "Member 'PlayFabAdminAPI_CreateCloudScriptTask::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateCloudScriptTask, customData) == 0x000070, "Member 'PlayFabAdminAPI_CreateCloudScriptTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateCloudScriptTask, ReturnValue) == 0x000078, "Member 'PlayFabAdminAPI_CreateCloudScriptTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreateInsightsScheduledScalingTask
// 0x0080 (0x0080 - 0x0000)
struct PlayFabAdminAPI_CreateInsightsScheduledScalingTask final
{
public:
	struct FAdminCreateInsightsScheduledScalingTaskRequest Request;                                  // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreateInsightsScheduledScalingTask");
static_assert(sizeof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask) == 0x000080, "Wrong size on PlayFabAdminAPI_CreateInsightsScheduledScalingTask");
static_assert(offsetof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreateInsightsScheduledScalingTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask, onSuccess) == 0x000050, "Member 'PlayFabAdminAPI_CreateInsightsScheduledScalingTask::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask, onFailure) == 0x000060, "Member 'PlayFabAdminAPI_CreateInsightsScheduledScalingTask::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask, customData) == 0x000070, "Member 'PlayFabAdminAPI_CreateInsightsScheduledScalingTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask, ReturnValue) == 0x000078, "Member 'PlayFabAdminAPI_CreateInsightsScheduledScalingTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreateOpenIdConnection
// 0x0098 (0x0098 - 0x0000)
struct PlayFabAdminAPI_CreateOpenIdConnection final
{
public:
	struct FAdminCreateOpenIdConnectionRequest    Request;                                           // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)> onSuccess;  // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreateOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreateOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_CreateOpenIdConnection) == 0x000098, "Wrong size on PlayFabAdminAPI_CreateOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_CreateOpenIdConnection, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreateOpenIdConnection::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateOpenIdConnection, onSuccess) == 0x000068, "Member 'PlayFabAdminAPI_CreateOpenIdConnection::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateOpenIdConnection, onFailure) == 0x000078, "Member 'PlayFabAdminAPI_CreateOpenIdConnection::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateOpenIdConnection, customData) == 0x000088, "Member 'PlayFabAdminAPI_CreateOpenIdConnection::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateOpenIdConnection, ReturnValue) == 0x000090, "Member 'PlayFabAdminAPI_CreateOpenIdConnection::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreatePlayerSharedSecret
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_CreatePlayerSharedSecret final
{
public:
	struct FAdminCreatePlayerSharedSecretRequest  Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCreatePlayerSharedSecretResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreatePlayerSharedSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreatePlayerSharedSecret");
static_assert(sizeof(PlayFabAdminAPI_CreatePlayerSharedSecret) == 0x000048, "Wrong size on PlayFabAdminAPI_CreatePlayerSharedSecret");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerSharedSecret, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreatePlayerSharedSecret::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerSharedSecret, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_CreatePlayerSharedSecret::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerSharedSecret, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_CreatePlayerSharedSecret::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerSharedSecret, customData) == 0x000038, "Member 'PlayFabAdminAPI_CreatePlayerSharedSecret::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerSharedSecret, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_CreatePlayerSharedSecret::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreatePlayerStatisticDefinition
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_CreatePlayerStatisticDefinition final
{
public:
	struct FAdminCreatePlayerStatisticDefinitionRequest Request;                                     // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCreatePlayerStatisticDefinitionResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreatePlayerStatisticDefinition) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreatePlayerStatisticDefinition");
static_assert(sizeof(PlayFabAdminAPI_CreatePlayerStatisticDefinition) == 0x000060, "Wrong size on PlayFabAdminAPI_CreatePlayerStatisticDefinition");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerStatisticDefinition, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreatePlayerStatisticDefinition::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerStatisticDefinition, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_CreatePlayerStatisticDefinition::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerStatisticDefinition, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_CreatePlayerStatisticDefinition::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerStatisticDefinition, customData) == 0x000050, "Member 'PlayFabAdminAPI_CreatePlayerStatisticDefinition::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerStatisticDefinition, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_CreatePlayerStatisticDefinition::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreateSegment
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_CreateSegment final
{
public:
	struct FAdminCreateSegmentRequest             Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCreateSegmentResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreateSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreateSegment");
static_assert(sizeof(PlayFabAdminAPI_CreateSegment) == 0x000040, "Wrong size on PlayFabAdminAPI_CreateSegment");
static_assert(offsetof(PlayFabAdminAPI_CreateSegment, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreateSegment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateSegment, onSuccess) == 0x000010, "Member 'PlayFabAdminAPI_CreateSegment::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateSegment, onFailure) == 0x000020, "Member 'PlayFabAdminAPI_CreateSegment::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateSegment, customData) == 0x000030, "Member 'PlayFabAdminAPI_CreateSegment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateSegment, ReturnValue) == 0x000038, "Member 'PlayFabAdminAPI_CreateSegment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteContent
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeleteContent final
{
public:
	struct FAdminDeleteContentRequest             Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminBlankResult& Result, class UObject* customData)> onSuccess;    // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteContent) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteContent");
static_assert(sizeof(PlayFabAdminAPI_DeleteContent) == 0x000048, "Wrong size on PlayFabAdminAPI_DeleteContent");
static_assert(offsetof(PlayFabAdminAPI_DeleteContent, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteContent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteContent, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeleteContent::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteContent, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeleteContent::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteContent, customData) == 0x000038, "Member 'PlayFabAdminAPI_DeleteContent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteContent, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeleteContent::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteMasterPlayerAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_DeleteMasterPlayerAccount final
{
public:
	struct FAdminDeleteMasterPlayerAccountRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteMasterPlayerAccountResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteMasterPlayerAccount) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteMasterPlayerAccount");
static_assert(sizeof(PlayFabAdminAPI_DeleteMasterPlayerAccount) == 0x000058, "Wrong size on PlayFabAdminAPI_DeleteMasterPlayerAccount");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerAccount, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteMasterPlayerAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerAccount, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_DeleteMasterPlayerAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerAccount, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_DeleteMasterPlayerAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerAccount, customData) == 0x000048, "Member 'PlayFabAdminAPI_DeleteMasterPlayerAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerAccount, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_DeleteMasterPlayerAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteMasterPlayerEventData
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeleteMasterPlayerEventData final
{
public:
	struct FAdminDeleteMasterPlayerEventDataRequest Request;                                         // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteMasterPlayerEventDataResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteMasterPlayerEventData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteMasterPlayerEventData");
static_assert(sizeof(PlayFabAdminAPI_DeleteMasterPlayerEventData) == 0x000048, "Wrong size on PlayFabAdminAPI_DeleteMasterPlayerEventData");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerEventData, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteMasterPlayerEventData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerEventData, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeleteMasterPlayerEventData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerEventData, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeleteMasterPlayerEventData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerEventData, customData) == 0x000038, "Member 'PlayFabAdminAPI_DeleteMasterPlayerEventData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerEventData, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeleteMasterPlayerEventData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteMembershipSubscription
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_DeleteMembershipSubscription final
{
public:
	struct FAdminDeleteMembershipSubscriptionRequest Request;                                        // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteMembershipSubscriptionResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteMembershipSubscription) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteMembershipSubscription");
static_assert(sizeof(PlayFabAdminAPI_DeleteMembershipSubscription) == 0x000070, "Wrong size on PlayFabAdminAPI_DeleteMembershipSubscription");
static_assert(offsetof(PlayFabAdminAPI_DeleteMembershipSubscription, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteMembershipSubscription::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMembershipSubscription, onSuccess) == 0x000040, "Member 'PlayFabAdminAPI_DeleteMembershipSubscription::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMembershipSubscription, onFailure) == 0x000050, "Member 'PlayFabAdminAPI_DeleteMembershipSubscription::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMembershipSubscription, customData) == 0x000060, "Member 'PlayFabAdminAPI_DeleteMembershipSubscription::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMembershipSubscription, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_DeleteMembershipSubscription::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteOpenIdConnection
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeleteOpenIdConnection final
{
public:
	struct FAdminDeleteOpenIdConnectionRequest    Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)> onSuccess;  // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_DeleteOpenIdConnection) == 0x000048, "Wrong size on PlayFabAdminAPI_DeleteOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_DeleteOpenIdConnection, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteOpenIdConnection::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteOpenIdConnection, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeleteOpenIdConnection::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteOpenIdConnection, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeleteOpenIdConnection::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteOpenIdConnection, customData) == 0x000038, "Member 'PlayFabAdminAPI_DeleteOpenIdConnection::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteOpenIdConnection, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeleteOpenIdConnection::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeletePlayer
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeletePlayer final
{
public:
	struct FAdminDeletePlayerRequest              Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeletePlayerResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeletePlayer) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeletePlayer");
static_assert(sizeof(PlayFabAdminAPI_DeletePlayer) == 0x000048, "Wrong size on PlayFabAdminAPI_DeletePlayer");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayer, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeletePlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayer, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeletePlayer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayer, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeletePlayer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayer, customData) == 0x000038, "Member 'PlayFabAdminAPI_DeletePlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayer, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeletePlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeletePlayerSharedSecret
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeletePlayerSharedSecret final
{
public:
	struct FAdminDeletePlayerSharedSecretRequest  Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeletePlayerSharedSecretResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeletePlayerSharedSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeletePlayerSharedSecret");
static_assert(sizeof(PlayFabAdminAPI_DeletePlayerSharedSecret) == 0x000048, "Wrong size on PlayFabAdminAPI_DeletePlayerSharedSecret");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayerSharedSecret, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeletePlayerSharedSecret::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayerSharedSecret, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeletePlayerSharedSecret::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayerSharedSecret, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeletePlayerSharedSecret::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayerSharedSecret, customData) == 0x000038, "Member 'PlayFabAdminAPI_DeletePlayerSharedSecret::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayerSharedSecret, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeletePlayerSharedSecret::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteSegment
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeleteSegment final
{
public:
	struct FAdminDeleteSegmentRequest             Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteSegmentsResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteSegment");
static_assert(sizeof(PlayFabAdminAPI_DeleteSegment) == 0x000048, "Wrong size on PlayFabAdminAPI_DeleteSegment");
static_assert(offsetof(PlayFabAdminAPI_DeleteSegment, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteSegment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteSegment, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeleteSegment::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteSegment, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeleteSegment::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteSegment, customData) == 0x000038, "Member 'PlayFabAdminAPI_DeleteSegment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteSegment, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeleteSegment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteStore
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_DeleteStore final
{
public:
	struct FAdminDeleteStoreRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteStoreResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteStore) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteStore");
static_assert(sizeof(PlayFabAdminAPI_DeleteStore) == 0x000060, "Wrong size on PlayFabAdminAPI_DeleteStore");
static_assert(offsetof(PlayFabAdminAPI_DeleteStore, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteStore::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteStore, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_DeleteStore::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteStore, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_DeleteStore::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteStore, customData) == 0x000050, "Member 'PlayFabAdminAPI_DeleteStore::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteStore, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_DeleteStore::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteTask
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_DeleteTask final
{
public:
	struct FAdminDeleteTaskRequest                Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)> onSuccess;  // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteTask");
static_assert(sizeof(PlayFabAdminAPI_DeleteTask) == 0x000040, "Wrong size on PlayFabAdminAPI_DeleteTask");
static_assert(offsetof(PlayFabAdminAPI_DeleteTask, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTask, onSuccess) == 0x000010, "Member 'PlayFabAdminAPI_DeleteTask::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTask, onFailure) == 0x000020, "Member 'PlayFabAdminAPI_DeleteTask::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTask, customData) == 0x000030, "Member 'PlayFabAdminAPI_DeleteTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTask, ReturnValue) == 0x000038, "Member 'PlayFabAdminAPI_DeleteTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteTitle
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_DeleteTitle final
{
public:
	struct FAdminDeleteTitleRequest               Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteTitleResult& Result, class UObject* customData)> onSuccess; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteTitle) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteTitle");
static_assert(sizeof(PlayFabAdminAPI_DeleteTitle) == 0x000038, "Wrong size on PlayFabAdminAPI_DeleteTitle");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitle, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteTitle::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitle, onSuccess) == 0x000008, "Member 'PlayFabAdminAPI_DeleteTitle::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitle, onFailure) == 0x000018, "Member 'PlayFabAdminAPI_DeleteTitle::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitle, customData) == 0x000028, "Member 'PlayFabAdminAPI_DeleteTitle::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitle, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_DeleteTitle::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteTitleDataOverride
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeleteTitleDataOverride final
{
public:
	struct FAdminDeleteTitleDataOverrideRequest   Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteTitleDataOverrideResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteTitleDataOverride) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteTitleDataOverride");
static_assert(sizeof(PlayFabAdminAPI_DeleteTitleDataOverride) == 0x000048, "Wrong size on PlayFabAdminAPI_DeleteTitleDataOverride");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitleDataOverride, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteTitleDataOverride::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitleDataOverride, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeleteTitleDataOverride::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitleDataOverride, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeleteTitleDataOverride::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitleDataOverride, customData) == 0x000038, "Member 'PlayFabAdminAPI_DeleteTitleDataOverride::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitleDataOverride, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeleteTitleDataOverride::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ExportMasterPlayerData
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_ExportMasterPlayerData final
{
public:
	struct FAdminExportMasterPlayerDataRequest    Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminExportMasterPlayerDataResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ExportMasterPlayerData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ExportMasterPlayerData");
static_assert(sizeof(PlayFabAdminAPI_ExportMasterPlayerData) == 0x000048, "Wrong size on PlayFabAdminAPI_ExportMasterPlayerData");
static_assert(offsetof(PlayFabAdminAPI_ExportMasterPlayerData, Request) == 0x000000, "Member 'PlayFabAdminAPI_ExportMasterPlayerData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportMasterPlayerData, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_ExportMasterPlayerData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportMasterPlayerData, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_ExportMasterPlayerData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportMasterPlayerData, customData) == 0x000038, "Member 'PlayFabAdminAPI_ExportMasterPlayerData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportMasterPlayerData, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_ExportMasterPlayerData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ExportPlayersInSegment
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_ExportPlayersInSegment final
{
public:
	struct FAdminExportPlayersInSegmentRequest    Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminExportPlayersInSegmentResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ExportPlayersInSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ExportPlayersInSegment");
static_assert(sizeof(PlayFabAdminAPI_ExportPlayersInSegment) == 0x000048, "Wrong size on PlayFabAdminAPI_ExportPlayersInSegment");
static_assert(offsetof(PlayFabAdminAPI_ExportPlayersInSegment, Request) == 0x000000, "Member 'PlayFabAdminAPI_ExportPlayersInSegment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportPlayersInSegment, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_ExportPlayersInSegment::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportPlayersInSegment, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_ExportPlayersInSegment::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportPlayersInSegment, customData) == 0x000038, "Member 'PlayFabAdminAPI_ExportPlayersInSegment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportPlayersInSegment, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_ExportPlayersInSegment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetActionsOnPlayersInSegmentTaskInstance
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance final
{
public:
	struct FAdminGetTaskInstanceRequest           Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance");
static_assert(sizeof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance) == 0x000048, "Wrong size on PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance");
static_assert(offsetof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance, customData) == 0x000038, "Member 'PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetAllSegments
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_GetAllSegments final
{
public:
	struct FAdminGetAllSegmentsRequest            Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetAllSegmentsResult& Result, class UObject* customData)> onSuccess; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetAllSegments) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetAllSegments");
static_assert(sizeof(PlayFabAdminAPI_GetAllSegments) == 0x000038, "Wrong size on PlayFabAdminAPI_GetAllSegments");
static_assert(offsetof(PlayFabAdminAPI_GetAllSegments, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetAllSegments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetAllSegments, onSuccess) == 0x000008, "Member 'PlayFabAdminAPI_GetAllSegments::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetAllSegments, onFailure) == 0x000018, "Member 'PlayFabAdminAPI_GetAllSegments::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetAllSegments, customData) == 0x000028, "Member 'PlayFabAdminAPI_GetAllSegments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetAllSegments, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_GetAllSegments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetCatalogItems
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetCatalogItems final
{
public:
	struct FAdminGetCatalogItemsRequest           Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetCatalogItemsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetCatalogItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetCatalogItems");
static_assert(sizeof(PlayFabAdminAPI_GetCatalogItems) == 0x000048, "Wrong size on PlayFabAdminAPI_GetCatalogItems");
static_assert(offsetof(PlayFabAdminAPI_GetCatalogItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetCatalogItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCatalogItems, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetCatalogItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCatalogItems, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetCatalogItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCatalogItems, customData) == 0x000038, "Member 'PlayFabAdminAPI_GetCatalogItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCatalogItems, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetCatalogItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetCloudScriptRevision
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_GetCloudScriptRevision final
{
public:
	struct FAdminGetCloudScriptRevisionRequest    Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetCloudScriptRevisionResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetCloudScriptRevision) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetCloudScriptRevision");
static_assert(sizeof(PlayFabAdminAPI_GetCloudScriptRevision) == 0x000040, "Wrong size on PlayFabAdminAPI_GetCloudScriptRevision");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptRevision, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetCloudScriptRevision::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptRevision, onSuccess) == 0x000010, "Member 'PlayFabAdminAPI_GetCloudScriptRevision::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptRevision, onFailure) == 0x000020, "Member 'PlayFabAdminAPI_GetCloudScriptRevision::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptRevision, customData) == 0x000030, "Member 'PlayFabAdminAPI_GetCloudScriptRevision::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptRevision, ReturnValue) == 0x000038, "Member 'PlayFabAdminAPI_GetCloudScriptRevision::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetCloudScriptTaskInstance
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetCloudScriptTaskInstance final
{
public:
	struct FAdminGetTaskInstanceRequest           Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetCloudScriptTaskInstanceResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetCloudScriptTaskInstance) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetCloudScriptTaskInstance");
static_assert(sizeof(PlayFabAdminAPI_GetCloudScriptTaskInstance) == 0x000048, "Wrong size on PlayFabAdminAPI_GetCloudScriptTaskInstance");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptTaskInstance, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetCloudScriptTaskInstance::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptTaskInstance, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetCloudScriptTaskInstance::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptTaskInstance, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetCloudScriptTaskInstance::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptTaskInstance, customData) == 0x000038, "Member 'PlayFabAdminAPI_GetCloudScriptTaskInstance::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptTaskInstance, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetCloudScriptTaskInstance::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetCloudScriptVersions
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_GetCloudScriptVersions final
{
public:
	struct FAdminGetCloudScriptVersionsRequest    Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetCloudScriptVersionsResult& Result, class UObject* customData)> onSuccess; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetCloudScriptVersions) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetCloudScriptVersions");
static_assert(sizeof(PlayFabAdminAPI_GetCloudScriptVersions) == 0x000038, "Wrong size on PlayFabAdminAPI_GetCloudScriptVersions");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptVersions, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetCloudScriptVersions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptVersions, onSuccess) == 0x000008, "Member 'PlayFabAdminAPI_GetCloudScriptVersions::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptVersions, onFailure) == 0x000018, "Member 'PlayFabAdminAPI_GetCloudScriptVersions::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptVersions, customData) == 0x000028, "Member 'PlayFabAdminAPI_GetCloudScriptVersions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptVersions, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_GetCloudScriptVersions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetContentList
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetContentList final
{
public:
	struct FAdminGetContentListRequest            Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetContentListResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetContentList) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetContentList");
static_assert(sizeof(PlayFabAdminAPI_GetContentList) == 0x000048, "Wrong size on PlayFabAdminAPI_GetContentList");
static_assert(offsetof(PlayFabAdminAPI_GetContentList, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetContentList::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentList, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetContentList::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentList, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetContentList::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentList, customData) == 0x000038, "Member 'PlayFabAdminAPI_GetContentList::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentList, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetContentList::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetContentUploadUrl
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_GetContentUploadUrl final
{
public:
	struct FAdminGetContentUploadUrlRequest       Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetContentUploadUrlResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetContentUploadUrl) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetContentUploadUrl");
static_assert(sizeof(PlayFabAdminAPI_GetContentUploadUrl) == 0x000058, "Wrong size on PlayFabAdminAPI_GetContentUploadUrl");
static_assert(offsetof(PlayFabAdminAPI_GetContentUploadUrl, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetContentUploadUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentUploadUrl, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_GetContentUploadUrl::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentUploadUrl, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_GetContentUploadUrl::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentUploadUrl, customData) == 0x000048, "Member 'PlayFabAdminAPI_GetContentUploadUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentUploadUrl, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_GetContentUploadUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetDataReport
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_GetDataReport final
{
public:
	struct FAdminGetDataReportRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetDataReportResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetDataReport) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetDataReport");
static_assert(sizeof(PlayFabAdminAPI_GetDataReport) == 0x000058, "Wrong size on PlayFabAdminAPI_GetDataReport");
static_assert(offsetof(PlayFabAdminAPI_GetDataReport, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetDataReport::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetDataReport, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_GetDataReport::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetDataReport, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_GetDataReport::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetDataReport, customData) == 0x000048, "Member 'PlayFabAdminAPI_GetDataReport::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetDataReport, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_GetDataReport::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayedTitleList
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetPlayedTitleList final
{
public:
	struct FAdminGetPlayedTitleListRequest        Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayedTitleListResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayedTitleList) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayedTitleList");
static_assert(sizeof(PlayFabAdminAPI_GetPlayedTitleList) == 0x000048, "Wrong size on PlayFabAdminAPI_GetPlayedTitleList");
static_assert(offsetof(PlayFabAdminAPI_GetPlayedTitleList, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayedTitleList::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayedTitleList, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetPlayedTitleList::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayedTitleList, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetPlayedTitleList::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayedTitleList, customData) == 0x000038, "Member 'PlayFabAdminAPI_GetPlayedTitleList::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayedTitleList, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetPlayedTitleList::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerIdFromAuthToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_GetPlayerIdFromAuthToken final
{
public:
	struct FAdminGetPlayerIdFromAuthTokenRequest  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerIdFromAuthTokenResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerIdFromAuthToken) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerIdFromAuthToken");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerIdFromAuthToken) == 0x000050, "Wrong size on PlayFabAdminAPI_GetPlayerIdFromAuthToken");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerIdFromAuthToken, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerIdFromAuthToken::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerIdFromAuthToken, onSuccess) == 0x000020, "Member 'PlayFabAdminAPI_GetPlayerIdFromAuthToken::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerIdFromAuthToken, onFailure) == 0x000030, "Member 'PlayFabAdminAPI_GetPlayerIdFromAuthToken::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerIdFromAuthToken, customData) == 0x000040, "Member 'PlayFabAdminAPI_GetPlayerIdFromAuthToken::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerIdFromAuthToken, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_GetPlayerIdFromAuthToken::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerProfile
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_GetPlayerProfile final
{
public:
	struct FAdminGetPlayerProfileRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerProfileResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerProfile) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerProfile");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerProfile) == 0x000058, "Wrong size on PlayFabAdminAPI_GetPlayerProfile");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerProfile, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerProfile::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerProfile, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_GetPlayerProfile::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerProfile, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_GetPlayerProfile::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerProfile, customData) == 0x000048, "Member 'PlayFabAdminAPI_GetPlayerProfile::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerProfile, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_GetPlayerProfile::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_GetPlayerSegments final
{
public:
	struct FAdminGetPlayersSegmentsRequest        Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerSegmentsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerSegments) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerSegments");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerSegments) == 0x000050, "Wrong size on PlayFabAdminAPI_GetPlayerSegments");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSegments, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerSegments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSegments, onSuccess) == 0x000020, "Member 'PlayFabAdminAPI_GetPlayerSegments::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSegments, onFailure) == 0x000030, "Member 'PlayFabAdminAPI_GetPlayerSegments::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSegments, customData) == 0x000040, "Member 'PlayFabAdminAPI_GetPlayerSegments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSegments, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_GetPlayerSegments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerSharedSecrets
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_GetPlayerSharedSecrets final
{
public:
	struct FAdminGetPlayerSharedSecretsRequest    Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerSharedSecretsResult& Result, class UObject* customData)> onSuccess; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerSharedSecrets) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerSharedSecrets");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerSharedSecrets) == 0x000038, "Wrong size on PlayFabAdminAPI_GetPlayerSharedSecrets");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSharedSecrets, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerSharedSecrets::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSharedSecrets, onSuccess) == 0x000008, "Member 'PlayFabAdminAPI_GetPlayerSharedSecrets::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSharedSecrets, onFailure) == 0x000018, "Member 'PlayFabAdminAPI_GetPlayerSharedSecrets::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSharedSecrets, customData) == 0x000028, "Member 'PlayFabAdminAPI_GetPlayerSharedSecrets::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSharedSecrets, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_GetPlayerSharedSecrets::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayersInSegment
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_GetPlayersInSegment final
{
public:
	struct FAdminGetPlayersInSegmentRequest       Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayersInSegmentResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayersInSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayersInSegment");
static_assert(sizeof(PlayFabAdminAPI_GetPlayersInSegment) == 0x000070, "Wrong size on PlayFabAdminAPI_GetPlayersInSegment");
static_assert(offsetof(PlayFabAdminAPI_GetPlayersInSegment, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayersInSegment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayersInSegment, onSuccess) == 0x000040, "Member 'PlayFabAdminAPI_GetPlayersInSegment::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayersInSegment, onFailure) == 0x000050, "Member 'PlayFabAdminAPI_GetPlayersInSegment::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayersInSegment, customData) == 0x000060, "Member 'PlayFabAdminAPI_GetPlayersInSegment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayersInSegment, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_GetPlayersInSegment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerStatisticDefinitions
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_GetPlayerStatisticDefinitions final
{
public:
	struct FAdminGetPlayerStatisticDefinitionsRequest Request;                                       // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerStatisticDefinitionsResult& Result, class UObject* customData)> onSuccess; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerStatisticDefinitions) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerStatisticDefinitions");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerStatisticDefinitions) == 0x000038, "Wrong size on PlayFabAdminAPI_GetPlayerStatisticDefinitions");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticDefinitions, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerStatisticDefinitions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticDefinitions, onSuccess) == 0x000008, "Member 'PlayFabAdminAPI_GetPlayerStatisticDefinitions::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticDefinitions, onFailure) == 0x000018, "Member 'PlayFabAdminAPI_GetPlayerStatisticDefinitions::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticDefinitions, customData) == 0x000028, "Member 'PlayFabAdminAPI_GetPlayerStatisticDefinitions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticDefinitions, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_GetPlayerStatisticDefinitions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerStatisticVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_GetPlayerStatisticVersions final
{
public:
	struct FAdminGetPlayerStatisticVersionsRequest Request;                                          // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerStatisticVersionsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerStatisticVersions) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerStatisticVersions");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerStatisticVersions) == 0x000050, "Wrong size on PlayFabAdminAPI_GetPlayerStatisticVersions");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticVersions, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerStatisticVersions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticVersions, onSuccess) == 0x000020, "Member 'PlayFabAdminAPI_GetPlayerStatisticVersions::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticVersions, onFailure) == 0x000030, "Member 'PlayFabAdminAPI_GetPlayerStatisticVersions::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticVersions, customData) == 0x000040, "Member 'PlayFabAdminAPI_GetPlayerStatisticVersions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticVersions, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_GetPlayerStatisticVersions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerTags
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetPlayerTags final
{
public:
	struct FAdminGetPlayerTagsRequest             Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerTagsResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerTags) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerTags");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerTags) == 0x000060, "Wrong size on PlayFabAdminAPI_GetPlayerTags");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerTags, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerTags, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetPlayerTags::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerTags, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetPlayerTags::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerTags, customData) == 0x000050, "Member 'PlayFabAdminAPI_GetPlayerTags::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerTags, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetPlayerTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPolicy
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetPolicy final
{
public:
	struct FAdminGetPolicyRequest                 Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPolicyResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPolicy) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPolicy");
static_assert(sizeof(PlayFabAdminAPI_GetPolicy) == 0x000048, "Wrong size on PlayFabAdminAPI_GetPolicy");
static_assert(offsetof(PlayFabAdminAPI_GetPolicy, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPolicy::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPolicy, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetPolicy::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPolicy, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetPolicy::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPolicy, customData) == 0x000038, "Member 'PlayFabAdminAPI_GetPolicy::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPolicy, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetPolicy::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPublisherData
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetPublisherData final
{
public:
	struct FAdminGetPublisherDataRequest          Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPublisherDataResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPublisherData");
static_assert(sizeof(PlayFabAdminAPI_GetPublisherData) == 0x000048, "Wrong size on PlayFabAdminAPI_GetPublisherData");
static_assert(offsetof(PlayFabAdminAPI_GetPublisherData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPublisherData, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetPublisherData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPublisherData, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetPublisherData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPublisherData, customData) == 0x000038, "Member 'PlayFabAdminAPI_GetPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPublisherData, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetRandomResultTables
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetRandomResultTables final
{
public:
	struct FAdminGetRandomResultTablesRequest     Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetRandomResultTablesResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetRandomResultTables) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetRandomResultTables");
static_assert(sizeof(PlayFabAdminAPI_GetRandomResultTables) == 0x000048, "Wrong size on PlayFabAdminAPI_GetRandomResultTables");
static_assert(offsetof(PlayFabAdminAPI_GetRandomResultTables, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetRandomResultTables::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetRandomResultTables, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetRandomResultTables::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetRandomResultTables, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetRandomResultTables::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetRandomResultTables, customData) == 0x000038, "Member 'PlayFabAdminAPI_GetRandomResultTables::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetRandomResultTables, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetRandomResultTables::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetSegmentExport
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetSegmentExport final
{
public:
	struct FAdminGetPlayersInSegmentExportRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayersInSegmentExportResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetSegmentExport) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetSegmentExport");
static_assert(sizeof(PlayFabAdminAPI_GetSegmentExport) == 0x000048, "Wrong size on PlayFabAdminAPI_GetSegmentExport");
static_assert(offsetof(PlayFabAdminAPI_GetSegmentExport, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetSegmentExport::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegmentExport, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetSegmentExport::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegmentExport, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetSegmentExport::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegmentExport, customData) == 0x000038, "Member 'PlayFabAdminAPI_GetSegmentExport::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegmentExport, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetSegmentExport::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetSegments
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetSegments final
{
public:
	struct FAdminGetSegmentsRequest               Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetSegmentsResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetSegments) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetSegments");
static_assert(sizeof(PlayFabAdminAPI_GetSegments) == 0x000048, "Wrong size on PlayFabAdminAPI_GetSegments");
static_assert(offsetof(PlayFabAdminAPI_GetSegments, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetSegments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegments, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetSegments::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegments, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetSegments::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegments, customData) == 0x000038, "Member 'PlayFabAdminAPI_GetSegments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegments, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetSegments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetStoreItems
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_GetStoreItems final
{
public:
	struct FAdminGetStoreItemsRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetStoreItemsResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetStoreItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetStoreItems");
static_assert(sizeof(PlayFabAdminAPI_GetStoreItems) == 0x000058, "Wrong size on PlayFabAdminAPI_GetStoreItems");
static_assert(offsetof(PlayFabAdminAPI_GetStoreItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetStoreItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetStoreItems, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_GetStoreItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetStoreItems, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_GetStoreItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetStoreItems, customData) == 0x000048, "Member 'PlayFabAdminAPI_GetStoreItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetStoreItems, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_GetStoreItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetTaskInstances
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_GetTaskInstances final
{
public:
	struct FAdminGetTaskInstancesRequest          Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetTaskInstancesResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetTaskInstances) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetTaskInstances");
static_assert(sizeof(PlayFabAdminAPI_GetTaskInstances) == 0x000068, "Wrong size on PlayFabAdminAPI_GetTaskInstances");
static_assert(offsetof(PlayFabAdminAPI_GetTaskInstances, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetTaskInstances::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTaskInstances, onSuccess) == 0x000038, "Member 'PlayFabAdminAPI_GetTaskInstances::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTaskInstances, onFailure) == 0x000048, "Member 'PlayFabAdminAPI_GetTaskInstances::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTaskInstances, customData) == 0x000058, "Member 'PlayFabAdminAPI_GetTaskInstances::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTaskInstances, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_GetTaskInstances::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetTasks
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_GetTasks final
{
public:
	struct FAdminGetTasksRequest                  Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetTasksResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetTasks) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetTasks");
static_assert(sizeof(PlayFabAdminAPI_GetTasks) == 0x000040, "Wrong size on PlayFabAdminAPI_GetTasks");
static_assert(offsetof(PlayFabAdminAPI_GetTasks, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetTasks::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTasks, onSuccess) == 0x000010, "Member 'PlayFabAdminAPI_GetTasks::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTasks, onFailure) == 0x000020, "Member 'PlayFabAdminAPI_GetTasks::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTasks, customData) == 0x000030, "Member 'PlayFabAdminAPI_GetTasks::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTasks, ReturnValue) == 0x000038, "Member 'PlayFabAdminAPI_GetTasks::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetTitleData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_GetTitleData final
{
public:
	struct FAdminGetTitleDataRequest              Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetTitleDataResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetTitleData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetTitleData");
static_assert(sizeof(PlayFabAdminAPI_GetTitleData) == 0x000058, "Wrong size on PlayFabAdminAPI_GetTitleData");
static_assert(offsetof(PlayFabAdminAPI_GetTitleData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetTitleData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleData, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_GetTitleData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleData, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_GetTitleData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleData, customData) == 0x000048, "Member 'PlayFabAdminAPI_GetTitleData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleData, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_GetTitleData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetTitleInternalData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_GetTitleInternalData final
{
public:
	struct FAdminGetTitleDataRequest              Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetTitleDataResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetTitleInternalData");
static_assert(sizeof(PlayFabAdminAPI_GetTitleInternalData) == 0x000058, "Wrong size on PlayFabAdminAPI_GetTitleInternalData");
static_assert(offsetof(PlayFabAdminAPI_GetTitleInternalData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetTitleInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleInternalData, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_GetTitleInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleInternalData, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_GetTitleInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleInternalData, customData) == 0x000048, "Member 'PlayFabAdminAPI_GetTitleInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleInternalData, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_GetTitleInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserAccountInfo
// 0x0078 (0x0078 - 0x0000)
struct PlayFabAdminAPI_GetUserAccountInfo final
{
public:
	struct FAdminLookupUserAccountInfoRequest     Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminLookupUserAccountInfoResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserAccountInfo) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserAccountInfo");
static_assert(sizeof(PlayFabAdminAPI_GetUserAccountInfo) == 0x000078, "Wrong size on PlayFabAdminAPI_GetUserAccountInfo");
static_assert(offsetof(PlayFabAdminAPI_GetUserAccountInfo, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserAccountInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserAccountInfo, onSuccess) == 0x000048, "Member 'PlayFabAdminAPI_GetUserAccountInfo::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserAccountInfo, onFailure) == 0x000058, "Member 'PlayFabAdminAPI_GetUserAccountInfo::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserAccountInfo, customData) == 0x000068, "Member 'PlayFabAdminAPI_GetUserAccountInfo::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserAccountInfo, ReturnValue) == 0x000070, "Member 'PlayFabAdminAPI_GetUserAccountInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserBans
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetUserBans final
{
public:
	struct FAdminGetUserBansRequest               Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserBansResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserBans) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserBans");
static_assert(sizeof(PlayFabAdminAPI_GetUserBans) == 0x000048, "Wrong size on PlayFabAdminAPI_GetUserBans");
static_assert(offsetof(PlayFabAdminAPI_GetUserBans, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserBans::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserBans, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetUserBans::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserBans, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetUserBans::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserBans, customData) == 0x000038, "Member 'PlayFabAdminAPI_GetUserBans::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserBans, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetUserBans::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetUserData final
{
public:
	struct FAdminGetUserDataRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserData");
static_assert(sizeof(PlayFabAdminAPI_GetUserData) == 0x000060, "Wrong size on PlayFabAdminAPI_GetUserData");
static_assert(offsetof(PlayFabAdminAPI_GetUserData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserData, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetUserData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserData, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetUserData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserData, customData) == 0x000050, "Member 'PlayFabAdminAPI_GetUserData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetUserData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserInternalData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetUserInternalData final
{
public:
	struct FAdminGetUserDataRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserInternalData");
static_assert(sizeof(PlayFabAdminAPI_GetUserInternalData) == 0x000060, "Wrong size on PlayFabAdminAPI_GetUserInternalData");
static_assert(offsetof(PlayFabAdminAPI_GetUserInternalData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInternalData, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetUserInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInternalData, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetUserInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInternalData, customData) == 0x000050, "Member 'PlayFabAdminAPI_GetUserInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInternalData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetUserInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_GetUserInventory final
{
public:
	struct FAdminGetUserInventoryRequest          Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserInventoryResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserInventory) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserInventory");
static_assert(sizeof(PlayFabAdminAPI_GetUserInventory) == 0x000050, "Wrong size on PlayFabAdminAPI_GetUserInventory");
static_assert(offsetof(PlayFabAdminAPI_GetUserInventory, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserInventory::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInventory, onSuccess) == 0x000020, "Member 'PlayFabAdminAPI_GetUserInventory::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInventory, onFailure) == 0x000030, "Member 'PlayFabAdminAPI_GetUserInventory::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInventory, customData) == 0x000040, "Member 'PlayFabAdminAPI_GetUserInventory::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInventory, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_GetUserInventory::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserPublisherData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetUserPublisherData final
{
public:
	struct FAdminGetUserDataRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserPublisherData");
static_assert(sizeof(PlayFabAdminAPI_GetUserPublisherData) == 0x000060, "Wrong size on PlayFabAdminAPI_GetUserPublisherData");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherData, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetUserPublisherData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherData, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetUserPublisherData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherData, customData) == 0x000050, "Member 'PlayFabAdminAPI_GetUserPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetUserPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserPublisherInternalData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetUserPublisherInternalData final
{
public:
	struct FAdminGetUserDataRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserPublisherInternalData");
static_assert(sizeof(PlayFabAdminAPI_GetUserPublisherInternalData) == 0x000060, "Wrong size on PlayFabAdminAPI_GetUserPublisherInternalData");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherInternalData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserPublisherInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherInternalData, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetUserPublisherInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherInternalData, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetUserPublisherInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherInternalData, customData) == 0x000050, "Member 'PlayFabAdminAPI_GetUserPublisherInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherInternalData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetUserPublisherInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserPublisherReadOnlyData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetUserPublisherReadOnlyData final
{
public:
	struct FAdminGetUserDataRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_GetUserPublisherReadOnlyData) == 0x000060, "Wrong size on PlayFabAdminAPI_GetUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherReadOnlyData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserPublisherReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherReadOnlyData, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetUserPublisherReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherReadOnlyData, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetUserPublisherReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherReadOnlyData, customData) == 0x000050, "Member 'PlayFabAdminAPI_GetUserPublisherReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherReadOnlyData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetUserPublisherReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserReadOnlyData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetUserReadOnlyData final
{
public:
	struct FAdminGetUserDataRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_GetUserReadOnlyData) == 0x000060, "Wrong size on PlayFabAdminAPI_GetUserReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_GetUserReadOnlyData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserReadOnlyData, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetUserReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserReadOnlyData, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetUserReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserReadOnlyData, customData) == 0x000050, "Member 'PlayFabAdminAPI_GetUserReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserReadOnlyData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetUserReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GrantItemsToUsers
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GrantItemsToUsers final
{
public:
	struct FAdminGrantItemsToUsersRequest         Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGrantItemsToUsersResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GrantItemsToUsers) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GrantItemsToUsers");
static_assert(sizeof(PlayFabAdminAPI_GrantItemsToUsers) == 0x000060, "Wrong size on PlayFabAdminAPI_GrantItemsToUsers");
static_assert(offsetof(PlayFabAdminAPI_GrantItemsToUsers, Request) == 0x000000, "Member 'PlayFabAdminAPI_GrantItemsToUsers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GrantItemsToUsers, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GrantItemsToUsers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GrantItemsToUsers, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_GrantItemsToUsers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GrantItemsToUsers, customData) == 0x000050, "Member 'PlayFabAdminAPI_GrantItemsToUsers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GrantItemsToUsers, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GrantItemsToUsers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.IncrementLimitedEditionItemAvailability
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_IncrementLimitedEditionItemAvailability final
{
public:
	struct FAdminIncrementLimitedEditionItemAvailabilityRequest Request;                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminIncrementLimitedEditionItemAvailabilityResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability) == 0x000008, "Wrong alignment on PlayFabAdminAPI_IncrementLimitedEditionItemAvailability");
static_assert(sizeof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability) == 0x000068, "Wrong size on PlayFabAdminAPI_IncrementLimitedEditionItemAvailability");
static_assert(offsetof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability, Request) == 0x000000, "Member 'PlayFabAdminAPI_IncrementLimitedEditionItemAvailability::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability, onSuccess) == 0x000038, "Member 'PlayFabAdminAPI_IncrementLimitedEditionItemAvailability::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability, onFailure) == 0x000048, "Member 'PlayFabAdminAPI_IncrementLimitedEditionItemAvailability::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability, customData) == 0x000058, "Member 'PlayFabAdminAPI_IncrementLimitedEditionItemAvailability::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_IncrementLimitedEditionItemAvailability::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.IncrementPlayerStatisticVersion
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_IncrementPlayerStatisticVersion final
{
public:
	struct FAdminIncrementPlayerStatisticVersionRequest Request;                                     // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminIncrementPlayerStatisticVersionResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_IncrementPlayerStatisticVersion) == 0x000008, "Wrong alignment on PlayFabAdminAPI_IncrementPlayerStatisticVersion");
static_assert(sizeof(PlayFabAdminAPI_IncrementPlayerStatisticVersion) == 0x000050, "Wrong size on PlayFabAdminAPI_IncrementPlayerStatisticVersion");
static_assert(offsetof(PlayFabAdminAPI_IncrementPlayerStatisticVersion, Request) == 0x000000, "Member 'PlayFabAdminAPI_IncrementPlayerStatisticVersion::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementPlayerStatisticVersion, onSuccess) == 0x000020, "Member 'PlayFabAdminAPI_IncrementPlayerStatisticVersion::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementPlayerStatisticVersion, onFailure) == 0x000030, "Member 'PlayFabAdminAPI_IncrementPlayerStatisticVersion::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementPlayerStatisticVersion, customData) == 0x000040, "Member 'PlayFabAdminAPI_IncrementPlayerStatisticVersion::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementPlayerStatisticVersion, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_IncrementPlayerStatisticVersion::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ListOpenIdConnection
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_ListOpenIdConnection final
{
public:
	struct FAdminListOpenIdConnectionRequest      Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminListOpenIdConnectionResponse& Result, class UObject* customData)> onSuccess; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ListOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ListOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_ListOpenIdConnection) == 0x000038, "Wrong size on PlayFabAdminAPI_ListOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_ListOpenIdConnection, Request) == 0x000000, "Member 'PlayFabAdminAPI_ListOpenIdConnection::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListOpenIdConnection, onSuccess) == 0x000008, "Member 'PlayFabAdminAPI_ListOpenIdConnection::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListOpenIdConnection, onFailure) == 0x000018, "Member 'PlayFabAdminAPI_ListOpenIdConnection::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListOpenIdConnection, customData) == 0x000028, "Member 'PlayFabAdminAPI_ListOpenIdConnection::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListOpenIdConnection, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_ListOpenIdConnection::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ListVirtualCurrencyTypes
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_ListVirtualCurrencyTypes final
{
public:
	struct FAdminListVirtualCurrencyTypesRequest  Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminListVirtualCurrencyTypesResult& Result, class UObject* customData)> onSuccess; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ListVirtualCurrencyTypes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ListVirtualCurrencyTypes");
static_assert(sizeof(PlayFabAdminAPI_ListVirtualCurrencyTypes) == 0x000038, "Wrong size on PlayFabAdminAPI_ListVirtualCurrencyTypes");
static_assert(offsetof(PlayFabAdminAPI_ListVirtualCurrencyTypes, Request) == 0x000000, "Member 'PlayFabAdminAPI_ListVirtualCurrencyTypes::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListVirtualCurrencyTypes, onSuccess) == 0x000008, "Member 'PlayFabAdminAPI_ListVirtualCurrencyTypes::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListVirtualCurrencyTypes, onFailure) == 0x000018, "Member 'PlayFabAdminAPI_ListVirtualCurrencyTypes::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListVirtualCurrencyTypes, customData) == 0x000028, "Member 'PlayFabAdminAPI_ListVirtualCurrencyTypes::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListVirtualCurrencyTypes, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_ListVirtualCurrencyTypes::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RefundPurchase
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_RefundPurchase final
{
public:
	struct FAdminRefundPurchaseRequest            Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRefundPurchaseResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RefundPurchase) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RefundPurchase");
static_assert(sizeof(PlayFabAdminAPI_RefundPurchase) == 0x000068, "Wrong size on PlayFabAdminAPI_RefundPurchase");
static_assert(offsetof(PlayFabAdminAPI_RefundPurchase, Request) == 0x000000, "Member 'PlayFabAdminAPI_RefundPurchase::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RefundPurchase, onSuccess) == 0x000038, "Member 'PlayFabAdminAPI_RefundPurchase::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RefundPurchase, onFailure) == 0x000048, "Member 'PlayFabAdminAPI_RefundPurchase::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RefundPurchase, customData) == 0x000058, "Member 'PlayFabAdminAPI_RefundPurchase::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RefundPurchase, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_RefundPurchase::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RemovePlayerTag
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_RemovePlayerTag final
{
public:
	struct FAdminRemovePlayerTagRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRemovePlayerTagResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RemovePlayerTag) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RemovePlayerTag");
static_assert(sizeof(PlayFabAdminAPI_RemovePlayerTag) == 0x000060, "Wrong size on PlayFabAdminAPI_RemovePlayerTag");
static_assert(offsetof(PlayFabAdminAPI_RemovePlayerTag, Request) == 0x000000, "Member 'PlayFabAdminAPI_RemovePlayerTag::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemovePlayerTag, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_RemovePlayerTag::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemovePlayerTag, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_RemovePlayerTag::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemovePlayerTag, customData) == 0x000050, "Member 'PlayFabAdminAPI_RemovePlayerTag::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemovePlayerTag, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_RemovePlayerTag::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RemoveVirtualCurrencyTypes
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_RemoveVirtualCurrencyTypes final
{
public:
	struct FAdminRemoveVirtualCurrencyTypesRequest Request;                                          // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminBlankResult& Result, class UObject* customData)> onSuccess;    // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RemoveVirtualCurrencyTypes");
static_assert(sizeof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes) == 0x000048, "Wrong size on PlayFabAdminAPI_RemoveVirtualCurrencyTypes");
static_assert(offsetof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes, Request) == 0x000000, "Member 'PlayFabAdminAPI_RemoveVirtualCurrencyTypes::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_RemoveVirtualCurrencyTypes::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_RemoveVirtualCurrencyTypes::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes, customData) == 0x000038, "Member 'PlayFabAdminAPI_RemoveVirtualCurrencyTypes::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_RemoveVirtualCurrencyTypes::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ResetCharacterStatistics
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_ResetCharacterStatistics final
{
public:
	struct FAdminResetCharacterStatisticsRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminResetCharacterStatisticsResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ResetCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ResetCharacterStatistics");
static_assert(sizeof(PlayFabAdminAPI_ResetCharacterStatistics) == 0x000060, "Wrong size on PlayFabAdminAPI_ResetCharacterStatistics");
static_assert(offsetof(PlayFabAdminAPI_ResetCharacterStatistics, Request) == 0x000000, "Member 'PlayFabAdminAPI_ResetCharacterStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetCharacterStatistics, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_ResetCharacterStatistics::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetCharacterStatistics, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_ResetCharacterStatistics::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetCharacterStatistics, customData) == 0x000050, "Member 'PlayFabAdminAPI_ResetCharacterStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetCharacterStatistics, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_ResetCharacterStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ResetPassword
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_ResetPassword final
{
public:
	struct FAdminResetPasswordRequest             Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminResetPasswordResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ResetPassword) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ResetPassword");
static_assert(sizeof(PlayFabAdminAPI_ResetPassword) == 0x000060, "Wrong size on PlayFabAdminAPI_ResetPassword");
static_assert(offsetof(PlayFabAdminAPI_ResetPassword, Request) == 0x000000, "Member 'PlayFabAdminAPI_ResetPassword::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetPassword, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_ResetPassword::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetPassword, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_ResetPassword::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetPassword, customData) == 0x000050, "Member 'PlayFabAdminAPI_ResetPassword::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetPassword, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_ResetPassword::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ResetUserStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_ResetUserStatistics final
{
public:
	struct FAdminResetUserStatisticsRequest       Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminResetUserStatisticsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ResetUserStatistics) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ResetUserStatistics");
static_assert(sizeof(PlayFabAdminAPI_ResetUserStatistics) == 0x000050, "Wrong size on PlayFabAdminAPI_ResetUserStatistics");
static_assert(offsetof(PlayFabAdminAPI_ResetUserStatistics, Request) == 0x000000, "Member 'PlayFabAdminAPI_ResetUserStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetUserStatistics, onSuccess) == 0x000020, "Member 'PlayFabAdminAPI_ResetUserStatistics::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetUserStatistics, onFailure) == 0x000030, "Member 'PlayFabAdminAPI_ResetUserStatistics::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetUserStatistics, customData) == 0x000040, "Member 'PlayFabAdminAPI_ResetUserStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetUserStatistics, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_ResetUserStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ResolvePurchaseDispute
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_ResolvePurchaseDispute final
{
public:
	struct FAdminResolvePurchaseDisputeRequest    Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminResolvePurchaseDisputeResponse& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ResolvePurchaseDispute) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ResolvePurchaseDispute");
static_assert(sizeof(PlayFabAdminAPI_ResolvePurchaseDispute) == 0x000070, "Wrong size on PlayFabAdminAPI_ResolvePurchaseDispute");
static_assert(offsetof(PlayFabAdminAPI_ResolvePurchaseDispute, Request) == 0x000000, "Member 'PlayFabAdminAPI_ResolvePurchaseDispute::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResolvePurchaseDispute, onSuccess) == 0x000040, "Member 'PlayFabAdminAPI_ResolvePurchaseDispute::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResolvePurchaseDispute, onFailure) == 0x000050, "Member 'PlayFabAdminAPI_ResolvePurchaseDispute::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResolvePurchaseDispute, customData) == 0x000060, "Member 'PlayFabAdminAPI_ResolvePurchaseDispute::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResolvePurchaseDispute, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_ResolvePurchaseDispute::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RevokeAllBansForUser
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_RevokeAllBansForUser final
{
public:
	struct FAdminRevokeAllBansForUserRequest      Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRevokeAllBansForUserResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RevokeAllBansForUser) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RevokeAllBansForUser");
static_assert(sizeof(PlayFabAdminAPI_RevokeAllBansForUser) == 0x000048, "Wrong size on PlayFabAdminAPI_RevokeAllBansForUser");
static_assert(offsetof(PlayFabAdminAPI_RevokeAllBansForUser, Request) == 0x000000, "Member 'PlayFabAdminAPI_RevokeAllBansForUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeAllBansForUser, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_RevokeAllBansForUser::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeAllBansForUser, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_RevokeAllBansForUser::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeAllBansForUser, customData) == 0x000038, "Member 'PlayFabAdminAPI_RevokeAllBansForUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeAllBansForUser, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_RevokeAllBansForUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RevokeBans
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_RevokeBans final
{
public:
	struct FAdminRevokeBansRequest                Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRevokeBansResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RevokeBans) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RevokeBans");
static_assert(sizeof(PlayFabAdminAPI_RevokeBans) == 0x000048, "Wrong size on PlayFabAdminAPI_RevokeBans");
static_assert(offsetof(PlayFabAdminAPI_RevokeBans, Request) == 0x000000, "Member 'PlayFabAdminAPI_RevokeBans::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeBans, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_RevokeBans::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeBans, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_RevokeBans::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeBans, customData) == 0x000038, "Member 'PlayFabAdminAPI_RevokeBans::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeBans, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_RevokeBans::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RevokeInventoryItem
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_RevokeInventoryItem final
{
public:
	struct FAdminRevokeInventoryItemRequest       Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRevokeInventoryResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RevokeInventoryItem) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RevokeInventoryItem");
static_assert(sizeof(PlayFabAdminAPI_RevokeInventoryItem) == 0x000068, "Wrong size on PlayFabAdminAPI_RevokeInventoryItem");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItem, Request) == 0x000000, "Member 'PlayFabAdminAPI_RevokeInventoryItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItem, onSuccess) == 0x000038, "Member 'PlayFabAdminAPI_RevokeInventoryItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItem, onFailure) == 0x000048, "Member 'PlayFabAdminAPI_RevokeInventoryItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItem, customData) == 0x000058, "Member 'PlayFabAdminAPI_RevokeInventoryItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItem, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_RevokeInventoryItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RevokeInventoryItems
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_RevokeInventoryItems final
{
public:
	struct FAdminRevokeInventoryItemsRequest      Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRevokeInventoryItemsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RevokeInventoryItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RevokeInventoryItems");
static_assert(sizeof(PlayFabAdminAPI_RevokeInventoryItems) == 0x000048, "Wrong size on PlayFabAdminAPI_RevokeInventoryItems");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_RevokeInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItems, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_RevokeInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItems, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_RevokeInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItems, customData) == 0x000038, "Member 'PlayFabAdminAPI_RevokeInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItems, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_RevokeInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RunTask
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_RunTask final
{
public:
	struct FAdminRunTaskRequest                   Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRunTaskResult& Result, class UObject* customData)> onSuccess;  // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RunTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RunTask");
static_assert(sizeof(PlayFabAdminAPI_RunTask) == 0x000048, "Wrong size on PlayFabAdminAPI_RunTask");
static_assert(offsetof(PlayFabAdminAPI_RunTask, Request) == 0x000000, "Member 'PlayFabAdminAPI_RunTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RunTask, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_RunTask::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RunTask, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_RunTask::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RunTask, customData) == 0x000038, "Member 'PlayFabAdminAPI_RunTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RunTask, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_RunTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SendAccountRecoveryEmail
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_SendAccountRecoveryEmail final
{
public:
	struct FAdminSendAccountRecoveryEmailRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSendAccountRecoveryEmailResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SendAccountRecoveryEmail) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SendAccountRecoveryEmail");
static_assert(sizeof(PlayFabAdminAPI_SendAccountRecoveryEmail) == 0x000060, "Wrong size on PlayFabAdminAPI_SendAccountRecoveryEmail");
static_assert(offsetof(PlayFabAdminAPI_SendAccountRecoveryEmail, Request) == 0x000000, "Member 'PlayFabAdminAPI_SendAccountRecoveryEmail::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SendAccountRecoveryEmail, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_SendAccountRecoveryEmail::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SendAccountRecoveryEmail, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_SendAccountRecoveryEmail::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SendAccountRecoveryEmail, customData) == 0x000050, "Member 'PlayFabAdminAPI_SendAccountRecoveryEmail::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SendAccountRecoveryEmail, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_SendAccountRecoveryEmail::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetCatalogItems
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_SetCatalogItems final
{
public:
	struct FAdminUpdateCatalogItemsRequest        Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateCatalogItemsResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetCatalogItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetCatalogItems");
static_assert(sizeof(PlayFabAdminAPI_SetCatalogItems) == 0x000068, "Wrong size on PlayFabAdminAPI_SetCatalogItems");
static_assert(offsetof(PlayFabAdminAPI_SetCatalogItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetCatalogItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetCatalogItems, onSuccess) == 0x000038, "Member 'PlayFabAdminAPI_SetCatalogItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetCatalogItems, onFailure) == 0x000048, "Member 'PlayFabAdminAPI_SetCatalogItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetCatalogItems, customData) == 0x000058, "Member 'PlayFabAdminAPI_SetCatalogItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetCatalogItems, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_SetCatalogItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetMembershipOverride
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_SetMembershipOverride final
{
public:
	struct FAdminSetMembershipOverrideRequest     Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetMembershipOverrideResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetMembershipOverride) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetMembershipOverride");
static_assert(sizeof(PlayFabAdminAPI_SetMembershipOverride) == 0x000070, "Wrong size on PlayFabAdminAPI_SetMembershipOverride");
static_assert(offsetof(PlayFabAdminAPI_SetMembershipOverride, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetMembershipOverride::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetMembershipOverride, onSuccess) == 0x000040, "Member 'PlayFabAdminAPI_SetMembershipOverride::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetMembershipOverride, onFailure) == 0x000050, "Member 'PlayFabAdminAPI_SetMembershipOverride::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetMembershipOverride, customData) == 0x000060, "Member 'PlayFabAdminAPI_SetMembershipOverride::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetMembershipOverride, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_SetMembershipOverride::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetPlayerSecret
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_SetPlayerSecret final
{
public:
	struct FAdminSetPlayerSecretRequest           Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetPlayerSecretResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetPlayerSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetPlayerSecret");
static_assert(sizeof(PlayFabAdminAPI_SetPlayerSecret) == 0x000058, "Wrong size on PlayFabAdminAPI_SetPlayerSecret");
static_assert(offsetof(PlayFabAdminAPI_SetPlayerSecret, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetPlayerSecret::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPlayerSecret, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_SetPlayerSecret::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPlayerSecret, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_SetPlayerSecret::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPlayerSecret, customData) == 0x000048, "Member 'PlayFabAdminAPI_SetPlayerSecret::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPlayerSecret, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_SetPlayerSecret::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetPublishedRevision
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_SetPublishedRevision final
{
public:
	struct FAdminSetPublishedRevisionRequest      Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetPublishedRevisionResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetPublishedRevision) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetPublishedRevision");
static_assert(sizeof(PlayFabAdminAPI_SetPublishedRevision) == 0x000048, "Wrong size on PlayFabAdminAPI_SetPublishedRevision");
static_assert(offsetof(PlayFabAdminAPI_SetPublishedRevision, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetPublishedRevision::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublishedRevision, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_SetPublishedRevision::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublishedRevision, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_SetPublishedRevision::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublishedRevision, customData) == 0x000038, "Member 'PlayFabAdminAPI_SetPublishedRevision::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublishedRevision, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_SetPublishedRevision::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetPublisherData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_SetPublisherData final
{
public:
	struct FAdminSetPublisherDataRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetPublisherDataResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetPublisherData");
static_assert(sizeof(PlayFabAdminAPI_SetPublisherData) == 0x000058, "Wrong size on PlayFabAdminAPI_SetPublisherData");
static_assert(offsetof(PlayFabAdminAPI_SetPublisherData, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublisherData, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_SetPublisherData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublisherData, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_SetPublisherData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublisherData, customData) == 0x000048, "Member 'PlayFabAdminAPI_SetPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublisherData, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_SetPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetStoreItems
// 0x0078 (0x0078 - 0x0000)
struct PlayFabAdminAPI_SetStoreItems final
{
public:
	struct FAdminUpdateStoreItemsRequest          Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateStoreItemsResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetStoreItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetStoreItems");
static_assert(sizeof(PlayFabAdminAPI_SetStoreItems) == 0x000078, "Wrong size on PlayFabAdminAPI_SetStoreItems");
static_assert(offsetof(PlayFabAdminAPI_SetStoreItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetStoreItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetStoreItems, onSuccess) == 0x000048, "Member 'PlayFabAdminAPI_SetStoreItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetStoreItems, onFailure) == 0x000058, "Member 'PlayFabAdminAPI_SetStoreItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetStoreItems, customData) == 0x000068, "Member 'PlayFabAdminAPI_SetStoreItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetStoreItems, ReturnValue) == 0x000070, "Member 'PlayFabAdminAPI_SetStoreItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetTitleData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_SetTitleData final
{
public:
	struct FAdminSetTitleDataRequest              Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetTitleDataResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetTitleData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetTitleData");
static_assert(sizeof(PlayFabAdminAPI_SetTitleData) == 0x000058, "Wrong size on PlayFabAdminAPI_SetTitleData");
static_assert(offsetof(PlayFabAdminAPI_SetTitleData, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetTitleData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleData, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_SetTitleData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleData, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_SetTitleData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleData, customData) == 0x000048, "Member 'PlayFabAdminAPI_SetTitleData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleData, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_SetTitleData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetTitleDataAndOverrides
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_SetTitleDataAndOverrides final
{
public:
	struct FAdminSetTitleDataAndOverridesRequest  Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetTitleDataAndOverridesResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetTitleDataAndOverrides) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetTitleDataAndOverrides");
static_assert(sizeof(PlayFabAdminAPI_SetTitleDataAndOverrides) == 0x000058, "Wrong size on PlayFabAdminAPI_SetTitleDataAndOverrides");
static_assert(offsetof(PlayFabAdminAPI_SetTitleDataAndOverrides, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetTitleDataAndOverrides::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleDataAndOverrides, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_SetTitleDataAndOverrides::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleDataAndOverrides, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_SetTitleDataAndOverrides::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleDataAndOverrides, customData) == 0x000048, "Member 'PlayFabAdminAPI_SetTitleDataAndOverrides::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleDataAndOverrides, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_SetTitleDataAndOverrides::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetTitleInternalData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_SetTitleInternalData final
{
public:
	struct FAdminSetTitleDataRequest              Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetTitleDataResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetTitleInternalData");
static_assert(sizeof(PlayFabAdminAPI_SetTitleInternalData) == 0x000058, "Wrong size on PlayFabAdminAPI_SetTitleInternalData");
static_assert(offsetof(PlayFabAdminAPI_SetTitleInternalData, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetTitleInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleInternalData, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_SetTitleInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleInternalData, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_SetTitleInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleInternalData, customData) == 0x000048, "Member 'PlayFabAdminAPI_SetTitleInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleInternalData, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_SetTitleInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetupPushNotification
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_SetupPushNotification final
{
public:
	struct FAdminSetupPushNotificationRequest     Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetupPushNotificationResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetupPushNotification) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetupPushNotification");
static_assert(sizeof(PlayFabAdminAPI_SetupPushNotification) == 0x000070, "Wrong size on PlayFabAdminAPI_SetupPushNotification");
static_assert(offsetof(PlayFabAdminAPI_SetupPushNotification, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetupPushNotification::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetupPushNotification, onSuccess) == 0x000040, "Member 'PlayFabAdminAPI_SetupPushNotification::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetupPushNotification, onFailure) == 0x000050, "Member 'PlayFabAdminAPI_SetupPushNotification::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetupPushNotification, customData) == 0x000060, "Member 'PlayFabAdminAPI_SetupPushNotification::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetupPushNotification, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_SetupPushNotification::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SubtractUserVirtualCurrency
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_SubtractUserVirtualCurrency final
{
public:
	struct FAdminSubtractUserVirtualCurrencyRequest Request;                                         // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminModifyUserVirtualCurrencyResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SubtractUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SubtractUserVirtualCurrency");
static_assert(sizeof(PlayFabAdminAPI_SubtractUserVirtualCurrency) == 0x000068, "Wrong size on PlayFabAdminAPI_SubtractUserVirtualCurrency");
static_assert(offsetof(PlayFabAdminAPI_SubtractUserVirtualCurrency, Request) == 0x000000, "Member 'PlayFabAdminAPI_SubtractUserVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SubtractUserVirtualCurrency, onSuccess) == 0x000038, "Member 'PlayFabAdminAPI_SubtractUserVirtualCurrency::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SubtractUserVirtualCurrency, onFailure) == 0x000048, "Member 'PlayFabAdminAPI_SubtractUserVirtualCurrency::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SubtractUserVirtualCurrency, customData) == 0x000058, "Member 'PlayFabAdminAPI_SubtractUserVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SubtractUserVirtualCurrency, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_SubtractUserVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateBans
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_UpdateBans final
{
public:
	struct FAdminUpdateBansRequest                Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateBansResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateBans) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateBans");
static_assert(sizeof(PlayFabAdminAPI_UpdateBans) == 0x000048, "Wrong size on PlayFabAdminAPI_UpdateBans");
static_assert(offsetof(PlayFabAdminAPI_UpdateBans, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateBans::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateBans, onSuccess) == 0x000018, "Member 'PlayFabAdminAPI_UpdateBans::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateBans, onFailure) == 0x000028, "Member 'PlayFabAdminAPI_UpdateBans::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateBans, customData) == 0x000038, "Member 'PlayFabAdminAPI_UpdateBans::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateBans, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_UpdateBans::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateCatalogItems
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_UpdateCatalogItems final
{
public:
	struct FAdminUpdateCatalogItemsRequest        Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateCatalogItemsResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateCatalogItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateCatalogItems");
static_assert(sizeof(PlayFabAdminAPI_UpdateCatalogItems) == 0x000068, "Wrong size on PlayFabAdminAPI_UpdateCatalogItems");
static_assert(offsetof(PlayFabAdminAPI_UpdateCatalogItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateCatalogItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCatalogItems, onSuccess) == 0x000038, "Member 'PlayFabAdminAPI_UpdateCatalogItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCatalogItems, onFailure) == 0x000048, "Member 'PlayFabAdminAPI_UpdateCatalogItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCatalogItems, customData) == 0x000058, "Member 'PlayFabAdminAPI_UpdateCatalogItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCatalogItems, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_UpdateCatalogItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateCloudScript
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_UpdateCloudScript final
{
public:
	struct FAdminUpdateCloudScriptRequest         Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateCloudScriptResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateCloudScript) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateCloudScript");
static_assert(sizeof(PlayFabAdminAPI_UpdateCloudScript) == 0x000068, "Wrong size on PlayFabAdminAPI_UpdateCloudScript");
static_assert(offsetof(PlayFabAdminAPI_UpdateCloudScript, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateCloudScript::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCloudScript, onSuccess) == 0x000038, "Member 'PlayFabAdminAPI_UpdateCloudScript::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCloudScript, onFailure) == 0x000048, "Member 'PlayFabAdminAPI_UpdateCloudScript::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCloudScript, customData) == 0x000058, "Member 'PlayFabAdminAPI_UpdateCloudScript::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCloudScript, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_UpdateCloudScript::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateOpenIdConnection
// 0x0098 (0x0098 - 0x0000)
struct PlayFabAdminAPI_UpdateOpenIdConnection final
{
public:
	struct FAdminUpdateOpenIdConnectionRequest    Request;                                           // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)> onSuccess;  // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_UpdateOpenIdConnection) == 0x000098, "Wrong size on PlayFabAdminAPI_UpdateOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_UpdateOpenIdConnection, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateOpenIdConnection::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateOpenIdConnection, onSuccess) == 0x000068, "Member 'PlayFabAdminAPI_UpdateOpenIdConnection::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateOpenIdConnection, onFailure) == 0x000078, "Member 'PlayFabAdminAPI_UpdateOpenIdConnection::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateOpenIdConnection, customData) == 0x000088, "Member 'PlayFabAdminAPI_UpdateOpenIdConnection::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateOpenIdConnection, ReturnValue) == 0x000090, "Member 'PlayFabAdminAPI_UpdateOpenIdConnection::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdatePlayerSharedSecret
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_UpdatePlayerSharedSecret final
{
public:
	struct FAdminUpdatePlayerSharedSecretRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdatePlayerSharedSecretResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdatePlayerSharedSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdatePlayerSharedSecret");
static_assert(sizeof(PlayFabAdminAPI_UpdatePlayerSharedSecret) == 0x000060, "Wrong size on PlayFabAdminAPI_UpdatePlayerSharedSecret");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerSharedSecret, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdatePlayerSharedSecret::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerSharedSecret, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_UpdatePlayerSharedSecret::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerSharedSecret, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_UpdatePlayerSharedSecret::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerSharedSecret, customData) == 0x000050, "Member 'PlayFabAdminAPI_UpdatePlayerSharedSecret::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerSharedSecret, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_UpdatePlayerSharedSecret::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdatePlayerStatisticDefinition
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_UpdatePlayerStatisticDefinition final
{
public:
	struct FAdminUpdatePlayerStatisticDefinitionRequest Request;                                     // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdatePlayerStatisticDefinitionResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdatePlayerStatisticDefinition");
static_assert(sizeof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition) == 0x000058, "Wrong size on PlayFabAdminAPI_UpdatePlayerStatisticDefinition");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdatePlayerStatisticDefinition::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition, onSuccess) == 0x000028, "Member 'PlayFabAdminAPI_UpdatePlayerStatisticDefinition::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition, onFailure) == 0x000038, "Member 'PlayFabAdminAPI_UpdatePlayerStatisticDefinition::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition, customData) == 0x000048, "Member 'PlayFabAdminAPI_UpdatePlayerStatisticDefinition::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_UpdatePlayerStatisticDefinition::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdatePolicy
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_UpdatePolicy final
{
public:
	struct FAdminUpdatePolicyRequest              Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdatePolicyResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdatePolicy) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdatePolicy");
static_assert(sizeof(PlayFabAdminAPI_UpdatePolicy) == 0x000068, "Wrong size on PlayFabAdminAPI_UpdatePolicy");
static_assert(offsetof(PlayFabAdminAPI_UpdatePolicy, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdatePolicy::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePolicy, onSuccess) == 0x000038, "Member 'PlayFabAdminAPI_UpdatePolicy::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePolicy, onFailure) == 0x000048, "Member 'PlayFabAdminAPI_UpdatePolicy::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePolicy, customData) == 0x000058, "Member 'PlayFabAdminAPI_UpdatePolicy::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePolicy, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_UpdatePolicy::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateRandomResultTables
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_UpdateRandomResultTables final
{
public:
	struct FAdminUpdateRandomResultTablesRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateRandomResultTablesResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateRandomResultTables) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateRandomResultTables");
static_assert(sizeof(PlayFabAdminAPI_UpdateRandomResultTables) == 0x000060, "Wrong size on PlayFabAdminAPI_UpdateRandomResultTables");
static_assert(offsetof(PlayFabAdminAPI_UpdateRandomResultTables, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateRandomResultTables::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateRandomResultTables, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_UpdateRandomResultTables::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateRandomResultTables, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_UpdateRandomResultTables::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateRandomResultTables, customData) == 0x000050, "Member 'PlayFabAdminAPI_UpdateRandomResultTables::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateRandomResultTables, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_UpdateRandomResultTables::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateSegment
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_UpdateSegment final
{
public:
	struct FAdminUpdateSegmentRequest             Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateSegmentResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateSegment");
static_assert(sizeof(PlayFabAdminAPI_UpdateSegment) == 0x000040, "Wrong size on PlayFabAdminAPI_UpdateSegment");
static_assert(offsetof(PlayFabAdminAPI_UpdateSegment, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateSegment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateSegment, onSuccess) == 0x000010, "Member 'PlayFabAdminAPI_UpdateSegment::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateSegment, onFailure) == 0x000020, "Member 'PlayFabAdminAPI_UpdateSegment::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateSegment, customData) == 0x000030, "Member 'PlayFabAdminAPI_UpdateSegment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateSegment, ReturnValue) == 0x000038, "Member 'PlayFabAdminAPI_UpdateSegment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateStoreItems
// 0x0078 (0x0078 - 0x0000)
struct PlayFabAdminAPI_UpdateStoreItems final
{
public:
	struct FAdminUpdateStoreItemsRequest          Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateStoreItemsResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateStoreItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateStoreItems");
static_assert(sizeof(PlayFabAdminAPI_UpdateStoreItems) == 0x000078, "Wrong size on PlayFabAdminAPI_UpdateStoreItems");
static_assert(offsetof(PlayFabAdminAPI_UpdateStoreItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateStoreItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateStoreItems, onSuccess) == 0x000048, "Member 'PlayFabAdminAPI_UpdateStoreItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateStoreItems, onFailure) == 0x000058, "Member 'PlayFabAdminAPI_UpdateStoreItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateStoreItems, customData) == 0x000068, "Member 'PlayFabAdminAPI_UpdateStoreItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateStoreItems, ReturnValue) == 0x000070, "Member 'PlayFabAdminAPI_UpdateStoreItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateTask
// 0x0090 (0x0090 - 0x0000)
struct PlayFabAdminAPI_UpdateTask final
{
public:
	struct FAdminUpdateTaskRequest                Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)> onSuccess;  // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateTask");
static_assert(sizeof(PlayFabAdminAPI_UpdateTask) == 0x000090, "Wrong size on PlayFabAdminAPI_UpdateTask");
static_assert(offsetof(PlayFabAdminAPI_UpdateTask, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateTask, onSuccess) == 0x000060, "Member 'PlayFabAdminAPI_UpdateTask::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateTask, onFailure) == 0x000070, "Member 'PlayFabAdminAPI_UpdateTask::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateTask, customData) == 0x000080, "Member 'PlayFabAdminAPI_UpdateTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateTask, ReturnValue) == 0x000088, "Member 'PlayFabAdminAPI_UpdateTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_UpdateUserData final
{
public:
	struct FAdminUpdateUserDataRequest            Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserData");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserData) == 0x000070, "Wrong size on PlayFabAdminAPI_UpdateUserData");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserData, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserData, onSuccess) == 0x000040, "Member 'PlayFabAdminAPI_UpdateUserData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserData, onFailure) == 0x000050, "Member 'PlayFabAdminAPI_UpdateUserData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserData, customData) == 0x000060, "Member 'PlayFabAdminAPI_UpdateUserData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserData, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_UpdateUserData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserInternalData
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_UpdateUserInternalData final
{
public:
	struct FAdminUpdateUserInternalDataRequest    Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserInternalData");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserInternalData) == 0x000068, "Wrong size on PlayFabAdminAPI_UpdateUserInternalData");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserInternalData, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserInternalData, onSuccess) == 0x000038, "Member 'PlayFabAdminAPI_UpdateUserInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserInternalData, onFailure) == 0x000048, "Member 'PlayFabAdminAPI_UpdateUserInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserInternalData, customData) == 0x000058, "Member 'PlayFabAdminAPI_UpdateUserInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserInternalData, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_UpdateUserInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserPublisherData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_UpdateUserPublisherData final
{
public:
	struct FAdminUpdateUserDataRequest            Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserPublisherData");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserPublisherData) == 0x000070, "Wrong size on PlayFabAdminAPI_UpdateUserPublisherData");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherData, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherData, onSuccess) == 0x000040, "Member 'PlayFabAdminAPI_UpdateUserPublisherData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherData, onFailure) == 0x000050, "Member 'PlayFabAdminAPI_UpdateUserPublisherData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherData, customData) == 0x000060, "Member 'PlayFabAdminAPI_UpdateUserPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherData, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_UpdateUserPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserPublisherInternalData
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_UpdateUserPublisherInternalData final
{
public:
	struct FAdminUpdateUserInternalDataRequest    Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserPublisherInternalData");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserPublisherInternalData) == 0x000068, "Wrong size on PlayFabAdminAPI_UpdateUserPublisherInternalData");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherInternalData, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserPublisherInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherInternalData, onSuccess) == 0x000038, "Member 'PlayFabAdminAPI_UpdateUserPublisherInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherInternalData, onFailure) == 0x000048, "Member 'PlayFabAdminAPI_UpdateUserPublisherInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherInternalData, customData) == 0x000058, "Member 'PlayFabAdminAPI_UpdateUserPublisherInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherInternalData, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_UpdateUserPublisherInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserPublisherReadOnlyData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_UpdateUserPublisherReadOnlyData final
{
public:
	struct FAdminUpdateUserDataRequest            Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData) == 0x000070, "Wrong size on PlayFabAdminAPI_UpdateUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserPublisherReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData, onSuccess) == 0x000040, "Member 'PlayFabAdminAPI_UpdateUserPublisherReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData, onFailure) == 0x000050, "Member 'PlayFabAdminAPI_UpdateUserPublisherReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData, customData) == 0x000060, "Member 'PlayFabAdminAPI_UpdateUserPublisherReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_UpdateUserPublisherReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserReadOnlyData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_UpdateUserReadOnlyData final
{
public:
	struct FAdminUpdateUserDataRequest            Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserReadOnlyData) == 0x000070, "Wrong size on PlayFabAdminAPI_UpdateUserReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserReadOnlyData, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserReadOnlyData, onSuccess) == 0x000040, "Member 'PlayFabAdminAPI_UpdateUserReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserReadOnlyData, onFailure) == 0x000050, "Member 'PlayFabAdminAPI_UpdateUserReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserReadOnlyData, customData) == 0x000060, "Member 'PlayFabAdminAPI_UpdateUserReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserReadOnlyData, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_UpdateUserReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserTitleDisplayName
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_UpdateUserTitleDisplayName final
{
public:
	struct FAdminUpdateUserTitleDisplayNameRequest Request;                                          // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserTitleDisplayNameResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserTitleDisplayName) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserTitleDisplayName");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserTitleDisplayName) == 0x000060, "Wrong size on PlayFabAdminAPI_UpdateUserTitleDisplayName");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserTitleDisplayName, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserTitleDisplayName::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserTitleDisplayName, onSuccess) == 0x000030, "Member 'PlayFabAdminAPI_UpdateUserTitleDisplayName::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserTitleDisplayName, onFailure) == 0x000040, "Member 'PlayFabAdminAPI_UpdateUserTitleDisplayName::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserTitleDisplayName, customData) == 0x000050, "Member 'PlayFabAdminAPI_UpdateUserTitleDisplayName::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserTitleDisplayName, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_UpdateUserTitleDisplayName::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperAbortTaskInstance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperAbortTaskInstance final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperAbortTaskInstance) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperAbortTaskInstance");
static_assert(sizeof(PlayFabAdminAPI_HelperAbortTaskInstance) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperAbortTaskInstance");
static_assert(offsetof(PlayFabAdminAPI_HelperAbortTaskInstance, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperAbortTaskInstance::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAbortTaskInstance, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperAbortTaskInstance::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAbortTaskInstance, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperAbortTaskInstance::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperAddLocalizedNews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperAddLocalizedNews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperAddLocalizedNews) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperAddLocalizedNews");
static_assert(sizeof(PlayFabAdminAPI_HelperAddLocalizedNews) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperAddLocalizedNews");
static_assert(offsetof(PlayFabAdminAPI_HelperAddLocalizedNews, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperAddLocalizedNews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddLocalizedNews, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperAddLocalizedNews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddLocalizedNews, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperAddLocalizedNews::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperAddNews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperAddNews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperAddNews) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperAddNews");
static_assert(sizeof(PlayFabAdminAPI_HelperAddNews) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperAddNews");
static_assert(offsetof(PlayFabAdminAPI_HelperAddNews, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperAddNews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddNews, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperAddNews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddNews, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperAddNews::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperAddPlayerTag
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperAddPlayerTag final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperAddPlayerTag) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperAddPlayerTag");
static_assert(sizeof(PlayFabAdminAPI_HelperAddPlayerTag) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperAddPlayerTag");
static_assert(offsetof(PlayFabAdminAPI_HelperAddPlayerTag, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperAddPlayerTag::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddPlayerTag, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperAddPlayerTag::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddPlayerTag, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperAddPlayerTag::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperAddUserVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperAddUserVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperAddUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperAddUserVirtualCurrency");
static_assert(sizeof(PlayFabAdminAPI_HelperAddUserVirtualCurrency) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperAddUserVirtualCurrency");
static_assert(offsetof(PlayFabAdminAPI_HelperAddUserVirtualCurrency, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperAddUserVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddUserVirtualCurrency, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperAddUserVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddUserVirtualCurrency, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperAddUserVirtualCurrency::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperAddVirtualCurrencyTypes
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperAddVirtualCurrencyTypes final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperAddVirtualCurrencyTypes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperAddVirtualCurrencyTypes");
static_assert(sizeof(PlayFabAdminAPI_HelperAddVirtualCurrencyTypes) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperAddVirtualCurrencyTypes");
static_assert(offsetof(PlayFabAdminAPI_HelperAddVirtualCurrencyTypes, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperAddVirtualCurrencyTypes::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddVirtualCurrencyTypes, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperAddVirtualCurrencyTypes::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddVirtualCurrencyTypes, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperAddVirtualCurrencyTypes::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperBanUsers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperBanUsers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperBanUsers) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperBanUsers");
static_assert(sizeof(PlayFabAdminAPI_HelperBanUsers) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperBanUsers");
static_assert(offsetof(PlayFabAdminAPI_HelperBanUsers, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperBanUsers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperBanUsers, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperBanUsers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperBanUsers, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperBanUsers::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCheckLimitedEditionItemAvailability
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability");
static_assert(sizeof(PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability");
static_assert(offsetof(PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreateActionsOnPlayersInSegmentTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask");
static_assert(sizeof(PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreateCloudScriptTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreateCloudScriptTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreateCloudScriptTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreateCloudScriptTask");
static_assert(sizeof(PlayFabAdminAPI_HelperCreateCloudScriptTask) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreateCloudScriptTask");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateCloudScriptTask, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreateCloudScriptTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateCloudScriptTask, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreateCloudScriptTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateCloudScriptTask, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreateCloudScriptTask::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreateInsightsScheduledScalingTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask");
static_assert(sizeof(PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreateOpenIdConnection
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreateOpenIdConnection final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreateOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreateOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_HelperCreateOpenIdConnection) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreateOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateOpenIdConnection, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreateOpenIdConnection::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateOpenIdConnection, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreateOpenIdConnection::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateOpenIdConnection, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreateOpenIdConnection::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreatePlayerSharedSecret
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreatePlayerSharedSecret final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreatePlayerSharedSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreatePlayerSharedSecret");
static_assert(sizeof(PlayFabAdminAPI_HelperCreatePlayerSharedSecret) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreatePlayerSharedSecret");
static_assert(offsetof(PlayFabAdminAPI_HelperCreatePlayerSharedSecret, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreatePlayerSharedSecret::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreatePlayerSharedSecret, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreatePlayerSharedSecret::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreatePlayerSharedSecret, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreatePlayerSharedSecret::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreatePlayerStatisticDefinition
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition");
static_assert(sizeof(PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition");
static_assert(offsetof(PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreateSegment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreateSegment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreateSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreateSegment");
static_assert(sizeof(PlayFabAdminAPI_HelperCreateSegment) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreateSegment");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateSegment, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreateSegment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateSegment, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreateSegment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateSegment, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreateSegment::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteContent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteContent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteContent) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteContent");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteContent) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteContent");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteContent, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteContent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteContent, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteContent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteContent, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteContent::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteMasterPlayerAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteMasterPlayerAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteMasterPlayerAccount) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteMasterPlayerAccount");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteMasterPlayerAccount) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteMasterPlayerAccount");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMasterPlayerAccount, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteMasterPlayerAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMasterPlayerAccount, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteMasterPlayerAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMasterPlayerAccount, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteMasterPlayerAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteMasterPlayerEventData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteMasterPlayerEventData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteMasterPlayerEventData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteMasterPlayerEventData");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteMasterPlayerEventData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteMasterPlayerEventData");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMasterPlayerEventData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteMasterPlayerEventData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMasterPlayerEventData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteMasterPlayerEventData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMasterPlayerEventData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteMasterPlayerEventData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteMembershipSubscription
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteMembershipSubscription final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteMembershipSubscription) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteMembershipSubscription");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteMembershipSubscription) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteMembershipSubscription");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMembershipSubscription, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteMembershipSubscription::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMembershipSubscription, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteMembershipSubscription::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMembershipSubscription, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteMembershipSubscription::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteOpenIdConnection
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteOpenIdConnection final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteOpenIdConnection) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteOpenIdConnection, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteOpenIdConnection::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteOpenIdConnection, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteOpenIdConnection::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteOpenIdConnection, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteOpenIdConnection::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeletePlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeletePlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeletePlayer) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeletePlayer");
static_assert(sizeof(PlayFabAdminAPI_HelperDeletePlayer) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeletePlayer");
static_assert(offsetof(PlayFabAdminAPI_HelperDeletePlayer, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeletePlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeletePlayer, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeletePlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeletePlayer, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeletePlayer::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeletePlayerSharedSecret
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeletePlayerSharedSecret final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeletePlayerSharedSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeletePlayerSharedSecret");
static_assert(sizeof(PlayFabAdminAPI_HelperDeletePlayerSharedSecret) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeletePlayerSharedSecret");
static_assert(offsetof(PlayFabAdminAPI_HelperDeletePlayerSharedSecret, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeletePlayerSharedSecret::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeletePlayerSharedSecret, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeletePlayerSharedSecret::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeletePlayerSharedSecret, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeletePlayerSharedSecret::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteSegment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteSegment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteSegment");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteSegment) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteSegment");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteSegment, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteSegment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteSegment, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteSegment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteSegment, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteSegment::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteStore
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteStore final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteStore) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteStore");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteStore) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteStore");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteStore, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteStore::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteStore, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteStore::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteStore, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteStore::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteTask");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteTask) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteTask");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTask, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTask, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTask, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteTask::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteTitle
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteTitle final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteTitle) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteTitle");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteTitle) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteTitle");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTitle, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteTitle::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTitle, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteTitle::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTitle, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteTitle::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteTitleDataOverride
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteTitleDataOverride final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteTitleDataOverride) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteTitleDataOverride");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteTitleDataOverride) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteTitleDataOverride");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTitleDataOverride, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteTitleDataOverride::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTitleDataOverride, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteTitleDataOverride::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTitleDataOverride, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteTitleDataOverride::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperExportMasterPlayerData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperExportMasterPlayerData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperExportMasterPlayerData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperExportMasterPlayerData");
static_assert(sizeof(PlayFabAdminAPI_HelperExportMasterPlayerData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperExportMasterPlayerData");
static_assert(offsetof(PlayFabAdminAPI_HelperExportMasterPlayerData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperExportMasterPlayerData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperExportMasterPlayerData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperExportMasterPlayerData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperExportMasterPlayerData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperExportMasterPlayerData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperExportPlayersInSegment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperExportPlayersInSegment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperExportPlayersInSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperExportPlayersInSegment");
static_assert(sizeof(PlayFabAdminAPI_HelperExportPlayersInSegment) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperExportPlayersInSegment");
static_assert(offsetof(PlayFabAdminAPI_HelperExportPlayersInSegment, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperExportPlayersInSegment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperExportPlayersInSegment, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperExportPlayersInSegment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperExportPlayersInSegment, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperExportPlayersInSegment::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetActionsOnPlayersInSegmentTaskInstance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance");
static_assert(sizeof(PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance");
static_assert(offsetof(PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetAllSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetAllSegments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetAllSegments) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetAllSegments");
static_assert(sizeof(PlayFabAdminAPI_HelperGetAllSegments) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetAllSegments");
static_assert(offsetof(PlayFabAdminAPI_HelperGetAllSegments, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetAllSegments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetAllSegments, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetAllSegments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetAllSegments, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetAllSegments::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetCatalogItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetCatalogItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetCatalogItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetCatalogItems");
static_assert(sizeof(PlayFabAdminAPI_HelperGetCatalogItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetCatalogItems");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCatalogItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetCatalogItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCatalogItems, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetCatalogItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCatalogItems, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetCatalogItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetCloudScriptRevision
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetCloudScriptRevision final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetCloudScriptRevision) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetCloudScriptRevision");
static_assert(sizeof(PlayFabAdminAPI_HelperGetCloudScriptRevision) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetCloudScriptRevision");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptRevision, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetCloudScriptRevision::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptRevision, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetCloudScriptRevision::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptRevision, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetCloudScriptRevision::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetCloudScriptTaskInstance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetCloudScriptTaskInstance final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetCloudScriptTaskInstance) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetCloudScriptTaskInstance");
static_assert(sizeof(PlayFabAdminAPI_HelperGetCloudScriptTaskInstance) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetCloudScriptTaskInstance");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptTaskInstance, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetCloudScriptTaskInstance::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptTaskInstance, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetCloudScriptTaskInstance::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptTaskInstance, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetCloudScriptTaskInstance::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetCloudScriptVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetCloudScriptVersions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetCloudScriptVersions) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetCloudScriptVersions");
static_assert(sizeof(PlayFabAdminAPI_HelperGetCloudScriptVersions) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetCloudScriptVersions");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptVersions, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetCloudScriptVersions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptVersions, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetCloudScriptVersions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptVersions, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetCloudScriptVersions::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetContentList
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetContentList final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetContentList) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetContentList");
static_assert(sizeof(PlayFabAdminAPI_HelperGetContentList) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetContentList");
static_assert(offsetof(PlayFabAdminAPI_HelperGetContentList, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetContentList::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetContentList, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetContentList::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetContentList, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetContentList::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetContentUploadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetContentUploadUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetContentUploadUrl) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetContentUploadUrl");
static_assert(sizeof(PlayFabAdminAPI_HelperGetContentUploadUrl) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetContentUploadUrl");
static_assert(offsetof(PlayFabAdminAPI_HelperGetContentUploadUrl, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetContentUploadUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetContentUploadUrl, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetContentUploadUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetContentUploadUrl, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetContentUploadUrl::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetDataReport
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetDataReport final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetDataReport) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetDataReport");
static_assert(sizeof(PlayFabAdminAPI_HelperGetDataReport) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetDataReport");
static_assert(offsetof(PlayFabAdminAPI_HelperGetDataReport, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetDataReport::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetDataReport, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetDataReport::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetDataReport, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetDataReport::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayedTitleList
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayedTitleList final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayedTitleList) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayedTitleList");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayedTitleList) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayedTitleList");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayedTitleList, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayedTitleList::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayedTitleList, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayedTitleList::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayedTitleList, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayedTitleList::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerIdFromAuthToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerProfile
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerProfile final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerProfile) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerProfile");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerProfile) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerProfile");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerProfile, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerProfile::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerProfile, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerProfile::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerProfile, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerProfile::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerSegments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerSegments) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerSegments");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerSegments) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerSegments");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerSegments, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerSegments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerSegments, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerSegments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerSegments, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerSegments::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerSharedSecrets
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerSharedSecrets final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerSharedSecrets) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerSharedSecrets");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerSharedSecrets) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerSharedSecrets");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerSharedSecrets, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerSharedSecrets::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerSharedSecrets, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerSharedSecrets::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerSharedSecrets, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerSharedSecrets::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayersInSegment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayersInSegment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayersInSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayersInSegment");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayersInSegment) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayersInSegment");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayersInSegment, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayersInSegment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayersInSegment, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayersInSegment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayersInSegment, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayersInSegment::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerStatisticDefinitions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerStatisticVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerStatisticVersions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerStatisticVersions) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerStatisticVersions");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerStatisticVersions) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerStatisticVersions");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerStatisticVersions, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerStatisticVersions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerStatisticVersions, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerStatisticVersions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerStatisticVersions, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerStatisticVersions::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerTags) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerTags");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerTags) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerTags");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerTags, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerTags, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerTags::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerTags, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerTags::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPolicy
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPolicy final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPolicy) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPolicy");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPolicy) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPolicy");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPolicy, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPolicy::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPolicy, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPolicy::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPolicy, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPolicy::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPublisherData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPublisherData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPublisherData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPublisherData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPublisherData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPublisherData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPublisherData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetRandomResultTables
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetRandomResultTables final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetRandomResultTables) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetRandomResultTables");
static_assert(sizeof(PlayFabAdminAPI_HelperGetRandomResultTables) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetRandomResultTables");
static_assert(offsetof(PlayFabAdminAPI_HelperGetRandomResultTables, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetRandomResultTables::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetRandomResultTables, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetRandomResultTables::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetRandomResultTables, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetRandomResultTables::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetSegmentExport
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetSegmentExport final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetSegmentExport) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetSegmentExport");
static_assert(sizeof(PlayFabAdminAPI_HelperGetSegmentExport) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetSegmentExport");
static_assert(offsetof(PlayFabAdminAPI_HelperGetSegmentExport, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetSegmentExport::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetSegmentExport, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetSegmentExport::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetSegmentExport, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetSegmentExport::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetSegments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetSegments) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetSegments");
static_assert(sizeof(PlayFabAdminAPI_HelperGetSegments) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetSegments");
static_assert(offsetof(PlayFabAdminAPI_HelperGetSegments, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetSegments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetSegments, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetSegments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetSegments, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetSegments::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetStoreItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetStoreItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetStoreItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetStoreItems");
static_assert(sizeof(PlayFabAdminAPI_HelperGetStoreItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetStoreItems");
static_assert(offsetof(PlayFabAdminAPI_HelperGetStoreItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetStoreItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetStoreItems, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetStoreItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetStoreItems, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetStoreItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetTaskInstances
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetTaskInstances final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetTaskInstances) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetTaskInstances");
static_assert(sizeof(PlayFabAdminAPI_HelperGetTaskInstances) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetTaskInstances");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTaskInstances, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetTaskInstances::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTaskInstances, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetTaskInstances::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTaskInstances, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetTaskInstances::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetTasks
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetTasks final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetTasks) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetTasks");
static_assert(sizeof(PlayFabAdminAPI_HelperGetTasks) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetTasks");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTasks, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetTasks::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTasks, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetTasks::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTasks, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetTasks::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetTitleData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetTitleData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetTitleData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetTitleData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetTitleData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetTitleData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTitleData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetTitleData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTitleData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetTitleData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTitleData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetTitleData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetTitleInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetTitleInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetTitleInternalData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetTitleInternalData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetTitleInternalData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTitleInternalData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetTitleInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTitleInternalData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetTitleInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTitleInternalData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetTitleInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserAccountInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserAccountInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserAccountInfo) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserAccountInfo");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserAccountInfo) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserAccountInfo");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserAccountInfo, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserAccountInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserAccountInfo, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserAccountInfo::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserAccountInfo, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserAccountInfo::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserBans
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserBans final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserBans) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserBans");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserBans) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserBans");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserBans, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserBans::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserBans, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserBans::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserBans, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserBans::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserInternalData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserInternalData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserInternalData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserInternalData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserInternalData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserInternalData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserInventory final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserInventory) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserInventory");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserInventory) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserInventory");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserInventory, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserInventory::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserInventory, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserInventory::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserInventory, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserInventory::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserPublisherData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserPublisherData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserPublisherData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserPublisherData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserPublisherInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserPublisherInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserPublisherInternalData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserPublisherInternalData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserPublisherInternalData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherInternalData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserPublisherInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherInternalData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserPublisherInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherInternalData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserPublisherInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserPublisherReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserReadOnlyData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserReadOnlyData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserReadOnlyData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserReadOnlyData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGrantItemsToUsers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGrantItemsToUsers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGrantItemsToUsers) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGrantItemsToUsers");
static_assert(sizeof(PlayFabAdminAPI_HelperGrantItemsToUsers) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGrantItemsToUsers");
static_assert(offsetof(PlayFabAdminAPI_HelperGrantItemsToUsers, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGrantItemsToUsers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGrantItemsToUsers, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGrantItemsToUsers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGrantItemsToUsers, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGrantItemsToUsers::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperIncrementLimitedEditionItemAvailability
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability");
static_assert(sizeof(PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability");
static_assert(offsetof(PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperIncrementPlayerStatisticVersion
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion");
static_assert(sizeof(PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion");
static_assert(offsetof(PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperListOpenIdConnection
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperListOpenIdConnection final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperListOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperListOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_HelperListOpenIdConnection) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperListOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_HelperListOpenIdConnection, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperListOpenIdConnection::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperListOpenIdConnection, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperListOpenIdConnection::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperListOpenIdConnection, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperListOpenIdConnection::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperListVirtualCurrencyTypes
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperListVirtualCurrencyTypes final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperListVirtualCurrencyTypes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperListVirtualCurrencyTypes");
static_assert(sizeof(PlayFabAdminAPI_HelperListVirtualCurrencyTypes) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperListVirtualCurrencyTypes");
static_assert(offsetof(PlayFabAdminAPI_HelperListVirtualCurrencyTypes, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperListVirtualCurrencyTypes::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperListVirtualCurrencyTypes, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperListVirtualCurrencyTypes::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperListVirtualCurrencyTypes, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperListVirtualCurrencyTypes::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRefundPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRefundPurchase final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRefundPurchase) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRefundPurchase");
static_assert(sizeof(PlayFabAdminAPI_HelperRefundPurchase) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRefundPurchase");
static_assert(offsetof(PlayFabAdminAPI_HelperRefundPurchase, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRefundPurchase::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRefundPurchase, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRefundPurchase::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRefundPurchase, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRefundPurchase::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRemovePlayerTag
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRemovePlayerTag final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRemovePlayerTag) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRemovePlayerTag");
static_assert(sizeof(PlayFabAdminAPI_HelperRemovePlayerTag) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRemovePlayerTag");
static_assert(offsetof(PlayFabAdminAPI_HelperRemovePlayerTag, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRemovePlayerTag::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRemovePlayerTag, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRemovePlayerTag::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRemovePlayerTag, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRemovePlayerTag::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRemoveVirtualCurrencyTypes
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes");
static_assert(sizeof(PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes");
static_assert(offsetof(PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperResetCharacterStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperResetCharacterStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperResetCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperResetCharacterStatistics");
static_assert(sizeof(PlayFabAdminAPI_HelperResetCharacterStatistics) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperResetCharacterStatistics");
static_assert(offsetof(PlayFabAdminAPI_HelperResetCharacterStatistics, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperResetCharacterStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResetCharacterStatistics, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperResetCharacterStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResetCharacterStatistics, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperResetCharacterStatistics::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperResetPassword
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperResetPassword final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperResetPassword) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperResetPassword");
static_assert(sizeof(PlayFabAdminAPI_HelperResetPassword) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperResetPassword");
static_assert(offsetof(PlayFabAdminAPI_HelperResetPassword, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperResetPassword::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResetPassword, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperResetPassword::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResetPassword, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperResetPassword::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperResetUserStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperResetUserStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperResetUserStatistics) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperResetUserStatistics");
static_assert(sizeof(PlayFabAdminAPI_HelperResetUserStatistics) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperResetUserStatistics");
static_assert(offsetof(PlayFabAdminAPI_HelperResetUserStatistics, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperResetUserStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResetUserStatistics, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperResetUserStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResetUserStatistics, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperResetUserStatistics::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperResolvePurchaseDispute
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperResolvePurchaseDispute final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperResolvePurchaseDispute) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperResolvePurchaseDispute");
static_assert(sizeof(PlayFabAdminAPI_HelperResolvePurchaseDispute) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperResolvePurchaseDispute");
static_assert(offsetof(PlayFabAdminAPI_HelperResolvePurchaseDispute, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperResolvePurchaseDispute::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResolvePurchaseDispute, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperResolvePurchaseDispute::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResolvePurchaseDispute, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperResolvePurchaseDispute::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRevokeAllBansForUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRevokeAllBansForUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRevokeAllBansForUser) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRevokeAllBansForUser");
static_assert(sizeof(PlayFabAdminAPI_HelperRevokeAllBansForUser) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRevokeAllBansForUser");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeAllBansForUser, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRevokeAllBansForUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeAllBansForUser, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRevokeAllBansForUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeAllBansForUser, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRevokeAllBansForUser::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRevokeBans
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRevokeBans final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRevokeBans) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRevokeBans");
static_assert(sizeof(PlayFabAdminAPI_HelperRevokeBans) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRevokeBans");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeBans, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRevokeBans::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeBans, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRevokeBans::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeBans, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRevokeBans::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRevokeInventoryItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRevokeInventoryItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRevokeInventoryItem) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRevokeInventoryItem");
static_assert(sizeof(PlayFabAdminAPI_HelperRevokeInventoryItem) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRevokeInventoryItem");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeInventoryItem, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRevokeInventoryItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeInventoryItem, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRevokeInventoryItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeInventoryItem, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRevokeInventoryItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRevokeInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRevokeInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRevokeInventoryItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRevokeInventoryItems");
static_assert(sizeof(PlayFabAdminAPI_HelperRevokeInventoryItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRevokeInventoryItems");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeInventoryItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRevokeInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeInventoryItems, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRevokeInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeInventoryItems, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRevokeInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRunTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRunTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRunTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRunTask");
static_assert(sizeof(PlayFabAdminAPI_HelperRunTask) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRunTask");
static_assert(offsetof(PlayFabAdminAPI_HelperRunTask, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRunTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRunTask, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRunTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRunTask, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRunTask::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSendAccountRecoveryEmail
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSendAccountRecoveryEmail final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSendAccountRecoveryEmail) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSendAccountRecoveryEmail");
static_assert(sizeof(PlayFabAdminAPI_HelperSendAccountRecoveryEmail) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSendAccountRecoveryEmail");
static_assert(offsetof(PlayFabAdminAPI_HelperSendAccountRecoveryEmail, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSendAccountRecoveryEmail::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSendAccountRecoveryEmail, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSendAccountRecoveryEmail::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSendAccountRecoveryEmail, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSendAccountRecoveryEmail::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetCatalogItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetCatalogItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetCatalogItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetCatalogItems");
static_assert(sizeof(PlayFabAdminAPI_HelperSetCatalogItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetCatalogItems");
static_assert(offsetof(PlayFabAdminAPI_HelperSetCatalogItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetCatalogItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetCatalogItems, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetCatalogItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetCatalogItems, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetCatalogItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetMembershipOverride
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetMembershipOverride final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetMembershipOverride) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetMembershipOverride");
static_assert(sizeof(PlayFabAdminAPI_HelperSetMembershipOverride) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetMembershipOverride");
static_assert(offsetof(PlayFabAdminAPI_HelperSetMembershipOverride, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetMembershipOverride::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetMembershipOverride, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetMembershipOverride::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetMembershipOverride, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetMembershipOverride::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetPlayerSecret
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetPlayerSecret final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetPlayerSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetPlayerSecret");
static_assert(sizeof(PlayFabAdminAPI_HelperSetPlayerSecret) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetPlayerSecret");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPlayerSecret, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetPlayerSecret::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPlayerSecret, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetPlayerSecret::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPlayerSecret, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetPlayerSecret::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetPublishedRevision
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetPublishedRevision final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetPublishedRevision) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetPublishedRevision");
static_assert(sizeof(PlayFabAdminAPI_HelperSetPublishedRevision) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetPublishedRevision");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPublishedRevision, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetPublishedRevision::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPublishedRevision, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetPublishedRevision::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPublishedRevision, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetPublishedRevision::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetPublisherData");
static_assert(sizeof(PlayFabAdminAPI_HelperSetPublisherData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetPublisherData");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPublisherData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPublisherData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPublisherData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetPublisherData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetStoreItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetStoreItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetStoreItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetStoreItems");
static_assert(sizeof(PlayFabAdminAPI_HelperSetStoreItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetStoreItems");
static_assert(offsetof(PlayFabAdminAPI_HelperSetStoreItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetStoreItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetStoreItems, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetStoreItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetStoreItems, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetStoreItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetTitleData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetTitleData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetTitleData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetTitleData");
static_assert(sizeof(PlayFabAdminAPI_HelperSetTitleData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetTitleData");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetTitleData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetTitleData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetTitleData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetTitleDataAndOverrides
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetTitleDataAndOverrides final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetTitleDataAndOverrides) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetTitleDataAndOverrides");
static_assert(sizeof(PlayFabAdminAPI_HelperSetTitleDataAndOverrides) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetTitleDataAndOverrides");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleDataAndOverrides, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetTitleDataAndOverrides::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleDataAndOverrides, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetTitleDataAndOverrides::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleDataAndOverrides, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetTitleDataAndOverrides::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetTitleInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetTitleInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetTitleInternalData");
static_assert(sizeof(PlayFabAdminAPI_HelperSetTitleInternalData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetTitleInternalData");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleInternalData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetTitleInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleInternalData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetTitleInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleInternalData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetTitleInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetupPushNotification
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetupPushNotification final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetupPushNotification) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetupPushNotification");
static_assert(sizeof(PlayFabAdminAPI_HelperSetupPushNotification) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetupPushNotification");
static_assert(offsetof(PlayFabAdminAPI_HelperSetupPushNotification, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetupPushNotification::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetupPushNotification, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetupPushNotification::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetupPushNotification, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetupPushNotification::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSubtractUserVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSubtractUserVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSubtractUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSubtractUserVirtualCurrency");
static_assert(sizeof(PlayFabAdminAPI_HelperSubtractUserVirtualCurrency) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSubtractUserVirtualCurrency");
static_assert(offsetof(PlayFabAdminAPI_HelperSubtractUserVirtualCurrency, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSubtractUserVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSubtractUserVirtualCurrency, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSubtractUserVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSubtractUserVirtualCurrency, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSubtractUserVirtualCurrency::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateBans
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateBans final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateBans) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateBans");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateBans) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateBans");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateBans, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateBans::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateBans, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateBans::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateBans, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateBans::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateCatalogItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateCatalogItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateCatalogItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateCatalogItems");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateCatalogItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateCatalogItems");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateCatalogItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateCatalogItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateCatalogItems, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateCatalogItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateCatalogItems, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateCatalogItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateCloudScript
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateCloudScript final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateCloudScript) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateCloudScript");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateCloudScript) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateCloudScript");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateCloudScript, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateCloudScript::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateCloudScript, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateCloudScript::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateCloudScript, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateCloudScript::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateOpenIdConnection
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateOpenIdConnection final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateOpenIdConnection) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateOpenIdConnection, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateOpenIdConnection::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateOpenIdConnection, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateOpenIdConnection::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateOpenIdConnection, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateOpenIdConnection::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdatePlayerSharedSecret
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdatePlayerSharedSecret final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdatePlayerSharedSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdatePlayerSharedSecret");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdatePlayerSharedSecret) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdatePlayerSharedSecret");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePlayerSharedSecret, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdatePlayerSharedSecret::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePlayerSharedSecret, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdatePlayerSharedSecret::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePlayerSharedSecret, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdatePlayerSharedSecret::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdatePlayerStatisticDefinition
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdatePolicy
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdatePolicy final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdatePolicy) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdatePolicy");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdatePolicy) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdatePolicy");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePolicy, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdatePolicy::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePolicy, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdatePolicy::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePolicy, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdatePolicy::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateRandomResultTables
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateRandomResultTables final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateRandomResultTables) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateRandomResultTables");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateRandomResultTables) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateRandomResultTables");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateRandomResultTables, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateRandomResultTables::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateRandomResultTables, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateRandomResultTables::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateRandomResultTables, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateRandomResultTables::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateSegment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateSegment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateSegment");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateSegment) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateSegment");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateSegment, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateSegment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateSegment, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateSegment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateSegment, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateSegment::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateStoreItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateStoreItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateStoreItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateStoreItems");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateStoreItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateStoreItems");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateStoreItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateStoreItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateStoreItems, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateStoreItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateStoreItems, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateStoreItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateTask");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateTask) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateTask");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateTask, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateTask, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateTask, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateTask::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserData");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserData");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserInternalData");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserInternalData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserInternalData");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserInternalData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserInternalData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserInternalData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserPublisherData");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserPublisherData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserPublisherData");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserPublisherInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserPublisherInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserPublisherInternalData");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserPublisherInternalData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserPublisherInternalData");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherInternalData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherInternalData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherInternalData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserPublisherReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserReadOnlyData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserReadOnlyData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserReadOnlyData, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserReadOnlyData, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserTitleDisplayName
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserTitleDisplayName final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserTitleDisplayName) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserTitleDisplayName");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserTitleDisplayName) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserTitleDisplayName");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserTitleDisplayName, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserTitleDisplayName::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserTitleDisplayName, customData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserTitleDisplayName::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserTitleDisplayName, successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserTitleDisplayName::successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeAddLocalizedNewsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeAddLocalizedNewsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminAddLocalizedNewsResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeAddLocalizedNewsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeAddLocalizedNewsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeAddLocalizedNewsResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeAddLocalizedNewsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeAddLocalizedNewsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeAddLocalizedNewsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeAddLocalizedNewsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeAddLocalizedNewsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeAddNewsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeAddNewsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminAddNewsResult                    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeAddNewsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeAddNewsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeAddNewsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeAddNewsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeAddNewsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeAddNewsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeAddNewsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeAddNewsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeAddPlayerTagResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeAddPlayerTagResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminAddPlayerTagResult               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeAddPlayerTagResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeAddPlayerTagResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeAddPlayerTagResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeAddPlayerTagResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeAddPlayerTagResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeAddPlayerTagResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeAddPlayerTagResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeAddPlayerTagResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeBanUsersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeBanUsersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminBanUsersResult                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeBanUsersResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeBanUsersResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeBanUsersResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeBanUsersResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeBanUsersResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeBanUsersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeBanUsersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeBanUsersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeBlankResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeBlankResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminBlankResult                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeBlankResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeBlankResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeBlankResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeBlankResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeBlankResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeBlankResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeBlankResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeBlankResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeCheckLimitedEditionItemAvailabilityResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_decodeCheckLimitedEditionItemAvailabilityResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminCheckLimitedEditionItemAvailabilityResult ReturnValue;                              // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeCheckLimitedEditionItemAvailabilityResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeCheckLimitedEditionItemAvailabilityResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeCheckLimitedEditionItemAvailabilityResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_decodeCheckLimitedEditionItemAvailabilityResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeCheckLimitedEditionItemAvailabilityResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeCheckLimitedEditionItemAvailabilityResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeCheckLimitedEditionItemAvailabilityResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeCheckLimitedEditionItemAvailabilityResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeCreatePlayerSharedSecretResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeCreatePlayerSharedSecretResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminCreatePlayerSharedSecretResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeCreatePlayerSharedSecretResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeCreatePlayerSharedSecretResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeCreatePlayerSharedSecretResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeCreatePlayerSharedSecretResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeCreatePlayerSharedSecretResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeCreatePlayerSharedSecretResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeCreatePlayerSharedSecretResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeCreatePlayerSharedSecretResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeCreatePlayerStatisticDefinitionResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_decodeCreatePlayerStatisticDefinitionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminCreatePlayerStatisticDefinitionResult ReturnValue;                                  // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeCreatePlayerStatisticDefinitionResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeCreatePlayerStatisticDefinitionResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeCreatePlayerStatisticDefinitionResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_decodeCreatePlayerStatisticDefinitionResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeCreatePlayerStatisticDefinitionResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeCreatePlayerStatisticDefinitionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeCreatePlayerStatisticDefinitionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeCreatePlayerStatisticDefinitionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeCreateSegmentResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_decodeCreateSegmentResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminCreateSegmentResponse            ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeCreateSegmentResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeCreateSegmentResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeCreateSegmentResponseResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_decodeCreateSegmentResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeCreateSegmentResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeCreateSegmentResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeCreateSegmentResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeCreateSegmentResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeCreateTaskResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeCreateTaskResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminCreateTaskResult                 ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeCreateTaskResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeCreateTaskResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeCreateTaskResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeCreateTaskResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeCreateTaskResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeCreateTaskResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeCreateTaskResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeCreateTaskResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteMasterPlayerAccountResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_decodeDeleteMasterPlayerAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteMasterPlayerAccountResult  ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeDeleteMasterPlayerAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeDeleteMasterPlayerAccountResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeDeleteMasterPlayerAccountResultResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_decodeDeleteMasterPlayerAccountResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteMasterPlayerAccountResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeDeleteMasterPlayerAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteMasterPlayerAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeDeleteMasterPlayerAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteMasterPlayerEventDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeDeleteMasterPlayerEventDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteMasterPlayerEventDataResult ReturnValue;                                      // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeDeleteMasterPlayerEventDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeDeleteMasterPlayerEventDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeDeleteMasterPlayerEventDataResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeDeleteMasterPlayerEventDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteMasterPlayerEventDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeDeleteMasterPlayerEventDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteMasterPlayerEventDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeDeleteMasterPlayerEventDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteMembershipSubscriptionResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeDeleteMembershipSubscriptionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteMembershipSubscriptionResult ReturnValue;                                     // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeDeleteMembershipSubscriptionResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeDeleteMembershipSubscriptionResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeDeleteMembershipSubscriptionResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeDeleteMembershipSubscriptionResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteMembershipSubscriptionResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeDeleteMembershipSubscriptionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteMembershipSubscriptionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeDeleteMembershipSubscriptionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeletePlayerResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeDeletePlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeletePlayerResult               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeDeletePlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeDeletePlayerResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeDeletePlayerResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeDeletePlayerResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeletePlayerResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeDeletePlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeletePlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeDeletePlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeletePlayerSharedSecretResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeDeletePlayerSharedSecretResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeletePlayerSharedSecretResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeDeletePlayerSharedSecretResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeDeletePlayerSharedSecretResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeDeletePlayerSharedSecretResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeDeletePlayerSharedSecretResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeletePlayerSharedSecretResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeDeletePlayerSharedSecretResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeletePlayerSharedSecretResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeDeletePlayerSharedSecretResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteSegmentsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeDeleteSegmentsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteSegmentsResponse           ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeDeleteSegmentsResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeDeleteSegmentsResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeDeleteSegmentsResponseResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeDeleteSegmentsResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteSegmentsResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeDeleteSegmentsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteSegmentsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeDeleteSegmentsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteStoreResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeDeleteStoreResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteStoreResult                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeDeleteStoreResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeDeleteStoreResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeDeleteStoreResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeDeleteStoreResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteStoreResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeDeleteStoreResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteStoreResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeDeleteStoreResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteTitleDataOverrideResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeDeleteTitleDataOverrideResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteTitleDataOverrideResult    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeDeleteTitleDataOverrideResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeDeleteTitleDataOverrideResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeDeleteTitleDataOverrideResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeDeleteTitleDataOverrideResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteTitleDataOverrideResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeDeleteTitleDataOverrideResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteTitleDataOverrideResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeDeleteTitleDataOverrideResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteTitleResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeDeleteTitleResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteTitleResult                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeDeleteTitleResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeDeleteTitleResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeDeleteTitleResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeDeleteTitleResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteTitleResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeDeleteTitleResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeDeleteTitleResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeDeleteTitleResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminEmptyResponse                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeEmptyResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeEmptyResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeExportMasterPlayerDataResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeExportMasterPlayerDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminExportMasterPlayerDataResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeExportMasterPlayerDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeExportMasterPlayerDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeExportMasterPlayerDataResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeExportMasterPlayerDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeExportMasterPlayerDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeExportMasterPlayerDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeExportMasterPlayerDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeExportMasterPlayerDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeExportPlayersInSegmentResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_decodeExportPlayersInSegmentResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminExportPlayersInSegmentResult     ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeExportPlayersInSegmentResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeExportPlayersInSegmentResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeExportPlayersInSegmentResultResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_decodeExportPlayersInSegmentResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeExportPlayersInSegmentResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeExportPlayersInSegmentResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeExportPlayersInSegmentResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeExportPlayersInSegmentResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult ReturnValue;                         // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetAllSegmentsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetAllSegmentsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetAllSegmentsResult             ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetAllSegmentsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetAllSegmentsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetAllSegmentsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetAllSegmentsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetAllSegmentsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetAllSegmentsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetAllSegmentsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetAllSegmentsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetCatalogItemsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetCatalogItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetCatalogItemsResult            ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetCatalogItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetCatalogItemsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetCatalogItemsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetCatalogItemsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetCatalogItemsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetCatalogItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetCatalogItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetCatalogItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetCloudScriptRevisionResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetCloudScriptRevisionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetCloudScriptRevisionResult     ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetCloudScriptRevisionResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetCloudScriptRevisionResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetCloudScriptRevisionResultResponse) == 0x000040, "Wrong size on PlayFabAdminModelDecoder_decodeGetCloudScriptRevisionResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetCloudScriptRevisionResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetCloudScriptRevisionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetCloudScriptRevisionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetCloudScriptRevisionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetCloudScriptTaskInstanceResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetCloudScriptTaskInstanceResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetCloudScriptTaskInstanceResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetCloudScriptTaskInstanceResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetCloudScriptTaskInstanceResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetCloudScriptTaskInstanceResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetCloudScriptTaskInstanceResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetCloudScriptTaskInstanceResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetCloudScriptTaskInstanceResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetCloudScriptTaskInstanceResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetCloudScriptTaskInstanceResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetCloudScriptVersionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetCloudScriptVersionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetCloudScriptVersionsResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetCloudScriptVersionsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetCloudScriptVersionsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetCloudScriptVersionsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetCloudScriptVersionsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetCloudScriptVersionsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetCloudScriptVersionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetCloudScriptVersionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetCloudScriptVersionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetContentListResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetContentListResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetContentListResult             ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetContentListResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetContentListResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetContentListResultResponse) == 0x000028, "Wrong size on PlayFabAdminModelDecoder_decodeGetContentListResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetContentListResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetContentListResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetContentListResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetContentListResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetContentUploadUrlResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetContentUploadUrlResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetContentUploadUrlResult        ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetContentUploadUrlResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetContentUploadUrlResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetContentUploadUrlResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetContentUploadUrlResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetContentUploadUrlResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetContentUploadUrlResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetContentUploadUrlResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetContentUploadUrlResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetDataReportResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetDataReportResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetDataReportResult              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetDataReportResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetDataReportResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetDataReportResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetDataReportResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetDataReportResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetDataReportResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetDataReportResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetDataReportResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayedTitleListResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetPlayedTitleListResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayedTitleListResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetPlayedTitleListResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetPlayedTitleListResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetPlayedTitleListResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetPlayedTitleListResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayedTitleListResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetPlayedTitleListResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayedTitleListResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetPlayedTitleListResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerIdFromAuthTokenResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetPlayerIdFromAuthTokenResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerIdFromAuthTokenResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetPlayerIdFromAuthTokenResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetPlayerIdFromAuthTokenResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetPlayerIdFromAuthTokenResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetPlayerIdFromAuthTokenResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerIdFromAuthTokenResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerIdFromAuthTokenResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerIdFromAuthTokenResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerIdFromAuthTokenResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerProfileResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetPlayerProfileResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerProfileResult           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetPlayerProfileResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetPlayerProfileResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetPlayerProfileResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_decodeGetPlayerProfileResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerProfileResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerProfileResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerProfileResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerProfileResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerSegmentsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetPlayerSegmentsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerSegmentsResult          ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetPlayerSegmentsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetPlayerSegmentsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetPlayerSegmentsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetPlayerSegmentsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerSegmentsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerSegmentsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerSegmentsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerSegmentsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerSharedSecretsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetPlayerSharedSecretsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerSharedSecretsResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetPlayerSharedSecretsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetPlayerSharedSecretsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetPlayerSharedSecretsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetPlayerSharedSecretsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerSharedSecretsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerSharedSecretsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerSharedSecretsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerSharedSecretsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayersInSegmentExportResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetPlayersInSegmentExportResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayersInSegmentExportResponse ReturnValue;                                      // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetPlayersInSegmentExportResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetPlayersInSegmentExportResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetPlayersInSegmentExportResponseResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_decodeGetPlayersInSegmentExportResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayersInSegmentExportResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetPlayersInSegmentExportResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayersInSegmentExportResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetPlayersInSegmentExportResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayersInSegmentResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetPlayersInSegmentResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayersInSegmentResult        ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetPlayersInSegmentResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetPlayersInSegmentResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetPlayersInSegmentResultResponse) == 0x000038, "Wrong size on PlayFabAdminModelDecoder_decodeGetPlayersInSegmentResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayersInSegmentResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetPlayersInSegmentResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayersInSegmentResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetPlayersInSegmentResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerStatisticDefinitionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetPlayerStatisticDefinitionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerStatisticDefinitionsResult ReturnValue;                                    // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetPlayerStatisticDefinitionsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetPlayerStatisticDefinitionsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetPlayerStatisticDefinitionsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetPlayerStatisticDefinitionsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerStatisticDefinitionsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerStatisticDefinitionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerStatisticDefinitionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerStatisticDefinitionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerStatisticVersionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetPlayerStatisticVersionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerStatisticVersionsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetPlayerStatisticVersionsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetPlayerStatisticVersionsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetPlayerStatisticVersionsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetPlayerStatisticVersionsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerStatisticVersionsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerStatisticVersionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerStatisticVersionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerStatisticVersionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerTagsResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetPlayerTagsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerTagsResult              ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetPlayerTagsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetPlayerTagsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetPlayerTagsResultResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_decodeGetPlayerTagsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerTagsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerTagsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPlayerTagsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetPlayerTagsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPolicyResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetPolicyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPolicyResponse                ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetPolicyResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetPolicyResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetPolicyResponseResponse) == 0x000038, "Wrong size on PlayFabAdminModelDecoder_decodeGetPolicyResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPolicyResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetPolicyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPolicyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetPolicyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPublisherDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetPublisherDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPublisherDataResult           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetPublisherDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetPublisherDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetPublisherDataResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_decodeGetPublisherDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPublisherDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetPublisherDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetPublisherDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetPublisherDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetRandomResultTablesResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetRandomResultTablesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetRandomResultTablesResult      ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetRandomResultTablesResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetRandomResultTablesResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetRandomResultTablesResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_decodeGetRandomResultTablesResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetRandomResultTablesResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetRandomResultTablesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetRandomResultTablesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetRandomResultTablesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetSegmentsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetSegmentsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetSegmentsResponse              ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetSegmentsResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetSegmentsResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetSegmentsResponseResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_decodeGetSegmentsResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetSegmentsResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetSegmentsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetSegmentsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetSegmentsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetStoreItemsResultResponse
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetStoreItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetStoreItemsResult              ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetStoreItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetStoreItemsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetStoreItemsResultResponse) == 0x000050, "Wrong size on PlayFabAdminModelDecoder_decodeGetStoreItemsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetStoreItemsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetStoreItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetStoreItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetStoreItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetTaskInstancesResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetTaskInstancesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetTaskInstancesResult           ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetTaskInstancesResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetTaskInstancesResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetTaskInstancesResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetTaskInstancesResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetTaskInstancesResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetTaskInstancesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetTaskInstancesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetTaskInstancesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetTasksResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetTasksResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetTasksResult                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetTasksResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetTasksResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetTasksResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetTasksResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetTasksResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetTasksResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetTasksResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetTasksResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetTitleDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetTitleDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetTitleDataResult               ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetTitleDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetTitleDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetTitleDataResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_decodeGetTitleDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetTitleDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetTitleDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetTitleDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetTitleDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetUserBansResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetUserBansResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetUserBansResult                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetUserBansResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetUserBansResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetUserBansResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGetUserBansResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetUserBansResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetUserBansResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetUserBansResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetUserBansResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetUserDataResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetUserDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetUserDataResult                ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetUserDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetUserDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetUserDataResultResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_decodeGetUserDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetUserDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetUserDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetUserDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetUserDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetUserInventoryResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGetUserInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetUserInventoryResult           ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGetUserInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGetUserInventoryResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGetUserInventoryResultResponse) == 0x000040, "Wrong size on PlayFabAdminModelDecoder_decodeGetUserInventoryResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetUserInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGetUserInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGetUserInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGetUserInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGrantItemsToUsersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeGrantItemsToUsersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGrantItemsToUsersResult          ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeGrantItemsToUsersResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeGrantItemsToUsersResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeGrantItemsToUsersResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeGrantItemsToUsersResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGrantItemsToUsersResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeGrantItemsToUsersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeGrantItemsToUsersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeGrantItemsToUsersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeIncrementLimitedEditionItemAvailabilityResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeIncrementLimitedEditionItemAvailabilityResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminIncrementLimitedEditionItemAvailabilityResult ReturnValue;                          // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeIncrementLimitedEditionItemAvailabilityResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeIncrementLimitedEditionItemAvailabilityResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeIncrementLimitedEditionItemAvailabilityResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeIncrementLimitedEditionItemAvailabilityResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeIncrementLimitedEditionItemAvailabilityResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeIncrementLimitedEditionItemAvailabilityResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeIncrementLimitedEditionItemAvailabilityResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeIncrementLimitedEditionItemAvailabilityResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeIncrementPlayerStatisticVersionResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_decodeIncrementPlayerStatisticVersionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminIncrementPlayerStatisticVersionResult ReturnValue;                                  // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeIncrementPlayerStatisticVersionResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeIncrementPlayerStatisticVersionResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeIncrementPlayerStatisticVersionResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_decodeIncrementPlayerStatisticVersionResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeIncrementPlayerStatisticVersionResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeIncrementPlayerStatisticVersionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeIncrementPlayerStatisticVersionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeIncrementPlayerStatisticVersionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeListOpenIdConnectionResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeListOpenIdConnectionResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminListOpenIdConnectionResponse     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeListOpenIdConnectionResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeListOpenIdConnectionResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeListOpenIdConnectionResponseResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeListOpenIdConnectionResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeListOpenIdConnectionResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeListOpenIdConnectionResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeListOpenIdConnectionResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeListOpenIdConnectionResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeListVirtualCurrencyTypesResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeListVirtualCurrencyTypesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminListVirtualCurrencyTypesResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeListVirtualCurrencyTypesResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeListVirtualCurrencyTypesResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeListVirtualCurrencyTypesResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeListVirtualCurrencyTypesResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeListVirtualCurrencyTypesResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeListVirtualCurrencyTypesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeListVirtualCurrencyTypesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeListVirtualCurrencyTypesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeLookupUserAccountInfoResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_decodeLookupUserAccountInfoResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminLookupUserAccountInfoResult      ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeLookupUserAccountInfoResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeLookupUserAccountInfoResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeLookupUserAccountInfoResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_decodeLookupUserAccountInfoResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeLookupUserAccountInfoResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeLookupUserAccountInfoResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeLookupUserAccountInfoResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeLookupUserAccountInfoResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeModifyUserVirtualCurrencyResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminModelDecoder_decodeModifyUserVirtualCurrencyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminModifyUserVirtualCurrencyResult  ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeModifyUserVirtualCurrencyResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeModifyUserVirtualCurrencyResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeModifyUserVirtualCurrencyResultResponse) == 0x000038, "Wrong size on PlayFabAdminModelDecoder_decodeModifyUserVirtualCurrencyResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeModifyUserVirtualCurrencyResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeModifyUserVirtualCurrencyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeModifyUserVirtualCurrencyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeModifyUserVirtualCurrencyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRefundPurchaseResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeRefundPurchaseResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRefundPurchaseResponse           ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeRefundPurchaseResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeRefundPurchaseResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeRefundPurchaseResponseResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeRefundPurchaseResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRefundPurchaseResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeRefundPurchaseResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRefundPurchaseResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeRefundPurchaseResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRemovePlayerTagResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeRemovePlayerTagResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRemovePlayerTagResult            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeRemovePlayerTagResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeRemovePlayerTagResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeRemovePlayerTagResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeRemovePlayerTagResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRemovePlayerTagResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeRemovePlayerTagResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRemovePlayerTagResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeRemovePlayerTagResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeResetCharacterStatisticsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeResetCharacterStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminResetCharacterStatisticsResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeResetCharacterStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeResetCharacterStatisticsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeResetCharacterStatisticsResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeResetCharacterStatisticsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeResetCharacterStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeResetCharacterStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeResetCharacterStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeResetCharacterStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeResetPasswordResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeResetPasswordResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminResetPasswordResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeResetPasswordResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeResetPasswordResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeResetPasswordResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeResetPasswordResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeResetPasswordResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeResetPasswordResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeResetPasswordResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeResetPasswordResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeResetUserStatisticsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeResetUserStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminResetUserStatisticsResult        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeResetUserStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeResetUserStatisticsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeResetUserStatisticsResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeResetUserStatisticsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeResetUserStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeResetUserStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeResetUserStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeResetUserStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeResolvePurchaseDisputeResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeResolvePurchaseDisputeResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminResolvePurchaseDisputeResponse   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeResolvePurchaseDisputeResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeResolvePurchaseDisputeResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeResolvePurchaseDisputeResponseResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeResolvePurchaseDisputeResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeResolvePurchaseDisputeResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeResolvePurchaseDisputeResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeResolvePurchaseDisputeResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeResolvePurchaseDisputeResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRevokeAllBansForUserResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeRevokeAllBansForUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRevokeAllBansForUserResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeRevokeAllBansForUserResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeRevokeAllBansForUserResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeRevokeAllBansForUserResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeRevokeAllBansForUserResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRevokeAllBansForUserResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeRevokeAllBansForUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRevokeAllBansForUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeRevokeAllBansForUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRevokeBansResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeRevokeBansResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRevokeBansResult                 ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeRevokeBansResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeRevokeBansResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeRevokeBansResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeRevokeBansResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRevokeBansResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeRevokeBansResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRevokeBansResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeRevokeBansResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRevokeInventoryItemsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeRevokeInventoryItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRevokeInventoryItemsResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeRevokeInventoryItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeRevokeInventoryItemsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeRevokeInventoryItemsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeRevokeInventoryItemsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRevokeInventoryItemsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeRevokeInventoryItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRevokeInventoryItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeRevokeInventoryItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRevokeInventoryResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeRevokeInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRevokeInventoryResult            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeRevokeInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeRevokeInventoryResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeRevokeInventoryResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeRevokeInventoryResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRevokeInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeRevokeInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRevokeInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeRevokeInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRunTaskResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeRunTaskResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRunTaskResult                    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeRunTaskResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeRunTaskResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeRunTaskResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeRunTaskResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRunTaskResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeRunTaskResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeRunTaskResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeRunTaskResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSendAccountRecoveryEmailResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeSendAccountRecoveryEmailResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSendAccountRecoveryEmailResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeSendAccountRecoveryEmailResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeSendAccountRecoveryEmailResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeSendAccountRecoveryEmailResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeSendAccountRecoveryEmailResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSendAccountRecoveryEmailResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeSendAccountRecoveryEmailResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSendAccountRecoveryEmailResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeSendAccountRecoveryEmailResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetMembershipOverrideResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeSetMembershipOverrideResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetMembershipOverrideResult      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeSetMembershipOverrideResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeSetMembershipOverrideResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeSetMembershipOverrideResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeSetMembershipOverrideResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetMembershipOverrideResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeSetMembershipOverrideResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetMembershipOverrideResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeSetMembershipOverrideResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetPlayerSecretResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeSetPlayerSecretResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetPlayerSecretResult            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeSetPlayerSecretResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeSetPlayerSecretResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeSetPlayerSecretResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeSetPlayerSecretResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetPlayerSecretResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeSetPlayerSecretResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetPlayerSecretResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeSetPlayerSecretResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetPublishedRevisionResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeSetPublishedRevisionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetPublishedRevisionResult       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeSetPublishedRevisionResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeSetPublishedRevisionResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeSetPublishedRevisionResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeSetPublishedRevisionResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetPublishedRevisionResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeSetPublishedRevisionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetPublishedRevisionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeSetPublishedRevisionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetPublisherDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeSetPublisherDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetPublisherDataResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeSetPublisherDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeSetPublisherDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeSetPublisherDataResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeSetPublisherDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetPublisherDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeSetPublisherDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetPublisherDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeSetPublisherDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetTitleDataAndOverridesResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeSetTitleDataAndOverridesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetTitleDataAndOverridesResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeSetTitleDataAndOverridesResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeSetTitleDataAndOverridesResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeSetTitleDataAndOverridesResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeSetTitleDataAndOverridesResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetTitleDataAndOverridesResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeSetTitleDataAndOverridesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetTitleDataAndOverridesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeSetTitleDataAndOverridesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetTitleDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeSetTitleDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetTitleDataResult               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeSetTitleDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeSetTitleDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeSetTitleDataResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeSetTitleDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetTitleDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeSetTitleDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetTitleDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeSetTitleDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetupPushNotificationResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeSetupPushNotificationResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetupPushNotificationResult      ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeSetupPushNotificationResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeSetupPushNotificationResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeSetupPushNotificationResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeSetupPushNotificationResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetupPushNotificationResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeSetupPushNotificationResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeSetupPushNotificationResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeSetupPushNotificationResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateBansResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeUpdateBansResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateBansResult                 ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeUpdateBansResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeUpdateBansResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeUpdateBansResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeUpdateBansResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateBansResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeUpdateBansResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateBansResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeUpdateBansResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateCatalogItemsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeUpdateCatalogItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateCatalogItemsResult         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeUpdateCatalogItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeUpdateCatalogItemsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeUpdateCatalogItemsResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeUpdateCatalogItemsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateCatalogItemsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeUpdateCatalogItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateCatalogItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeUpdateCatalogItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateCloudScriptResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_decodeUpdateCloudScriptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateCloudScriptResult          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeUpdateCloudScriptResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeUpdateCloudScriptResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeUpdateCloudScriptResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_decodeUpdateCloudScriptResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateCloudScriptResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeUpdateCloudScriptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateCloudScriptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeUpdateCloudScriptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdatePlayerSharedSecretResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeUpdatePlayerSharedSecretResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdatePlayerSharedSecretResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeUpdatePlayerSharedSecretResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeUpdatePlayerSharedSecretResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeUpdatePlayerSharedSecretResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeUpdatePlayerSharedSecretResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdatePlayerSharedSecretResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeUpdatePlayerSharedSecretResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdatePlayerSharedSecretResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeUpdatePlayerSharedSecretResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdatePlayerStatisticDefinitionResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_decodeUpdatePlayerStatisticDefinitionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdatePlayerStatisticDefinitionResult ReturnValue;                                  // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeUpdatePlayerStatisticDefinitionResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeUpdatePlayerStatisticDefinitionResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeUpdatePlayerStatisticDefinitionResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_decodeUpdatePlayerStatisticDefinitionResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdatePlayerStatisticDefinitionResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeUpdatePlayerStatisticDefinitionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdatePlayerStatisticDefinitionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeUpdatePlayerStatisticDefinitionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdatePolicyResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_decodeUpdatePolicyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdatePolicyResponse             ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeUpdatePolicyResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeUpdatePolicyResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeUpdatePolicyResponseResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_decodeUpdatePolicyResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdatePolicyResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeUpdatePolicyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdatePolicyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeUpdatePolicyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateRandomResultTablesResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeUpdateRandomResultTablesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateRandomResultTablesResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeUpdateRandomResultTablesResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeUpdateRandomResultTablesResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeUpdateRandomResultTablesResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeUpdateRandomResultTablesResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateRandomResultTablesResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeUpdateRandomResultTablesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateRandomResultTablesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeUpdateRandomResultTablesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateSegmentResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_decodeUpdateSegmentResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateSegmentResponse            ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeUpdateSegmentResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeUpdateSegmentResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeUpdateSegmentResponseResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_decodeUpdateSegmentResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateSegmentResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeUpdateSegmentResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateSegmentResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeUpdateSegmentResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateStoreItemsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_decodeUpdateStoreItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateStoreItemsResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeUpdateStoreItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeUpdateStoreItemsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeUpdateStoreItemsResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_decodeUpdateStoreItemsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateStoreItemsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeUpdateStoreItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateStoreItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeUpdateStoreItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateUserDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_decodeUpdateUserDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateUserDataResult             ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeUpdateUserDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeUpdateUserDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeUpdateUserDataResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_decodeUpdateUserDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateUserDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeUpdateUserDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateUserDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeUpdateUserDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateUserTitleDisplayNameResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateUserTitleDisplayNameResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.AuthenticateGameServerWithCustomId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId final
{
public:
	struct FAuthenticationAuthenticateCustomIdRequest Request;                                       // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAuthenticationAuthenticateCustomIdResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAuthenticationAPI*              ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId");
static_assert(sizeof(PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId) == 0x000050, "Wrong size on PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId");
static_assert(offsetof(PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId, Request) == 0x000000, "Member 'PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId, onSuccess) == 0x000020, "Member 'PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId, onFailure) == 0x000030, "Member 'PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId, customData) == 0x000040, "Member 'PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId, ReturnValue) == 0x000048, "Member 'PlayFabAuthenticationAPI_AuthenticateGameServerWithCustomId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.Delete
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAuthenticationAPI_Delete final
{
public:
	struct FAuthenticationDeleteRequest           Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAuthenticationEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAuthenticationAPI*              ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationAPI_Delete) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_Delete");
static_assert(sizeof(PlayFabAuthenticationAPI_Delete) == 0x000048, "Wrong size on PlayFabAuthenticationAPI_Delete");
static_assert(offsetof(PlayFabAuthenticationAPI_Delete, Request) == 0x000000, "Member 'PlayFabAuthenticationAPI_Delete::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_Delete, onSuccess) == 0x000018, "Member 'PlayFabAuthenticationAPI_Delete::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_Delete, onFailure) == 0x000028, "Member 'PlayFabAuthenticationAPI_Delete::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_Delete, customData) == 0x000038, "Member 'PlayFabAuthenticationAPI_Delete::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_Delete, ReturnValue) == 0x000040, "Member 'PlayFabAuthenticationAPI_Delete::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.GetEntityToken
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAuthenticationAPI_GetEntityToken final
{
public:
	struct FAuthenticationGetEntityTokenRequest   Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAuthenticationGetEntityTokenResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAuthenticationAPI*              ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationAPI_GetEntityToken) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_GetEntityToken");
static_assert(sizeof(PlayFabAuthenticationAPI_GetEntityToken) == 0x000048, "Wrong size on PlayFabAuthenticationAPI_GetEntityToken");
static_assert(offsetof(PlayFabAuthenticationAPI_GetEntityToken, Request) == 0x000000, "Member 'PlayFabAuthenticationAPI_GetEntityToken::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_GetEntityToken, onSuccess) == 0x000018, "Member 'PlayFabAuthenticationAPI_GetEntityToken::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_GetEntityToken, onFailure) == 0x000028, "Member 'PlayFabAuthenticationAPI_GetEntityToken::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_GetEntityToken, customData) == 0x000038, "Member 'PlayFabAuthenticationAPI_GetEntityToken::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_GetEntityToken, ReturnValue) == 0x000040, "Member 'PlayFabAuthenticationAPI_GetEntityToken::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.ValidateEntityToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAuthenticationAPI_ValidateEntityToken final
{
public:
	struct FAuthenticationValidateEntityTokenRequest Request;                                        // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAuthenticationValidateEntityTokenResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAuthenticationAPI*              ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationAPI_ValidateEntityToken) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_ValidateEntityToken");
static_assert(sizeof(PlayFabAuthenticationAPI_ValidateEntityToken) == 0x000050, "Wrong size on PlayFabAuthenticationAPI_ValidateEntityToken");
static_assert(offsetof(PlayFabAuthenticationAPI_ValidateEntityToken, Request) == 0x000000, "Member 'PlayFabAuthenticationAPI_ValidateEntityToken::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_ValidateEntityToken, onSuccess) == 0x000020, "Member 'PlayFabAuthenticationAPI_ValidateEntityToken::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_ValidateEntityToken, onFailure) == 0x000030, "Member 'PlayFabAuthenticationAPI_ValidateEntityToken::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_ValidateEntityToken, customData) == 0x000040, "Member 'PlayFabAuthenticationAPI_ValidateEntityToken::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_ValidateEntityToken, ReturnValue) == 0x000048, "Member 'PlayFabAuthenticationAPI_ValidateEntityToken::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.HelperAuthenticateGameServerWithCustomId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAuthenticationAPI_HelperAuthenticateGameServerWithCustomId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAuthenticationAPI_HelperAuthenticateGameServerWithCustomId) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_HelperAuthenticateGameServerWithCustomId");
static_assert(sizeof(PlayFabAuthenticationAPI_HelperAuthenticateGameServerWithCustomId) == 0x000050, "Wrong size on PlayFabAuthenticationAPI_HelperAuthenticateGameServerWithCustomId");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperAuthenticateGameServerWithCustomId, Response) == 0x000000, "Member 'PlayFabAuthenticationAPI_HelperAuthenticateGameServerWithCustomId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperAuthenticateGameServerWithCustomId, customData) == 0x000040, "Member 'PlayFabAuthenticationAPI_HelperAuthenticateGameServerWithCustomId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperAuthenticateGameServerWithCustomId, successful) == 0x000048, "Member 'PlayFabAuthenticationAPI_HelperAuthenticateGameServerWithCustomId::successful' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.HelperDelete
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAuthenticationAPI_HelperDelete final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAuthenticationAPI_HelperDelete) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_HelperDelete");
static_assert(sizeof(PlayFabAuthenticationAPI_HelperDelete) == 0x000050, "Wrong size on PlayFabAuthenticationAPI_HelperDelete");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperDelete, Response) == 0x000000, "Member 'PlayFabAuthenticationAPI_HelperDelete::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperDelete, customData) == 0x000040, "Member 'PlayFabAuthenticationAPI_HelperDelete::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperDelete, successful) == 0x000048, "Member 'PlayFabAuthenticationAPI_HelperDelete::successful' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.HelperGetEntityToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAuthenticationAPI_HelperGetEntityToken final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAuthenticationAPI_HelperGetEntityToken) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_HelperGetEntityToken");
static_assert(sizeof(PlayFabAuthenticationAPI_HelperGetEntityToken) == 0x000050, "Wrong size on PlayFabAuthenticationAPI_HelperGetEntityToken");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperGetEntityToken, Response) == 0x000000, "Member 'PlayFabAuthenticationAPI_HelperGetEntityToken::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperGetEntityToken, customData) == 0x000040, "Member 'PlayFabAuthenticationAPI_HelperGetEntityToken::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperGetEntityToken, successful) == 0x000048, "Member 'PlayFabAuthenticationAPI_HelperGetEntityToken::successful' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.HelperValidateEntityToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAuthenticationAPI_HelperValidateEntityToken final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAuthenticationAPI_HelperValidateEntityToken) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_HelperValidateEntityToken");
static_assert(sizeof(PlayFabAuthenticationAPI_HelperValidateEntityToken) == 0x000050, "Wrong size on PlayFabAuthenticationAPI_HelperValidateEntityToken");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperValidateEntityToken, Response) == 0x000000, "Member 'PlayFabAuthenticationAPI_HelperValidateEntityToken::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperValidateEntityToken, customData) == 0x000040, "Member 'PlayFabAuthenticationAPI_HelperValidateEntityToken::customData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperValidateEntityToken, successful) == 0x000048, "Member 'PlayFabAuthenticationAPI_HelperValidateEntityToken::successful' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationModelDecoder.decodeAuthenticateCustomIdResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAuthenticationModelDecoder_decodeAuthenticateCustomIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAuthenticationAuthenticateCustomIdResult ReturnValue;                                    // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationModelDecoder_decodeAuthenticateCustomIdResultResponse) == 0x000008, "Wrong alignment on PlayFabAuthenticationModelDecoder_decodeAuthenticateCustomIdResultResponse");
static_assert(sizeof(PlayFabAuthenticationModelDecoder_decodeAuthenticateCustomIdResultResponse) == 0x000020, "Wrong size on PlayFabAuthenticationModelDecoder_decodeAuthenticateCustomIdResultResponse");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_decodeAuthenticateCustomIdResultResponse, Response) == 0x000000, "Member 'PlayFabAuthenticationModelDecoder_decodeAuthenticateCustomIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_decodeAuthenticateCustomIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAuthenticationModelDecoder_decodeAuthenticateCustomIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAuthenticationModelDecoder_decodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAuthenticationEmptyResponse           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationModelDecoder_decodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabAuthenticationModelDecoder_decodeEmptyResponseResponse");
static_assert(sizeof(PlayFabAuthenticationModelDecoder_decodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabAuthenticationModelDecoder_decodeEmptyResponseResponse");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_decodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabAuthenticationModelDecoder_decodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_decodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAuthenticationModelDecoder_decodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationModelDecoder.decodeGetEntityTokenResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAuthenticationModelDecoder_decodeGetEntityTokenResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAuthenticationGetEntityTokenResponse  ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationModelDecoder_decodeGetEntityTokenResponseResponse) == 0x000008, "Wrong alignment on PlayFabAuthenticationModelDecoder_decodeGetEntityTokenResponseResponse");
static_assert(sizeof(PlayFabAuthenticationModelDecoder_decodeGetEntityTokenResponseResponse) == 0x000038, "Wrong size on PlayFabAuthenticationModelDecoder_decodeGetEntityTokenResponseResponse");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_decodeGetEntityTokenResponseResponse, Response) == 0x000000, "Member 'PlayFabAuthenticationModelDecoder_decodeGetEntityTokenResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_decodeGetEntityTokenResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAuthenticationModelDecoder_decodeGetEntityTokenResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationModelDecoder.decodeValidateEntityTokenResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAuthenticationModelDecoder_decodeValidateEntityTokenResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAuthenticationValidateEntityTokenResponse ReturnValue;                                   // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationModelDecoder_decodeValidateEntityTokenResponseResponse) == 0x000008, "Wrong alignment on PlayFabAuthenticationModelDecoder_decodeValidateEntityTokenResponseResponse");
static_assert(sizeof(PlayFabAuthenticationModelDecoder_decodeValidateEntityTokenResponseResponse) == 0x000038, "Wrong size on PlayFabAuthenticationModelDecoder_decodeValidateEntityTokenResponseResponse");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_decodeValidateEntityTokenResponseResponse, Response) == 0x000000, "Member 'PlayFabAuthenticationModelDecoder_decodeValidateEntityTokenResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_decodeValidateEntityTokenResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAuthenticationModelDecoder_decodeValidateEntityTokenResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AcceptTrade
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_AcceptTrade final
{
public:
	struct FClientAcceptTradeRequest              Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAcceptTradeResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AcceptTrade) == 0x000008, "Wrong alignment on PlayFabClientAPI_AcceptTrade");
static_assert(sizeof(PlayFabClientAPI_AcceptTrade) == 0x000068, "Wrong size on PlayFabClientAPI_AcceptTrade");
static_assert(offsetof(PlayFabClientAPI_AcceptTrade, Request) == 0x000000, "Member 'PlayFabClientAPI_AcceptTrade::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AcceptTrade, onSuccess) == 0x000038, "Member 'PlayFabClientAPI_AcceptTrade::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AcceptTrade, onFailure) == 0x000048, "Member 'PlayFabClientAPI_AcceptTrade::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AcceptTrade, customData) == 0x000058, "Member 'PlayFabClientAPI_AcceptTrade::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AcceptTrade, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_AcceptTrade::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AddFriend
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_AddFriend final
{
public:
	struct FClientAddFriendRequest                Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAddFriendResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AddFriend) == 0x000008, "Wrong alignment on PlayFabClientAPI_AddFriend");
static_assert(sizeof(PlayFabClientAPI_AddFriend) == 0x000078, "Wrong size on PlayFabClientAPI_AddFriend");
static_assert(offsetof(PlayFabClientAPI_AddFriend, Request) == 0x000000, "Member 'PlayFabClientAPI_AddFriend::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddFriend, onSuccess) == 0x000048, "Member 'PlayFabClientAPI_AddFriend::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddFriend, onFailure) == 0x000058, "Member 'PlayFabClientAPI_AddFriend::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddFriend, customData) == 0x000068, "Member 'PlayFabClientAPI_AddFriend::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddFriend, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_AddFriend::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AddGenericID
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_AddGenericID final
{
public:
	struct FClientAddGenericIDRequest             Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAddGenericIDResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AddGenericID) == 0x000008, "Wrong alignment on PlayFabClientAPI_AddGenericID");
static_assert(sizeof(PlayFabClientAPI_AddGenericID) == 0x000040, "Wrong size on PlayFabClientAPI_AddGenericID");
static_assert(offsetof(PlayFabClientAPI_AddGenericID, Request) == 0x000000, "Member 'PlayFabClientAPI_AddGenericID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddGenericID, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_AddGenericID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddGenericID, onFailure) == 0x000020, "Member 'PlayFabClientAPI_AddGenericID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddGenericID, customData) == 0x000030, "Member 'PlayFabClientAPI_AddGenericID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddGenericID, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_AddGenericID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AddOrUpdateContactEmail
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_AddOrUpdateContactEmail final
{
public:
	struct FClientAddOrUpdateContactEmailRequest  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAddOrUpdateContactEmailResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AddOrUpdateContactEmail) == 0x000008, "Wrong alignment on PlayFabClientAPI_AddOrUpdateContactEmail");
static_assert(sizeof(PlayFabClientAPI_AddOrUpdateContactEmail) == 0x000050, "Wrong size on PlayFabClientAPI_AddOrUpdateContactEmail");
static_assert(offsetof(PlayFabClientAPI_AddOrUpdateContactEmail, Request) == 0x000000, "Member 'PlayFabClientAPI_AddOrUpdateContactEmail::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddOrUpdateContactEmail, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_AddOrUpdateContactEmail::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddOrUpdateContactEmail, onFailure) == 0x000030, "Member 'PlayFabClientAPI_AddOrUpdateContactEmail::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddOrUpdateContactEmail, customData) == 0x000040, "Member 'PlayFabClientAPI_AddOrUpdateContactEmail::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddOrUpdateContactEmail, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_AddOrUpdateContactEmail::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AddSharedGroupMembers
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_AddSharedGroupMembers final
{
public:
	struct FClientAddSharedGroupMembersRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAddSharedGroupMembersResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AddSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabClientAPI_AddSharedGroupMembers");
static_assert(sizeof(PlayFabClientAPI_AddSharedGroupMembers) == 0x000058, "Wrong size on PlayFabClientAPI_AddSharedGroupMembers");
static_assert(offsetof(PlayFabClientAPI_AddSharedGroupMembers, Request) == 0x000000, "Member 'PlayFabClientAPI_AddSharedGroupMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddSharedGroupMembers, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_AddSharedGroupMembers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddSharedGroupMembers, onFailure) == 0x000038, "Member 'PlayFabClientAPI_AddSharedGroupMembers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddSharedGroupMembers, customData) == 0x000048, "Member 'PlayFabClientAPI_AddSharedGroupMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddSharedGroupMembers, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_AddSharedGroupMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AddUsernamePassword
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_AddUsernamePassword final
{
public:
	struct FClientAddUsernamePasswordRequest      Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAddUsernamePasswordResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AddUsernamePassword) == 0x000008, "Wrong alignment on PlayFabClientAPI_AddUsernamePassword");
static_assert(sizeof(PlayFabClientAPI_AddUsernamePassword) == 0x000070, "Wrong size on PlayFabClientAPI_AddUsernamePassword");
static_assert(offsetof(PlayFabClientAPI_AddUsernamePassword, Request) == 0x000000, "Member 'PlayFabClientAPI_AddUsernamePassword::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUsernamePassword, onSuccess) == 0x000040, "Member 'PlayFabClientAPI_AddUsernamePassword::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUsernamePassword, onFailure) == 0x000050, "Member 'PlayFabClientAPI_AddUsernamePassword::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUsernamePassword, customData) == 0x000060, "Member 'PlayFabClientAPI_AddUsernamePassword::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUsernamePassword, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_AddUsernamePassword::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AddUserVirtualCurrency
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_AddUserVirtualCurrency final
{
public:
	struct FClientAddUserVirtualCurrencyRequest   Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientModifyUserVirtualCurrencyResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AddUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabClientAPI_AddUserVirtualCurrency");
static_assert(sizeof(PlayFabClientAPI_AddUserVirtualCurrency) == 0x000058, "Wrong size on PlayFabClientAPI_AddUserVirtualCurrency");
static_assert(offsetof(PlayFabClientAPI_AddUserVirtualCurrency, Request) == 0x000000, "Member 'PlayFabClientAPI_AddUserVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUserVirtualCurrency, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_AddUserVirtualCurrency::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUserVirtualCurrency, onFailure) == 0x000038, "Member 'PlayFabClientAPI_AddUserVirtualCurrency::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUserVirtualCurrency, customData) == 0x000048, "Member 'PlayFabClientAPI_AddUserVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUserVirtualCurrency, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_AddUserVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AndroidDevicePushNotificationRegistration
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_AndroidDevicePushNotificationRegistration final
{
public:
	struct FClientAndroidDevicePushNotificationRegistrationRequest Request;                          // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAndroidDevicePushNotificationRegistrationResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration) == 0x000008, "Wrong alignment on PlayFabClientAPI_AndroidDevicePushNotificationRegistration");
static_assert(sizeof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration) == 0x000060, "Wrong size on PlayFabClientAPI_AndroidDevicePushNotificationRegistration");
static_assert(offsetof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration, Request) == 0x000000, "Member 'PlayFabClientAPI_AndroidDevicePushNotificationRegistration::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_AndroidDevicePushNotificationRegistration::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration, onFailure) == 0x000040, "Member 'PlayFabClientAPI_AndroidDevicePushNotificationRegistration::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration, customData) == 0x000050, "Member 'PlayFabClientAPI_AndroidDevicePushNotificationRegistration::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_AndroidDevicePushNotificationRegistration::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AttributeInstall
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_AttributeInstall final
{
public:
	struct FClientAttributeInstallRequest         Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAttributeInstallResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AttributeInstall) == 0x000008, "Wrong alignment on PlayFabClientAPI_AttributeInstall");
static_assert(sizeof(PlayFabClientAPI_AttributeInstall) == 0x000058, "Wrong size on PlayFabClientAPI_AttributeInstall");
static_assert(offsetof(PlayFabClientAPI_AttributeInstall, Request) == 0x000000, "Member 'PlayFabClientAPI_AttributeInstall::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AttributeInstall, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_AttributeInstall::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AttributeInstall, onFailure) == 0x000038, "Member 'PlayFabClientAPI_AttributeInstall::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AttributeInstall, customData) == 0x000048, "Member 'PlayFabClientAPI_AttributeInstall::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AttributeInstall, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_AttributeInstall::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.CancelTrade
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_CancelTrade final
{
public:
	struct FClientCancelTradeRequest              Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientCancelTradeResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_CancelTrade) == 0x000008, "Wrong alignment on PlayFabClientAPI_CancelTrade");
static_assert(sizeof(PlayFabClientAPI_CancelTrade) == 0x000048, "Wrong size on PlayFabClientAPI_CancelTrade");
static_assert(offsetof(PlayFabClientAPI_CancelTrade, Request) == 0x000000, "Member 'PlayFabClientAPI_CancelTrade::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CancelTrade, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_CancelTrade::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CancelTrade, onFailure) == 0x000028, "Member 'PlayFabClientAPI_CancelTrade::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CancelTrade, customData) == 0x000038, "Member 'PlayFabClientAPI_CancelTrade::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CancelTrade, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_CancelTrade::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ConfirmPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_ConfirmPurchase final
{
public:
	struct FClientConfirmPurchaseRequest          Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientConfirmPurchaseResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ConfirmPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_ConfirmPurchase");
static_assert(sizeof(PlayFabClientAPI_ConfirmPurchase) == 0x000050, "Wrong size on PlayFabClientAPI_ConfirmPurchase");
static_assert(offsetof(PlayFabClientAPI_ConfirmPurchase, Request) == 0x000000, "Member 'PlayFabClientAPI_ConfirmPurchase::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConfirmPurchase, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_ConfirmPurchase::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConfirmPurchase, onFailure) == 0x000030, "Member 'PlayFabClientAPI_ConfirmPurchase::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConfirmPurchase, customData) == 0x000040, "Member 'PlayFabClientAPI_ConfirmPurchase::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConfirmPurchase, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_ConfirmPurchase::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ConsumeItem
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_ConsumeItem final
{
public:
	struct FClientConsumeItemRequest              Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientConsumeItemResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ConsumeItem) == 0x000008, "Wrong alignment on PlayFabClientAPI_ConsumeItem");
static_assert(sizeof(PlayFabClientAPI_ConsumeItem) == 0x000068, "Wrong size on PlayFabClientAPI_ConsumeItem");
static_assert(offsetof(PlayFabClientAPI_ConsumeItem, Request) == 0x000000, "Member 'PlayFabClientAPI_ConsumeItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeItem, onSuccess) == 0x000038, "Member 'PlayFabClientAPI_ConsumeItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeItem, onFailure) == 0x000048, "Member 'PlayFabClientAPI_ConsumeItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeItem, customData) == 0x000058, "Member 'PlayFabClientAPI_ConsumeItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeItem, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_ConsumeItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ConsumeMicrosoftStoreEntitlements
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements final
{
public:
	struct FClientConsumeMicrosoftStoreEntitlementsRequest Request;                                  // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientConsumeMicrosoftStoreEntitlementsResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements");
static_assert(sizeof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements) == 0x000058, "Wrong size on PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements");
static_assert(offsetof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements, Request) == 0x000000, "Member 'PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements, onFailure) == 0x000038, "Member 'PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements, customData) == 0x000048, "Member 'PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ConsumePS5Entitlements
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_ConsumePS5Entitlements final
{
public:
	struct FClientConsumePS5EntitlementsRequest   Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientConsumePS5EntitlementsResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ConsumePS5Entitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_ConsumePS5Entitlements");
static_assert(sizeof(PlayFabClientAPI_ConsumePS5Entitlements) == 0x000058, "Wrong size on PlayFabClientAPI_ConsumePS5Entitlements");
static_assert(offsetof(PlayFabClientAPI_ConsumePS5Entitlements, Request) == 0x000000, "Member 'PlayFabClientAPI_ConsumePS5Entitlements::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePS5Entitlements, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_ConsumePS5Entitlements::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePS5Entitlements, onFailure) == 0x000038, "Member 'PlayFabClientAPI_ConsumePS5Entitlements::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePS5Entitlements, customData) == 0x000048, "Member 'PlayFabClientAPI_ConsumePS5Entitlements::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePS5Entitlements, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_ConsumePS5Entitlements::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ConsumePSNEntitlements
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_ConsumePSNEntitlements final
{
public:
	struct FClientConsumePSNEntitlementsRequest   Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientConsumePSNEntitlementsResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ConsumePSNEntitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_ConsumePSNEntitlements");
static_assert(sizeof(PlayFabClientAPI_ConsumePSNEntitlements) == 0x000058, "Wrong size on PlayFabClientAPI_ConsumePSNEntitlements");
static_assert(offsetof(PlayFabClientAPI_ConsumePSNEntitlements, Request) == 0x000000, "Member 'PlayFabClientAPI_ConsumePSNEntitlements::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePSNEntitlements, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_ConsumePSNEntitlements::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePSNEntitlements, onFailure) == 0x000038, "Member 'PlayFabClientAPI_ConsumePSNEntitlements::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePSNEntitlements, customData) == 0x000048, "Member 'PlayFabClientAPI_ConsumePSNEntitlements::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePSNEntitlements, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_ConsumePSNEntitlements::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ConsumeXboxEntitlements
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_ConsumeXboxEntitlements final
{
public:
	struct FClientConsumeXboxEntitlementsRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientConsumeXboxEntitlementsResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ConsumeXboxEntitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_ConsumeXboxEntitlements");
static_assert(sizeof(PlayFabClientAPI_ConsumeXboxEntitlements) == 0x000060, "Wrong size on PlayFabClientAPI_ConsumeXboxEntitlements");
static_assert(offsetof(PlayFabClientAPI_ConsumeXboxEntitlements, Request) == 0x000000, "Member 'PlayFabClientAPI_ConsumeXboxEntitlements::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeXboxEntitlements, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_ConsumeXboxEntitlements::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeXboxEntitlements, onFailure) == 0x000040, "Member 'PlayFabClientAPI_ConsumeXboxEntitlements::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeXboxEntitlements, customData) == 0x000050, "Member 'PlayFabClientAPI_ConsumeXboxEntitlements::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeXboxEntitlements, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_ConsumeXboxEntitlements::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.CreateSharedGroup
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_CreateSharedGroup final
{
public:
	struct FClientCreateSharedGroupRequest        Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientCreateSharedGroupResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_CreateSharedGroup) == 0x000008, "Wrong alignment on PlayFabClientAPI_CreateSharedGroup");
static_assert(sizeof(PlayFabClientAPI_CreateSharedGroup) == 0x000048, "Wrong size on PlayFabClientAPI_CreateSharedGroup");
static_assert(offsetof(PlayFabClientAPI_CreateSharedGroup, Request) == 0x000000, "Member 'PlayFabClientAPI_CreateSharedGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CreateSharedGroup, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_CreateSharedGroup::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CreateSharedGroup, onFailure) == 0x000028, "Member 'PlayFabClientAPI_CreateSharedGroup::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CreateSharedGroup, customData) == 0x000038, "Member 'PlayFabClientAPI_CreateSharedGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CreateSharedGroup, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_CreateSharedGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ExecuteCloudScript
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_ExecuteCloudScript final
{
public:
	struct FClientExecuteCloudScriptRequest       Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientExecuteCloudScriptResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ExecuteCloudScript) == 0x000008, "Wrong alignment on PlayFabClientAPI_ExecuteCloudScript");
static_assert(sizeof(PlayFabClientAPI_ExecuteCloudScript) == 0x000060, "Wrong size on PlayFabClientAPI_ExecuteCloudScript");
static_assert(offsetof(PlayFabClientAPI_ExecuteCloudScript, Request) == 0x000000, "Member 'PlayFabClientAPI_ExecuteCloudScript::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ExecuteCloudScript, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_ExecuteCloudScript::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ExecuteCloudScript, onFailure) == 0x000040, "Member 'PlayFabClientAPI_ExecuteCloudScript::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ExecuteCloudScript, customData) == 0x000050, "Member 'PlayFabClientAPI_ExecuteCloudScript::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ExecuteCloudScript, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_ExecuteCloudScript::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetAccountInfo
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_GetAccountInfo final
{
public:
	struct FClientGetAccountInfoRequest           Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetAccountInfoResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetAccountInfo) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetAccountInfo");
static_assert(sizeof(PlayFabClientAPI_GetAccountInfo) == 0x000078, "Wrong size on PlayFabClientAPI_GetAccountInfo");
static_assert(offsetof(PlayFabClientAPI_GetAccountInfo, Request) == 0x000000, "Member 'PlayFabClientAPI_GetAccountInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAccountInfo, onSuccess) == 0x000048, "Member 'PlayFabClientAPI_GetAccountInfo::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAccountInfo, onFailure) == 0x000058, "Member 'PlayFabClientAPI_GetAccountInfo::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAccountInfo, customData) == 0x000068, "Member 'PlayFabClientAPI_GetAccountInfo::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAccountInfo, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_GetAccountInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetAdPlacements
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_GetAdPlacements final
{
public:
	struct FClientGetAdPlacementsRequest          Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetAdPlacementsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetAdPlacements) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetAdPlacements");
static_assert(sizeof(PlayFabClientAPI_GetAdPlacements) == 0x000050, "Wrong size on PlayFabClientAPI_GetAdPlacements");
static_assert(offsetof(PlayFabClientAPI_GetAdPlacements, Request) == 0x000000, "Member 'PlayFabClientAPI_GetAdPlacements::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAdPlacements, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_GetAdPlacements::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAdPlacements, onFailure) == 0x000030, "Member 'PlayFabClientAPI_GetAdPlacements::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAdPlacements, customData) == 0x000040, "Member 'PlayFabClientAPI_GetAdPlacements::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAdPlacements, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_GetAdPlacements::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetAllUsersCharacters
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetAllUsersCharacters final
{
public:
	struct FClientListUsersCharactersRequest      Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientListUsersCharactersResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetAllUsersCharacters) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetAllUsersCharacters");
static_assert(sizeof(PlayFabClientAPI_GetAllUsersCharacters) == 0x000048, "Wrong size on PlayFabClientAPI_GetAllUsersCharacters");
static_assert(offsetof(PlayFabClientAPI_GetAllUsersCharacters, Request) == 0x000000, "Member 'PlayFabClientAPI_GetAllUsersCharacters::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAllUsersCharacters, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetAllUsersCharacters::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAllUsersCharacters, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetAllUsersCharacters::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAllUsersCharacters, customData) == 0x000038, "Member 'PlayFabClientAPI_GetAllUsersCharacters::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAllUsersCharacters, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetAllUsersCharacters::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCatalogItems
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetCatalogItems final
{
public:
	struct FClientGetCatalogItemsRequest          Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetCatalogItemsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCatalogItems) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCatalogItems");
static_assert(sizeof(PlayFabClientAPI_GetCatalogItems) == 0x000048, "Wrong size on PlayFabClientAPI_GetCatalogItems");
static_assert(offsetof(PlayFabClientAPI_GetCatalogItems, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCatalogItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCatalogItems, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetCatalogItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCatalogItems, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetCatalogItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCatalogItems, customData) == 0x000038, "Member 'PlayFabClientAPI_GetCatalogItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCatalogItems, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetCatalogItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCharacterData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_GetCharacterData final
{
public:
	struct FClientGetCharacterDataRequest         Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetCharacterDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCharacterData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCharacterData");
static_assert(sizeof(PlayFabClientAPI_GetCharacterData) == 0x000070, "Wrong size on PlayFabClientAPI_GetCharacterData");
static_assert(offsetof(PlayFabClientAPI_GetCharacterData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCharacterData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterData, onSuccess) == 0x000040, "Member 'PlayFabClientAPI_GetCharacterData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterData, onFailure) == 0x000050, "Member 'PlayFabClientAPI_GetCharacterData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterData, customData) == 0x000060, "Member 'PlayFabClientAPI_GetCharacterData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterData, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_GetCharacterData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCharacterInventory
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetCharacterInventory final
{
public:
	struct FClientGetCharacterInventoryRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetCharacterInventoryResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCharacterInventory) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCharacterInventory");
static_assert(sizeof(PlayFabClientAPI_GetCharacterInventory) == 0x000060, "Wrong size on PlayFabClientAPI_GetCharacterInventory");
static_assert(offsetof(PlayFabClientAPI_GetCharacterInventory, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCharacterInventory::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterInventory, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetCharacterInventory::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterInventory, onFailure) == 0x000040, "Member 'PlayFabClientAPI_GetCharacterInventory::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterInventory, customData) == 0x000050, "Member 'PlayFabClientAPI_GetCharacterInventory::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterInventory, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetCharacterInventory::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCharacterLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_GetCharacterLeaderboard final
{
public:
	struct FClientGetCharacterLeaderboardRequest  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetCharacterLeaderboardResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCharacterLeaderboard) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCharacterLeaderboard");
static_assert(sizeof(PlayFabClientAPI_GetCharacterLeaderboard) == 0x000050, "Wrong size on PlayFabClientAPI_GetCharacterLeaderboard");
static_assert(offsetof(PlayFabClientAPI_GetCharacterLeaderboard, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCharacterLeaderboard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterLeaderboard, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_GetCharacterLeaderboard::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterLeaderboard, onFailure) == 0x000030, "Member 'PlayFabClientAPI_GetCharacterLeaderboard::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterLeaderboard, customData) == 0x000040, "Member 'PlayFabClientAPI_GetCharacterLeaderboard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterLeaderboard, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_GetCharacterLeaderboard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCharacterReadOnlyData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_GetCharacterReadOnlyData final
{
public:
	struct FClientGetCharacterDataRequest         Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetCharacterDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCharacterReadOnlyData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCharacterReadOnlyData");
static_assert(sizeof(PlayFabClientAPI_GetCharacterReadOnlyData) == 0x000070, "Wrong size on PlayFabClientAPI_GetCharacterReadOnlyData");
static_assert(offsetof(PlayFabClientAPI_GetCharacterReadOnlyData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCharacterReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterReadOnlyData, onSuccess) == 0x000040, "Member 'PlayFabClientAPI_GetCharacterReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterReadOnlyData, onFailure) == 0x000050, "Member 'PlayFabClientAPI_GetCharacterReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterReadOnlyData, customData) == 0x000060, "Member 'PlayFabClientAPI_GetCharacterReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterReadOnlyData, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_GetCharacterReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCharacterStatistics
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetCharacterStatistics final
{
public:
	struct FClientGetCharacterStatisticsRequest   Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetCharacterStatisticsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCharacterStatistics");
static_assert(sizeof(PlayFabClientAPI_GetCharacterStatistics) == 0x000048, "Wrong size on PlayFabClientAPI_GetCharacterStatistics");
static_assert(offsetof(PlayFabClientAPI_GetCharacterStatistics, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCharacterStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterStatistics, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetCharacterStatistics::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterStatistics, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetCharacterStatistics::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterStatistics, customData) == 0x000038, "Member 'PlayFabClientAPI_GetCharacterStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterStatistics, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetCharacterStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetContentDownloadUrl
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetContentDownloadUrl final
{
public:
	struct FClientGetContentDownloadUrlRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetContentDownloadUrlResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetContentDownloadUrl) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetContentDownloadUrl");
static_assert(sizeof(PlayFabClientAPI_GetContentDownloadUrl) == 0x000060, "Wrong size on PlayFabClientAPI_GetContentDownloadUrl");
static_assert(offsetof(PlayFabClientAPI_GetContentDownloadUrl, Request) == 0x000000, "Member 'PlayFabClientAPI_GetContentDownloadUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetContentDownloadUrl, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetContentDownloadUrl::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetContentDownloadUrl, onFailure) == 0x000040, "Member 'PlayFabClientAPI_GetContentDownloadUrl::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetContentDownloadUrl, customData) == 0x000050, "Member 'PlayFabClientAPI_GetContentDownloadUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetContentDownloadUrl, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetContentDownloadUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetFriendLeaderboard
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_GetFriendLeaderboard final
{
public:
	struct FClientGetFriendLeaderboardRequest     Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetLeaderboardResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetFriendLeaderboard) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetFriendLeaderboard");
static_assert(sizeof(PlayFabClientAPI_GetFriendLeaderboard) == 0x000080, "Wrong size on PlayFabClientAPI_GetFriendLeaderboard");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboard, Request) == 0x000000, "Member 'PlayFabClientAPI_GetFriendLeaderboard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboard, onSuccess) == 0x000050, "Member 'PlayFabClientAPI_GetFriendLeaderboard::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboard, onFailure) == 0x000060, "Member 'PlayFabClientAPI_GetFriendLeaderboard::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboard, customData) == 0x000070, "Member 'PlayFabClientAPI_GetFriendLeaderboard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboard, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_GetFriendLeaderboard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetFriendLeaderboardAroundPlayer
// 0x0088 (0x0088 - 0x0000)
struct PlayFabClientAPI_GetFriendLeaderboardAroundPlayer final
{
public:
	struct FClientGetFriendLeaderboardAroundPlayerRequest Request;                                   // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetFriendLeaderboardAroundPlayerResult& Result, class UObject* customData)> onSuccess; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetFriendLeaderboardAroundPlayer");
static_assert(sizeof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer) == 0x000088, "Wrong size on PlayFabClientAPI_GetFriendLeaderboardAroundPlayer");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer, Request) == 0x000000, "Member 'PlayFabClientAPI_GetFriendLeaderboardAroundPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer, onSuccess) == 0x000058, "Member 'PlayFabClientAPI_GetFriendLeaderboardAroundPlayer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer, onFailure) == 0x000068, "Member 'PlayFabClientAPI_GetFriendLeaderboardAroundPlayer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer, customData) == 0x000078, "Member 'PlayFabClientAPI_GetFriendLeaderboardAroundPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer, ReturnValue) == 0x000080, "Member 'PlayFabClientAPI_GetFriendLeaderboardAroundPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetFriendsList
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetFriendsList final
{
public:
	struct FClientGetFriendsListRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetFriendsListResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetFriendsList) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetFriendsList");
static_assert(sizeof(PlayFabClientAPI_GetFriendsList) == 0x000060, "Wrong size on PlayFabClientAPI_GetFriendsList");
static_assert(offsetof(PlayFabClientAPI_GetFriendsList, Request) == 0x000000, "Member 'PlayFabClientAPI_GetFriendsList::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendsList, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetFriendsList::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendsList, onFailure) == 0x000040, "Member 'PlayFabClientAPI_GetFriendsList::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendsList, customData) == 0x000050, "Member 'PlayFabClientAPI_GetFriendsList::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendsList, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetFriendsList::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetLeaderboard
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_GetLeaderboard final
{
public:
	struct FClientGetLeaderboardRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetLeaderboardResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetLeaderboard) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetLeaderboard");
static_assert(sizeof(PlayFabClientAPI_GetLeaderboard) == 0x000070, "Wrong size on PlayFabClientAPI_GetLeaderboard");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboard, Request) == 0x000000, "Member 'PlayFabClientAPI_GetLeaderboard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboard, onSuccess) == 0x000040, "Member 'PlayFabClientAPI_GetLeaderboard::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboard, onFailure) == 0x000050, "Member 'PlayFabClientAPI_GetLeaderboard::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboard, customData) == 0x000060, "Member 'PlayFabClientAPI_GetLeaderboard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboard, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_GetLeaderboard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetLeaderboardAroundCharacter
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetLeaderboardAroundCharacter final
{
public:
	struct FClientGetLeaderboardAroundCharacterRequest Request;                                      // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetLeaderboardAroundCharacterResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetLeaderboardAroundCharacter) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetLeaderboardAroundCharacter");
static_assert(sizeof(PlayFabClientAPI_GetLeaderboardAroundCharacter) == 0x000060, "Wrong size on PlayFabClientAPI_GetLeaderboardAroundCharacter");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundCharacter, Request) == 0x000000, "Member 'PlayFabClientAPI_GetLeaderboardAroundCharacter::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundCharacter, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetLeaderboardAroundCharacter::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundCharacter, onFailure) == 0x000040, "Member 'PlayFabClientAPI_GetLeaderboardAroundCharacter::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundCharacter, customData) == 0x000050, "Member 'PlayFabClientAPI_GetLeaderboardAroundCharacter::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundCharacter, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetLeaderboardAroundCharacter::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetLeaderboardAroundPlayer
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_GetLeaderboardAroundPlayer final
{
public:
	struct FClientGetLeaderboardAroundPlayerRequest Request;                                         // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetLeaderboardAroundPlayerResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetLeaderboardAroundPlayer) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetLeaderboardAroundPlayer");
static_assert(sizeof(PlayFabClientAPI_GetLeaderboardAroundPlayer) == 0x000078, "Wrong size on PlayFabClientAPI_GetLeaderboardAroundPlayer");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundPlayer, Request) == 0x000000, "Member 'PlayFabClientAPI_GetLeaderboardAroundPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundPlayer, onSuccess) == 0x000048, "Member 'PlayFabClientAPI_GetLeaderboardAroundPlayer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundPlayer, onFailure) == 0x000058, "Member 'PlayFabClientAPI_GetLeaderboardAroundPlayer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundPlayer, customData) == 0x000068, "Member 'PlayFabClientAPI_GetLeaderboardAroundPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundPlayer, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_GetLeaderboardAroundPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetLeaderboardForUserCharacters
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetLeaderboardForUserCharacters final
{
public:
	struct FClientGetLeaderboardForUsersCharactersRequest Request;                                   // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetLeaderboardForUsersCharactersResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetLeaderboardForUserCharacters) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetLeaderboardForUserCharacters");
static_assert(sizeof(PlayFabClientAPI_GetLeaderboardForUserCharacters) == 0x000048, "Wrong size on PlayFabClientAPI_GetLeaderboardForUserCharacters");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardForUserCharacters, Request) == 0x000000, "Member 'PlayFabClientAPI_GetLeaderboardForUserCharacters::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardForUserCharacters, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetLeaderboardForUserCharacters::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardForUserCharacters, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetLeaderboardForUserCharacters::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardForUserCharacters, customData) == 0x000038, "Member 'PlayFabClientAPI_GetLeaderboardForUserCharacters::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardForUserCharacters, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetLeaderboardForUserCharacters::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPaymentToken
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPaymentToken final
{
public:
	struct FClientGetPaymentTokenRequest          Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPaymentTokenResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPaymentToken) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPaymentToken");
static_assert(sizeof(PlayFabClientAPI_GetPaymentToken) == 0x000048, "Wrong size on PlayFabClientAPI_GetPaymentToken");
static_assert(offsetof(PlayFabClientAPI_GetPaymentToken, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPaymentToken::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPaymentToken, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPaymentToken::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPaymentToken, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPaymentToken::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPaymentToken, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPaymentToken::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPaymentToken, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPaymentToken::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPhotonAuthenticationToken
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPhotonAuthenticationToken final
{
public:
	struct FClientGetPhotonAuthenticationTokenRequest Request;                                       // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPhotonAuthenticationTokenResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPhotonAuthenticationToken) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPhotonAuthenticationToken");
static_assert(sizeof(PlayFabClientAPI_GetPhotonAuthenticationToken) == 0x000048, "Wrong size on PlayFabClientAPI_GetPhotonAuthenticationToken");
static_assert(offsetof(PlayFabClientAPI_GetPhotonAuthenticationToken, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPhotonAuthenticationToken::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPhotonAuthenticationToken, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPhotonAuthenticationToken::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPhotonAuthenticationToken, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPhotonAuthenticationToken::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPhotonAuthenticationToken, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPhotonAuthenticationToken::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPhotonAuthenticationToken, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPhotonAuthenticationToken::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerCombinedInfo
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_GetPlayerCombinedInfo final
{
public:
	struct FClientGetPlayerCombinedInfoRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerCombinedInfoResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerCombinedInfo) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerCombinedInfo");
static_assert(sizeof(PlayFabClientAPI_GetPlayerCombinedInfo) == 0x000058, "Wrong size on PlayFabClientAPI_GetPlayerCombinedInfo");
static_assert(offsetof(PlayFabClientAPI_GetPlayerCombinedInfo, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerCombinedInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerCombinedInfo, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_GetPlayerCombinedInfo::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerCombinedInfo, onFailure) == 0x000038, "Member 'PlayFabClientAPI_GetPlayerCombinedInfo::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerCombinedInfo, customData) == 0x000048, "Member 'PlayFabClientAPI_GetPlayerCombinedInfo::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerCombinedInfo, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_GetPlayerCombinedInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerProfile
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_GetPlayerProfile final
{
public:
	struct FClientGetPlayerProfileRequest         Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerProfileResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerProfile) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerProfile");
static_assert(sizeof(PlayFabClientAPI_GetPlayerProfile) == 0x000058, "Wrong size on PlayFabClientAPI_GetPlayerProfile");
static_assert(offsetof(PlayFabClientAPI_GetPlayerProfile, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerProfile::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerProfile, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_GetPlayerProfile::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerProfile, onFailure) == 0x000038, "Member 'PlayFabClientAPI_GetPlayerProfile::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerProfile, customData) == 0x000048, "Member 'PlayFabClientAPI_GetPlayerProfile::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerProfile, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_GetPlayerProfile::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerSegments
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientAPI_GetPlayerSegments final
{
public:
	struct FClientGetPlayerSegmentsRequest        Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerSegmentsResult& Result, class UObject* customData)> onSuccess; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerSegments) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerSegments");
static_assert(sizeof(PlayFabClientAPI_GetPlayerSegments) == 0x000038, "Wrong size on PlayFabClientAPI_GetPlayerSegments");
static_assert(offsetof(PlayFabClientAPI_GetPlayerSegments, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerSegments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerSegments, onSuccess) == 0x000008, "Member 'PlayFabClientAPI_GetPlayerSegments::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerSegments, onFailure) == 0x000018, "Member 'PlayFabClientAPI_GetPlayerSegments::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerSegments, customData) == 0x000028, "Member 'PlayFabClientAPI_GetPlayerSegments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerSegments, ReturnValue) == 0x000030, "Member 'PlayFabClientAPI_GetPlayerSegments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerStatistics
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetPlayerStatistics final
{
public:
	struct FClientGetPlayerStatisticsRequest      Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerStatisticsResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerStatistics");
static_assert(sizeof(PlayFabClientAPI_GetPlayerStatistics) == 0x000060, "Wrong size on PlayFabClientAPI_GetPlayerStatistics");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatistics, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatistics, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetPlayerStatistics::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatistics, onFailure) == 0x000040, "Member 'PlayFabClientAPI_GetPlayerStatistics::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatistics, customData) == 0x000050, "Member 'PlayFabClientAPI_GetPlayerStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatistics, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetPlayerStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerStatisticVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_GetPlayerStatisticVersions final
{
public:
	struct FClientGetPlayerStatisticVersionsRequest Request;                                         // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerStatisticVersionsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerStatisticVersions) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerStatisticVersions");
static_assert(sizeof(PlayFabClientAPI_GetPlayerStatisticVersions) == 0x000050, "Wrong size on PlayFabClientAPI_GetPlayerStatisticVersions");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatisticVersions, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerStatisticVersions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatisticVersions, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_GetPlayerStatisticVersions::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatisticVersions, onFailure) == 0x000030, "Member 'PlayFabClientAPI_GetPlayerStatisticVersions::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatisticVersions, customData) == 0x000040, "Member 'PlayFabClientAPI_GetPlayerStatisticVersions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatisticVersions, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_GetPlayerStatisticVersions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerTags
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetPlayerTags final
{
public:
	struct FClientGetPlayerTagsRequest            Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerTagsResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerTags) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerTags");
static_assert(sizeof(PlayFabClientAPI_GetPlayerTags) == 0x000060, "Wrong size on PlayFabClientAPI_GetPlayerTags");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTags, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTags, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetPlayerTags::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTags, onFailure) == 0x000040, "Member 'PlayFabClientAPI_GetPlayerTags::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTags, customData) == 0x000050, "Member 'PlayFabClientAPI_GetPlayerTags::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTags, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetPlayerTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerTrades
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_GetPlayerTrades final
{
public:
	struct FClientGetPlayerTradesRequest          Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerTradesResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerTrades) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerTrades");
static_assert(sizeof(PlayFabClientAPI_GetPlayerTrades) == 0x000040, "Wrong size on PlayFabClientAPI_GetPlayerTrades");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTrades, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerTrades::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTrades, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_GetPlayerTrades::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTrades, onFailure) == 0x000020, "Member 'PlayFabClientAPI_GetPlayerTrades::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTrades, customData) == 0x000030, "Member 'PlayFabClientAPI_GetPlayerTrades::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTrades, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_GetPlayerTrades::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromFacebookIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs final
{
public:
	struct FClientGetPlayFabIDsFromFacebookIDsRequest Request;                                       // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromFacebookIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromFacebookInstantGamesIds
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds final
{
public:
	struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest Request;                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGameCenterIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs final
{
public:
	struct FClientGetPlayFabIDsFromGameCenterIDsRequest Request;                                     // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromGameCenterIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGenericIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromGenericIDs final
{
public:
	struct FClientGetPlayFabIDsFromGenericIDsRequest Request;                                        // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromGenericIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromGenericIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromGenericIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGenericIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGenericIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGenericIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGenericIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGenericIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGoogleIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs final
{
public:
	struct FClientGetPlayFabIDsFromGoogleIDsRequest Request;                                         // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromGoogleIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGooglePlayGamesPlayerIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs final
{
public:
	struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsRequest Request;                          // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromKongregateIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs final
{
public:
	struct FClientGetPlayFabIDsFromKongregateIDsRequest Request;                                     // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromKongregateIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromNintendoServiceAccountIds
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds final
{
public:
	struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsRequest Request;                         // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromNintendoSwitchDeviceIds
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds final
{
public:
	struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest Request;                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromPSNAccountIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs final
{
public:
	struct FClientGetPlayFabIDsFromPSNAccountIDsRequest Request;                                     // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromPSNAccountIDsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs) == 0x000050, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs, onFailure) == 0x000030, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromPSNOnlineIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs final
{
public:
	struct FClientGetPlayFabIDsFromPSNOnlineIDsRequest Request;                                      // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromPSNOnlineIDsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs) == 0x000050, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs, onFailure) == 0x000030, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNOnlineIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromSteamIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromSteamIDs final
{
public:
	struct FClientGetPlayFabIDsFromSteamIDsRequest Request;                                          // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromSteamIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromSteamIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromSteamIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromSteamIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromSteamIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromSteamIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromSteamIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromSteamIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromTwitchIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs final
{
public:
	struct FClientGetPlayFabIDsFromTwitchIDsRequest Request;                                         // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromTwitchIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromXboxLiveIDs
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs final
{
public:
	struct FClientGetPlayFabIDsFromXboxLiveIDsRequest Request;                                       // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromXboxLiveIDsResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs) == 0x000058, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs, onFailure) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs, customData) == 0x000048, "Member 'PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPublisherData
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPublisherData final
{
public:
	struct FClientGetPublisherDataRequest         Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPublisherDataResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPublisherData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPublisherData");
static_assert(sizeof(PlayFabClientAPI_GetPublisherData) == 0x000048, "Wrong size on PlayFabClientAPI_GetPublisherData");
static_assert(offsetof(PlayFabClientAPI_GetPublisherData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPublisherData, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPublisherData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPublisherData, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPublisherData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPublisherData, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPublisherData, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPurchase
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPurchase final
{
public:
	struct FClientGetPurchaseRequest              Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPurchaseResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPurchase");
static_assert(sizeof(PlayFabClientAPI_GetPurchase) == 0x000048, "Wrong size on PlayFabClientAPI_GetPurchase");
static_assert(offsetof(PlayFabClientAPI_GetPurchase, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPurchase::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPurchase, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPurchase::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPurchase, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPurchase::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPurchase, customData) == 0x000038, "Member 'PlayFabClientAPI_GetPurchase::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPurchase, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPurchase::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetSharedGroupData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetSharedGroupData final
{
public:
	struct FClientGetSharedGroupDataRequest       Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetSharedGroupDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetSharedGroupData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetSharedGroupData");
static_assert(sizeof(PlayFabClientAPI_GetSharedGroupData) == 0x000060, "Wrong size on PlayFabClientAPI_GetSharedGroupData");
static_assert(offsetof(PlayFabClientAPI_GetSharedGroupData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetSharedGroupData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetSharedGroupData, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetSharedGroupData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetSharedGroupData, onFailure) == 0x000040, "Member 'PlayFabClientAPI_GetSharedGroupData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetSharedGroupData, customData) == 0x000050, "Member 'PlayFabClientAPI_GetSharedGroupData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetSharedGroupData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetSharedGroupData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetStoreItems
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_GetStoreItems final
{
public:
	struct FClientGetStoreItemsRequest            Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetStoreItemsResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetStoreItems) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetStoreItems");
static_assert(sizeof(PlayFabClientAPI_GetStoreItems) == 0x000058, "Wrong size on PlayFabClientAPI_GetStoreItems");
static_assert(offsetof(PlayFabClientAPI_GetStoreItems, Request) == 0x000000, "Member 'PlayFabClientAPI_GetStoreItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetStoreItems, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_GetStoreItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetStoreItems, onFailure) == 0x000038, "Member 'PlayFabClientAPI_GetStoreItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetStoreItems, customData) == 0x000048, "Member 'PlayFabClientAPI_GetStoreItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetStoreItems, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_GetStoreItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetTime
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientAPI_GetTime final
{
public:
	struct FClientGetTimeRequest                  Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetTimeResult& Result, class UObject* customData)> onSuccess; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetTime) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetTime");
static_assert(sizeof(PlayFabClientAPI_GetTime) == 0x000038, "Wrong size on PlayFabClientAPI_GetTime");
static_assert(offsetof(PlayFabClientAPI_GetTime, Request) == 0x000000, "Member 'PlayFabClientAPI_GetTime::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTime, onSuccess) == 0x000008, "Member 'PlayFabClientAPI_GetTime::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTime, onFailure) == 0x000018, "Member 'PlayFabClientAPI_GetTime::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTime, customData) == 0x000028, "Member 'PlayFabClientAPI_GetTime::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTime, ReturnValue) == 0x000030, "Member 'PlayFabClientAPI_GetTime::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetTitleData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_GetTitleData final
{
public:
	struct FClientGetTitleDataRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetTitleDataResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetTitleData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetTitleData");
static_assert(sizeof(PlayFabClientAPI_GetTitleData) == 0x000058, "Wrong size on PlayFabClientAPI_GetTitleData");
static_assert(offsetof(PlayFabClientAPI_GetTitleData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetTitleData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleData, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_GetTitleData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleData, onFailure) == 0x000038, "Member 'PlayFabClientAPI_GetTitleData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleData, customData) == 0x000048, "Member 'PlayFabClientAPI_GetTitleData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleData, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_GetTitleData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetTitleNews
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_GetTitleNews final
{
public:
	struct FClientGetTitleNewsRequest             Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetTitleNewsResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetTitleNews) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetTitleNews");
static_assert(sizeof(PlayFabClientAPI_GetTitleNews) == 0x000040, "Wrong size on PlayFabClientAPI_GetTitleNews");
static_assert(offsetof(PlayFabClientAPI_GetTitleNews, Request) == 0x000000, "Member 'PlayFabClientAPI_GetTitleNews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleNews, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_GetTitleNews::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleNews, onFailure) == 0x000020, "Member 'PlayFabClientAPI_GetTitleNews::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleNews, customData) == 0x000030, "Member 'PlayFabClientAPI_GetTitleNews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleNews, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_GetTitleNews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetTitlePublicKey
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetTitlePublicKey final
{
public:
	struct FClientGetTitlePublicKeyRequest        Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetTitlePublicKeyResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetTitlePublicKey) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetTitlePublicKey");
static_assert(sizeof(PlayFabClientAPI_GetTitlePublicKey) == 0x000048, "Wrong size on PlayFabClientAPI_GetTitlePublicKey");
static_assert(offsetof(PlayFabClientAPI_GetTitlePublicKey, Request) == 0x000000, "Member 'PlayFabClientAPI_GetTitlePublicKey::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitlePublicKey, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetTitlePublicKey::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitlePublicKey, onFailure) == 0x000028, "Member 'PlayFabClientAPI_GetTitlePublicKey::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitlePublicKey, customData) == 0x000038, "Member 'PlayFabClientAPI_GetTitlePublicKey::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitlePublicKey, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetTitlePublicKey::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetTradeStatus
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_GetTradeStatus final
{
public:
	struct FClientGetTradeStatusRequest           Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetTradeStatusResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetTradeStatus) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetTradeStatus");
static_assert(sizeof(PlayFabClientAPI_GetTradeStatus) == 0x000058, "Wrong size on PlayFabClientAPI_GetTradeStatus");
static_assert(offsetof(PlayFabClientAPI_GetTradeStatus, Request) == 0x000000, "Member 'PlayFabClientAPI_GetTradeStatus::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTradeStatus, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_GetTradeStatus::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTradeStatus, onFailure) == 0x000038, "Member 'PlayFabClientAPI_GetTradeStatus::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTradeStatus, customData) == 0x000048, "Member 'PlayFabClientAPI_GetTradeStatus::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTradeStatus, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_GetTradeStatus::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetUserData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetUserData final
{
public:
	struct FClientGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetUserData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetUserData");
static_assert(sizeof(PlayFabClientAPI_GetUserData) == 0x000060, "Wrong size on PlayFabClientAPI_GetUserData");
static_assert(offsetof(PlayFabClientAPI_GetUserData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetUserData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserData, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetUserData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserData, onFailure) == 0x000040, "Member 'PlayFabClientAPI_GetUserData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserData, customData) == 0x000050, "Member 'PlayFabClientAPI_GetUserData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetUserData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetUserInventory
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_GetUserInventory final
{
public:
	struct FClientGetUserInventoryRequest         Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetUserInventoryResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetUserInventory) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetUserInventory");
static_assert(sizeof(PlayFabClientAPI_GetUserInventory) == 0x000040, "Wrong size on PlayFabClientAPI_GetUserInventory");
static_assert(offsetof(PlayFabClientAPI_GetUserInventory, Request) == 0x000000, "Member 'PlayFabClientAPI_GetUserInventory::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserInventory, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_GetUserInventory::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserInventory, onFailure) == 0x000020, "Member 'PlayFabClientAPI_GetUserInventory::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserInventory, customData) == 0x000030, "Member 'PlayFabClientAPI_GetUserInventory::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserInventory, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_GetUserInventory::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetUserPublisherData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetUserPublisherData final
{
public:
	struct FClientGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetUserPublisherData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetUserPublisherData");
static_assert(sizeof(PlayFabClientAPI_GetUserPublisherData) == 0x000060, "Wrong size on PlayFabClientAPI_GetUserPublisherData");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetUserPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherData, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetUserPublisherData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherData, onFailure) == 0x000040, "Member 'PlayFabClientAPI_GetUserPublisherData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherData, customData) == 0x000050, "Member 'PlayFabClientAPI_GetUserPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetUserPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetUserPublisherReadOnlyData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetUserPublisherReadOnlyData final
{
public:
	struct FClientGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabClientAPI_GetUserPublisherReadOnlyData) == 0x000060, "Wrong size on PlayFabClientAPI_GetUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherReadOnlyData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetUserPublisherReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherReadOnlyData, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetUserPublisherReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherReadOnlyData, onFailure) == 0x000040, "Member 'PlayFabClientAPI_GetUserPublisherReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherReadOnlyData, customData) == 0x000050, "Member 'PlayFabClientAPI_GetUserPublisherReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherReadOnlyData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetUserPublisherReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetUserReadOnlyData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetUserReadOnlyData final
{
public:
	struct FClientGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetUserReadOnlyData");
static_assert(sizeof(PlayFabClientAPI_GetUserReadOnlyData) == 0x000060, "Wrong size on PlayFabClientAPI_GetUserReadOnlyData");
static_assert(offsetof(PlayFabClientAPI_GetUserReadOnlyData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetUserReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserReadOnlyData, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetUserReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserReadOnlyData, onFailure) == 0x000040, "Member 'PlayFabClientAPI_GetUserReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserReadOnlyData, customData) == 0x000050, "Member 'PlayFabClientAPI_GetUserReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserReadOnlyData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetUserReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GrantCharacterToUser
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_GrantCharacterToUser final
{
public:
	struct FClientGrantCharacterToUserRequest     Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGrantCharacterToUserResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GrantCharacterToUser) == 0x000008, "Wrong alignment on PlayFabClientAPI_GrantCharacterToUser");
static_assert(sizeof(PlayFabClientAPI_GrantCharacterToUser) == 0x000070, "Wrong size on PlayFabClientAPI_GrantCharacterToUser");
static_assert(offsetof(PlayFabClientAPI_GrantCharacterToUser, Request) == 0x000000, "Member 'PlayFabClientAPI_GrantCharacterToUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GrantCharacterToUser, onSuccess) == 0x000040, "Member 'PlayFabClientAPI_GrantCharacterToUser::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GrantCharacterToUser, onFailure) == 0x000050, "Member 'PlayFabClientAPI_GrantCharacterToUser::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GrantCharacterToUser, customData) == 0x000060, "Member 'PlayFabClientAPI_GrantCharacterToUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GrantCharacterToUser, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_GrantCharacterToUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkAndroidDeviceID
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_LinkAndroidDeviceID final
{
public:
	struct FClientLinkAndroidDeviceIDRequest      Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkAndroidDeviceIDResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkAndroidDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkAndroidDeviceID");
static_assert(sizeof(PlayFabClientAPI_LinkAndroidDeviceID) == 0x000078, "Wrong size on PlayFabClientAPI_LinkAndroidDeviceID");
static_assert(offsetof(PlayFabClientAPI_LinkAndroidDeviceID, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkAndroidDeviceID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkAndroidDeviceID, onSuccess) == 0x000048, "Member 'PlayFabClientAPI_LinkAndroidDeviceID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkAndroidDeviceID, onFailure) == 0x000058, "Member 'PlayFabClientAPI_LinkAndroidDeviceID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkAndroidDeviceID, customData) == 0x000068, "Member 'PlayFabClientAPI_LinkAndroidDeviceID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkAndroidDeviceID, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_LinkAndroidDeviceID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkApple
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkApple final
{
public:
	struct FClientLinkAppleRequest                Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResult& Result, class UObject* customData)> onSuccess;   // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkApple) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkApple");
static_assert(sizeof(PlayFabClientAPI_LinkApple) == 0x000058, "Wrong size on PlayFabClientAPI_LinkApple");
static_assert(offsetof(PlayFabClientAPI_LinkApple, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkApple::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkApple, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkApple::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkApple, onFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkApple::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkApple, customData) == 0x000048, "Member 'PlayFabClientAPI_LinkApple::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkApple, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkApple::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkCustomID
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkCustomID final
{
public:
	struct FClientLinkCustomIDRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkCustomIDResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkCustomID) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkCustomID");
static_assert(sizeof(PlayFabClientAPI_LinkCustomID) == 0x000058, "Wrong size on PlayFabClientAPI_LinkCustomID");
static_assert(offsetof(PlayFabClientAPI_LinkCustomID, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkCustomID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkCustomID, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkCustomID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkCustomID, onFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkCustomID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkCustomID, customData) == 0x000048, "Member 'PlayFabClientAPI_LinkCustomID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkCustomID, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkCustomID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkFacebookAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkFacebookAccount final
{
public:
	struct FClientLinkFacebookAccountRequest      Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkFacebookAccountResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkFacebookAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkFacebookAccount");
static_assert(sizeof(PlayFabClientAPI_LinkFacebookAccount) == 0x000058, "Wrong size on PlayFabClientAPI_LinkFacebookAccount");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkFacebookAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookAccount, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkFacebookAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookAccount, onFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkFacebookAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookAccount, customData) == 0x000048, "Member 'PlayFabClientAPI_LinkFacebookAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookAccount, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkFacebookAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkFacebookInstantGamesId
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkFacebookInstantGamesId final
{
public:
	struct FClientLinkFacebookInstantGamesIdRequest Request;                                         // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkFacebookInstantGamesIdResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkFacebookInstantGamesId) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkFacebookInstantGamesId");
static_assert(sizeof(PlayFabClientAPI_LinkFacebookInstantGamesId) == 0x000058, "Wrong size on PlayFabClientAPI_LinkFacebookInstantGamesId");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookInstantGamesId, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkFacebookInstantGamesId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookInstantGamesId, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkFacebookInstantGamesId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookInstantGamesId, onFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkFacebookInstantGamesId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookInstantGamesId, customData) == 0x000048, "Member 'PlayFabClientAPI_LinkFacebookInstantGamesId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookInstantGamesId, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkFacebookInstantGamesId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkGameCenterAccount
// 0x0098 (0x0098 - 0x0000)
struct PlayFabClientAPI_LinkGameCenterAccount final
{
public:
	struct FClientLinkGameCenterAccountRequest    Request;                                           // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkGameCenterAccountResult& Result, class UObject* customData)> onSuccess; // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkGameCenterAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkGameCenterAccount");
static_assert(sizeof(PlayFabClientAPI_LinkGameCenterAccount) == 0x000098, "Wrong size on PlayFabClientAPI_LinkGameCenterAccount");
static_assert(offsetof(PlayFabClientAPI_LinkGameCenterAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkGameCenterAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGameCenterAccount, onSuccess) == 0x000068, "Member 'PlayFabClientAPI_LinkGameCenterAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGameCenterAccount, onFailure) == 0x000078, "Member 'PlayFabClientAPI_LinkGameCenterAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGameCenterAccount, customData) == 0x000088, "Member 'PlayFabClientAPI_LinkGameCenterAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGameCenterAccount, ReturnValue) == 0x000090, "Member 'PlayFabClientAPI_LinkGameCenterAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkGoogleAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkGoogleAccount final
{
public:
	struct FClientLinkGoogleAccountRequest        Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkGoogleAccountResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkGoogleAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkGoogleAccount");
static_assert(sizeof(PlayFabClientAPI_LinkGoogleAccount) == 0x000058, "Wrong size on PlayFabClientAPI_LinkGoogleAccount");
static_assert(offsetof(PlayFabClientAPI_LinkGoogleAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkGoogleAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGoogleAccount, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkGoogleAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGoogleAccount, onFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkGoogleAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGoogleAccount, customData) == 0x000048, "Member 'PlayFabClientAPI_LinkGoogleAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGoogleAccount, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkGoogleAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkGooglePlayGamesServicesAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkGooglePlayGamesServicesAccount final
{
public:
	struct FClientLinkGooglePlayGamesServicesAccountRequest Request;                                 // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkGooglePlayGamesServicesAccountResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkGooglePlayGamesServicesAccount");
static_assert(sizeof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount) == 0x000058, "Wrong size on PlayFabClientAPI_LinkGooglePlayGamesServicesAccount");
static_assert(offsetof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkGooglePlayGamesServicesAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkGooglePlayGamesServicesAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount, onFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkGooglePlayGamesServicesAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount, customData) == 0x000048, "Member 'PlayFabClientAPI_LinkGooglePlayGamesServicesAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkGooglePlayGamesServicesAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkIOSDeviceID
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_LinkIOSDeviceID final
{
public:
	struct FClientLinkIOSDeviceIDRequest          Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkIOSDeviceIDResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkIOSDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkIOSDeviceID");
static_assert(sizeof(PlayFabClientAPI_LinkIOSDeviceID) == 0x000078, "Wrong size on PlayFabClientAPI_LinkIOSDeviceID");
static_assert(offsetof(PlayFabClientAPI_LinkIOSDeviceID, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkIOSDeviceID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkIOSDeviceID, onSuccess) == 0x000048, "Member 'PlayFabClientAPI_LinkIOSDeviceID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkIOSDeviceID, onFailure) == 0x000058, "Member 'PlayFabClientAPI_LinkIOSDeviceID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkIOSDeviceID, customData) == 0x000068, "Member 'PlayFabClientAPI_LinkIOSDeviceID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkIOSDeviceID, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_LinkIOSDeviceID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkKongregate
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_LinkKongregate final
{
public:
	struct FClientLinkKongregateAccountRequest    Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkKongregateAccountResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkKongregate) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkKongregate");
static_assert(sizeof(PlayFabClientAPI_LinkKongregate) == 0x000068, "Wrong size on PlayFabClientAPI_LinkKongregate");
static_assert(offsetof(PlayFabClientAPI_LinkKongregate, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkKongregate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkKongregate, onSuccess) == 0x000038, "Member 'PlayFabClientAPI_LinkKongregate::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkKongregate, onFailure) == 0x000048, "Member 'PlayFabClientAPI_LinkKongregate::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkKongregate, customData) == 0x000058, "Member 'PlayFabClientAPI_LinkKongregate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkKongregate, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_LinkKongregate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkNintendoServiceAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkNintendoServiceAccount final
{
public:
	struct FClientLinkNintendoServiceAccountRequest Request;                                         // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResult& Result, class UObject* customData)> onSuccess;   // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkNintendoServiceAccount");
static_assert(sizeof(PlayFabClientAPI_LinkNintendoServiceAccount) == 0x000058, "Wrong size on PlayFabClientAPI_LinkNintendoServiceAccount");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoServiceAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkNintendoServiceAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoServiceAccount, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkNintendoServiceAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoServiceAccount, onFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkNintendoServiceAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoServiceAccount, customData) == 0x000048, "Member 'PlayFabClientAPI_LinkNintendoServiceAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoServiceAccount, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkNintendoServiceAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkNintendoSwitchDeviceId
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkNintendoSwitchDeviceId final
{
public:
	struct FClientLinkNintendoSwitchDeviceIdRequest Request;                                         // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkNintendoSwitchDeviceIdResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabClientAPI_LinkNintendoSwitchDeviceId) == 0x000058, "Wrong size on PlayFabClientAPI_LinkNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoSwitchDeviceId, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkNintendoSwitchDeviceId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoSwitchDeviceId, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkNintendoSwitchDeviceId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoSwitchDeviceId, onFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkNintendoSwitchDeviceId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoSwitchDeviceId, customData) == 0x000048, "Member 'PlayFabClientAPI_LinkNintendoSwitchDeviceId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoSwitchDeviceId, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkNintendoSwitchDeviceId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkOpenIdConnect
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_LinkOpenIdConnect final
{
public:
	struct FClientLinkOpenIdConnectRequest        Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResult& Result, class UObject* customData)> onSuccess;   // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkOpenIdConnect) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkOpenIdConnect");
static_assert(sizeof(PlayFabClientAPI_LinkOpenIdConnect) == 0x000068, "Wrong size on PlayFabClientAPI_LinkOpenIdConnect");
static_assert(offsetof(PlayFabClientAPI_LinkOpenIdConnect, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkOpenIdConnect::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkOpenIdConnect, onSuccess) == 0x000038, "Member 'PlayFabClientAPI_LinkOpenIdConnect::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkOpenIdConnect, onFailure) == 0x000048, "Member 'PlayFabClientAPI_LinkOpenIdConnect::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkOpenIdConnect, customData) == 0x000058, "Member 'PlayFabClientAPI_LinkOpenIdConnect::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkOpenIdConnect, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_LinkOpenIdConnect::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkPSNAccount
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_LinkPSNAccount final
{
public:
	struct FClientLinkPSNAccountRequest           Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkPSNAccountResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkPSNAccount");
static_assert(sizeof(PlayFabClientAPI_LinkPSNAccount) == 0x000068, "Wrong size on PlayFabClientAPI_LinkPSNAccount");
static_assert(offsetof(PlayFabClientAPI_LinkPSNAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkPSNAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkPSNAccount, onSuccess) == 0x000038, "Member 'PlayFabClientAPI_LinkPSNAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkPSNAccount, onFailure) == 0x000048, "Member 'PlayFabClientAPI_LinkPSNAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkPSNAccount, customData) == 0x000058, "Member 'PlayFabClientAPI_LinkPSNAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkPSNAccount, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_LinkPSNAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkSteamAccount
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_LinkSteamAccount final
{
public:
	struct FClientLinkSteamAccountRequest         Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkSteamAccountResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkSteamAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkSteamAccount");
static_assert(sizeof(PlayFabClientAPI_LinkSteamAccount) == 0x000060, "Wrong size on PlayFabClientAPI_LinkSteamAccount");
static_assert(offsetof(PlayFabClientAPI_LinkSteamAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkSteamAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkSteamAccount, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_LinkSteamAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkSteamAccount, onFailure) == 0x000040, "Member 'PlayFabClientAPI_LinkSteamAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkSteamAccount, customData) == 0x000050, "Member 'PlayFabClientAPI_LinkSteamAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkSteamAccount, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_LinkSteamAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkTwitch
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkTwitch final
{
public:
	struct FClientLinkTwitchAccountRequest        Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkTwitchAccountResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkTwitch) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkTwitch");
static_assert(sizeof(PlayFabClientAPI_LinkTwitch) == 0x000058, "Wrong size on PlayFabClientAPI_LinkTwitch");
static_assert(offsetof(PlayFabClientAPI_LinkTwitch, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkTwitch::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkTwitch, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkTwitch::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkTwitch, onFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkTwitch::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkTwitch, customData) == 0x000048, "Member 'PlayFabClientAPI_LinkTwitch::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkTwitch, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkTwitch::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkXboxAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkXboxAccount final
{
public:
	struct FClientLinkXboxAccountRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkXboxAccountResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkXboxAccount");
static_assert(sizeof(PlayFabClientAPI_LinkXboxAccount) == 0x000058, "Wrong size on PlayFabClientAPI_LinkXboxAccount");
static_assert(offsetof(PlayFabClientAPI_LinkXboxAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkXboxAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkXboxAccount, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkXboxAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkXboxAccount, onFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkXboxAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkXboxAccount, customData) == 0x000048, "Member 'PlayFabClientAPI_LinkXboxAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkXboxAccount, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkXboxAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithAndroidDeviceID
// 0x00A0 (0x00A0 - 0x0000)
struct PlayFabClientAPI_LoginWithAndroidDeviceID final
{
public:
	struct FClientLoginWithAndroidDeviceIDRequest Request;                                           // 0x0000(0x0070)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0080(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0090(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithAndroidDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithAndroidDeviceID");
static_assert(sizeof(PlayFabClientAPI_LoginWithAndroidDeviceID) == 0x0000A0, "Wrong size on PlayFabClientAPI_LoginWithAndroidDeviceID");
static_assert(offsetof(PlayFabClientAPI_LoginWithAndroidDeviceID, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithAndroidDeviceID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithAndroidDeviceID, onSuccess) == 0x000070, "Member 'PlayFabClientAPI_LoginWithAndroidDeviceID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithAndroidDeviceID, onFailure) == 0x000080, "Member 'PlayFabClientAPI_LoginWithAndroidDeviceID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithAndroidDeviceID, customData) == 0x000090, "Member 'PlayFabClientAPI_LoginWithAndroidDeviceID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithAndroidDeviceID, ReturnValue) == 0x000098, "Member 'PlayFabClientAPI_LoginWithAndroidDeviceID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithApple
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithApple final
{
public:
	struct FClientLoginWithAppleRequest           Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithApple) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithApple");
static_assert(sizeof(PlayFabClientAPI_LoginWithApple) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithApple");
static_assert(offsetof(PlayFabClientAPI_LoginWithApple, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithApple::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithApple, onSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithApple::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithApple, onFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithApple::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithApple, customData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithApple::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithApple, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithApple::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithCustomID
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithCustomID final
{
public:
	struct FClientLoginWithCustomIDRequest        Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithCustomID) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithCustomID");
static_assert(sizeof(PlayFabClientAPI_LoginWithCustomID) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithCustomID");
static_assert(offsetof(PlayFabClientAPI_LoginWithCustomID, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithCustomID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithCustomID, onSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithCustomID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithCustomID, onFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithCustomID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithCustomID, customData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithCustomID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithCustomID, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithCustomID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithEmailAddress
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_LoginWithEmailAddress final
{
public:
	struct FClientLoginWithEmailAddressRequest    Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithEmailAddress) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithEmailAddress");
static_assert(sizeof(PlayFabClientAPI_LoginWithEmailAddress) == 0x000068, "Wrong size on PlayFabClientAPI_LoginWithEmailAddress");
static_assert(offsetof(PlayFabClientAPI_LoginWithEmailAddress, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithEmailAddress::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithEmailAddress, onSuccess) == 0x000038, "Member 'PlayFabClientAPI_LoginWithEmailAddress::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithEmailAddress, onFailure) == 0x000048, "Member 'PlayFabClientAPI_LoginWithEmailAddress::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithEmailAddress, customData) == 0x000058, "Member 'PlayFabClientAPI_LoginWithEmailAddress::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithEmailAddress, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_LoginWithEmailAddress::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithFacebook
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithFacebook final
{
public:
	struct FClientLoginWithFacebookRequest        Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithFacebook) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithFacebook");
static_assert(sizeof(PlayFabClientAPI_LoginWithFacebook) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithFacebook");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebook, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithFacebook::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebook, onSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithFacebook::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebook, onFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithFacebook::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebook, customData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithFacebook::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebook, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithFacebook::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithFacebookInstantGamesId
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithFacebookInstantGamesId final
{
public:
	struct FClientLoginWithFacebookInstantGamesIdRequest Request;                                    // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithFacebookInstantGamesId) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithFacebookInstantGamesId");
static_assert(sizeof(PlayFabClientAPI_LoginWithFacebookInstantGamesId) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithFacebookInstantGamesId");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebookInstantGamesId, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithFacebookInstantGamesId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebookInstantGamesId, onSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithFacebookInstantGamesId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebookInstantGamesId, onFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithFacebookInstantGamesId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebookInstantGamesId, customData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithFacebookInstantGamesId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebookInstantGamesId, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithFacebookInstantGamesId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithGameCenter
// 0x00C0 (0x00C0 - 0x0000)
struct PlayFabClientAPI_LoginWithGameCenter final
{
public:
	struct FClientLoginWithGameCenterRequest      Request;                                           // 0x0000(0x0090)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0090(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x00A0(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x00B0(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x00B8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithGameCenter) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithGameCenter");
static_assert(sizeof(PlayFabClientAPI_LoginWithGameCenter) == 0x0000C0, "Wrong size on PlayFabClientAPI_LoginWithGameCenter");
static_assert(offsetof(PlayFabClientAPI_LoginWithGameCenter, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithGameCenter::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGameCenter, onSuccess) == 0x000090, "Member 'PlayFabClientAPI_LoginWithGameCenter::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGameCenter, onFailure) == 0x0000A0, "Member 'PlayFabClientAPI_LoginWithGameCenter::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGameCenter, customData) == 0x0000B0, "Member 'PlayFabClientAPI_LoginWithGameCenter::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGameCenter, ReturnValue) == 0x0000B8, "Member 'PlayFabClientAPI_LoginWithGameCenter::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithGoogleAccount
// 0x0088 (0x0088 - 0x0000)
struct PlayFabClientAPI_LoginWithGoogleAccount final
{
public:
	struct FClientLoginWithGoogleAccountRequest   Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithGoogleAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithGoogleAccount");
static_assert(sizeof(PlayFabClientAPI_LoginWithGoogleAccount) == 0x000088, "Wrong size on PlayFabClientAPI_LoginWithGoogleAccount");
static_assert(offsetof(PlayFabClientAPI_LoginWithGoogleAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithGoogleAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGoogleAccount, onSuccess) == 0x000058, "Member 'PlayFabClientAPI_LoginWithGoogleAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGoogleAccount, onFailure) == 0x000068, "Member 'PlayFabClientAPI_LoginWithGoogleAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGoogleAccount, customData) == 0x000078, "Member 'PlayFabClientAPI_LoginWithGoogleAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGoogleAccount, ReturnValue) == 0x000080, "Member 'PlayFabClientAPI_LoginWithGoogleAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithGooglePlayGamesServices
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithGooglePlayGamesServices final
{
public:
	struct FClientLoginWithGooglePlayGamesServicesRequest Request;                                   // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithGooglePlayGamesServices) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithGooglePlayGamesServices");
static_assert(sizeof(PlayFabClientAPI_LoginWithGooglePlayGamesServices) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithGooglePlayGamesServices");
static_assert(offsetof(PlayFabClientAPI_LoginWithGooglePlayGamesServices, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithGooglePlayGamesServices::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGooglePlayGamesServices, onSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithGooglePlayGamesServices::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGooglePlayGamesServices, onFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithGooglePlayGamesServices::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGooglePlayGamesServices, customData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithGooglePlayGamesServices::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGooglePlayGamesServices, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithGooglePlayGamesServices::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithIOSDeviceID
// 0x00A0 (0x00A0 - 0x0000)
struct PlayFabClientAPI_LoginWithIOSDeviceID final
{
public:
	struct FClientLoginWithIOSDeviceIDRequest     Request;                                           // 0x0000(0x0070)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0080(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0090(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithIOSDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithIOSDeviceID");
static_assert(sizeof(PlayFabClientAPI_LoginWithIOSDeviceID) == 0x0000A0, "Wrong size on PlayFabClientAPI_LoginWithIOSDeviceID");
static_assert(offsetof(PlayFabClientAPI_LoginWithIOSDeviceID, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithIOSDeviceID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithIOSDeviceID, onSuccess) == 0x000070, "Member 'PlayFabClientAPI_LoginWithIOSDeviceID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithIOSDeviceID, onFailure) == 0x000080, "Member 'PlayFabClientAPI_LoginWithIOSDeviceID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithIOSDeviceID, customData) == 0x000090, "Member 'PlayFabClientAPI_LoginWithIOSDeviceID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithIOSDeviceID, ReturnValue) == 0x000098, "Member 'PlayFabClientAPI_LoginWithIOSDeviceID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithKongregate
// 0x0090 (0x0090 - 0x0000)
struct PlayFabClientAPI_LoginWithKongregate final
{
public:
	struct FClientLoginWithKongregateRequest      Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithKongregate) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithKongregate");
static_assert(sizeof(PlayFabClientAPI_LoginWithKongregate) == 0x000090, "Wrong size on PlayFabClientAPI_LoginWithKongregate");
static_assert(offsetof(PlayFabClientAPI_LoginWithKongregate, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithKongregate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithKongregate, onSuccess) == 0x000060, "Member 'PlayFabClientAPI_LoginWithKongregate::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithKongregate, onFailure) == 0x000070, "Member 'PlayFabClientAPI_LoginWithKongregate::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithKongregate, customData) == 0x000080, "Member 'PlayFabClientAPI_LoginWithKongregate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithKongregate, ReturnValue) == 0x000088, "Member 'PlayFabClientAPI_LoginWithKongregate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithNintendoServiceAccount
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithNintendoServiceAccount final
{
public:
	struct FClientLoginWithNintendoServiceAccountRequest Request;                                    // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithNintendoServiceAccount");
static_assert(sizeof(PlayFabClientAPI_LoginWithNintendoServiceAccount) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithNintendoServiceAccount");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoServiceAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithNintendoServiceAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoServiceAccount, onSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithNintendoServiceAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoServiceAccount, onFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithNintendoServiceAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoServiceAccount, customData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithNintendoServiceAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoServiceAccount, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithNintendoServiceAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithNintendoSwitchDeviceId
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithNintendoSwitchDeviceId final
{
public:
	struct FClientLoginWithNintendoSwitchDeviceIdRequest Request;                                    // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithNintendoSwitchDeviceId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId, onSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithNintendoSwitchDeviceId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId, onFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithNintendoSwitchDeviceId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId, customData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithNintendoSwitchDeviceId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithNintendoSwitchDeviceId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithOpenIdConnect
// 0x0090 (0x0090 - 0x0000)
struct PlayFabClientAPI_LoginWithOpenIdConnect final
{
public:
	struct FClientLoginWithOpenIdConnectRequest   Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithOpenIdConnect) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithOpenIdConnect");
static_assert(sizeof(PlayFabClientAPI_LoginWithOpenIdConnect) == 0x000090, "Wrong size on PlayFabClientAPI_LoginWithOpenIdConnect");
static_assert(offsetof(PlayFabClientAPI_LoginWithOpenIdConnect, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithOpenIdConnect::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithOpenIdConnect, onSuccess) == 0x000060, "Member 'PlayFabClientAPI_LoginWithOpenIdConnect::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithOpenIdConnect, onFailure) == 0x000070, "Member 'PlayFabClientAPI_LoginWithOpenIdConnect::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithOpenIdConnect, customData) == 0x000080, "Member 'PlayFabClientAPI_LoginWithOpenIdConnect::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithOpenIdConnect, ReturnValue) == 0x000088, "Member 'PlayFabClientAPI_LoginWithOpenIdConnect::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithPlayFab
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_LoginWithPlayFab final
{
public:
	struct FClientLoginWithPlayFabRequest         Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithPlayFab) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithPlayFab");
static_assert(sizeof(PlayFabClientAPI_LoginWithPlayFab) == 0x000068, "Wrong size on PlayFabClientAPI_LoginWithPlayFab");
static_assert(offsetof(PlayFabClientAPI_LoginWithPlayFab, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithPlayFab::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPlayFab, onSuccess) == 0x000038, "Member 'PlayFabClientAPI_LoginWithPlayFab::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPlayFab, onFailure) == 0x000048, "Member 'PlayFabClientAPI_LoginWithPlayFab::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPlayFab, customData) == 0x000058, "Member 'PlayFabClientAPI_LoginWithPlayFab::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPlayFab, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_LoginWithPlayFab::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithPSN
// 0x0098 (0x0098 - 0x0000)
struct PlayFabClientAPI_LoginWithPSN final
{
public:
	struct FClientLoginWithPSNRequest             Request;                                           // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithPSN) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithPSN");
static_assert(sizeof(PlayFabClientAPI_LoginWithPSN) == 0x000098, "Wrong size on PlayFabClientAPI_LoginWithPSN");
static_assert(offsetof(PlayFabClientAPI_LoginWithPSN, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithPSN::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPSN, onSuccess) == 0x000068, "Member 'PlayFabClientAPI_LoginWithPSN::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPSN, onFailure) == 0x000078, "Member 'PlayFabClientAPI_LoginWithPSN::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPSN, customData) == 0x000088, "Member 'PlayFabClientAPI_LoginWithPSN::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPSN, ReturnValue) == 0x000090, "Member 'PlayFabClientAPI_LoginWithPSN::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithSteam
// 0x0088 (0x0088 - 0x0000)
struct PlayFabClientAPI_LoginWithSteam final
{
public:
	struct FClientLoginWithSteamRequest           Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithSteam) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithSteam");
static_assert(sizeof(PlayFabClientAPI_LoginWithSteam) == 0x000088, "Wrong size on PlayFabClientAPI_LoginWithSteam");
static_assert(offsetof(PlayFabClientAPI_LoginWithSteam, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithSteam::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithSteam, onSuccess) == 0x000058, "Member 'PlayFabClientAPI_LoginWithSteam::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithSteam, onFailure) == 0x000068, "Member 'PlayFabClientAPI_LoginWithSteam::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithSteam, customData) == 0x000078, "Member 'PlayFabClientAPI_LoginWithSteam::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithSteam, ReturnValue) == 0x000080, "Member 'PlayFabClientAPI_LoginWithSteam::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithTwitch
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithTwitch final
{
public:
	struct FClientLoginWithTwitchRequest          Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithTwitch) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithTwitch");
static_assert(sizeof(PlayFabClientAPI_LoginWithTwitch) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithTwitch");
static_assert(offsetof(PlayFabClientAPI_LoginWithTwitch, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithTwitch::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithTwitch, onSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithTwitch::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithTwitch, onFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithTwitch::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithTwitch, customData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithTwitch::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithTwitch, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithTwitch::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithXbox
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithXbox final
{
public:
	struct FClientLoginWithXboxRequest            Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> onSuccess;   // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithXbox) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithXbox");
static_assert(sizeof(PlayFabClientAPI_LoginWithXbox) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithXbox");
static_assert(offsetof(PlayFabClientAPI_LoginWithXbox, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithXbox::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithXbox, onSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithXbox::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithXbox, onFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithXbox::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithXbox, customData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithXbox::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithXbox, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithXbox::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.OpenTrade
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_OpenTrade final
{
public:
	struct FClientOpenTradeRequest                Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientOpenTradeResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_OpenTrade) == 0x000008, "Wrong alignment on PlayFabClientAPI_OpenTrade");
static_assert(sizeof(PlayFabClientAPI_OpenTrade) == 0x000068, "Wrong size on PlayFabClientAPI_OpenTrade");
static_assert(offsetof(PlayFabClientAPI_OpenTrade, Request) == 0x000000, "Member 'PlayFabClientAPI_OpenTrade::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_OpenTrade, onSuccess) == 0x000038, "Member 'PlayFabClientAPI_OpenTrade::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_OpenTrade, onFailure) == 0x000048, "Member 'PlayFabClientAPI_OpenTrade::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_OpenTrade, customData) == 0x000058, "Member 'PlayFabClientAPI_OpenTrade::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_OpenTrade, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_OpenTrade::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.PayForPurchase
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_PayForPurchase final
{
public:
	struct FClientPayForPurchaseRequest           Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientPayForPurchaseResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_PayForPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_PayForPurchase");
static_assert(sizeof(PlayFabClientAPI_PayForPurchase) == 0x000080, "Wrong size on PlayFabClientAPI_PayForPurchase");
static_assert(offsetof(PlayFabClientAPI_PayForPurchase, Request) == 0x000000, "Member 'PlayFabClientAPI_PayForPurchase::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PayForPurchase, onSuccess) == 0x000050, "Member 'PlayFabClientAPI_PayForPurchase::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PayForPurchase, onFailure) == 0x000060, "Member 'PlayFabClientAPI_PayForPurchase::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PayForPurchase, customData) == 0x000070, "Member 'PlayFabClientAPI_PayForPurchase::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PayForPurchase, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_PayForPurchase::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.PurchaseItem
// 0x0098 (0x0098 - 0x0000)
struct PlayFabClientAPI_PurchaseItem final
{
public:
	struct FClientPurchaseItemRequest             Request;                                           // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientPurchaseItemResult& Result, class UObject* customData)> onSuccess; // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_PurchaseItem) == 0x000008, "Wrong alignment on PlayFabClientAPI_PurchaseItem");
static_assert(sizeof(PlayFabClientAPI_PurchaseItem) == 0x000098, "Wrong size on PlayFabClientAPI_PurchaseItem");
static_assert(offsetof(PlayFabClientAPI_PurchaseItem, Request) == 0x000000, "Member 'PlayFabClientAPI_PurchaseItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PurchaseItem, onSuccess) == 0x000068, "Member 'PlayFabClientAPI_PurchaseItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PurchaseItem, onFailure) == 0x000078, "Member 'PlayFabClientAPI_PurchaseItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PurchaseItem, customData) == 0x000088, "Member 'PlayFabClientAPI_PurchaseItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PurchaseItem, ReturnValue) == 0x000090, "Member 'PlayFabClientAPI_PurchaseItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RedeemCoupon
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_RedeemCoupon final
{
public:
	struct FClientRedeemCouponRequest             Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRedeemCouponResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RedeemCoupon) == 0x000008, "Wrong alignment on PlayFabClientAPI_RedeemCoupon");
static_assert(sizeof(PlayFabClientAPI_RedeemCoupon) == 0x000070, "Wrong size on PlayFabClientAPI_RedeemCoupon");
static_assert(offsetof(PlayFabClientAPI_RedeemCoupon, Request) == 0x000000, "Member 'PlayFabClientAPI_RedeemCoupon::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RedeemCoupon, onSuccess) == 0x000040, "Member 'PlayFabClientAPI_RedeemCoupon::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RedeemCoupon, onFailure) == 0x000050, "Member 'PlayFabClientAPI_RedeemCoupon::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RedeemCoupon, customData) == 0x000060, "Member 'PlayFabClientAPI_RedeemCoupon::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RedeemCoupon, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_RedeemCoupon::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RefreshPSNAuthToken
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_RefreshPSNAuthToken final
{
public:
	struct FClientRefreshPSNAuthTokenRequest      Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RefreshPSNAuthToken) == 0x000008, "Wrong alignment on PlayFabClientAPI_RefreshPSNAuthToken");
static_assert(sizeof(PlayFabClientAPI_RefreshPSNAuthToken) == 0x000060, "Wrong size on PlayFabClientAPI_RefreshPSNAuthToken");
static_assert(offsetof(PlayFabClientAPI_RefreshPSNAuthToken, Request) == 0x000000, "Member 'PlayFabClientAPI_RefreshPSNAuthToken::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RefreshPSNAuthToken, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_RefreshPSNAuthToken::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RefreshPSNAuthToken, onFailure) == 0x000040, "Member 'PlayFabClientAPI_RefreshPSNAuthToken::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RefreshPSNAuthToken, customData) == 0x000050, "Member 'PlayFabClientAPI_RefreshPSNAuthToken::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RefreshPSNAuthToken, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_RefreshPSNAuthToken::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RegisterForIOSPushNotification
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_RegisterForIOSPushNotification final
{
public:
	struct FClientRegisterForIOSPushNotificationRequest Request;                                     // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRegisterForIOSPushNotificationResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RegisterForIOSPushNotification) == 0x000008, "Wrong alignment on PlayFabClientAPI_RegisterForIOSPushNotification");
static_assert(sizeof(PlayFabClientAPI_RegisterForIOSPushNotification) == 0x000060, "Wrong size on PlayFabClientAPI_RegisterForIOSPushNotification");
static_assert(offsetof(PlayFabClientAPI_RegisterForIOSPushNotification, Request) == 0x000000, "Member 'PlayFabClientAPI_RegisterForIOSPushNotification::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterForIOSPushNotification, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_RegisterForIOSPushNotification::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterForIOSPushNotification, onFailure) == 0x000040, "Member 'PlayFabClientAPI_RegisterForIOSPushNotification::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterForIOSPushNotification, customData) == 0x000050, "Member 'PlayFabClientAPI_RegisterForIOSPushNotification::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterForIOSPushNotification, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_RegisterForIOSPushNotification::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RegisterPlayFabUser
// 0x00B0 (0x00B0 - 0x0000)
struct PlayFabClientAPI_RegisterPlayFabUser final
{
public:
	struct FClientRegisterPlayFabUserRequest      Request;                                           // 0x0000(0x0080)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRegisterPlayFabUserResult& Result, class UObject* customData)> onSuccess; // 0x0080(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0090(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x00A0(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RegisterPlayFabUser) == 0x000008, "Wrong alignment on PlayFabClientAPI_RegisterPlayFabUser");
static_assert(sizeof(PlayFabClientAPI_RegisterPlayFabUser) == 0x0000B0, "Wrong size on PlayFabClientAPI_RegisterPlayFabUser");
static_assert(offsetof(PlayFabClientAPI_RegisterPlayFabUser, Request) == 0x000000, "Member 'PlayFabClientAPI_RegisterPlayFabUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterPlayFabUser, onSuccess) == 0x000080, "Member 'PlayFabClientAPI_RegisterPlayFabUser::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterPlayFabUser, onFailure) == 0x000090, "Member 'PlayFabClientAPI_RegisterPlayFabUser::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterPlayFabUser, customData) == 0x0000A0, "Member 'PlayFabClientAPI_RegisterPlayFabUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterPlayFabUser, ReturnValue) == 0x0000A8, "Member 'PlayFabClientAPI_RegisterPlayFabUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RemoveContactEmail
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_RemoveContactEmail final
{
public:
	struct FClientRemoveContactEmailRequest       Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRemoveContactEmailResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RemoveContactEmail) == 0x000008, "Wrong alignment on PlayFabClientAPI_RemoveContactEmail");
static_assert(sizeof(PlayFabClientAPI_RemoveContactEmail) == 0x000040, "Wrong size on PlayFabClientAPI_RemoveContactEmail");
static_assert(offsetof(PlayFabClientAPI_RemoveContactEmail, Request) == 0x000000, "Member 'PlayFabClientAPI_RemoveContactEmail::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveContactEmail, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_RemoveContactEmail::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveContactEmail, onFailure) == 0x000020, "Member 'PlayFabClientAPI_RemoveContactEmail::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveContactEmail, customData) == 0x000030, "Member 'PlayFabClientAPI_RemoveContactEmail::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveContactEmail, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_RemoveContactEmail::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RemoveFriend
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_RemoveFriend final
{
public:
	struct FClientRemoveFriendRequest             Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRemoveFriendResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RemoveFriend) == 0x000008, "Wrong alignment on PlayFabClientAPI_RemoveFriend");
static_assert(sizeof(PlayFabClientAPI_RemoveFriend) == 0x000048, "Wrong size on PlayFabClientAPI_RemoveFriend");
static_assert(offsetof(PlayFabClientAPI_RemoveFriend, Request) == 0x000000, "Member 'PlayFabClientAPI_RemoveFriend::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveFriend, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_RemoveFriend::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveFriend, onFailure) == 0x000028, "Member 'PlayFabClientAPI_RemoveFriend::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveFriend, customData) == 0x000038, "Member 'PlayFabClientAPI_RemoveFriend::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveFriend, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_RemoveFriend::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RemoveGenericID
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_RemoveGenericID final
{
public:
	struct FClientRemoveGenericIDRequest          Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRemoveGenericIDResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RemoveGenericID) == 0x000008, "Wrong alignment on PlayFabClientAPI_RemoveGenericID");
static_assert(sizeof(PlayFabClientAPI_RemoveGenericID) == 0x000040, "Wrong size on PlayFabClientAPI_RemoveGenericID");
static_assert(offsetof(PlayFabClientAPI_RemoveGenericID, Request) == 0x000000, "Member 'PlayFabClientAPI_RemoveGenericID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveGenericID, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_RemoveGenericID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveGenericID, onFailure) == 0x000020, "Member 'PlayFabClientAPI_RemoveGenericID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveGenericID, customData) == 0x000030, "Member 'PlayFabClientAPI_RemoveGenericID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveGenericID, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_RemoveGenericID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RemoveSharedGroupMembers
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_RemoveSharedGroupMembers final
{
public:
	struct FClientRemoveSharedGroupMembersRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRemoveSharedGroupMembersResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RemoveSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabClientAPI_RemoveSharedGroupMembers");
static_assert(sizeof(PlayFabClientAPI_RemoveSharedGroupMembers) == 0x000058, "Wrong size on PlayFabClientAPI_RemoveSharedGroupMembers");
static_assert(offsetof(PlayFabClientAPI_RemoveSharedGroupMembers, Request) == 0x000000, "Member 'PlayFabClientAPI_RemoveSharedGroupMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveSharedGroupMembers, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_RemoveSharedGroupMembers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveSharedGroupMembers, onFailure) == 0x000038, "Member 'PlayFabClientAPI_RemoveSharedGroupMembers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveSharedGroupMembers, customData) == 0x000048, "Member 'PlayFabClientAPI_RemoveSharedGroupMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveSharedGroupMembers, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_RemoveSharedGroupMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ReportAdActivity
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_ReportAdActivity final
{
public:
	struct FClientReportAdActivityRequest         Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientReportAdActivityResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ReportAdActivity) == 0x000008, "Wrong alignment on PlayFabClientAPI_ReportAdActivity");
static_assert(sizeof(PlayFabClientAPI_ReportAdActivity) == 0x000068, "Wrong size on PlayFabClientAPI_ReportAdActivity");
static_assert(offsetof(PlayFabClientAPI_ReportAdActivity, Request) == 0x000000, "Member 'PlayFabClientAPI_ReportAdActivity::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportAdActivity, onSuccess) == 0x000038, "Member 'PlayFabClientAPI_ReportAdActivity::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportAdActivity, onFailure) == 0x000048, "Member 'PlayFabClientAPI_ReportAdActivity::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportAdActivity, customData) == 0x000058, "Member 'PlayFabClientAPI_ReportAdActivity::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportAdActivity, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_ReportAdActivity::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ReportDeviceInfo
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_ReportDeviceInfo final
{
public:
	struct FClientDeviceInfoRequest               Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ReportDeviceInfo) == 0x000008, "Wrong alignment on PlayFabClientAPI_ReportDeviceInfo");
static_assert(sizeof(PlayFabClientAPI_ReportDeviceInfo) == 0x000040, "Wrong size on PlayFabClientAPI_ReportDeviceInfo");
static_assert(offsetof(PlayFabClientAPI_ReportDeviceInfo, Request) == 0x000000, "Member 'PlayFabClientAPI_ReportDeviceInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportDeviceInfo, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_ReportDeviceInfo::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportDeviceInfo, onFailure) == 0x000020, "Member 'PlayFabClientAPI_ReportDeviceInfo::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportDeviceInfo, customData) == 0x000030, "Member 'PlayFabClientAPI_ReportDeviceInfo::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportDeviceInfo, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_ReportDeviceInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ReportPlayer
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_ReportPlayer final
{
public:
	struct FClientReportPlayerClientRequest       Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientReportPlayerClientResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ReportPlayer) == 0x000008, "Wrong alignment on PlayFabClientAPI_ReportPlayer");
static_assert(sizeof(PlayFabClientAPI_ReportPlayer) == 0x000060, "Wrong size on PlayFabClientAPI_ReportPlayer");
static_assert(offsetof(PlayFabClientAPI_ReportPlayer, Request) == 0x000000, "Member 'PlayFabClientAPI_ReportPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportPlayer, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_ReportPlayer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportPlayer, onFailure) == 0x000040, "Member 'PlayFabClientAPI_ReportPlayer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportPlayer, customData) == 0x000050, "Member 'PlayFabClientAPI_ReportPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportPlayer, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_ReportPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RestoreIOSPurchases
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_RestoreIOSPurchases final
{
public:
	struct FClientRestoreIOSPurchasesRequest      Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRestoreIOSPurchasesResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RestoreIOSPurchases) == 0x000008, "Wrong alignment on PlayFabClientAPI_RestoreIOSPurchases");
static_assert(sizeof(PlayFabClientAPI_RestoreIOSPurchases) == 0x000060, "Wrong size on PlayFabClientAPI_RestoreIOSPurchases");
static_assert(offsetof(PlayFabClientAPI_RestoreIOSPurchases, Request) == 0x000000, "Member 'PlayFabClientAPI_RestoreIOSPurchases::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RestoreIOSPurchases, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_RestoreIOSPurchases::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RestoreIOSPurchases, onFailure) == 0x000040, "Member 'PlayFabClientAPI_RestoreIOSPurchases::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RestoreIOSPurchases, customData) == 0x000050, "Member 'PlayFabClientAPI_RestoreIOSPurchases::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RestoreIOSPurchases, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_RestoreIOSPurchases::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RewardAdActivity
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_RewardAdActivity final
{
public:
	struct FClientRewardAdActivityRequest         Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRewardAdActivityResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RewardAdActivity) == 0x000008, "Wrong alignment on PlayFabClientAPI_RewardAdActivity");
static_assert(sizeof(PlayFabClientAPI_RewardAdActivity) == 0x000060, "Wrong size on PlayFabClientAPI_RewardAdActivity");
static_assert(offsetof(PlayFabClientAPI_RewardAdActivity, Request) == 0x000000, "Member 'PlayFabClientAPI_RewardAdActivity::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RewardAdActivity, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_RewardAdActivity::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RewardAdActivity, onFailure) == 0x000040, "Member 'PlayFabClientAPI_RewardAdActivity::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RewardAdActivity, customData) == 0x000050, "Member 'PlayFabClientAPI_RewardAdActivity::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RewardAdActivity, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_RewardAdActivity::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.SendAccountRecoveryEmail
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_SendAccountRecoveryEmail final
{
public:
	struct FClientSendAccountRecoveryEmailRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientSendAccountRecoveryEmailResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_SendAccountRecoveryEmail) == 0x000008, "Wrong alignment on PlayFabClientAPI_SendAccountRecoveryEmail");
static_assert(sizeof(PlayFabClientAPI_SendAccountRecoveryEmail) == 0x000060, "Wrong size on PlayFabClientAPI_SendAccountRecoveryEmail");
static_assert(offsetof(PlayFabClientAPI_SendAccountRecoveryEmail, Request) == 0x000000, "Member 'PlayFabClientAPI_SendAccountRecoveryEmail::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SendAccountRecoveryEmail, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_SendAccountRecoveryEmail::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SendAccountRecoveryEmail, onFailure) == 0x000040, "Member 'PlayFabClientAPI_SendAccountRecoveryEmail::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SendAccountRecoveryEmail, customData) == 0x000050, "Member 'PlayFabClientAPI_SendAccountRecoveryEmail::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SendAccountRecoveryEmail, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_SendAccountRecoveryEmail::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.SetFriendTags
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_SetFriendTags final
{
public:
	struct FClientSetFriendTagsRequest            Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientSetFriendTagsResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_SetFriendTags) == 0x000008, "Wrong alignment on PlayFabClientAPI_SetFriendTags");
static_assert(sizeof(PlayFabClientAPI_SetFriendTags) == 0x000058, "Wrong size on PlayFabClientAPI_SetFriendTags");
static_assert(offsetof(PlayFabClientAPI_SetFriendTags, Request) == 0x000000, "Member 'PlayFabClientAPI_SetFriendTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetFriendTags, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_SetFriendTags::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetFriendTags, onFailure) == 0x000038, "Member 'PlayFabClientAPI_SetFriendTags::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetFriendTags, customData) == 0x000048, "Member 'PlayFabClientAPI_SetFriendTags::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetFriendTags, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_SetFriendTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.SetPlayerSecret
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_SetPlayerSecret final
{
public:
	struct FClientSetPlayerSecretRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientSetPlayerSecretResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_SetPlayerSecret) == 0x000008, "Wrong alignment on PlayFabClientAPI_SetPlayerSecret");
static_assert(sizeof(PlayFabClientAPI_SetPlayerSecret) == 0x000058, "Wrong size on PlayFabClientAPI_SetPlayerSecret");
static_assert(offsetof(PlayFabClientAPI_SetPlayerSecret, Request) == 0x000000, "Member 'PlayFabClientAPI_SetPlayerSecret::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetPlayerSecret, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_SetPlayerSecret::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetPlayerSecret, onFailure) == 0x000038, "Member 'PlayFabClientAPI_SetPlayerSecret::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetPlayerSecret, customData) == 0x000048, "Member 'PlayFabClientAPI_SetPlayerSecret::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetPlayerSecret, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_SetPlayerSecret::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.StartPurchase
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_StartPurchase final
{
public:
	struct FClientStartPurchaseRequest            Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientStartPurchaseResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_StartPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_StartPurchase");
static_assert(sizeof(PlayFabClientAPI_StartPurchase) == 0x000070, "Wrong size on PlayFabClientAPI_StartPurchase");
static_assert(offsetof(PlayFabClientAPI_StartPurchase, Request) == 0x000000, "Member 'PlayFabClientAPI_StartPurchase::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_StartPurchase, onSuccess) == 0x000040, "Member 'PlayFabClientAPI_StartPurchase::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_StartPurchase, onFailure) == 0x000050, "Member 'PlayFabClientAPI_StartPurchase::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_StartPurchase, customData) == 0x000060, "Member 'PlayFabClientAPI_StartPurchase::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_StartPurchase, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_StartPurchase::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.SubtractUserVirtualCurrency
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_SubtractUserVirtualCurrency final
{
public:
	struct FClientSubtractUserVirtualCurrencyRequest Request;                                        // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientModifyUserVirtualCurrencyResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_SubtractUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabClientAPI_SubtractUserVirtualCurrency");
static_assert(sizeof(PlayFabClientAPI_SubtractUserVirtualCurrency) == 0x000058, "Wrong size on PlayFabClientAPI_SubtractUserVirtualCurrency");
static_assert(offsetof(PlayFabClientAPI_SubtractUserVirtualCurrency, Request) == 0x000000, "Member 'PlayFabClientAPI_SubtractUserVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SubtractUserVirtualCurrency, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_SubtractUserVirtualCurrency::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SubtractUserVirtualCurrency, onFailure) == 0x000038, "Member 'PlayFabClientAPI_SubtractUserVirtualCurrency::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SubtractUserVirtualCurrency, customData) == 0x000048, "Member 'PlayFabClientAPI_SubtractUserVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SubtractUserVirtualCurrency, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_SubtractUserVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkAndroidDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkAndroidDeviceID final
{
public:
	struct FClientUnlinkAndroidDeviceIDRequest    Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkAndroidDeviceIDResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkAndroidDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkAndroidDeviceID");
static_assert(sizeof(PlayFabClientAPI_UnlinkAndroidDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkAndroidDeviceID");
static_assert(offsetof(PlayFabClientAPI_UnlinkAndroidDeviceID, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkAndroidDeviceID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkAndroidDeviceID, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkAndroidDeviceID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkAndroidDeviceID, onFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkAndroidDeviceID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkAndroidDeviceID, customData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkAndroidDeviceID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkAndroidDeviceID, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkAndroidDeviceID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkApple
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkApple final
{
public:
	struct FClientUnlinkAppleRequest              Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkApple) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkApple");
static_assert(sizeof(PlayFabClientAPI_UnlinkApple) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkApple");
static_assert(offsetof(PlayFabClientAPI_UnlinkApple, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkApple::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkApple, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkApple::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkApple, onFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkApple::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkApple, customData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkApple::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkApple, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkApple::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkCustomID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkCustomID final
{
public:
	struct FClientUnlinkCustomIDRequest           Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkCustomIDResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkCustomID) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkCustomID");
static_assert(sizeof(PlayFabClientAPI_UnlinkCustomID) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkCustomID");
static_assert(offsetof(PlayFabClientAPI_UnlinkCustomID, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkCustomID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkCustomID, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkCustomID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkCustomID, onFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkCustomID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkCustomID, customData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkCustomID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkCustomID, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkCustomID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkFacebookAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkFacebookAccount final
{
public:
	struct FClientUnlinkFacebookAccountRequest    Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkFacebookAccountResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkFacebookAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkFacebookAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkFacebookAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkFacebookAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkFacebookAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookAccount, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkFacebookAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookAccount, onFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkFacebookAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookAccount, customData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkFacebookAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkFacebookAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkFacebookInstantGamesId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkFacebookInstantGamesId final
{
public:
	struct FClientUnlinkFacebookInstantGamesIdRequest Request;                                       // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkFacebookInstantGamesIdResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkFacebookInstantGamesId) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkFacebookInstantGamesId");
static_assert(sizeof(PlayFabClientAPI_UnlinkFacebookInstantGamesId) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkFacebookInstantGamesId");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookInstantGamesId, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkFacebookInstantGamesId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookInstantGamesId, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkFacebookInstantGamesId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookInstantGamesId, onFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkFacebookInstantGamesId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookInstantGamesId, customData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkFacebookInstantGamesId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookInstantGamesId, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkFacebookInstantGamesId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkGameCenterAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkGameCenterAccount final
{
public:
	struct FClientUnlinkGameCenterAccountRequest  Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkGameCenterAccountResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkGameCenterAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkGameCenterAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkGameCenterAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkGameCenterAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkGameCenterAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkGameCenterAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGameCenterAccount, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkGameCenterAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGameCenterAccount, onFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkGameCenterAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGameCenterAccount, customData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkGameCenterAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGameCenterAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkGameCenterAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkGoogleAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkGoogleAccount final
{
public:
	struct FClientUnlinkGoogleAccountRequest      Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkGoogleAccountResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkGoogleAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkGoogleAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkGoogleAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkGoogleAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkGoogleAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkGoogleAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGoogleAccount, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkGoogleAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGoogleAccount, onFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkGoogleAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGoogleAccount, customData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkGoogleAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGoogleAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkGoogleAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkGooglePlayGamesServicesAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount final
{
public:
	struct FClientUnlinkGooglePlayGamesServicesAccountRequest Request;                               // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkGooglePlayGamesServicesAccountResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount, onFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount, customData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkIOSDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkIOSDeviceID final
{
public:
	struct FClientUnlinkIOSDeviceIDRequest        Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkIOSDeviceIDResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkIOSDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkIOSDeviceID");
static_assert(sizeof(PlayFabClientAPI_UnlinkIOSDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkIOSDeviceID");
static_assert(offsetof(PlayFabClientAPI_UnlinkIOSDeviceID, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkIOSDeviceID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkIOSDeviceID, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkIOSDeviceID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkIOSDeviceID, onFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkIOSDeviceID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkIOSDeviceID, customData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkIOSDeviceID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkIOSDeviceID, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkIOSDeviceID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkKongregate
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkKongregate final
{
public:
	struct FClientUnlinkKongregateAccountRequest  Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkKongregateAccountResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkKongregate) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkKongregate");
static_assert(sizeof(PlayFabClientAPI_UnlinkKongregate) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkKongregate");
static_assert(offsetof(PlayFabClientAPI_UnlinkKongregate, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkKongregate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkKongregate, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkKongregate::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkKongregate, onFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkKongregate::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkKongregate, customData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkKongregate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkKongregate, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkKongregate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkNintendoServiceAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkNintendoServiceAccount final
{
public:
	struct FClientUnlinkNintendoServiceAccountRequest Request;                                       // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkNintendoServiceAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkNintendoServiceAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkNintendoServiceAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoServiceAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkNintendoServiceAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoServiceAccount, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkNintendoServiceAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoServiceAccount, onFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkNintendoServiceAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoServiceAccount, customData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkNintendoServiceAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoServiceAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkNintendoServiceAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkNintendoSwitchDeviceId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkNintendoSwitchDeviceId final
{
public:
	struct FClientUnlinkNintendoSwitchDeviceIdRequest Request;                                       // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkNintendoSwitchDeviceIdResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkNintendoSwitchDeviceId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkNintendoSwitchDeviceId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId, onFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkNintendoSwitchDeviceId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId, customData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkNintendoSwitchDeviceId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkNintendoSwitchDeviceId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkOpenIdConnect
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkOpenIdConnect final
{
public:
	struct FClientUnlinkOpenIdConnectRequest      Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkOpenIdConnect) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkOpenIdConnect");
static_assert(sizeof(PlayFabClientAPI_UnlinkOpenIdConnect) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkOpenIdConnect");
static_assert(offsetof(PlayFabClientAPI_UnlinkOpenIdConnect, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkOpenIdConnect::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkOpenIdConnect, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkOpenIdConnect::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkOpenIdConnect, onFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkOpenIdConnect::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkOpenIdConnect, customData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkOpenIdConnect::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkOpenIdConnect, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkOpenIdConnect::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkPSNAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkPSNAccount final
{
public:
	struct FClientUnlinkPSNAccountRequest         Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkPSNAccountResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkPSNAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkPSNAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkPSNAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkPSNAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkPSNAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkPSNAccount, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkPSNAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkPSNAccount, onFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkPSNAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkPSNAccount, customData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkPSNAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkPSNAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkPSNAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkSteamAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkSteamAccount final
{
public:
	struct FClientUnlinkSteamAccountRequest       Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkSteamAccountResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkSteamAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkSteamAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkSteamAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkSteamAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkSteamAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkSteamAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkSteamAccount, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkSteamAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkSteamAccount, onFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkSteamAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkSteamAccount, customData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkSteamAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkSteamAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkSteamAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkTwitch
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkTwitch final
{
public:
	struct FClientUnlinkTwitchAccountRequest      Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkTwitchAccountResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkTwitch) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkTwitch");
static_assert(sizeof(PlayFabClientAPI_UnlinkTwitch) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkTwitch");
static_assert(offsetof(PlayFabClientAPI_UnlinkTwitch, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkTwitch::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkTwitch, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkTwitch::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkTwitch, onFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkTwitch::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkTwitch, customData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkTwitch::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkTwitch, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkTwitch::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkXboxAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkXboxAccount final
{
public:
	struct FClientUnlinkXboxAccountRequest        Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkXboxAccountResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkXboxAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkXboxAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkXboxAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkXboxAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkXboxAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkXboxAccount, onSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkXboxAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkXboxAccount, onFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkXboxAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkXboxAccount, customData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkXboxAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkXboxAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkXboxAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlockContainerInstance
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_UnlockContainerInstance final
{
public:
	struct FClientUnlockContainerInstanceRequest  Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlockContainerItemResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlockContainerInstance) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlockContainerInstance");
static_assert(sizeof(PlayFabClientAPI_UnlockContainerInstance) == 0x000080, "Wrong size on PlayFabClientAPI_UnlockContainerInstance");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerInstance, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlockContainerInstance::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerInstance, onSuccess) == 0x000050, "Member 'PlayFabClientAPI_UnlockContainerInstance::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerInstance, onFailure) == 0x000060, "Member 'PlayFabClientAPI_UnlockContainerInstance::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerInstance, customData) == 0x000070, "Member 'PlayFabClientAPI_UnlockContainerInstance::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerInstance, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_UnlockContainerInstance::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlockContainerItem
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_UnlockContainerItem final
{
public:
	struct FClientUnlockContainerItemRequest      Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlockContainerItemResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlockContainerItem) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlockContainerItem");
static_assert(sizeof(PlayFabClientAPI_UnlockContainerItem) == 0x000070, "Wrong size on PlayFabClientAPI_UnlockContainerItem");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerItem, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlockContainerItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerItem, onSuccess) == 0x000040, "Member 'PlayFabClientAPI_UnlockContainerItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerItem, onFailure) == 0x000050, "Member 'PlayFabClientAPI_UnlockContainerItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerItem, customData) == 0x000060, "Member 'PlayFabClientAPI_UnlockContainerItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerItem, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_UnlockContainerItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateAvatarUrl
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_UpdateAvatarUrl final
{
public:
	struct FClientUpdateAvatarUrlRequest          Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateAvatarUrl) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateAvatarUrl");
static_assert(sizeof(PlayFabClientAPI_UpdateAvatarUrl) == 0x000048, "Wrong size on PlayFabClientAPI_UpdateAvatarUrl");
static_assert(offsetof(PlayFabClientAPI_UpdateAvatarUrl, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateAvatarUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateAvatarUrl, onSuccess) == 0x000018, "Member 'PlayFabClientAPI_UpdateAvatarUrl::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateAvatarUrl, onFailure) == 0x000028, "Member 'PlayFabClientAPI_UpdateAvatarUrl::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateAvatarUrl, customData) == 0x000038, "Member 'PlayFabClientAPI_UpdateAvatarUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateAvatarUrl, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_UpdateAvatarUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateCharacterData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_UpdateCharacterData final
{
public:
	struct FClientUpdateCharacterDataRequest      Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdateCharacterDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateCharacterData) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateCharacterData");
static_assert(sizeof(PlayFabClientAPI_UpdateCharacterData) == 0x000070, "Wrong size on PlayFabClientAPI_UpdateCharacterData");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterData, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateCharacterData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterData, onSuccess) == 0x000040, "Member 'PlayFabClientAPI_UpdateCharacterData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterData, onFailure) == 0x000050, "Member 'PlayFabClientAPI_UpdateCharacterData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterData, customData) == 0x000060, "Member 'PlayFabClientAPI_UpdateCharacterData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterData, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_UpdateCharacterData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateCharacterStatistics
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_UpdateCharacterStatistics final
{
public:
	struct FClientUpdateCharacterStatisticsRequest Request;                                          // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdateCharacterStatisticsResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateCharacterStatistics");
static_assert(sizeof(PlayFabClientAPI_UpdateCharacterStatistics) == 0x000058, "Wrong size on PlayFabClientAPI_UpdateCharacterStatistics");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterStatistics, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateCharacterStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterStatistics, onSuccess) == 0x000028, "Member 'PlayFabClientAPI_UpdateCharacterStatistics::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterStatistics, onFailure) == 0x000038, "Member 'PlayFabClientAPI_UpdateCharacterStatistics::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterStatistics, customData) == 0x000048, "Member 'PlayFabClientAPI_UpdateCharacterStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterStatistics, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_UpdateCharacterStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdatePlayerStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UpdatePlayerStatistics final
{
public:
	struct FClientUpdatePlayerStatisticsRequest   Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdatePlayerStatisticsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdatePlayerStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdatePlayerStatistics");
static_assert(sizeof(PlayFabClientAPI_UpdatePlayerStatistics) == 0x000050, "Wrong size on PlayFabClientAPI_UpdatePlayerStatistics");
static_assert(offsetof(PlayFabClientAPI_UpdatePlayerStatistics, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdatePlayerStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdatePlayerStatistics, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_UpdatePlayerStatistics::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdatePlayerStatistics, onFailure) == 0x000030, "Member 'PlayFabClientAPI_UpdatePlayerStatistics::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdatePlayerStatistics, customData) == 0x000040, "Member 'PlayFabClientAPI_UpdatePlayerStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdatePlayerStatistics, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UpdatePlayerStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateSharedGroupData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_UpdateSharedGroupData final
{
public:
	struct FClientUpdateSharedGroupDataRequest    Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdateSharedGroupDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateSharedGroupData) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateSharedGroupData");
static_assert(sizeof(PlayFabClientAPI_UpdateSharedGroupData) == 0x000070, "Wrong size on PlayFabClientAPI_UpdateSharedGroupData");
static_assert(offsetof(PlayFabClientAPI_UpdateSharedGroupData, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateSharedGroupData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateSharedGroupData, onSuccess) == 0x000040, "Member 'PlayFabClientAPI_UpdateSharedGroupData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateSharedGroupData, onFailure) == 0x000050, "Member 'PlayFabClientAPI_UpdateSharedGroupData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateSharedGroupData, customData) == 0x000060, "Member 'PlayFabClientAPI_UpdateSharedGroupData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateSharedGroupData, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_UpdateSharedGroupData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateUserData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_UpdateUserData final
{
public:
	struct FClientUpdateUserDataRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateUserData) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateUserData");
static_assert(sizeof(PlayFabClientAPI_UpdateUserData) == 0x000060, "Wrong size on PlayFabClientAPI_UpdateUserData");
static_assert(offsetof(PlayFabClientAPI_UpdateUserData, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateUserData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserData, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_UpdateUserData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserData, onFailure) == 0x000040, "Member 'PlayFabClientAPI_UpdateUserData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserData, customData) == 0x000050, "Member 'PlayFabClientAPI_UpdateUserData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_UpdateUserData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateUserPublisherData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_UpdateUserPublisherData final
{
public:
	struct FClientUpdateUserDataRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateUserPublisherData) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateUserPublisherData");
static_assert(sizeof(PlayFabClientAPI_UpdateUserPublisherData) == 0x000060, "Wrong size on PlayFabClientAPI_UpdateUserPublisherData");
static_assert(offsetof(PlayFabClientAPI_UpdateUserPublisherData, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateUserPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserPublisherData, onSuccess) == 0x000030, "Member 'PlayFabClientAPI_UpdateUserPublisherData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserPublisherData, onFailure) == 0x000040, "Member 'PlayFabClientAPI_UpdateUserPublisherData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserPublisherData, customData) == 0x000050, "Member 'PlayFabClientAPI_UpdateUserPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserPublisherData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_UpdateUserPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateUserTitleDisplayName
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UpdateUserTitleDisplayName final
{
public:
	struct FClientUpdateUserTitleDisplayNameRequest Request;                                         // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdateUserTitleDisplayNameResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateUserTitleDisplayName) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateUserTitleDisplayName");
static_assert(sizeof(PlayFabClientAPI_UpdateUserTitleDisplayName) == 0x000050, "Wrong size on PlayFabClientAPI_UpdateUserTitleDisplayName");
static_assert(offsetof(PlayFabClientAPI_UpdateUserTitleDisplayName, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateUserTitleDisplayName::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserTitleDisplayName, onSuccess) == 0x000020, "Member 'PlayFabClientAPI_UpdateUserTitleDisplayName::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserTitleDisplayName, onFailure) == 0x000030, "Member 'PlayFabClientAPI_UpdateUserTitleDisplayName::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserTitleDisplayName, customData) == 0x000040, "Member 'PlayFabClientAPI_UpdateUserTitleDisplayName::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserTitleDisplayName, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UpdateUserTitleDisplayName::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ValidateAmazonIAPReceipt
// 0x0088 (0x0088 - 0x0000)
struct PlayFabClientAPI_ValidateAmazonIAPReceipt final
{
public:
	struct FClientValidateAmazonReceiptRequest    Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientValidateAmazonReceiptResult& Result, class UObject* customData)> onSuccess; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ValidateAmazonIAPReceipt) == 0x000008, "Wrong alignment on PlayFabClientAPI_ValidateAmazonIAPReceipt");
static_assert(sizeof(PlayFabClientAPI_ValidateAmazonIAPReceipt) == 0x000088, "Wrong size on PlayFabClientAPI_ValidateAmazonIAPReceipt");
static_assert(offsetof(PlayFabClientAPI_ValidateAmazonIAPReceipt, Request) == 0x000000, "Member 'PlayFabClientAPI_ValidateAmazonIAPReceipt::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateAmazonIAPReceipt, onSuccess) == 0x000058, "Member 'PlayFabClientAPI_ValidateAmazonIAPReceipt::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateAmazonIAPReceipt, onFailure) == 0x000068, "Member 'PlayFabClientAPI_ValidateAmazonIAPReceipt::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateAmazonIAPReceipt, customData) == 0x000078, "Member 'PlayFabClientAPI_ValidateAmazonIAPReceipt::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateAmazonIAPReceipt, ReturnValue) == 0x000080, "Member 'PlayFabClientAPI_ValidateAmazonIAPReceipt::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ValidateGooglePlayPurchase
// 0x0088 (0x0088 - 0x0000)
struct PlayFabClientAPI_ValidateGooglePlayPurchase final
{
public:
	struct FClientValidateGooglePlayPurchaseRequest Request;                                         // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientValidateGooglePlayPurchaseResult& Result, class UObject* customData)> onSuccess; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ValidateGooglePlayPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_ValidateGooglePlayPurchase");
static_assert(sizeof(PlayFabClientAPI_ValidateGooglePlayPurchase) == 0x000088, "Wrong size on PlayFabClientAPI_ValidateGooglePlayPurchase");
static_assert(offsetof(PlayFabClientAPI_ValidateGooglePlayPurchase, Request) == 0x000000, "Member 'PlayFabClientAPI_ValidateGooglePlayPurchase::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateGooglePlayPurchase, onSuccess) == 0x000058, "Member 'PlayFabClientAPI_ValidateGooglePlayPurchase::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateGooglePlayPurchase, onFailure) == 0x000068, "Member 'PlayFabClientAPI_ValidateGooglePlayPurchase::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateGooglePlayPurchase, customData) == 0x000078, "Member 'PlayFabClientAPI_ValidateGooglePlayPurchase::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateGooglePlayPurchase, ReturnValue) == 0x000080, "Member 'PlayFabClientAPI_ValidateGooglePlayPurchase::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ValidateIOSReceipt
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_ValidateIOSReceipt final
{
public:
	struct FClientValidateIOSReceiptRequest       Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientValidateIOSReceiptResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ValidateIOSReceipt) == 0x000008, "Wrong alignment on PlayFabClientAPI_ValidateIOSReceipt");
static_assert(sizeof(PlayFabClientAPI_ValidateIOSReceipt) == 0x000078, "Wrong size on PlayFabClientAPI_ValidateIOSReceipt");
static_assert(offsetof(PlayFabClientAPI_ValidateIOSReceipt, Request) == 0x000000, "Member 'PlayFabClientAPI_ValidateIOSReceipt::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateIOSReceipt, onSuccess) == 0x000048, "Member 'PlayFabClientAPI_ValidateIOSReceipt::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateIOSReceipt, onFailure) == 0x000058, "Member 'PlayFabClientAPI_ValidateIOSReceipt::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateIOSReceipt, customData) == 0x000068, "Member 'PlayFabClientAPI_ValidateIOSReceipt::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateIOSReceipt, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_ValidateIOSReceipt::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ValidateWindowsStoreReceipt
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_ValidateWindowsStoreReceipt final
{
public:
	struct FClientValidateWindowsReceiptRequest   Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientValidateWindowsReceiptResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ValidateWindowsStoreReceipt) == 0x000008, "Wrong alignment on PlayFabClientAPI_ValidateWindowsStoreReceipt");
static_assert(sizeof(PlayFabClientAPI_ValidateWindowsStoreReceipt) == 0x000078, "Wrong size on PlayFabClientAPI_ValidateWindowsStoreReceipt");
static_assert(offsetof(PlayFabClientAPI_ValidateWindowsStoreReceipt, Request) == 0x000000, "Member 'PlayFabClientAPI_ValidateWindowsStoreReceipt::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateWindowsStoreReceipt, onSuccess) == 0x000048, "Member 'PlayFabClientAPI_ValidateWindowsStoreReceipt::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateWindowsStoreReceipt, onFailure) == 0x000058, "Member 'PlayFabClientAPI_ValidateWindowsStoreReceipt::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateWindowsStoreReceipt, customData) == 0x000068, "Member 'PlayFabClientAPI_ValidateWindowsStoreReceipt::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateWindowsStoreReceipt, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_ValidateWindowsStoreReceipt::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.WriteCharacterEvent
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_WriteCharacterEvent final
{
public:
	struct FClientWriteClientCharacterEventRequest Request;                                          // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_WriteCharacterEvent) == 0x000008, "Wrong alignment on PlayFabClientAPI_WriteCharacterEvent");
static_assert(sizeof(PlayFabClientAPI_WriteCharacterEvent) == 0x000078, "Wrong size on PlayFabClientAPI_WriteCharacterEvent");
static_assert(offsetof(PlayFabClientAPI_WriteCharacterEvent, Request) == 0x000000, "Member 'PlayFabClientAPI_WriteCharacterEvent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteCharacterEvent, onSuccess) == 0x000048, "Member 'PlayFabClientAPI_WriteCharacterEvent::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteCharacterEvent, onFailure) == 0x000058, "Member 'PlayFabClientAPI_WriteCharacterEvent::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteCharacterEvent, customData) == 0x000068, "Member 'PlayFabClientAPI_WriteCharacterEvent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteCharacterEvent, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_WriteCharacterEvent::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.WritePlayerEvent
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_WritePlayerEvent final
{
public:
	struct FClientWriteClientPlayerEventRequest   Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_WritePlayerEvent) == 0x000008, "Wrong alignment on PlayFabClientAPI_WritePlayerEvent");
static_assert(sizeof(PlayFabClientAPI_WritePlayerEvent) == 0x000068, "Wrong size on PlayFabClientAPI_WritePlayerEvent");
static_assert(offsetof(PlayFabClientAPI_WritePlayerEvent, Request) == 0x000000, "Member 'PlayFabClientAPI_WritePlayerEvent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WritePlayerEvent, onSuccess) == 0x000038, "Member 'PlayFabClientAPI_WritePlayerEvent::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WritePlayerEvent, onFailure) == 0x000048, "Member 'PlayFabClientAPI_WritePlayerEvent::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WritePlayerEvent, customData) == 0x000058, "Member 'PlayFabClientAPI_WritePlayerEvent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WritePlayerEvent, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_WritePlayerEvent::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.WriteTitleEvent
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_WriteTitleEvent final
{
public:
	struct FClientWriteTitleEventRequest          Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_WriteTitleEvent) == 0x000008, "Wrong alignment on PlayFabClientAPI_WriteTitleEvent");
static_assert(sizeof(PlayFabClientAPI_WriteTitleEvent) == 0x000068, "Wrong size on PlayFabClientAPI_WriteTitleEvent");
static_assert(offsetof(PlayFabClientAPI_WriteTitleEvent, Request) == 0x000000, "Member 'PlayFabClientAPI_WriteTitleEvent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteTitleEvent, onSuccess) == 0x000038, "Member 'PlayFabClientAPI_WriteTitleEvent::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteTitleEvent, onFailure) == 0x000048, "Member 'PlayFabClientAPI_WriteTitleEvent::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteTitleEvent, customData) == 0x000058, "Member 'PlayFabClientAPI_WriteTitleEvent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteTitleEvent, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_WriteTitleEvent::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAcceptTrade
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAcceptTrade final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAcceptTrade) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAcceptTrade");
static_assert(sizeof(PlayFabClientAPI_HelperAcceptTrade) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAcceptTrade");
static_assert(offsetof(PlayFabClientAPI_HelperAcceptTrade, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAcceptTrade::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAcceptTrade, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperAcceptTrade::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAcceptTrade, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAcceptTrade::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAddFriend
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAddFriend final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAddFriend) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAddFriend");
static_assert(sizeof(PlayFabClientAPI_HelperAddFriend) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAddFriend");
static_assert(offsetof(PlayFabClientAPI_HelperAddFriend, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAddFriend::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddFriend, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperAddFriend::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddFriend, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAddFriend::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAddGenericID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAddGenericID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAddGenericID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAddGenericID");
static_assert(sizeof(PlayFabClientAPI_HelperAddGenericID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAddGenericID");
static_assert(offsetof(PlayFabClientAPI_HelperAddGenericID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAddGenericID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddGenericID, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperAddGenericID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddGenericID, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAddGenericID::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAddOrUpdateContactEmail
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAddOrUpdateContactEmail final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAddOrUpdateContactEmail) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAddOrUpdateContactEmail");
static_assert(sizeof(PlayFabClientAPI_HelperAddOrUpdateContactEmail) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAddOrUpdateContactEmail");
static_assert(offsetof(PlayFabClientAPI_HelperAddOrUpdateContactEmail, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAddOrUpdateContactEmail::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddOrUpdateContactEmail, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperAddOrUpdateContactEmail::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddOrUpdateContactEmail, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAddOrUpdateContactEmail::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAddSharedGroupMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAddSharedGroupMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAddSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAddSharedGroupMembers");
static_assert(sizeof(PlayFabClientAPI_HelperAddSharedGroupMembers) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAddSharedGroupMembers");
static_assert(offsetof(PlayFabClientAPI_HelperAddSharedGroupMembers, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAddSharedGroupMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddSharedGroupMembers, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperAddSharedGroupMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddSharedGroupMembers, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAddSharedGroupMembers::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAddUsernamePassword
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAddUsernamePassword final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAddUsernamePassword) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAddUsernamePassword");
static_assert(sizeof(PlayFabClientAPI_HelperAddUsernamePassword) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAddUsernamePassword");
static_assert(offsetof(PlayFabClientAPI_HelperAddUsernamePassword, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAddUsernamePassword::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddUsernamePassword, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperAddUsernamePassword::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddUsernamePassword, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAddUsernamePassword::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAddUserVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAddUserVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAddUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAddUserVirtualCurrency");
static_assert(sizeof(PlayFabClientAPI_HelperAddUserVirtualCurrency) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAddUserVirtualCurrency");
static_assert(offsetof(PlayFabClientAPI_HelperAddUserVirtualCurrency, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAddUserVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddUserVirtualCurrency, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperAddUserVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddUserVirtualCurrency, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAddUserVirtualCurrency::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAndroidDevicePushNotificationRegistration
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration");
static_assert(sizeof(PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration");
static_assert(offsetof(PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAttributeInstall
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAttributeInstall final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAttributeInstall) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAttributeInstall");
static_assert(sizeof(PlayFabClientAPI_HelperAttributeInstall) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAttributeInstall");
static_assert(offsetof(PlayFabClientAPI_HelperAttributeInstall, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAttributeInstall::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAttributeInstall, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperAttributeInstall::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAttributeInstall, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAttributeInstall::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperCancelTrade
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperCancelTrade final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperCancelTrade) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperCancelTrade");
static_assert(sizeof(PlayFabClientAPI_HelperCancelTrade) == 0x000050, "Wrong size on PlayFabClientAPI_HelperCancelTrade");
static_assert(offsetof(PlayFabClientAPI_HelperCancelTrade, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperCancelTrade::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperCancelTrade, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperCancelTrade::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperCancelTrade, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperCancelTrade::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperConfirmPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperConfirmPurchase final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperConfirmPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperConfirmPurchase");
static_assert(sizeof(PlayFabClientAPI_HelperConfirmPurchase) == 0x000050, "Wrong size on PlayFabClientAPI_HelperConfirmPurchase");
static_assert(offsetof(PlayFabClientAPI_HelperConfirmPurchase, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperConfirmPurchase::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConfirmPurchase, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperConfirmPurchase::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConfirmPurchase, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperConfirmPurchase::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperConsumeItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperConsumeItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperConsumeItem) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperConsumeItem");
static_assert(sizeof(PlayFabClientAPI_HelperConsumeItem) == 0x000050, "Wrong size on PlayFabClientAPI_HelperConsumeItem");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeItem, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperConsumeItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeItem, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperConsumeItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeItem, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperConsumeItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperConsumeMicrosoftStoreEntitlements
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements");
static_assert(sizeof(PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements) == 0x000050, "Wrong size on PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperConsumePS5Entitlements
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperConsumePS5Entitlements final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperConsumePS5Entitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperConsumePS5Entitlements");
static_assert(sizeof(PlayFabClientAPI_HelperConsumePS5Entitlements) == 0x000050, "Wrong size on PlayFabClientAPI_HelperConsumePS5Entitlements");
static_assert(offsetof(PlayFabClientAPI_HelperConsumePS5Entitlements, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperConsumePS5Entitlements::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumePS5Entitlements, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperConsumePS5Entitlements::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumePS5Entitlements, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperConsumePS5Entitlements::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperConsumePSNEntitlements
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperConsumePSNEntitlements final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperConsumePSNEntitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperConsumePSNEntitlements");
static_assert(sizeof(PlayFabClientAPI_HelperConsumePSNEntitlements) == 0x000050, "Wrong size on PlayFabClientAPI_HelperConsumePSNEntitlements");
static_assert(offsetof(PlayFabClientAPI_HelperConsumePSNEntitlements, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperConsumePSNEntitlements::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumePSNEntitlements, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperConsumePSNEntitlements::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumePSNEntitlements, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperConsumePSNEntitlements::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperConsumeXboxEntitlements
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperConsumeXboxEntitlements final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperConsumeXboxEntitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperConsumeXboxEntitlements");
static_assert(sizeof(PlayFabClientAPI_HelperConsumeXboxEntitlements) == 0x000050, "Wrong size on PlayFabClientAPI_HelperConsumeXboxEntitlements");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeXboxEntitlements, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperConsumeXboxEntitlements::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeXboxEntitlements, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperConsumeXboxEntitlements::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeXboxEntitlements, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperConsumeXboxEntitlements::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperCreateSharedGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperCreateSharedGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperCreateSharedGroup) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperCreateSharedGroup");
static_assert(sizeof(PlayFabClientAPI_HelperCreateSharedGroup) == 0x000050, "Wrong size on PlayFabClientAPI_HelperCreateSharedGroup");
static_assert(offsetof(PlayFabClientAPI_HelperCreateSharedGroup, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperCreateSharedGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperCreateSharedGroup, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperCreateSharedGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperCreateSharedGroup, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperCreateSharedGroup::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperExecuteCloudScript
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperExecuteCloudScript final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperExecuteCloudScript) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperExecuteCloudScript");
static_assert(sizeof(PlayFabClientAPI_HelperExecuteCloudScript) == 0x000050, "Wrong size on PlayFabClientAPI_HelperExecuteCloudScript");
static_assert(offsetof(PlayFabClientAPI_HelperExecuteCloudScript, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperExecuteCloudScript::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperExecuteCloudScript, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperExecuteCloudScript::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperExecuteCloudScript, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperExecuteCloudScript::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetAccountInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetAccountInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetAccountInfo) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetAccountInfo");
static_assert(sizeof(PlayFabClientAPI_HelperGetAccountInfo) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetAccountInfo");
static_assert(offsetof(PlayFabClientAPI_HelperGetAccountInfo, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetAccountInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetAccountInfo, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetAccountInfo::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetAccountInfo, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetAccountInfo::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetAdPlacements
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetAdPlacements final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetAdPlacements) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetAdPlacements");
static_assert(sizeof(PlayFabClientAPI_HelperGetAdPlacements) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetAdPlacements");
static_assert(offsetof(PlayFabClientAPI_HelperGetAdPlacements, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetAdPlacements::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetAdPlacements, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetAdPlacements::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetAdPlacements, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetAdPlacements::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetAllUsersCharacters
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetAllUsersCharacters final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetAllUsersCharacters) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetAllUsersCharacters");
static_assert(sizeof(PlayFabClientAPI_HelperGetAllUsersCharacters) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetAllUsersCharacters");
static_assert(offsetof(PlayFabClientAPI_HelperGetAllUsersCharacters, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetAllUsersCharacters::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetAllUsersCharacters, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetAllUsersCharacters::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetAllUsersCharacters, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetAllUsersCharacters::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCatalogItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCatalogItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCatalogItems) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCatalogItems");
static_assert(sizeof(PlayFabClientAPI_HelperGetCatalogItems) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCatalogItems");
static_assert(offsetof(PlayFabClientAPI_HelperGetCatalogItems, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCatalogItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCatalogItems, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCatalogItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCatalogItems, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCatalogItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCharacterData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCharacterData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCharacterData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCharacterData");
static_assert(sizeof(PlayFabClientAPI_HelperGetCharacterData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCharacterData");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCharacterData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCharacterData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCharacterData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCharacterInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCharacterInventory final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCharacterInventory) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCharacterInventory");
static_assert(sizeof(PlayFabClientAPI_HelperGetCharacterInventory) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCharacterInventory");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterInventory, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCharacterInventory::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterInventory, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCharacterInventory::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterInventory, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCharacterInventory::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCharacterLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCharacterLeaderboard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCharacterLeaderboard) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCharacterLeaderboard");
static_assert(sizeof(PlayFabClientAPI_HelperGetCharacterLeaderboard) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCharacterLeaderboard");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterLeaderboard, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCharacterLeaderboard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterLeaderboard, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCharacterLeaderboard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterLeaderboard, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCharacterLeaderboard::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCharacterReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCharacterReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCharacterReadOnlyData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCharacterReadOnlyData");
static_assert(sizeof(PlayFabClientAPI_HelperGetCharacterReadOnlyData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCharacterReadOnlyData");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterReadOnlyData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCharacterReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterReadOnlyData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCharacterReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterReadOnlyData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCharacterReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCharacterStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCharacterStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCharacterStatistics");
static_assert(sizeof(PlayFabClientAPI_HelperGetCharacterStatistics) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCharacterStatistics");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterStatistics, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCharacterStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterStatistics, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCharacterStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterStatistics, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCharacterStatistics::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetContentDownloadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetContentDownloadUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetContentDownloadUrl) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetContentDownloadUrl");
static_assert(sizeof(PlayFabClientAPI_HelperGetContentDownloadUrl) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetContentDownloadUrl");
static_assert(offsetof(PlayFabClientAPI_HelperGetContentDownloadUrl, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetContentDownloadUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetContentDownloadUrl, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetContentDownloadUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetContentDownloadUrl, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetContentDownloadUrl::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetFriendLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetFriendLeaderboard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetFriendLeaderboard) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetFriendLeaderboard");
static_assert(sizeof(PlayFabClientAPI_HelperGetFriendLeaderboard) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetFriendLeaderboard");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendLeaderboard, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetFriendLeaderboard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendLeaderboard, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetFriendLeaderboard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendLeaderboard, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetFriendLeaderboard::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetFriendLeaderboardAroundPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer");
static_assert(sizeof(PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetFriendsList
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetFriendsList final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetFriendsList) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetFriendsList");
static_assert(sizeof(PlayFabClientAPI_HelperGetFriendsList) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetFriendsList");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendsList, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetFriendsList::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendsList, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetFriendsList::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendsList, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetFriendsList::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetLeaderboard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetLeaderboard) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetLeaderboard");
static_assert(sizeof(PlayFabClientAPI_HelperGetLeaderboard) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetLeaderboard");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboard, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetLeaderboard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboard, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetLeaderboard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboard, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetLeaderboard::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetLeaderboardAroundCharacter
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetLeaderboardAroundCharacter final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetLeaderboardAroundCharacter) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetLeaderboardAroundCharacter");
static_assert(sizeof(PlayFabClientAPI_HelperGetLeaderboardAroundCharacter) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetLeaderboardAroundCharacter");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardAroundCharacter, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetLeaderboardAroundCharacter::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardAroundCharacter, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetLeaderboardAroundCharacter::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardAroundCharacter, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetLeaderboardAroundCharacter::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetLeaderboardAroundPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetLeaderboardAroundPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetLeaderboardAroundPlayer) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetLeaderboardAroundPlayer");
static_assert(sizeof(PlayFabClientAPI_HelperGetLeaderboardAroundPlayer) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetLeaderboardAroundPlayer");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardAroundPlayer, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetLeaderboardAroundPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardAroundPlayer, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetLeaderboardAroundPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardAroundPlayer, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetLeaderboardAroundPlayer::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetLeaderboardForUserCharacters
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetLeaderboardForUserCharacters final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetLeaderboardForUserCharacters) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetLeaderboardForUserCharacters");
static_assert(sizeof(PlayFabClientAPI_HelperGetLeaderboardForUserCharacters) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetLeaderboardForUserCharacters");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardForUserCharacters, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetLeaderboardForUserCharacters::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardForUserCharacters, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetLeaderboardForUserCharacters::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardForUserCharacters, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetLeaderboardForUserCharacters::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPaymentToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPaymentToken final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPaymentToken) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPaymentToken");
static_assert(sizeof(PlayFabClientAPI_HelperGetPaymentToken) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPaymentToken");
static_assert(offsetof(PlayFabClientAPI_HelperGetPaymentToken, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPaymentToken::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPaymentToken, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPaymentToken::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPaymentToken, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPaymentToken::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPhotonAuthenticationToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPhotonAuthenticationToken final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPhotonAuthenticationToken) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPhotonAuthenticationToken");
static_assert(sizeof(PlayFabClientAPI_HelperGetPhotonAuthenticationToken) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPhotonAuthenticationToken");
static_assert(offsetof(PlayFabClientAPI_HelperGetPhotonAuthenticationToken, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPhotonAuthenticationToken::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPhotonAuthenticationToken, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPhotonAuthenticationToken::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPhotonAuthenticationToken, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPhotonAuthenticationToken::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerCombinedInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerCombinedInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerCombinedInfo) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerCombinedInfo");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerCombinedInfo) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerCombinedInfo");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerCombinedInfo, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerCombinedInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerCombinedInfo, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerCombinedInfo::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerCombinedInfo, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerCombinedInfo::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerProfile
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerProfile final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerProfile) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerProfile");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerProfile) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerProfile");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerProfile, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerProfile::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerProfile, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerProfile::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerProfile, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerProfile::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerSegments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerSegments) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerSegments");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerSegments) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerSegments");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerSegments, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerSegments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerSegments, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerSegments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerSegments, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerSegments::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerStatistics");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerStatistics) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerStatistics");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerStatistics, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerStatistics, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerStatistics, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerStatistics::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerStatisticVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerStatisticVersions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerStatisticVersions) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerStatisticVersions");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerStatisticVersions) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerStatisticVersions");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerStatisticVersions, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerStatisticVersions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerStatisticVersions, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerStatisticVersions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerStatisticVersions, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerStatisticVersions::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerTags) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerTags");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerTags) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerTags");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerTags, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerTags, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerTags::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerTags, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerTags::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerTrades
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerTrades final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerTrades) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerTrades");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerTrades) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerTrades");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerTrades, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerTrades::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerTrades, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerTrades::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerTrades, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerTrades::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromFacebookIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromFacebookInstantGamesIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGameCenterIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGenericIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGoogleIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromKongregateIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromNintendoServiceAccountIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromNintendoSwitchDeviceIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromPSNAccountIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromPSNOnlineIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromPSNOnlineIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNOnlineIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromPSNOnlineIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNOnlineIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromPSNOnlineIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNOnlineIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromPSNOnlineIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNOnlineIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromPSNOnlineIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNOnlineIDs, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromPSNOnlineIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromSteamIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromTwitchIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromXboxLiveIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPublisherData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPublisherData");
static_assert(sizeof(PlayFabClientAPI_HelperGetPublisherData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPublisherData");
static_assert(offsetof(PlayFabClientAPI_HelperGetPublisherData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPublisherData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPublisherData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPublisherData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPurchase final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPurchase");
static_assert(sizeof(PlayFabClientAPI_HelperGetPurchase) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPurchase");
static_assert(offsetof(PlayFabClientAPI_HelperGetPurchase, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPurchase::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPurchase, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPurchase::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPurchase, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPurchase::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetSharedGroupData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetSharedGroupData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetSharedGroupData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetSharedGroupData");
static_assert(sizeof(PlayFabClientAPI_HelperGetSharedGroupData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetSharedGroupData");
static_assert(offsetof(PlayFabClientAPI_HelperGetSharedGroupData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetSharedGroupData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetSharedGroupData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetSharedGroupData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetSharedGroupData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetSharedGroupData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetStoreItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetStoreItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetStoreItems) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetStoreItems");
static_assert(sizeof(PlayFabClientAPI_HelperGetStoreItems) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetStoreItems");
static_assert(offsetof(PlayFabClientAPI_HelperGetStoreItems, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetStoreItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetStoreItems, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetStoreItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetStoreItems, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetStoreItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetTime
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetTime final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetTime) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetTime");
static_assert(sizeof(PlayFabClientAPI_HelperGetTime) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetTime");
static_assert(offsetof(PlayFabClientAPI_HelperGetTime, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetTime::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTime, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetTime::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTime, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetTime::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetTitleData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetTitleData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetTitleData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetTitleData");
static_assert(sizeof(PlayFabClientAPI_HelperGetTitleData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetTitleData");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitleData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetTitleData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitleData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetTitleData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitleData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetTitleData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetTitleNews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetTitleNews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetTitleNews) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetTitleNews");
static_assert(sizeof(PlayFabClientAPI_HelperGetTitleNews) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetTitleNews");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitleNews, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetTitleNews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitleNews, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetTitleNews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitleNews, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetTitleNews::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetTitlePublicKey
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetTitlePublicKey final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetTitlePublicKey) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetTitlePublicKey");
static_assert(sizeof(PlayFabClientAPI_HelperGetTitlePublicKey) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetTitlePublicKey");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitlePublicKey, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetTitlePublicKey::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitlePublicKey, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetTitlePublicKey::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitlePublicKey, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetTitlePublicKey::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetTradeStatus
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetTradeStatus final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetTradeStatus) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetTradeStatus");
static_assert(sizeof(PlayFabClientAPI_HelperGetTradeStatus) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetTradeStatus");
static_assert(offsetof(PlayFabClientAPI_HelperGetTradeStatus, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetTradeStatus::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTradeStatus, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetTradeStatus::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTradeStatus, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetTradeStatus::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetUserData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetUserData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetUserData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetUserData");
static_assert(sizeof(PlayFabClientAPI_HelperGetUserData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetUserData");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetUserData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetUserData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetUserData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetUserInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetUserInventory final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetUserInventory) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetUserInventory");
static_assert(sizeof(PlayFabClientAPI_HelperGetUserInventory) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetUserInventory");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserInventory, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetUserInventory::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserInventory, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetUserInventory::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserInventory, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetUserInventory::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetUserPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetUserPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetUserPublisherData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetUserPublisherData");
static_assert(sizeof(PlayFabClientAPI_HelperGetUserPublisherData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetUserPublisherData");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserPublisherData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetUserPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserPublisherData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetUserPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserPublisherData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetUserPublisherData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetUserPublisherReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetUserPublisherReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabClientAPI_HelperGetUserPublisherReadOnlyData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserPublisherReadOnlyData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetUserPublisherReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserPublisherReadOnlyData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetUserPublisherReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserPublisherReadOnlyData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetUserPublisherReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetUserReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetUserReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetUserReadOnlyData");
static_assert(sizeof(PlayFabClientAPI_HelperGetUserReadOnlyData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetUserReadOnlyData");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserReadOnlyData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetUserReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserReadOnlyData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetUserReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserReadOnlyData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetUserReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGrantCharacterToUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGrantCharacterToUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGrantCharacterToUser) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGrantCharacterToUser");
static_assert(sizeof(PlayFabClientAPI_HelperGrantCharacterToUser) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGrantCharacterToUser");
static_assert(offsetof(PlayFabClientAPI_HelperGrantCharacterToUser, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGrantCharacterToUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGrantCharacterToUser, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperGrantCharacterToUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGrantCharacterToUser, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGrantCharacterToUser::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkAndroidDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkAndroidDeviceID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkAndroidDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkAndroidDeviceID");
static_assert(sizeof(PlayFabClientAPI_HelperLinkAndroidDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkAndroidDeviceID");
static_assert(offsetof(PlayFabClientAPI_HelperLinkAndroidDeviceID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkAndroidDeviceID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkAndroidDeviceID, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkAndroidDeviceID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkAndroidDeviceID, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkAndroidDeviceID::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkApple
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkApple final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkApple) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkApple");
static_assert(sizeof(PlayFabClientAPI_HelperLinkApple) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkApple");
static_assert(offsetof(PlayFabClientAPI_HelperLinkApple, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkApple::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkApple, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkApple::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkApple, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkApple::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkCustomID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkCustomID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkCustomID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkCustomID");
static_assert(sizeof(PlayFabClientAPI_HelperLinkCustomID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkCustomID");
static_assert(offsetof(PlayFabClientAPI_HelperLinkCustomID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkCustomID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkCustomID, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkCustomID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkCustomID, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkCustomID::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkFacebookAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkFacebookAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkFacebookAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkFacebookAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkFacebookAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkFacebookAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkFacebookAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkFacebookAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkFacebookAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkFacebookAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkFacebookAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkFacebookAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkFacebookInstantGamesId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkFacebookInstantGamesId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkFacebookInstantGamesId) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkFacebookInstantGamesId");
static_assert(sizeof(PlayFabClientAPI_HelperLinkFacebookInstantGamesId) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkFacebookInstantGamesId");
static_assert(offsetof(PlayFabClientAPI_HelperLinkFacebookInstantGamesId, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkFacebookInstantGamesId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkFacebookInstantGamesId, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkFacebookInstantGamesId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkFacebookInstantGamesId, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkFacebookInstantGamesId::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkGameCenterAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkGameCenterAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkGameCenterAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkGameCenterAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkGameCenterAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkGameCenterAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGameCenterAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkGameCenterAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGameCenterAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkGameCenterAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGameCenterAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkGameCenterAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkGoogleAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkGoogleAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkGoogleAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkGoogleAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkGoogleAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkGoogleAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGoogleAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkGoogleAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGoogleAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkGoogleAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGoogleAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkGoogleAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkGooglePlayGamesServicesAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkIOSDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkIOSDeviceID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkIOSDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkIOSDeviceID");
static_assert(sizeof(PlayFabClientAPI_HelperLinkIOSDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkIOSDeviceID");
static_assert(offsetof(PlayFabClientAPI_HelperLinkIOSDeviceID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkIOSDeviceID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkIOSDeviceID, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkIOSDeviceID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkIOSDeviceID, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkIOSDeviceID::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkKongregate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkKongregate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkKongregate) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkKongregate");
static_assert(sizeof(PlayFabClientAPI_HelperLinkKongregate) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkKongregate");
static_assert(offsetof(PlayFabClientAPI_HelperLinkKongregate, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkKongregate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkKongregate, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkKongregate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkKongregate, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkKongregate::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkNintendoServiceAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkNintendoServiceAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkNintendoServiceAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkNintendoServiceAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkNintendoServiceAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkNintendoServiceAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkNintendoServiceAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkNintendoServiceAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkNintendoServiceAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkNintendoServiceAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkNintendoServiceAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkNintendoSwitchDeviceId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkOpenIdConnect
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkOpenIdConnect final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkOpenIdConnect) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkOpenIdConnect");
static_assert(sizeof(PlayFabClientAPI_HelperLinkOpenIdConnect) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkOpenIdConnect");
static_assert(offsetof(PlayFabClientAPI_HelperLinkOpenIdConnect, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkOpenIdConnect::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkOpenIdConnect, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkOpenIdConnect::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkOpenIdConnect, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkOpenIdConnect::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkPSNAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkPSNAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkPSNAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkPSNAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkPSNAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkPSNAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkPSNAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkPSNAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkPSNAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkPSNAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkPSNAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkSteamAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkSteamAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkSteamAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkSteamAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkSteamAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkSteamAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkSteamAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkSteamAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkSteamAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkSteamAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkSteamAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkSteamAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkTwitch
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkTwitch final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkTwitch) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkTwitch");
static_assert(sizeof(PlayFabClientAPI_HelperLinkTwitch) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkTwitch");
static_assert(offsetof(PlayFabClientAPI_HelperLinkTwitch, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkTwitch::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkTwitch, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkTwitch::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkTwitch, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkTwitch::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkXboxAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkXboxAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkXboxAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkXboxAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkXboxAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkXboxAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkXboxAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkXboxAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkXboxAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkXboxAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkXboxAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithAndroidDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithAndroidDeviceID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithAndroidDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithAndroidDeviceID");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithAndroidDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithAndroidDeviceID");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithAndroidDeviceID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithAndroidDeviceID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithAndroidDeviceID, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithAndroidDeviceID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithAndroidDeviceID, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithAndroidDeviceID::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithApple
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithApple final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithApple) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithApple");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithApple) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithApple");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithApple, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithApple::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithApple, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithApple::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithApple, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithApple::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithCustomID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithCustomID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithCustomID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithCustomID");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithCustomID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithCustomID");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithCustomID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithCustomID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithCustomID, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithCustomID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithCustomID, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithCustomID::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithEmailAddress
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithEmailAddress final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithEmailAddress) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithEmailAddress");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithEmailAddress) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithEmailAddress");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithEmailAddress, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithEmailAddress::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithEmailAddress, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithEmailAddress::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithEmailAddress, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithEmailAddress::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithFacebook
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithFacebook final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithFacebook) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithFacebook");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithFacebook) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithFacebook");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithFacebook, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithFacebook::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithFacebook, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithFacebook::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithFacebook, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithFacebook::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithFacebookInstantGamesId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithGameCenter
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithGameCenter final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithGameCenter) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithGameCenter");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithGameCenter) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithGameCenter");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGameCenter, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithGameCenter::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGameCenter, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithGameCenter::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGameCenter, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithGameCenter::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithGoogleAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithGoogleAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithGoogleAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithGoogleAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithGoogleAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithGoogleAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGoogleAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithGoogleAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGoogleAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithGoogleAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGoogleAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithGoogleAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithGooglePlayGamesServices
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithIOSDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithIOSDeviceID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithIOSDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithIOSDeviceID");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithIOSDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithIOSDeviceID");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithIOSDeviceID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithIOSDeviceID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithIOSDeviceID, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithIOSDeviceID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithIOSDeviceID, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithIOSDeviceID::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithKongregate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithKongregate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithKongregate) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithKongregate");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithKongregate) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithKongregate");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithKongregate, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithKongregate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithKongregate, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithKongregate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithKongregate, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithKongregate::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithNintendoServiceAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithNintendoServiceAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithNintendoServiceAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithNintendoServiceAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithNintendoServiceAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithNintendoServiceAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithNintendoServiceAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithNintendoServiceAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithNintendoServiceAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithNintendoServiceAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithNintendoServiceAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithNintendoSwitchDeviceId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithOpenIdConnect
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithOpenIdConnect final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithOpenIdConnect) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithOpenIdConnect");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithOpenIdConnect) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithOpenIdConnect");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithOpenIdConnect, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithOpenIdConnect::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithOpenIdConnect, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithOpenIdConnect::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithOpenIdConnect, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithOpenIdConnect::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithPlayFab
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithPlayFab final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithPlayFab) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithPlayFab");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithPlayFab) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithPlayFab");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithPlayFab, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithPlayFab::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithPlayFab, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithPlayFab::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithPlayFab, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithPlayFab::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithPSN
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithPSN final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithPSN) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithPSN");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithPSN) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithPSN");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithPSN, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithPSN::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithPSN, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithPSN::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithPSN, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithPSN::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithSteam
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithSteam final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithSteam) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithSteam");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithSteam) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithSteam");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithSteam, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithSteam::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithSteam, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithSteam::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithSteam, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithSteam::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithTwitch
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithTwitch final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithTwitch) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithTwitch");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithTwitch) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithTwitch");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithTwitch, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithTwitch::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithTwitch, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithTwitch::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithTwitch, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithTwitch::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithXbox
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithXbox final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithXbox) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithXbox");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithXbox) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithXbox");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithXbox, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithXbox::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithXbox, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithXbox::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithXbox, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithXbox::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperOpenTrade
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperOpenTrade final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperOpenTrade) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperOpenTrade");
static_assert(sizeof(PlayFabClientAPI_HelperOpenTrade) == 0x000050, "Wrong size on PlayFabClientAPI_HelperOpenTrade");
static_assert(offsetof(PlayFabClientAPI_HelperOpenTrade, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperOpenTrade::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperOpenTrade, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperOpenTrade::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperOpenTrade, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperOpenTrade::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperPayForPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperPayForPurchase final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperPayForPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperPayForPurchase");
static_assert(sizeof(PlayFabClientAPI_HelperPayForPurchase) == 0x000050, "Wrong size on PlayFabClientAPI_HelperPayForPurchase");
static_assert(offsetof(PlayFabClientAPI_HelperPayForPurchase, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperPayForPurchase::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperPayForPurchase, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperPayForPurchase::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperPayForPurchase, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperPayForPurchase::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperPurchaseItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperPurchaseItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperPurchaseItem) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperPurchaseItem");
static_assert(sizeof(PlayFabClientAPI_HelperPurchaseItem) == 0x000050, "Wrong size on PlayFabClientAPI_HelperPurchaseItem");
static_assert(offsetof(PlayFabClientAPI_HelperPurchaseItem, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperPurchaseItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperPurchaseItem, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperPurchaseItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperPurchaseItem, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperPurchaseItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRedeemCoupon
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRedeemCoupon final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRedeemCoupon) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRedeemCoupon");
static_assert(sizeof(PlayFabClientAPI_HelperRedeemCoupon) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRedeemCoupon");
static_assert(offsetof(PlayFabClientAPI_HelperRedeemCoupon, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRedeemCoupon::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRedeemCoupon, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperRedeemCoupon::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRedeemCoupon, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRedeemCoupon::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRefreshPSNAuthToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRefreshPSNAuthToken final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRefreshPSNAuthToken) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRefreshPSNAuthToken");
static_assert(sizeof(PlayFabClientAPI_HelperRefreshPSNAuthToken) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRefreshPSNAuthToken");
static_assert(offsetof(PlayFabClientAPI_HelperRefreshPSNAuthToken, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRefreshPSNAuthToken::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRefreshPSNAuthToken, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperRefreshPSNAuthToken::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRefreshPSNAuthToken, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRefreshPSNAuthToken::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRegisterForIOSPushNotification
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRegisterForIOSPushNotification final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRegisterForIOSPushNotification) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRegisterForIOSPushNotification");
static_assert(sizeof(PlayFabClientAPI_HelperRegisterForIOSPushNotification) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRegisterForIOSPushNotification");
static_assert(offsetof(PlayFabClientAPI_HelperRegisterForIOSPushNotification, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRegisterForIOSPushNotification::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRegisterForIOSPushNotification, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperRegisterForIOSPushNotification::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRegisterForIOSPushNotification, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRegisterForIOSPushNotification::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRegisterPlayFabUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRegisterPlayFabUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRegisterPlayFabUser) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRegisterPlayFabUser");
static_assert(sizeof(PlayFabClientAPI_HelperRegisterPlayFabUser) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRegisterPlayFabUser");
static_assert(offsetof(PlayFabClientAPI_HelperRegisterPlayFabUser, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRegisterPlayFabUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRegisterPlayFabUser, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperRegisterPlayFabUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRegisterPlayFabUser, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRegisterPlayFabUser::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRemoveContactEmail
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRemoveContactEmail final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRemoveContactEmail) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRemoveContactEmail");
static_assert(sizeof(PlayFabClientAPI_HelperRemoveContactEmail) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRemoveContactEmail");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveContactEmail, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRemoveContactEmail::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveContactEmail, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperRemoveContactEmail::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveContactEmail, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRemoveContactEmail::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRemoveFriend
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRemoveFriend final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRemoveFriend) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRemoveFriend");
static_assert(sizeof(PlayFabClientAPI_HelperRemoveFriend) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRemoveFriend");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveFriend, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRemoveFriend::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveFriend, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperRemoveFriend::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveFriend, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRemoveFriend::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRemoveGenericID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRemoveGenericID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRemoveGenericID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRemoveGenericID");
static_assert(sizeof(PlayFabClientAPI_HelperRemoveGenericID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRemoveGenericID");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveGenericID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRemoveGenericID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveGenericID, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperRemoveGenericID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveGenericID, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRemoveGenericID::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRemoveSharedGroupMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRemoveSharedGroupMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRemoveSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRemoveSharedGroupMembers");
static_assert(sizeof(PlayFabClientAPI_HelperRemoveSharedGroupMembers) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRemoveSharedGroupMembers");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveSharedGroupMembers, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRemoveSharedGroupMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveSharedGroupMembers, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperRemoveSharedGroupMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveSharedGroupMembers, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRemoveSharedGroupMembers::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperReportAdActivity
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperReportAdActivity final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperReportAdActivity) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperReportAdActivity");
static_assert(sizeof(PlayFabClientAPI_HelperReportAdActivity) == 0x000050, "Wrong size on PlayFabClientAPI_HelperReportAdActivity");
static_assert(offsetof(PlayFabClientAPI_HelperReportAdActivity, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperReportAdActivity::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperReportAdActivity, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperReportAdActivity::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperReportAdActivity, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperReportAdActivity::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperReportDeviceInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperReportDeviceInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperReportDeviceInfo) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperReportDeviceInfo");
static_assert(sizeof(PlayFabClientAPI_HelperReportDeviceInfo) == 0x000050, "Wrong size on PlayFabClientAPI_HelperReportDeviceInfo");
static_assert(offsetof(PlayFabClientAPI_HelperReportDeviceInfo, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperReportDeviceInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperReportDeviceInfo, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperReportDeviceInfo::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperReportDeviceInfo, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperReportDeviceInfo::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperReportPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperReportPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperReportPlayer) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperReportPlayer");
static_assert(sizeof(PlayFabClientAPI_HelperReportPlayer) == 0x000050, "Wrong size on PlayFabClientAPI_HelperReportPlayer");
static_assert(offsetof(PlayFabClientAPI_HelperReportPlayer, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperReportPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperReportPlayer, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperReportPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperReportPlayer, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperReportPlayer::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRestoreIOSPurchases
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRestoreIOSPurchases final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRestoreIOSPurchases) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRestoreIOSPurchases");
static_assert(sizeof(PlayFabClientAPI_HelperRestoreIOSPurchases) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRestoreIOSPurchases");
static_assert(offsetof(PlayFabClientAPI_HelperRestoreIOSPurchases, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRestoreIOSPurchases::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRestoreIOSPurchases, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperRestoreIOSPurchases::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRestoreIOSPurchases, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRestoreIOSPurchases::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRewardAdActivity
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRewardAdActivity final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRewardAdActivity) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRewardAdActivity");
static_assert(sizeof(PlayFabClientAPI_HelperRewardAdActivity) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRewardAdActivity");
static_assert(offsetof(PlayFabClientAPI_HelperRewardAdActivity, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRewardAdActivity::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRewardAdActivity, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperRewardAdActivity::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRewardAdActivity, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRewardAdActivity::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperSendAccountRecoveryEmail
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperSendAccountRecoveryEmail final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperSendAccountRecoveryEmail) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperSendAccountRecoveryEmail");
static_assert(sizeof(PlayFabClientAPI_HelperSendAccountRecoveryEmail) == 0x000050, "Wrong size on PlayFabClientAPI_HelperSendAccountRecoveryEmail");
static_assert(offsetof(PlayFabClientAPI_HelperSendAccountRecoveryEmail, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperSendAccountRecoveryEmail::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSendAccountRecoveryEmail, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperSendAccountRecoveryEmail::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSendAccountRecoveryEmail, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperSendAccountRecoveryEmail::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperSetFriendTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperSetFriendTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperSetFriendTags) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperSetFriendTags");
static_assert(sizeof(PlayFabClientAPI_HelperSetFriendTags) == 0x000050, "Wrong size on PlayFabClientAPI_HelperSetFriendTags");
static_assert(offsetof(PlayFabClientAPI_HelperSetFriendTags, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperSetFriendTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSetFriendTags, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperSetFriendTags::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSetFriendTags, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperSetFriendTags::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperSetPlayerSecret
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperSetPlayerSecret final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperSetPlayerSecret) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperSetPlayerSecret");
static_assert(sizeof(PlayFabClientAPI_HelperSetPlayerSecret) == 0x000050, "Wrong size on PlayFabClientAPI_HelperSetPlayerSecret");
static_assert(offsetof(PlayFabClientAPI_HelperSetPlayerSecret, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperSetPlayerSecret::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSetPlayerSecret, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperSetPlayerSecret::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSetPlayerSecret, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperSetPlayerSecret::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperStartPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperStartPurchase final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperStartPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperStartPurchase");
static_assert(sizeof(PlayFabClientAPI_HelperStartPurchase) == 0x000050, "Wrong size on PlayFabClientAPI_HelperStartPurchase");
static_assert(offsetof(PlayFabClientAPI_HelperStartPurchase, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperStartPurchase::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperStartPurchase, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperStartPurchase::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperStartPurchase, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperStartPurchase::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperSubtractUserVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperSubtractUserVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperSubtractUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperSubtractUserVirtualCurrency");
static_assert(sizeof(PlayFabClientAPI_HelperSubtractUserVirtualCurrency) == 0x000050, "Wrong size on PlayFabClientAPI_HelperSubtractUserVirtualCurrency");
static_assert(offsetof(PlayFabClientAPI_HelperSubtractUserVirtualCurrency, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperSubtractUserVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSubtractUserVirtualCurrency, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperSubtractUserVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSubtractUserVirtualCurrency, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperSubtractUserVirtualCurrency::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkAndroidDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkAndroidDeviceID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkAndroidDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkAndroidDeviceID");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkAndroidDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkAndroidDeviceID");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkAndroidDeviceID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkAndroidDeviceID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkAndroidDeviceID, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkAndroidDeviceID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkAndroidDeviceID, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkAndroidDeviceID::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkApple
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkApple final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkApple) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkApple");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkApple) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkApple");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkApple, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkApple::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkApple, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkApple::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkApple, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkApple::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkCustomID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkCustomID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkCustomID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkCustomID");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkCustomID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkCustomID");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkCustomID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkCustomID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkCustomID, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkCustomID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkCustomID, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkCustomID::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkFacebookAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkFacebookAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkFacebookAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkFacebookAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkFacebookAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkFacebookAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkFacebookAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkFacebookAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkFacebookAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkFacebookAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkFacebookAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkFacebookAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkFacebookInstantGamesId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkGameCenterAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkGameCenterAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkGameCenterAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkGameCenterAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkGameCenterAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkGameCenterAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGameCenterAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkGameCenterAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGameCenterAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkGameCenterAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGameCenterAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkGameCenterAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkGoogleAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkGoogleAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkGoogleAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkGoogleAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkGoogleAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkGoogleAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGoogleAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkGoogleAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGoogleAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkGoogleAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGoogleAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkGoogleAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkGooglePlayGamesServicesAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkIOSDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkIOSDeviceID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkIOSDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkIOSDeviceID");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkIOSDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkIOSDeviceID");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkIOSDeviceID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkIOSDeviceID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkIOSDeviceID, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkIOSDeviceID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkIOSDeviceID, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkIOSDeviceID::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkKongregate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkKongregate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkKongregate) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkKongregate");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkKongregate) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkKongregate");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkKongregate, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkKongregate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkKongregate, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkKongregate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkKongregate, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkKongregate::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkNintendoServiceAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkNintendoServiceAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkNintendoServiceAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkNintendoServiceAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkNintendoServiceAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkNintendoServiceAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkNintendoServiceAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkNintendoServiceAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkNintendoServiceAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkNintendoServiceAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkNintendoServiceAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkNintendoSwitchDeviceId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkOpenIdConnect
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkOpenIdConnect final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkOpenIdConnect) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkOpenIdConnect");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkOpenIdConnect) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkOpenIdConnect");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkOpenIdConnect, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkOpenIdConnect::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkOpenIdConnect, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkOpenIdConnect::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkOpenIdConnect, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkOpenIdConnect::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkPSNAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkPSNAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkPSNAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkPSNAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkPSNAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkPSNAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkPSNAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkPSNAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkPSNAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkPSNAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkPSNAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkSteamAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkSteamAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkSteamAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkSteamAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkSteamAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkSteamAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkSteamAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkSteamAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkSteamAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkSteamAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkSteamAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkSteamAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkTwitch
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkTwitch final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkTwitch) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkTwitch");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkTwitch) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkTwitch");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkTwitch, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkTwitch::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkTwitch, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkTwitch::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkTwitch, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkTwitch::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkXboxAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkXboxAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkXboxAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkXboxAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkXboxAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkXboxAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkXboxAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkXboxAccount, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkXboxAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkXboxAccount, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkXboxAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlockContainerInstance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlockContainerInstance final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlockContainerInstance) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlockContainerInstance");
static_assert(sizeof(PlayFabClientAPI_HelperUnlockContainerInstance) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlockContainerInstance");
static_assert(offsetof(PlayFabClientAPI_HelperUnlockContainerInstance, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlockContainerInstance::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlockContainerInstance, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlockContainerInstance::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlockContainerInstance, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlockContainerInstance::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlockContainerItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlockContainerItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlockContainerItem) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlockContainerItem");
static_assert(sizeof(PlayFabClientAPI_HelperUnlockContainerItem) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlockContainerItem");
static_assert(offsetof(PlayFabClientAPI_HelperUnlockContainerItem, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlockContainerItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlockContainerItem, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlockContainerItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlockContainerItem, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlockContainerItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateAvatarUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateAvatarUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateAvatarUrl) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateAvatarUrl");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateAvatarUrl) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateAvatarUrl");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateAvatarUrl, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateAvatarUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateAvatarUrl, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateAvatarUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateAvatarUrl, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateAvatarUrl::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateCharacterData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateCharacterData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateCharacterData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateCharacterData");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateCharacterData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateCharacterData");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateCharacterData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateCharacterData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateCharacterData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateCharacterData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateCharacterData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateCharacterData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateCharacterStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateCharacterStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateCharacterStatistics");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateCharacterStatistics) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateCharacterStatistics");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateCharacterStatistics, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateCharacterStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateCharacterStatistics, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateCharacterStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateCharacterStatistics, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateCharacterStatistics::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdatePlayerStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdatePlayerStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdatePlayerStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdatePlayerStatistics");
static_assert(sizeof(PlayFabClientAPI_HelperUpdatePlayerStatistics) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdatePlayerStatistics");
static_assert(offsetof(PlayFabClientAPI_HelperUpdatePlayerStatistics, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdatePlayerStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdatePlayerStatistics, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdatePlayerStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdatePlayerStatistics, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdatePlayerStatistics::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateSharedGroupData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateSharedGroupData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateSharedGroupData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateSharedGroupData");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateSharedGroupData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateSharedGroupData");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateSharedGroupData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateSharedGroupData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateSharedGroupData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateSharedGroupData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateSharedGroupData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateSharedGroupData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateUserData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateUserData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateUserData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateUserData");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateUserData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateUserData");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateUserData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateUserData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateUserData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateUserPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateUserPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateUserPublisherData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateUserPublisherData");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateUserPublisherData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateUserPublisherData");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserPublisherData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateUserPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserPublisherData, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateUserPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserPublisherData, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateUserPublisherData::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateUserTitleDisplayName
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateUserTitleDisplayName final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateUserTitleDisplayName) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateUserTitleDisplayName");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateUserTitleDisplayName) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateUserTitleDisplayName");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserTitleDisplayName, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateUserTitleDisplayName::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserTitleDisplayName, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateUserTitleDisplayName::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserTitleDisplayName, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateUserTitleDisplayName::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperValidateAmazonIAPReceipt
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperValidateAmazonIAPReceipt final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperValidateAmazonIAPReceipt) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperValidateAmazonIAPReceipt");
static_assert(sizeof(PlayFabClientAPI_HelperValidateAmazonIAPReceipt) == 0x000050, "Wrong size on PlayFabClientAPI_HelperValidateAmazonIAPReceipt");
static_assert(offsetof(PlayFabClientAPI_HelperValidateAmazonIAPReceipt, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperValidateAmazonIAPReceipt::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateAmazonIAPReceipt, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperValidateAmazonIAPReceipt::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateAmazonIAPReceipt, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperValidateAmazonIAPReceipt::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperValidateGooglePlayPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperValidateGooglePlayPurchase final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperValidateGooglePlayPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperValidateGooglePlayPurchase");
static_assert(sizeof(PlayFabClientAPI_HelperValidateGooglePlayPurchase) == 0x000050, "Wrong size on PlayFabClientAPI_HelperValidateGooglePlayPurchase");
static_assert(offsetof(PlayFabClientAPI_HelperValidateGooglePlayPurchase, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperValidateGooglePlayPurchase::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateGooglePlayPurchase, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperValidateGooglePlayPurchase::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateGooglePlayPurchase, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperValidateGooglePlayPurchase::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperValidateIOSReceipt
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperValidateIOSReceipt final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperValidateIOSReceipt) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperValidateIOSReceipt");
static_assert(sizeof(PlayFabClientAPI_HelperValidateIOSReceipt) == 0x000050, "Wrong size on PlayFabClientAPI_HelperValidateIOSReceipt");
static_assert(offsetof(PlayFabClientAPI_HelperValidateIOSReceipt, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperValidateIOSReceipt::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateIOSReceipt, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperValidateIOSReceipt::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateIOSReceipt, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperValidateIOSReceipt::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperValidateWindowsStoreReceipt
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperValidateWindowsStoreReceipt final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperValidateWindowsStoreReceipt) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperValidateWindowsStoreReceipt");
static_assert(sizeof(PlayFabClientAPI_HelperValidateWindowsStoreReceipt) == 0x000050, "Wrong size on PlayFabClientAPI_HelperValidateWindowsStoreReceipt");
static_assert(offsetof(PlayFabClientAPI_HelperValidateWindowsStoreReceipt, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperValidateWindowsStoreReceipt::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateWindowsStoreReceipt, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperValidateWindowsStoreReceipt::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateWindowsStoreReceipt, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperValidateWindowsStoreReceipt::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperWriteCharacterEvent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperWriteCharacterEvent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperWriteCharacterEvent) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperWriteCharacterEvent");
static_assert(sizeof(PlayFabClientAPI_HelperWriteCharacterEvent) == 0x000050, "Wrong size on PlayFabClientAPI_HelperWriteCharacterEvent");
static_assert(offsetof(PlayFabClientAPI_HelperWriteCharacterEvent, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperWriteCharacterEvent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperWriteCharacterEvent, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperWriteCharacterEvent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperWriteCharacterEvent, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperWriteCharacterEvent::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperWritePlayerEvent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperWritePlayerEvent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperWritePlayerEvent) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperWritePlayerEvent");
static_assert(sizeof(PlayFabClientAPI_HelperWritePlayerEvent) == 0x000050, "Wrong size on PlayFabClientAPI_HelperWritePlayerEvent");
static_assert(offsetof(PlayFabClientAPI_HelperWritePlayerEvent, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperWritePlayerEvent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperWritePlayerEvent, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperWritePlayerEvent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperWritePlayerEvent, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperWritePlayerEvent::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperWriteTitleEvent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperWriteTitleEvent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperWriteTitleEvent) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperWriteTitleEvent");
static_assert(sizeof(PlayFabClientAPI_HelperWriteTitleEvent) == 0x000050, "Wrong size on PlayFabClientAPI_HelperWriteTitleEvent");
static_assert(offsetof(PlayFabClientAPI_HelperWriteTitleEvent, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperWriteTitleEvent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperWriteTitleEvent, customData) == 0x000040, "Member 'PlayFabClientAPI_HelperWriteTitleEvent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperWriteTitleEvent, successful) == 0x000048, "Member 'PlayFabClientAPI_HelperWriteTitleEvent::successful' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAcceptTradeResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeAcceptTradeResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAcceptTradeResponse             ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeAcceptTradeResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeAcceptTradeResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeAcceptTradeResponseResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeAcceptTradeResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAcceptTradeResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeAcceptTradeResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAcceptTradeResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeAcceptTradeResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAddFriendResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeAddFriendResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAddFriendResult                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeAddFriendResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeAddFriendResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeAddFriendResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeAddFriendResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAddFriendResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeAddFriendResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAddFriendResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeAddFriendResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAddGenericIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeAddGenericIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAddGenericIDResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeAddGenericIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeAddGenericIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeAddGenericIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeAddGenericIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAddGenericIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeAddGenericIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAddGenericIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeAddGenericIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAddOrUpdateContactEmailResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeAddOrUpdateContactEmailResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAddOrUpdateContactEmailResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeAddOrUpdateContactEmailResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeAddOrUpdateContactEmailResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeAddOrUpdateContactEmailResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeAddOrUpdateContactEmailResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAddOrUpdateContactEmailResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeAddOrUpdateContactEmailResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAddOrUpdateContactEmailResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeAddOrUpdateContactEmailResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAddSharedGroupMembersResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeAddSharedGroupMembersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAddSharedGroupMembersResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeAddSharedGroupMembersResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeAddSharedGroupMembersResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeAddSharedGroupMembersResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeAddSharedGroupMembersResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAddSharedGroupMembersResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeAddSharedGroupMembersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAddSharedGroupMembersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeAddSharedGroupMembersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAddUsernamePasswordResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeAddUsernamePasswordResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAddUsernamePasswordResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeAddUsernamePasswordResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeAddUsernamePasswordResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeAddUsernamePasswordResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeAddUsernamePasswordResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAddUsernamePasswordResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeAddUsernamePasswordResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAddUsernamePasswordResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeAddUsernamePasswordResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAndroidDevicePushNotificationRegistrationResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeAndroidDevicePushNotificationRegistrationResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAndroidDevicePushNotificationRegistrationResult ReturnValue;                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeAndroidDevicePushNotificationRegistrationResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeAndroidDevicePushNotificationRegistrationResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeAndroidDevicePushNotificationRegistrationResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeAndroidDevicePushNotificationRegistrationResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAndroidDevicePushNotificationRegistrationResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeAndroidDevicePushNotificationRegistrationResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAndroidDevicePushNotificationRegistrationResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeAndroidDevicePushNotificationRegistrationResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAttributeInstallResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeAttributeInstallResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAttributeInstallResult          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeAttributeInstallResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeAttributeInstallResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeAttributeInstallResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeAttributeInstallResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAttributeInstallResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeAttributeInstallResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeAttributeInstallResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeAttributeInstallResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeCancelTradeResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeCancelTradeResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientCancelTradeResponse             ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeCancelTradeResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeCancelTradeResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeCancelTradeResponseResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeCancelTradeResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeCancelTradeResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeCancelTradeResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeCancelTradeResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeCancelTradeResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeConfirmPurchaseResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientModelDecoder_decodeConfirmPurchaseResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConfirmPurchaseResult           ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeConfirmPurchaseResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeConfirmPurchaseResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeConfirmPurchaseResultResponse) == 0x000040, "Wrong size on PlayFabClientModelDecoder_decodeConfirmPurchaseResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeConfirmPurchaseResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeConfirmPurchaseResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeConfirmPurchaseResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeConfirmPurchaseResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeConsumeItemResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabClientModelDecoder_decodeConsumeItemResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConsumeItemResult               ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeConsumeItemResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeConsumeItemResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeConsumeItemResultResponse) == 0x000028, "Wrong size on PlayFabClientModelDecoder_decodeConsumeItemResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeConsumeItemResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeConsumeItemResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeConsumeItemResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeConsumeItemResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeConsumeMicrosoftStoreEntitlementsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeConsumeMicrosoftStoreEntitlementsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConsumeMicrosoftStoreEntitlementsResponse ReturnValue;                             // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeConsumeMicrosoftStoreEntitlementsResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeConsumeMicrosoftStoreEntitlementsResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeConsumeMicrosoftStoreEntitlementsResponseResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeConsumeMicrosoftStoreEntitlementsResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeConsumeMicrosoftStoreEntitlementsResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeConsumeMicrosoftStoreEntitlementsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeConsumeMicrosoftStoreEntitlementsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeConsumeMicrosoftStoreEntitlementsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeConsumePS5EntitlementsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeConsumePS5EntitlementsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConsumePS5EntitlementsResult    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeConsumePS5EntitlementsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeConsumePS5EntitlementsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeConsumePS5EntitlementsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeConsumePS5EntitlementsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeConsumePS5EntitlementsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeConsumePS5EntitlementsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeConsumePS5EntitlementsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeConsumePS5EntitlementsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeConsumePSNEntitlementsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeConsumePSNEntitlementsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConsumePSNEntitlementsResult    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeConsumePSNEntitlementsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeConsumePSNEntitlementsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeConsumePSNEntitlementsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeConsumePSNEntitlementsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeConsumePSNEntitlementsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeConsumePSNEntitlementsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeConsumePSNEntitlementsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeConsumePSNEntitlementsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeConsumeXboxEntitlementsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeConsumeXboxEntitlementsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConsumeXboxEntitlementsResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeConsumeXboxEntitlementsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeConsumeXboxEntitlementsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeConsumeXboxEntitlementsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeConsumeXboxEntitlementsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeConsumeXboxEntitlementsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeConsumeXboxEntitlementsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeConsumeXboxEntitlementsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeConsumeXboxEntitlementsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeCreateSharedGroupResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeCreateSharedGroupResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientCreateSharedGroupResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeCreateSharedGroupResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeCreateSharedGroupResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeCreateSharedGroupResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeCreateSharedGroupResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeCreateSharedGroupResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeCreateSharedGroupResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeCreateSharedGroupResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeCreateSharedGroupResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientEmptyResponse                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeEmptyResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeEmptyResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeEmptyResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeEmptyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientEmptyResult                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeEmptyResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeEmptyResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeEmptyResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeEmptyResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeEmptyResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeEmptyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeEmptyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeEmptyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeExecuteCloudScriptResultResponse
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientModelDecoder_decodeExecuteCloudScriptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientExecuteCloudScriptResult        ReturnValue;                                       // 0x0008(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeExecuteCloudScriptResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeExecuteCloudScriptResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeExecuteCloudScriptResultResponse) == 0x000068, "Wrong size on PlayFabClientModelDecoder_decodeExecuteCloudScriptResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeExecuteCloudScriptResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeExecuteCloudScriptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeExecuteCloudScriptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeExecuteCloudScriptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetAccountInfoResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetAccountInfoResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetAccountInfoResult            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetAccountInfoResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetAccountInfoResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetAccountInfoResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeGetAccountInfoResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetAccountInfoResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetAccountInfoResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetAccountInfoResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetAccountInfoResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetAdPlacementsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetAdPlacementsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetAdPlacementsResult           ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetAdPlacementsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetAdPlacementsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetAdPlacementsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetAdPlacementsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetAdPlacementsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetAdPlacementsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetAdPlacementsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetAdPlacementsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetCatalogItemsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetCatalogItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetCatalogItemsResult           ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetCatalogItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetCatalogItemsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetCatalogItemsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetCatalogItemsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetCatalogItemsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetCatalogItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetCatalogItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetCatalogItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetCharacterDataResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetCharacterDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetCharacterDataResult          ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetCharacterDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetCharacterDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetCharacterDataResultResponse) == 0x000030, "Wrong size on PlayFabClientModelDecoder_decodeGetCharacterDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetCharacterDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetCharacterDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetCharacterDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetCharacterDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetCharacterInventoryResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetCharacterInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetCharacterInventoryResult     ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetCharacterInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetCharacterInventoryResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetCharacterInventoryResultResponse) == 0x000040, "Wrong size on PlayFabClientModelDecoder_decodeGetCharacterInventoryResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetCharacterInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetCharacterInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetCharacterInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetCharacterInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetCharacterLeaderboardResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetCharacterLeaderboardResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetCharacterLeaderboardResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetCharacterLeaderboardResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetCharacterLeaderboardResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetCharacterLeaderboardResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetCharacterLeaderboardResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetCharacterLeaderboardResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetCharacterLeaderboardResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetCharacterLeaderboardResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetCharacterLeaderboardResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetCharacterStatisticsResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetCharacterStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetCharacterStatisticsResult    ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetCharacterStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetCharacterStatisticsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetCharacterStatisticsResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeGetCharacterStatisticsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetCharacterStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetCharacterStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetCharacterStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetCharacterStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetContentDownloadUrlResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetContentDownloadUrlResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetContentDownloadUrlResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetContentDownloadUrlResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetContentDownloadUrlResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetContentDownloadUrlResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetContentDownloadUrlResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetContentDownloadUrlResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetContentDownloadUrlResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetContentDownloadUrlResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetContentDownloadUrlResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetFriendLeaderboardAroundPlayerResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetFriendLeaderboardAroundPlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetFriendLeaderboardAroundPlayerResult ReturnValue;                                // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetFriendLeaderboardAroundPlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetFriendLeaderboardAroundPlayerResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetFriendLeaderboardAroundPlayerResultResponse) == 0x000038, "Wrong size on PlayFabClientModelDecoder_decodeGetFriendLeaderboardAroundPlayerResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetFriendLeaderboardAroundPlayerResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetFriendLeaderboardAroundPlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetFriendLeaderboardAroundPlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetFriendLeaderboardAroundPlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetFriendsListResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetFriendsListResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetFriendsListResult            ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetFriendsListResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetFriendsListResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetFriendsListResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetFriendsListResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetFriendsListResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetFriendsListResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetFriendsListResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetFriendsListResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardAroundCharacterResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetLeaderboardAroundCharacterResult ReturnValue;                                   // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardAroundPlayerResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetLeaderboardAroundPlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetLeaderboardAroundPlayerResult ReturnValue;                                      // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetLeaderboardAroundPlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetLeaderboardAroundPlayerResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetLeaderboardAroundPlayerResultResponse) == 0x000038, "Wrong size on PlayFabClientModelDecoder_decodeGetLeaderboardAroundPlayerResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetLeaderboardAroundPlayerResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetLeaderboardAroundPlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetLeaderboardAroundPlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetLeaderboardAroundPlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardForUsersCharactersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetLeaderboardForUsersCharactersResult ReturnValue;                                // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetLeaderboardResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetLeaderboardResult            ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetLeaderboardResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetLeaderboardResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetLeaderboardResultResponse) == 0x000038, "Wrong size on PlayFabClientModelDecoder_decodeGetLeaderboardResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetLeaderboardResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetLeaderboardResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetLeaderboardResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetLeaderboardResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPaymentTokenResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPaymentTokenResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPaymentTokenResult           ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPaymentTokenResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPaymentTokenResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPaymentTokenResultResponse) == 0x000030, "Wrong size on PlayFabClientModelDecoder_decodeGetPaymentTokenResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPaymentTokenResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPaymentTokenResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPaymentTokenResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPaymentTokenResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPhotonAuthenticationTokenResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPhotonAuthenticationTokenResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPhotonAuthenticationTokenResult ReturnValue;                                    // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPhotonAuthenticationTokenResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPhotonAuthenticationTokenResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPhotonAuthenticationTokenResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPhotonAuthenticationTokenResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPhotonAuthenticationTokenResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPhotonAuthenticationTokenResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPhotonAuthenticationTokenResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPhotonAuthenticationTokenResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerCombinedInfoResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayerCombinedInfoResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerCombinedInfoResult     ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayerCombinedInfoResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayerCombinedInfoResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayerCombinedInfoResultResponse) == 0x000028, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayerCombinedInfoResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerCombinedInfoResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayerCombinedInfoResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerCombinedInfoResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayerCombinedInfoResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerProfileResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayerProfileResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerProfileResult          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayerProfileResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayerProfileResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayerProfileResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayerProfileResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerProfileResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayerProfileResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerProfileResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayerProfileResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerSegmentsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayerSegmentsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerSegmentsResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayerSegmentsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayerSegmentsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayerSegmentsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayerSegmentsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerSegmentsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayerSegmentsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerSegmentsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayerSegmentsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerStatisticsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayerStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerStatisticsResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayerStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayerStatisticsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayerStatisticsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayerStatisticsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayerStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayerStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerStatisticVersionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayerStatisticVersionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerStatisticVersionsResult ReturnValue;                                      // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayerStatisticVersionsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayerStatisticVersionsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayerStatisticVersionsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayerStatisticVersionsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerStatisticVersionsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayerStatisticVersionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerStatisticVersionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayerStatisticVersionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerTagsResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayerTagsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerTagsResult             ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayerTagsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayerTagsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayerTagsResultResponse) == 0x000030, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayerTagsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerTagsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayerTagsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerTagsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayerTagsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerTradesResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayerTradesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerTradesResponse         ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayerTradesResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayerTradesResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayerTradesResponseResponse) == 0x000030, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayerTradesResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerTradesResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayerTradesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayerTradesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayerTradesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromFacebookIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromFacebookIDsResult ReturnValue;                                    // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult ReturnValue;                        // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGameCenterIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGameCenterIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromGameCenterIDsResult ReturnValue;                                  // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGameCenterIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGameCenterIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGameCenterIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGameCenterIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGameCenterIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGameCenterIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGameCenterIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGameCenterIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGenericIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromGenericIDsResult ReturnValue;                                     // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGoogleIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGoogleIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromGoogleIDsResult ReturnValue;                                      // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGoogleIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGoogleIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGoogleIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGoogleIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGoogleIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGoogleIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGoogleIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGoogleIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsResult ReturnValue;                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromKongregateIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromKongregateIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromKongregateIDsResult ReturnValue;                                  // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromKongregateIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromKongregateIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromKongregateIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromKongregateIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromKongregateIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromKongregateIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromKongregateIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromKongregateIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsResult ReturnValue;                      // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult ReturnValue;                        // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromPSNAccountIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromPSNAccountIDsResult ReturnValue;                                  // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromPSNOnlineIDsResult ReturnValue;                                   // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromSteamIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromSteamIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromTwitchIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromTwitchIDsResult ReturnValue;                                      // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromXboxLiveIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromXboxLiveIDsResult ReturnValue;                                    // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPublisherDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPublisherDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPublisherDataResult          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPublisherDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPublisherDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPublisherDataResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeGetPublisherDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPublisherDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPublisherDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPublisherDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPublisherDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPurchaseResultResponse
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetPurchaseResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPurchaseResult               ReturnValue;                                       // 0x0008(0x0058)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetPurchaseResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetPurchaseResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetPurchaseResultResponse) == 0x000060, "Wrong size on PlayFabClientModelDecoder_decodeGetPurchaseResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPurchaseResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetPurchaseResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetPurchaseResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetPurchaseResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetSharedGroupDataResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetSharedGroupDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetSharedGroupDataResult        ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetSharedGroupDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetSharedGroupDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetSharedGroupDataResultResponse) == 0x000028, "Wrong size on PlayFabClientModelDecoder_decodeGetSharedGroupDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetSharedGroupDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetSharedGroupDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetSharedGroupDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetSharedGroupDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetStoreItemsResultResponse
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetStoreItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetStoreItemsResult             ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetStoreItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetStoreItemsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetStoreItemsResultResponse) == 0x000050, "Wrong size on PlayFabClientModelDecoder_decodeGetStoreItemsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetStoreItemsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetStoreItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetStoreItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetStoreItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetTimeResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetTimeResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetTimeResult                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetTimeResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetTimeResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetTimeResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetTimeResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetTimeResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetTimeResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetTimeResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetTimeResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetTitleDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetTitleDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetTitleDataResult              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetTitleDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetTitleDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetTitleDataResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeGetTitleDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetTitleDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetTitleDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetTitleDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetTitleDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetTitleNewsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetTitleNewsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetTitleNewsResult              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetTitleNewsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetTitleNewsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetTitleNewsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetTitleNewsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetTitleNewsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetTitleNewsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetTitleNewsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetTitleNewsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetTitlePublicKeyResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetTitlePublicKeyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetTitlePublicKeyResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetTitlePublicKeyResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetTitlePublicKeyResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetTitlePublicKeyResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetTitlePublicKeyResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetTitlePublicKeyResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetTitlePublicKeyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetTitlePublicKeyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetTitlePublicKeyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetTradeStatusResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetTradeStatusResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetTradeStatusResponse          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetTradeStatusResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetTradeStatusResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetTradeStatusResponseResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeGetTradeStatusResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetTradeStatusResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetTradeStatusResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetTradeStatusResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetTradeStatusResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetUserDataResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetUserDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetUserDataResult               ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetUserDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetUserDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetUserDataResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeGetUserDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetUserDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetUserDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetUserDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetUserDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetUserInventoryResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientModelDecoder_decodeGetUserInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetUserInventoryResult          ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGetUserInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGetUserInventoryResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGetUserInventoryResultResponse) == 0x000030, "Wrong size on PlayFabClientModelDecoder_decodeGetUserInventoryResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetUserInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGetUserInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGetUserInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGetUserInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGrantCharacterToUserResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientModelDecoder_decodeGrantCharacterToUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGrantCharacterToUserResult      ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeGrantCharacterToUserResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeGrantCharacterToUserResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeGrantCharacterToUserResultResponse) == 0x000038, "Wrong size on PlayFabClientModelDecoder_decodeGrantCharacterToUserResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGrantCharacterToUserResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeGrantCharacterToUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeGrantCharacterToUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeGrantCharacterToUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkAndroidDeviceIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkAndroidDeviceIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkAndroidDeviceIDResult       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkAndroidDeviceIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkAndroidDeviceIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkAndroidDeviceIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkAndroidDeviceIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkAndroidDeviceIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkAndroidDeviceIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkAndroidDeviceIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkAndroidDeviceIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkCustomIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkCustomIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkCustomIDResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkCustomIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkCustomIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkCustomIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkCustomIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkCustomIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkCustomIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkCustomIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkCustomIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkFacebookAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkFacebookAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkFacebookAccountResult       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkFacebookAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkFacebookAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkFacebookAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkFacebookAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkFacebookAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkFacebookAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkFacebookAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkFacebookAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkFacebookInstantGamesIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkFacebookInstantGamesIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkFacebookInstantGamesIdResult ReturnValue;                                      // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkFacebookInstantGamesIdResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkFacebookInstantGamesIdResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkFacebookInstantGamesIdResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkFacebookInstantGamesIdResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkFacebookInstantGamesIdResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkFacebookInstantGamesIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkFacebookInstantGamesIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkFacebookInstantGamesIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkGameCenterAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkGameCenterAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkGameCenterAccountResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkGameCenterAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkGameCenterAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkGameCenterAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkGameCenterAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkGameCenterAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkGameCenterAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkGameCenterAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkGameCenterAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkGoogleAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkGoogleAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkGoogleAccountResult         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkGoogleAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkGoogleAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkGoogleAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkGoogleAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkGoogleAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkGoogleAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkGoogleAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkGoogleAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkGooglePlayGamesServicesAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkGooglePlayGamesServicesAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkGooglePlayGamesServicesAccountResult ReturnValue;                              // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkGooglePlayGamesServicesAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkGooglePlayGamesServicesAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkGooglePlayGamesServicesAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkGooglePlayGamesServicesAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkGooglePlayGamesServicesAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkGooglePlayGamesServicesAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkGooglePlayGamesServicesAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkGooglePlayGamesServicesAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkIOSDeviceIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkIOSDeviceIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkIOSDeviceIDResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkIOSDeviceIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkIOSDeviceIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkIOSDeviceIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkIOSDeviceIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkIOSDeviceIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkIOSDeviceIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkIOSDeviceIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkIOSDeviceIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkKongregateAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkKongregateAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkKongregateAccountResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkKongregateAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkKongregateAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkKongregateAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkKongregateAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkKongregateAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkKongregateAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkKongregateAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkKongregateAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkNintendoSwitchDeviceIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkNintendoSwitchDeviceIdResult ReturnValue;                                      // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkPSNAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkPSNAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkPSNAccountResult            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkPSNAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkPSNAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkPSNAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkPSNAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkPSNAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkPSNAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkPSNAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkPSNAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkSteamAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkSteamAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkSteamAccountResult          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkSteamAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkSteamAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkSteamAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkSteamAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkSteamAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkSteamAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkSteamAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkSteamAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkTwitchAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkTwitchAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkTwitchAccountResult         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkTwitchAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkTwitchAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkTwitchAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkTwitchAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkTwitchAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkTwitchAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkTwitchAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkTwitchAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkXboxAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeLinkXboxAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkXboxAccountResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLinkXboxAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLinkXboxAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLinkXboxAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeLinkXboxAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkXboxAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLinkXboxAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLinkXboxAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLinkXboxAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeListUsersCharactersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeListUsersCharactersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientListUsersCharactersResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeListUsersCharactersResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeListUsersCharactersResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeListUsersCharactersResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeListUsersCharactersResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeListUsersCharactersResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeListUsersCharactersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeListUsersCharactersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeListUsersCharactersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLoginResultResponse
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientModelDecoder_decodeLoginResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLoginResult                     ReturnValue;                                       // 0x0008(0x0068)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeLoginResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeLoginResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeLoginResultResponse) == 0x000070, "Wrong size on PlayFabClientModelDecoder_decodeLoginResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLoginResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeLoginResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeLoginResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeLoginResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeModifyUserVirtualCurrencyResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientModelDecoder_decodeModifyUserVirtualCurrencyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientModifyUserVirtualCurrencyResult ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeModifyUserVirtualCurrencyResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeModifyUserVirtualCurrencyResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeModifyUserVirtualCurrencyResultResponse) == 0x000038, "Wrong size on PlayFabClientModelDecoder_decodeModifyUserVirtualCurrencyResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeModifyUserVirtualCurrencyResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeModifyUserVirtualCurrencyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeModifyUserVirtualCurrencyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeModifyUserVirtualCurrencyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeOpenTradeResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeOpenTradeResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientOpenTradeResponse               ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeOpenTradeResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeOpenTradeResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeOpenTradeResponseResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeOpenTradeResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeOpenTradeResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeOpenTradeResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeOpenTradeResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeOpenTradeResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodePayForPurchaseResultResponse
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientModelDecoder_decodePayForPurchaseResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientPayForPurchaseResult            ReturnValue;                                       // 0x0008(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodePayForPurchaseResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodePayForPurchaseResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodePayForPurchaseResultResponse) == 0x000080, "Wrong size on PlayFabClientModelDecoder_decodePayForPurchaseResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodePayForPurchaseResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodePayForPurchaseResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodePayForPurchaseResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodePayForPurchaseResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodePurchaseItemResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodePurchaseItemResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientPurchaseItemResult              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodePurchaseItemResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodePurchaseItemResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodePurchaseItemResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodePurchaseItemResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodePurchaseItemResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodePurchaseItemResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodePurchaseItemResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodePurchaseItemResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRedeemCouponResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeRedeemCouponResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRedeemCouponResult              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeRedeemCouponResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeRedeemCouponResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeRedeemCouponResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeRedeemCouponResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRedeemCouponResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeRedeemCouponResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRedeemCouponResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeRedeemCouponResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRegisterForIOSPushNotificationResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeRegisterForIOSPushNotificationResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRegisterForIOSPushNotificationResult ReturnValue;                                  // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeRegisterForIOSPushNotificationResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeRegisterForIOSPushNotificationResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeRegisterForIOSPushNotificationResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeRegisterForIOSPushNotificationResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRegisterForIOSPushNotificationResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeRegisterForIOSPushNotificationResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRegisterForIOSPushNotificationResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeRegisterForIOSPushNotificationResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRegisterPlayFabUserResultResponse
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientModelDecoder_decodeRegisterPlayFabUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRegisterPlayFabUserResult       ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeRegisterPlayFabUserResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeRegisterPlayFabUserResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeRegisterPlayFabUserResultResponse) == 0x000050, "Wrong size on PlayFabClientModelDecoder_decodeRegisterPlayFabUserResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRegisterPlayFabUserResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeRegisterPlayFabUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRegisterPlayFabUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeRegisterPlayFabUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRemoveContactEmailResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeRemoveContactEmailResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRemoveContactEmailResult        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeRemoveContactEmailResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeRemoveContactEmailResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeRemoveContactEmailResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeRemoveContactEmailResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRemoveContactEmailResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeRemoveContactEmailResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRemoveContactEmailResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeRemoveContactEmailResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRemoveFriendResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeRemoveFriendResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRemoveFriendResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeRemoveFriendResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeRemoveFriendResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeRemoveFriendResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeRemoveFriendResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRemoveFriendResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeRemoveFriendResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRemoveFriendResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeRemoveFriendResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRemoveGenericIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeRemoveGenericIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRemoveGenericIDResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeRemoveGenericIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeRemoveGenericIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeRemoveGenericIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeRemoveGenericIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRemoveGenericIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeRemoveGenericIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRemoveGenericIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeRemoveGenericIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRemoveSharedGroupMembersResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeRemoveSharedGroupMembersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRemoveSharedGroupMembersResult  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeRemoveSharedGroupMembersResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeRemoveSharedGroupMembersResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeRemoveSharedGroupMembersResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeRemoveSharedGroupMembersResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRemoveSharedGroupMembersResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeRemoveSharedGroupMembersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRemoveSharedGroupMembersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeRemoveSharedGroupMembersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeReportAdActivityResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeReportAdActivityResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientReportAdActivityResult          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeReportAdActivityResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeReportAdActivityResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeReportAdActivityResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeReportAdActivityResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeReportAdActivityResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeReportAdActivityResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeReportAdActivityResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeReportAdActivityResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeReportPlayerClientResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeReportPlayerClientResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientReportPlayerClientResult        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeReportPlayerClientResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeReportPlayerClientResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeReportPlayerClientResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeReportPlayerClientResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeReportPlayerClientResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeReportPlayerClientResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeReportPlayerClientResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeReportPlayerClientResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRestoreIOSPurchasesResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeRestoreIOSPurchasesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRestoreIOSPurchasesResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeRestoreIOSPurchasesResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeRestoreIOSPurchasesResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeRestoreIOSPurchasesResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeRestoreIOSPurchasesResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRestoreIOSPurchasesResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeRestoreIOSPurchasesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRestoreIOSPurchasesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeRestoreIOSPurchasesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRewardAdActivityResultResponse
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientModelDecoder_decodeRewardAdActivityResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRewardAdActivityResult          ReturnValue;                                       // 0x0008(0x0058)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeRewardAdActivityResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeRewardAdActivityResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeRewardAdActivityResultResponse) == 0x000060, "Wrong size on PlayFabClientModelDecoder_decodeRewardAdActivityResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRewardAdActivityResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeRewardAdActivityResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeRewardAdActivityResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeRewardAdActivityResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeSendAccountRecoveryEmailResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeSendAccountRecoveryEmailResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientSendAccountRecoveryEmailResult  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeSendAccountRecoveryEmailResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeSendAccountRecoveryEmailResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeSendAccountRecoveryEmailResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeSendAccountRecoveryEmailResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeSendAccountRecoveryEmailResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeSendAccountRecoveryEmailResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeSendAccountRecoveryEmailResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeSendAccountRecoveryEmailResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeSetFriendTagsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeSetFriendTagsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientSetFriendTagsResult             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeSetFriendTagsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeSetFriendTagsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeSetFriendTagsResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeSetFriendTagsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeSetFriendTagsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeSetFriendTagsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeSetFriendTagsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeSetFriendTagsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeSetPlayerSecretResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeSetPlayerSecretResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientSetPlayerSecretResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeSetPlayerSecretResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeSetPlayerSecretResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeSetPlayerSecretResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeSetPlayerSecretResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeSetPlayerSecretResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeSetPlayerSecretResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeSetPlayerSecretResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeSetPlayerSecretResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeStartPurchaseResultResponse
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientModelDecoder_decodeStartPurchaseResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientStartPurchaseResult             ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeStartPurchaseResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeStartPurchaseResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeStartPurchaseResultResponse) == 0x000048, "Wrong size on PlayFabClientModelDecoder_decodeStartPurchaseResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeStartPurchaseResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeStartPurchaseResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeStartPurchaseResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeStartPurchaseResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkAndroidDeviceIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkAndroidDeviceIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkAndroidDeviceIDResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkAndroidDeviceIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkAndroidDeviceIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkAndroidDeviceIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkAndroidDeviceIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkAndroidDeviceIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkAndroidDeviceIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkAndroidDeviceIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkAndroidDeviceIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkCustomIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkCustomIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkCustomIDResult            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkCustomIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkCustomIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkCustomIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkCustomIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkCustomIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkCustomIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkCustomIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkCustomIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkFacebookAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkFacebookAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkFacebookAccountResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkFacebookAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkFacebookAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkFacebookAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkFacebookAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkFacebookAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkFacebookAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkFacebookAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkFacebookAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkFacebookInstantGamesIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkFacebookInstantGamesIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkFacebookInstantGamesIdResult ReturnValue;                                    // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkFacebookInstantGamesIdResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkFacebookInstantGamesIdResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkFacebookInstantGamesIdResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkFacebookInstantGamesIdResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkFacebookInstantGamesIdResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkFacebookInstantGamesIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkFacebookInstantGamesIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkFacebookInstantGamesIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkGameCenterAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkGameCenterAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkGameCenterAccountResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkGameCenterAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkGameCenterAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkGameCenterAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkGameCenterAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkGameCenterAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkGameCenterAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkGameCenterAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkGameCenterAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkGoogleAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkGoogleAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkGoogleAccountResult       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkGoogleAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkGoogleAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkGoogleAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkGoogleAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkGoogleAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkGoogleAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkGoogleAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkGoogleAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkGooglePlayGamesServicesAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkGooglePlayGamesServicesAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkGooglePlayGamesServicesAccountResult ReturnValue;                            // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkGooglePlayGamesServicesAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkGooglePlayGamesServicesAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkGooglePlayGamesServicesAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkGooglePlayGamesServicesAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkGooglePlayGamesServicesAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkGooglePlayGamesServicesAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkGooglePlayGamesServicesAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkGooglePlayGamesServicesAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkIOSDeviceIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkIOSDeviceIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkIOSDeviceIDResult         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkIOSDeviceIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkIOSDeviceIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkIOSDeviceIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkIOSDeviceIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkIOSDeviceIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkIOSDeviceIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkIOSDeviceIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkIOSDeviceIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkKongregateAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkKongregateAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkKongregateAccountResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkKongregateAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkKongregateAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkKongregateAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkKongregateAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkKongregateAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkKongregateAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkKongregateAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkKongregateAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkNintendoSwitchDeviceIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkNintendoSwitchDeviceIdResult ReturnValue;                                    // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkPSNAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkPSNAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkPSNAccountResult          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkPSNAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkPSNAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkPSNAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkPSNAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkPSNAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkPSNAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkPSNAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkPSNAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkSteamAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkSteamAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkSteamAccountResult        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkSteamAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkSteamAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkSteamAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkSteamAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkSteamAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkSteamAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkSteamAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkSteamAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkTwitchAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkTwitchAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkTwitchAccountResult       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkTwitchAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkTwitchAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkTwitchAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkTwitchAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkTwitchAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkTwitchAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkTwitchAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkTwitchAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkXboxAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlinkXboxAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkXboxAccountResult         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlinkXboxAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlinkXboxAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlinkXboxAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUnlinkXboxAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkXboxAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlinkXboxAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlinkXboxAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlinkXboxAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlockContainerItemResultResponse
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientModelDecoder_decodeUnlockContainerItemResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlockContainerItemResult       ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUnlockContainerItemResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUnlockContainerItemResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUnlockContainerItemResultResponse) == 0x000048, "Wrong size on PlayFabClientModelDecoder_decodeUnlockContainerItemResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlockContainerItemResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUnlockContainerItemResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUnlockContainerItemResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUnlockContainerItemResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateCharacterDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeUpdateCharacterDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUpdateCharacterDataResult       ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUpdateCharacterDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUpdateCharacterDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUpdateCharacterDataResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeUpdateCharacterDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUpdateCharacterDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUpdateCharacterDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUpdateCharacterDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUpdateCharacterDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateCharacterStatisticsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUpdateCharacterStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUpdateCharacterStatisticsResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUpdateCharacterStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUpdateCharacterStatisticsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUpdateCharacterStatisticsResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUpdateCharacterStatisticsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUpdateCharacterStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUpdateCharacterStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUpdateCharacterStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUpdateCharacterStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUpdatePlayerStatisticsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUpdatePlayerStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUpdatePlayerStatisticsResult    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUpdatePlayerStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUpdatePlayerStatisticsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUpdatePlayerStatisticsResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUpdatePlayerStatisticsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUpdatePlayerStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUpdatePlayerStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUpdatePlayerStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUpdatePlayerStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateSharedGroupDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_decodeUpdateSharedGroupDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUpdateSharedGroupDataResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUpdateSharedGroupDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUpdateSharedGroupDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUpdateSharedGroupDataResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_decodeUpdateSharedGroupDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUpdateSharedGroupDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUpdateSharedGroupDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUpdateSharedGroupDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUpdateSharedGroupDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateUserDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_decodeUpdateUserDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUpdateUserDataResult            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUpdateUserDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUpdateUserDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUpdateUserDataResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_decodeUpdateUserDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUpdateUserDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUpdateUserDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUpdateUserDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUpdateUserDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateUserTitleDisplayNameResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUpdateUserTitleDisplayNameResult ReturnValue;                                      // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeValidateAmazonReceiptResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeValidateAmazonReceiptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientValidateAmazonReceiptResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeValidateAmazonReceiptResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeValidateAmazonReceiptResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeValidateAmazonReceiptResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeValidateAmazonReceiptResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeValidateAmazonReceiptResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeValidateAmazonReceiptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeValidateAmazonReceiptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeValidateAmazonReceiptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeValidateGooglePlayPurchaseResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeValidateGooglePlayPurchaseResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientValidateGooglePlayPurchaseResult ReturnValue;                                      // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeValidateGooglePlayPurchaseResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeValidateGooglePlayPurchaseResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeValidateGooglePlayPurchaseResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeValidateGooglePlayPurchaseResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeValidateGooglePlayPurchaseResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeValidateGooglePlayPurchaseResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeValidateGooglePlayPurchaseResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeValidateGooglePlayPurchaseResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeValidateIOSReceiptResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeValidateIOSReceiptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientValidateIOSReceiptResult        ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeValidateIOSReceiptResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeValidateIOSReceiptResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeValidateIOSReceiptResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeValidateIOSReceiptResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeValidateIOSReceiptResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeValidateIOSReceiptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeValidateIOSReceiptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeValidateIOSReceiptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeValidateWindowsReceiptResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeValidateWindowsReceiptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientValidateWindowsReceiptResult    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeValidateWindowsReceiptResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeValidateWindowsReceiptResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeValidateWindowsReceiptResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeValidateWindowsReceiptResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeValidateWindowsReceiptResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeValidateWindowsReceiptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeValidateWindowsReceiptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeValidateWindowsReceiptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeWriteEventResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_decodeWriteEventResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientWriteEventResponse              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_decodeWriteEventResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_decodeWriteEventResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_decodeWriteEventResponseResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_decodeWriteEventResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_decodeWriteEventResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_decodeWriteEventResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_decodeWriteEventResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_decodeWriteEventResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.ExecuteEntityCloudScript
// 0x0068 (0x0068 - 0x0000)
struct PlayFabCloudScriptAPI_ExecuteEntityCloudScript final
{
public:
	struct FCloudScriptExecuteEntityCloudScriptRequest Request;                                      // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptExecuteCloudScriptResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_ExecuteEntityCloudScript");
static_assert(sizeof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript) == 0x000068, "Wrong size on PlayFabCloudScriptAPI_ExecuteEntityCloudScript");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_ExecuteEntityCloudScript::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript, onSuccess) == 0x000038, "Member 'PlayFabCloudScriptAPI_ExecuteEntityCloudScript::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript, onFailure) == 0x000048, "Member 'PlayFabCloudScriptAPI_ExecuteEntityCloudScript::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript, customData) == 0x000058, "Member 'PlayFabCloudScriptAPI_ExecuteEntityCloudScript::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript, ReturnValue) == 0x000060, "Member 'PlayFabCloudScriptAPI_ExecuteEntityCloudScript::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.ExecuteFunction
// 0x0068 (0x0068 - 0x0000)
struct PlayFabCloudScriptAPI_ExecuteFunction final
{
public:
	struct FCloudScriptExecuteFunctionRequest     Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptExecuteFunctionResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_ExecuteFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_ExecuteFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_ExecuteFunction) == 0x000068, "Wrong size on PlayFabCloudScriptAPI_ExecuteFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteFunction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_ExecuteFunction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteFunction, onSuccess) == 0x000038, "Member 'PlayFabCloudScriptAPI_ExecuteFunction::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteFunction, onFailure) == 0x000048, "Member 'PlayFabCloudScriptAPI_ExecuteFunction::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteFunction, customData) == 0x000058, "Member 'PlayFabCloudScriptAPI_ExecuteFunction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteFunction, ReturnValue) == 0x000060, "Member 'PlayFabCloudScriptAPI_ExecuteFunction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.GetFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_GetFunction final
{
public:
	struct FCloudScriptGetFunctionRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptGetFunctionResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_GetFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_GetFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_GetFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_GetFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_GetFunction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_GetFunction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_GetFunction, onSuccess) == 0x000020, "Member 'PlayFabCloudScriptAPI_GetFunction::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_GetFunction, onFailure) == 0x000030, "Member 'PlayFabCloudScriptAPI_GetFunction::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_GetFunction, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_GetFunction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_GetFunction, ReturnValue) == 0x000048, "Member 'PlayFabCloudScriptAPI_GetFunction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.ListFunctions
// 0x0040 (0x0040 - 0x0000)
struct PlayFabCloudScriptAPI_ListFunctions final
{
public:
	struct FCloudScriptListFunctionsRequest       Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptListFunctionsResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_ListFunctions) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_ListFunctions");
static_assert(sizeof(PlayFabCloudScriptAPI_ListFunctions) == 0x000040, "Wrong size on PlayFabCloudScriptAPI_ListFunctions");
static_assert(offsetof(PlayFabCloudScriptAPI_ListFunctions, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_ListFunctions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListFunctions, onSuccess) == 0x000010, "Member 'PlayFabCloudScriptAPI_ListFunctions::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListFunctions, onFailure) == 0x000020, "Member 'PlayFabCloudScriptAPI_ListFunctions::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListFunctions, customData) == 0x000030, "Member 'PlayFabCloudScriptAPI_ListFunctions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListFunctions, ReturnValue) == 0x000038, "Member 'PlayFabCloudScriptAPI_ListFunctions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.ListHttpFunctions
// 0x0040 (0x0040 - 0x0000)
struct PlayFabCloudScriptAPI_ListHttpFunctions final
{
public:
	struct FCloudScriptListFunctionsRequest       Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptListHttpFunctionsResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_ListHttpFunctions) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_ListHttpFunctions");
static_assert(sizeof(PlayFabCloudScriptAPI_ListHttpFunctions) == 0x000040, "Wrong size on PlayFabCloudScriptAPI_ListHttpFunctions");
static_assert(offsetof(PlayFabCloudScriptAPI_ListHttpFunctions, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_ListHttpFunctions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListHttpFunctions, onSuccess) == 0x000010, "Member 'PlayFabCloudScriptAPI_ListHttpFunctions::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListHttpFunctions, onFailure) == 0x000020, "Member 'PlayFabCloudScriptAPI_ListHttpFunctions::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListHttpFunctions, customData) == 0x000030, "Member 'PlayFabCloudScriptAPI_ListHttpFunctions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListHttpFunctions, ReturnValue) == 0x000038, "Member 'PlayFabCloudScriptAPI_ListHttpFunctions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.ListQueuedFunctions
// 0x0040 (0x0040 - 0x0000)
struct PlayFabCloudScriptAPI_ListQueuedFunctions final
{
public:
	struct FCloudScriptListFunctionsRequest       Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptListQueuedFunctionsResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_ListQueuedFunctions) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_ListQueuedFunctions");
static_assert(sizeof(PlayFabCloudScriptAPI_ListQueuedFunctions) == 0x000040, "Wrong size on PlayFabCloudScriptAPI_ListQueuedFunctions");
static_assert(offsetof(PlayFabCloudScriptAPI_ListQueuedFunctions, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_ListQueuedFunctions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListQueuedFunctions, onSuccess) == 0x000010, "Member 'PlayFabCloudScriptAPI_ListQueuedFunctions::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListQueuedFunctions, onFailure) == 0x000020, "Member 'PlayFabCloudScriptAPI_ListQueuedFunctions::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListQueuedFunctions, customData) == 0x000030, "Member 'PlayFabCloudScriptAPI_ListQueuedFunctions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListQueuedFunctions, ReturnValue) == 0x000038, "Member 'PlayFabCloudScriptAPI_ListQueuedFunctions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForEntityTriggeredAction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction final
{
public:
	struct FCloudScriptPostFunctionResultForEntityTriggeredActionRequest Request;                    // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction");
static_assert(sizeof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction, onSuccess) == 0x000020, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction, onFailure) == 0x000030, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction, ReturnValue) == 0x000048, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForFunctionExecution
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution final
{
public:
	struct FCloudScriptPostFunctionResultForFunctionExecutionRequest Request;                        // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution");
static_assert(sizeof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution, onSuccess) == 0x000020, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution, onFailure) == 0x000030, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution, ReturnValue) == 0x000048, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForPlayerTriggeredAction
// 0x0058 (0x0058 - 0x0000)
struct PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction final
{
public:
	struct FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest Request;                    // 0x0000(0x0028)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction");
static_assert(sizeof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction) == 0x000058, "Wrong size on PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction, onSuccess) == 0x000028, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction, onFailure) == 0x000038, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction, customData) == 0x000048, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction, ReturnValue) == 0x000050, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForScheduledTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask final
{
public:
	struct FCloudScriptPostFunctionResultForScheduledTaskRequest Request;                            // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask");
static_assert(sizeof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask, onSuccess) == 0x000020, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask, onFailure) == 0x000030, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask, ReturnValue) == 0x000048, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.RegisterHttpFunction
// 0x0060 (0x0060 - 0x0000)
struct PlayFabCloudScriptAPI_RegisterHttpFunction final
{
public:
	struct FCloudScriptRegisterHttpFunctionRequest Request;                                          // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_RegisterHttpFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_RegisterHttpFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_RegisterHttpFunction) == 0x000060, "Wrong size on PlayFabCloudScriptAPI_RegisterHttpFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterHttpFunction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_RegisterHttpFunction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterHttpFunction, onSuccess) == 0x000030, "Member 'PlayFabCloudScriptAPI_RegisterHttpFunction::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterHttpFunction, onFailure) == 0x000040, "Member 'PlayFabCloudScriptAPI_RegisterHttpFunction::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterHttpFunction, customData) == 0x000050, "Member 'PlayFabCloudScriptAPI_RegisterHttpFunction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterHttpFunction, ReturnValue) == 0x000058, "Member 'PlayFabCloudScriptAPI_RegisterHttpFunction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.RegisterQueuedFunction
// 0x0070 (0x0070 - 0x0000)
struct PlayFabCloudScriptAPI_RegisterQueuedFunction final
{
public:
	struct FCloudScriptRegisterQueuedFunctionRequest Request;                                        // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_RegisterQueuedFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_RegisterQueuedFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_RegisterQueuedFunction) == 0x000070, "Wrong size on PlayFabCloudScriptAPI_RegisterQueuedFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterQueuedFunction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_RegisterQueuedFunction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterQueuedFunction, onSuccess) == 0x000040, "Member 'PlayFabCloudScriptAPI_RegisterQueuedFunction::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterQueuedFunction, onFailure) == 0x000050, "Member 'PlayFabCloudScriptAPI_RegisterQueuedFunction::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterQueuedFunction, customData) == 0x000060, "Member 'PlayFabCloudScriptAPI_RegisterQueuedFunction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterQueuedFunction, ReturnValue) == 0x000068, "Member 'PlayFabCloudScriptAPI_RegisterQueuedFunction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.UnregisterFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_UnregisterFunction final
{
public:
	struct FCloudScriptUnregisterFunctionRequest  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_UnregisterFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_UnregisterFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_UnregisterFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_UnregisterFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_UnregisterFunction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_UnregisterFunction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_UnregisterFunction, onSuccess) == 0x000020, "Member 'PlayFabCloudScriptAPI_UnregisterFunction::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_UnregisterFunction, onFailure) == 0x000030, "Member 'PlayFabCloudScriptAPI_UnregisterFunction::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_UnregisterFunction, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_UnregisterFunction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_UnregisterFunction, ReturnValue) == 0x000048, "Member 'PlayFabCloudScriptAPI_UnregisterFunction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperExecuteEntityCloudScript
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperExecuteFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperExecuteFunction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperExecuteFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperExecuteFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperExecuteFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperExecuteFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperExecuteFunction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperExecuteFunction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperExecuteFunction, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperExecuteFunction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperExecuteFunction, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperExecuteFunction::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperGetFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperGetFunction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperGetFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperGetFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperGetFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperGetFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperGetFunction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperGetFunction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperGetFunction, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperGetFunction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperGetFunction, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperGetFunction::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperListFunctions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperListFunctions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperListFunctions) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperListFunctions");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperListFunctions) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperListFunctions");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListFunctions, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperListFunctions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListFunctions, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperListFunctions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListFunctions, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperListFunctions::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperListHttpFunctions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperListHttpFunctions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperListHttpFunctions) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperListHttpFunctions");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperListHttpFunctions) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperListHttpFunctions");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListHttpFunctions, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperListHttpFunctions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListHttpFunctions, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperListHttpFunctions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListHttpFunctions, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperListHttpFunctions::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperListQueuedFunctions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperListQueuedFunctions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperListQueuedFunctions) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperListQueuedFunctions");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperListQueuedFunctions) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperListQueuedFunctions");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListQueuedFunctions, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperListQueuedFunctions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListQueuedFunctions, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperListQueuedFunctions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListQueuedFunctions, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperListQueuedFunctions::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForEntityTriggeredAction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForFunctionExecution
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForPlayerTriggeredAction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForScheduledTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperRegisterHttpFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperRegisterHttpFunction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperRegisterHttpFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperRegisterHttpFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperRegisterHttpFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperRegisterHttpFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperRegisterHttpFunction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperRegisterHttpFunction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperRegisterHttpFunction, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperRegisterHttpFunction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperRegisterHttpFunction, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperRegisterHttpFunction::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperRegisterQueuedFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperRegisterQueuedFunction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperRegisterQueuedFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperRegisterQueuedFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperRegisterQueuedFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperRegisterQueuedFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperRegisterQueuedFunction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperRegisterQueuedFunction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperRegisterQueuedFunction, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperRegisterQueuedFunction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperRegisterQueuedFunction, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperRegisterQueuedFunction::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperUnregisterFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperUnregisterFunction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperUnregisterFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperUnregisterFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperUnregisterFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperUnregisterFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperUnregisterFunction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperUnregisterFunction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperUnregisterFunction, customData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperUnregisterFunction::customData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperUnregisterFunction, successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperUnregisterFunction::successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeEmptyResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabCloudScriptModelDecoder_decodeEmptyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptEmptyResult                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_decodeEmptyResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_decodeEmptyResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_decodeEmptyResultResponse) == 0x000010, "Wrong size on PlayFabCloudScriptModelDecoder_decodeEmptyResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeEmptyResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_decodeEmptyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeEmptyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_decodeEmptyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeExecuteCloudScriptResultResponse
// 0x0068 (0x0068 - 0x0000)
struct PlayFabCloudScriptModelDecoder_decodeExecuteCloudScriptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptExecuteCloudScriptResult   ReturnValue;                                       // 0x0008(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_decodeExecuteCloudScriptResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_decodeExecuteCloudScriptResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_decodeExecuteCloudScriptResultResponse) == 0x000068, "Wrong size on PlayFabCloudScriptModelDecoder_decodeExecuteCloudScriptResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeExecuteCloudScriptResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_decodeExecuteCloudScriptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeExecuteCloudScriptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_decodeExecuteCloudScriptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeExecuteFunctionResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabCloudScriptModelDecoder_decodeExecuteFunctionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptExecuteFunctionResult      ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_decodeExecuteFunctionResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_decodeExecuteFunctionResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_decodeExecuteFunctionResultResponse) == 0x000040, "Wrong size on PlayFabCloudScriptModelDecoder_decodeExecuteFunctionResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeExecuteFunctionResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_decodeExecuteFunctionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeExecuteFunctionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_decodeExecuteFunctionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeGetFunctionResultResponse
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptModelDecoder_decodeGetFunctionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptGetFunctionResult          ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_decodeGetFunctionResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_decodeGetFunctionResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_decodeGetFunctionResultResponse) == 0x000050, "Wrong size on PlayFabCloudScriptModelDecoder_decodeGetFunctionResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeGetFunctionResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_decodeGetFunctionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeGetFunctionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_decodeGetFunctionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeListFunctionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabCloudScriptModelDecoder_decodeListFunctionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptListFunctionsResult        ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_decodeListFunctionsResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_decodeListFunctionsResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_decodeListFunctionsResultResponse) == 0x000020, "Wrong size on PlayFabCloudScriptModelDecoder_decodeListFunctionsResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeListFunctionsResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_decodeListFunctionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeListFunctionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_decodeListFunctionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeListHttpFunctionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabCloudScriptModelDecoder_decodeListHttpFunctionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptListHttpFunctionsResult    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_decodeListHttpFunctionsResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_decodeListHttpFunctionsResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_decodeListHttpFunctionsResultResponse) == 0x000020, "Wrong size on PlayFabCloudScriptModelDecoder_decodeListHttpFunctionsResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeListHttpFunctionsResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_decodeListHttpFunctionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeListHttpFunctionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_decodeListHttpFunctionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeListQueuedFunctionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabCloudScriptModelDecoder_decodeListQueuedFunctionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptListQueuedFunctionsResult  ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_decodeListQueuedFunctionsResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_decodeListQueuedFunctionsResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_decodeListQueuedFunctionsResultResponse) == 0x000020, "Wrong size on PlayFabCloudScriptModelDecoder_decodeListQueuedFunctionsResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeListQueuedFunctionsResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_decodeListQueuedFunctionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_decodeListQueuedFunctionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_decodeListQueuedFunctionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.AbortFileUploads
// 0x0060 (0x0060 - 0x0000)
struct PlayFabDataAPI_AbortFileUploads final
{
public:
	struct FDataAbortFileUploadsRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataAbortFileUploadsResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_AbortFileUploads) == 0x000008, "Wrong alignment on PlayFabDataAPI_AbortFileUploads");
static_assert(sizeof(PlayFabDataAPI_AbortFileUploads) == 0x000060, "Wrong size on PlayFabDataAPI_AbortFileUploads");
static_assert(offsetof(PlayFabDataAPI_AbortFileUploads, Request) == 0x000000, "Member 'PlayFabDataAPI_AbortFileUploads::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_AbortFileUploads, onSuccess) == 0x000030, "Member 'PlayFabDataAPI_AbortFileUploads::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_AbortFileUploads, onFailure) == 0x000040, "Member 'PlayFabDataAPI_AbortFileUploads::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_AbortFileUploads, customData) == 0x000050, "Member 'PlayFabDataAPI_AbortFileUploads::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_AbortFileUploads, ReturnValue) == 0x000058, "Member 'PlayFabDataAPI_AbortFileUploads::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.DeleteFiles
// 0x0060 (0x0060 - 0x0000)
struct PlayFabDataAPI_DeleteFiles final
{
public:
	struct FDataDeleteFilesRequest                Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataDeleteFilesResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_DeleteFiles) == 0x000008, "Wrong alignment on PlayFabDataAPI_DeleteFiles");
static_assert(sizeof(PlayFabDataAPI_DeleteFiles) == 0x000060, "Wrong size on PlayFabDataAPI_DeleteFiles");
static_assert(offsetof(PlayFabDataAPI_DeleteFiles, Request) == 0x000000, "Member 'PlayFabDataAPI_DeleteFiles::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DeleteFiles, onSuccess) == 0x000030, "Member 'PlayFabDataAPI_DeleteFiles::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DeleteFiles, onFailure) == 0x000040, "Member 'PlayFabDataAPI_DeleteFiles::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DeleteFiles, customData) == 0x000050, "Member 'PlayFabDataAPI_DeleteFiles::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DeleteFiles, ReturnValue) == 0x000058, "Member 'PlayFabDataAPI_DeleteFiles::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.FinalizeFileUploads
// 0x0060 (0x0060 - 0x0000)
struct PlayFabDataAPI_FinalizeFileUploads final
{
public:
	struct FDataFinalizeFileUploadsRequest        Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataFinalizeFileUploadsResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_FinalizeFileUploads) == 0x000008, "Wrong alignment on PlayFabDataAPI_FinalizeFileUploads");
static_assert(sizeof(PlayFabDataAPI_FinalizeFileUploads) == 0x000060, "Wrong size on PlayFabDataAPI_FinalizeFileUploads");
static_assert(offsetof(PlayFabDataAPI_FinalizeFileUploads, Request) == 0x000000, "Member 'PlayFabDataAPI_FinalizeFileUploads::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_FinalizeFileUploads, onSuccess) == 0x000030, "Member 'PlayFabDataAPI_FinalizeFileUploads::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_FinalizeFileUploads, onFailure) == 0x000040, "Member 'PlayFabDataAPI_FinalizeFileUploads::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_FinalizeFileUploads, customData) == 0x000050, "Member 'PlayFabDataAPI_FinalizeFileUploads::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_FinalizeFileUploads, ReturnValue) == 0x000058, "Member 'PlayFabDataAPI_FinalizeFileUploads::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.GetFiles
// 0x0048 (0x0048 - 0x0000)
struct PlayFabDataAPI_GetFiles final
{
public:
	struct FDataGetFilesRequest                   Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataGetFilesResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_GetFiles) == 0x000008, "Wrong alignment on PlayFabDataAPI_GetFiles");
static_assert(sizeof(PlayFabDataAPI_GetFiles) == 0x000048, "Wrong size on PlayFabDataAPI_GetFiles");
static_assert(offsetof(PlayFabDataAPI_GetFiles, Request) == 0x000000, "Member 'PlayFabDataAPI_GetFiles::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetFiles, onSuccess) == 0x000018, "Member 'PlayFabDataAPI_GetFiles::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetFiles, onFailure) == 0x000028, "Member 'PlayFabDataAPI_GetFiles::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetFiles, customData) == 0x000038, "Member 'PlayFabDataAPI_GetFiles::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetFiles, ReturnValue) == 0x000040, "Member 'PlayFabDataAPI_GetFiles::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.GetObjects
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_GetObjects final
{
public:
	struct FDataGetObjectsRequest                 Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataGetObjectsResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_GetObjects) == 0x000008, "Wrong alignment on PlayFabDataAPI_GetObjects");
static_assert(sizeof(PlayFabDataAPI_GetObjects) == 0x000050, "Wrong size on PlayFabDataAPI_GetObjects");
static_assert(offsetof(PlayFabDataAPI_GetObjects, Request) == 0x000000, "Member 'PlayFabDataAPI_GetObjects::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetObjects, onSuccess) == 0x000020, "Member 'PlayFabDataAPI_GetObjects::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetObjects, onFailure) == 0x000030, "Member 'PlayFabDataAPI_GetObjects::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetObjects, customData) == 0x000040, "Member 'PlayFabDataAPI_GetObjects::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetObjects, ReturnValue) == 0x000048, "Member 'PlayFabDataAPI_GetObjects::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.InitiateFileUploads
// 0x0060 (0x0060 - 0x0000)
struct PlayFabDataAPI_InitiateFileUploads final
{
public:
	struct FDataInitiateFileUploadsRequest        Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataInitiateFileUploadsResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_InitiateFileUploads) == 0x000008, "Wrong alignment on PlayFabDataAPI_InitiateFileUploads");
static_assert(sizeof(PlayFabDataAPI_InitiateFileUploads) == 0x000060, "Wrong size on PlayFabDataAPI_InitiateFileUploads");
static_assert(offsetof(PlayFabDataAPI_InitiateFileUploads, Request) == 0x000000, "Member 'PlayFabDataAPI_InitiateFileUploads::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_InitiateFileUploads, onSuccess) == 0x000030, "Member 'PlayFabDataAPI_InitiateFileUploads::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_InitiateFileUploads, onFailure) == 0x000040, "Member 'PlayFabDataAPI_InitiateFileUploads::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_InitiateFileUploads, customData) == 0x000050, "Member 'PlayFabDataAPI_InitiateFileUploads::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_InitiateFileUploads, ReturnValue) == 0x000058, "Member 'PlayFabDataAPI_InitiateFileUploads::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.SetObjects
// 0x0060 (0x0060 - 0x0000)
struct PlayFabDataAPI_SetObjects final
{
public:
	struct FDataSetObjectsRequest                 Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataSetObjectsResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_SetObjects) == 0x000008, "Wrong alignment on PlayFabDataAPI_SetObjects");
static_assert(sizeof(PlayFabDataAPI_SetObjects) == 0x000060, "Wrong size on PlayFabDataAPI_SetObjects");
static_assert(offsetof(PlayFabDataAPI_SetObjects, Request) == 0x000000, "Member 'PlayFabDataAPI_SetObjects::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_SetObjects, onSuccess) == 0x000030, "Member 'PlayFabDataAPI_SetObjects::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_SetObjects, onFailure) == 0x000040, "Member 'PlayFabDataAPI_SetObjects::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_SetObjects, customData) == 0x000050, "Member 'PlayFabDataAPI_SetObjects::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_SetObjects, ReturnValue) == 0x000058, "Member 'PlayFabDataAPI_SetObjects::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperAbortFileUploads
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperAbortFileUploads final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperAbortFileUploads) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperAbortFileUploads");
static_assert(sizeof(PlayFabDataAPI_HelperAbortFileUploads) == 0x000050, "Wrong size on PlayFabDataAPI_HelperAbortFileUploads");
static_assert(offsetof(PlayFabDataAPI_HelperAbortFileUploads, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperAbortFileUploads::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperAbortFileUploads, customData) == 0x000040, "Member 'PlayFabDataAPI_HelperAbortFileUploads::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperAbortFileUploads, successful) == 0x000048, "Member 'PlayFabDataAPI_HelperAbortFileUploads::successful' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperDeleteFiles
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperDeleteFiles final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperDeleteFiles) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperDeleteFiles");
static_assert(sizeof(PlayFabDataAPI_HelperDeleteFiles) == 0x000050, "Wrong size on PlayFabDataAPI_HelperDeleteFiles");
static_assert(offsetof(PlayFabDataAPI_HelperDeleteFiles, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperDeleteFiles::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperDeleteFiles, customData) == 0x000040, "Member 'PlayFabDataAPI_HelperDeleteFiles::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperDeleteFiles, successful) == 0x000048, "Member 'PlayFabDataAPI_HelperDeleteFiles::successful' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperFinalizeFileUploads
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperFinalizeFileUploads final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperFinalizeFileUploads) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperFinalizeFileUploads");
static_assert(sizeof(PlayFabDataAPI_HelperFinalizeFileUploads) == 0x000050, "Wrong size on PlayFabDataAPI_HelperFinalizeFileUploads");
static_assert(offsetof(PlayFabDataAPI_HelperFinalizeFileUploads, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperFinalizeFileUploads::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperFinalizeFileUploads, customData) == 0x000040, "Member 'PlayFabDataAPI_HelperFinalizeFileUploads::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperFinalizeFileUploads, successful) == 0x000048, "Member 'PlayFabDataAPI_HelperFinalizeFileUploads::successful' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperGetFiles
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperGetFiles final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperGetFiles) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperGetFiles");
static_assert(sizeof(PlayFabDataAPI_HelperGetFiles) == 0x000050, "Wrong size on PlayFabDataAPI_HelperGetFiles");
static_assert(offsetof(PlayFabDataAPI_HelperGetFiles, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperGetFiles::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperGetFiles, customData) == 0x000040, "Member 'PlayFabDataAPI_HelperGetFiles::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperGetFiles, successful) == 0x000048, "Member 'PlayFabDataAPI_HelperGetFiles::successful' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperGetObjects
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperGetObjects final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperGetObjects) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperGetObjects");
static_assert(sizeof(PlayFabDataAPI_HelperGetObjects) == 0x000050, "Wrong size on PlayFabDataAPI_HelperGetObjects");
static_assert(offsetof(PlayFabDataAPI_HelperGetObjects, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperGetObjects::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperGetObjects, customData) == 0x000040, "Member 'PlayFabDataAPI_HelperGetObjects::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperGetObjects, successful) == 0x000048, "Member 'PlayFabDataAPI_HelperGetObjects::successful' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperInitiateFileUploads
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperInitiateFileUploads final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperInitiateFileUploads) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperInitiateFileUploads");
static_assert(sizeof(PlayFabDataAPI_HelperInitiateFileUploads) == 0x000050, "Wrong size on PlayFabDataAPI_HelperInitiateFileUploads");
static_assert(offsetof(PlayFabDataAPI_HelperInitiateFileUploads, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperInitiateFileUploads::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperInitiateFileUploads, customData) == 0x000040, "Member 'PlayFabDataAPI_HelperInitiateFileUploads::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperInitiateFileUploads, successful) == 0x000048, "Member 'PlayFabDataAPI_HelperInitiateFileUploads::successful' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperSetObjects
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperSetObjects final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperSetObjects) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperSetObjects");
static_assert(sizeof(PlayFabDataAPI_HelperSetObjects) == 0x000050, "Wrong size on PlayFabDataAPI_HelperSetObjects");
static_assert(offsetof(PlayFabDataAPI_HelperSetObjects, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperSetObjects::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperSetObjects, customData) == 0x000040, "Member 'PlayFabDataAPI_HelperSetObjects::customData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperSetObjects, successful) == 0x000048, "Member 'PlayFabDataAPI_HelperSetObjects::successful' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeAbortFileUploadsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabDataModelDecoder_decodeAbortFileUploadsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataAbortFileUploadsResponse          ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_decodeAbortFileUploadsResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_decodeAbortFileUploadsResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_decodeAbortFileUploadsResponseResponse) == 0x000020, "Wrong size on PlayFabDataModelDecoder_decodeAbortFileUploadsResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_decodeAbortFileUploadsResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_decodeAbortFileUploadsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_decodeAbortFileUploadsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_decodeAbortFileUploadsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeDeleteFilesResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabDataModelDecoder_decodeDeleteFilesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataDeleteFilesResponse               ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_decodeDeleteFilesResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_decodeDeleteFilesResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_decodeDeleteFilesResponseResponse) == 0x000020, "Wrong size on PlayFabDataModelDecoder_decodeDeleteFilesResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_decodeDeleteFilesResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_decodeDeleteFilesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_decodeDeleteFilesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_decodeDeleteFilesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeFinalizeFileUploadsResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabDataModelDecoder_decodeFinalizeFileUploadsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataFinalizeFileUploadsResponse       ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_decodeFinalizeFileUploadsResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_decodeFinalizeFileUploadsResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_decodeFinalizeFileUploadsResponseResponse) == 0x000028, "Wrong size on PlayFabDataModelDecoder_decodeFinalizeFileUploadsResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_decodeFinalizeFileUploadsResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_decodeFinalizeFileUploadsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_decodeFinalizeFileUploadsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_decodeFinalizeFileUploadsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeGetFilesResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabDataModelDecoder_decodeGetFilesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataGetFilesResponse                  ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_decodeGetFilesResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_decodeGetFilesResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_decodeGetFilesResponseResponse) == 0x000028, "Wrong size on PlayFabDataModelDecoder_decodeGetFilesResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_decodeGetFilesResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_decodeGetFilesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_decodeGetFilesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_decodeGetFilesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeGetObjectsResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabDataModelDecoder_decodeGetObjectsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataGetObjectsResponse                ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_decodeGetObjectsResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_decodeGetObjectsResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_decodeGetObjectsResponseResponse) == 0x000028, "Wrong size on PlayFabDataModelDecoder_decodeGetObjectsResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_decodeGetObjectsResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_decodeGetObjectsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_decodeGetObjectsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_decodeGetObjectsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeInitiateFileUploadsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabDataModelDecoder_decodeInitiateFileUploadsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataInitiateFileUploadsResponse       ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_decodeInitiateFileUploadsResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_decodeInitiateFileUploadsResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_decodeInitiateFileUploadsResponseResponse) == 0x000030, "Wrong size on PlayFabDataModelDecoder_decodeInitiateFileUploadsResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_decodeInitiateFileUploadsResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_decodeInitiateFileUploadsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_decodeInitiateFileUploadsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_decodeInitiateFileUploadsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeSetObjectsResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabDataModelDecoder_decodeSetObjectsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataSetObjectsResponse                ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_decodeSetObjectsResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_decodeSetObjectsResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_decodeSetObjectsResponseResponse) == 0x000028, "Wrong size on PlayFabDataModelDecoder_decodeSetObjectsResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_decodeSetObjectsResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_decodeSetObjectsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_decodeSetObjectsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_decodeSetObjectsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.AddInventoryItems
// 0x0098 (0x0098 - 0x0000)
struct PlayFabEconomyAPI_AddInventoryItems final
{
public:
	struct FEconomyAddInventoryItemsRequest       Request;                                           // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyAddInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_AddInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_AddInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_AddInventoryItems) == 0x000098, "Wrong size on PlayFabEconomyAPI_AddInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_AddInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_AddInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_AddInventoryItems, onSuccess) == 0x000068, "Member 'PlayFabEconomyAPI_AddInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_AddInventoryItems, onFailure) == 0x000078, "Member 'PlayFabEconomyAPI_AddInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_AddInventoryItems, customData) == 0x000088, "Member 'PlayFabEconomyAPI_AddInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_AddInventoryItems, ReturnValue) == 0x000090, "Member 'PlayFabEconomyAPI_AddInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.CreateDraftItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_CreateDraftItem final
{
public:
	struct FEconomyCreateDraftItemRequest         Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyCreateDraftItemResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_CreateDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_CreateDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_CreateDraftItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_CreateDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_CreateDraftItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_CreateDraftItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateDraftItem, onSuccess) == 0x000020, "Member 'PlayFabEconomyAPI_CreateDraftItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateDraftItem, onFailure) == 0x000030, "Member 'PlayFabEconomyAPI_CreateDraftItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateDraftItem, customData) == 0x000040, "Member 'PlayFabEconomyAPI_CreateDraftItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateDraftItem, ReturnValue) == 0x000048, "Member 'PlayFabEconomyAPI_CreateDraftItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.CreateUploadUrls
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_CreateUploadUrls final
{
public:
	struct FEconomyCreateUploadUrlsRequest        Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyCreateUploadUrlsResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_CreateUploadUrls) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_CreateUploadUrls");
static_assert(sizeof(PlayFabEconomyAPI_CreateUploadUrls) == 0x000050, "Wrong size on PlayFabEconomyAPI_CreateUploadUrls");
static_assert(offsetof(PlayFabEconomyAPI_CreateUploadUrls, Request) == 0x000000, "Member 'PlayFabEconomyAPI_CreateUploadUrls::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateUploadUrls, onSuccess) == 0x000020, "Member 'PlayFabEconomyAPI_CreateUploadUrls::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateUploadUrls, onFailure) == 0x000030, "Member 'PlayFabEconomyAPI_CreateUploadUrls::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateUploadUrls, customData) == 0x000040, "Member 'PlayFabEconomyAPI_CreateUploadUrls::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateUploadUrls, ReturnValue) == 0x000048, "Member 'PlayFabEconomyAPI_CreateUploadUrls::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.DeleteEntityItemReviews
// 0x0048 (0x0048 - 0x0000)
struct PlayFabEconomyAPI_DeleteEntityItemReviews final
{
public:
	struct FEconomyDeleteEntityItemReviewsRequest Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyDeleteEntityItemReviewsResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DeleteEntityItemReviews) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DeleteEntityItemReviews");
static_assert(sizeof(PlayFabEconomyAPI_DeleteEntityItemReviews) == 0x000048, "Wrong size on PlayFabEconomyAPI_DeleteEntityItemReviews");
static_assert(offsetof(PlayFabEconomyAPI_DeleteEntityItemReviews, Request) == 0x000000, "Member 'PlayFabEconomyAPI_DeleteEntityItemReviews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteEntityItemReviews, onSuccess) == 0x000018, "Member 'PlayFabEconomyAPI_DeleteEntityItemReviews::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteEntityItemReviews, onFailure) == 0x000028, "Member 'PlayFabEconomyAPI_DeleteEntityItemReviews::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteEntityItemReviews, customData) == 0x000038, "Member 'PlayFabEconomyAPI_DeleteEntityItemReviews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteEntityItemReviews, ReturnValue) == 0x000040, "Member 'PlayFabEconomyAPI_DeleteEntityItemReviews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.DeleteInventoryCollection
// 0x0068 (0x0068 - 0x0000)
struct PlayFabEconomyAPI_DeleteInventoryCollection final
{
public:
	struct FEconomyDeleteInventoryCollectionRequest Request;                                         // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyDeleteInventoryCollectionResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DeleteInventoryCollection) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DeleteInventoryCollection");
static_assert(sizeof(PlayFabEconomyAPI_DeleteInventoryCollection) == 0x000068, "Wrong size on PlayFabEconomyAPI_DeleteInventoryCollection");
static_assert(offsetof(PlayFabEconomyAPI_DeleteInventoryCollection, Request) == 0x000000, "Member 'PlayFabEconomyAPI_DeleteInventoryCollection::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteInventoryCollection, onSuccess) == 0x000038, "Member 'PlayFabEconomyAPI_DeleteInventoryCollection::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteInventoryCollection, onFailure) == 0x000048, "Member 'PlayFabEconomyAPI_DeleteInventoryCollection::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteInventoryCollection, customData) == 0x000058, "Member 'PlayFabEconomyAPI_DeleteInventoryCollection::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteInventoryCollection, ReturnValue) == 0x000060, "Member 'PlayFabEconomyAPI_DeleteInventoryCollection::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.DeleteInventoryItems
// 0x0080 (0x0080 - 0x0000)
struct PlayFabEconomyAPI_DeleteInventoryItems final
{
public:
	struct FEconomyDeleteInventoryItemsRequest    Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyDeleteInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DeleteInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DeleteInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_DeleteInventoryItems) == 0x000080, "Wrong size on PlayFabEconomyAPI_DeleteInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_DeleteInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_DeleteInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteInventoryItems, onSuccess) == 0x000050, "Member 'PlayFabEconomyAPI_DeleteInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteInventoryItems, onFailure) == 0x000060, "Member 'PlayFabEconomyAPI_DeleteInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteInventoryItems, customData) == 0x000070, "Member 'PlayFabEconomyAPI_DeleteInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteInventoryItems, ReturnValue) == 0x000078, "Member 'PlayFabEconomyAPI_DeleteInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.DeleteItem
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEconomyAPI_DeleteItem final
{
public:
	struct FEconomyDeleteItemRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyDeleteItemResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DeleteItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DeleteItem");
static_assert(sizeof(PlayFabEconomyAPI_DeleteItem) == 0x000060, "Wrong size on PlayFabEconomyAPI_DeleteItem");
static_assert(offsetof(PlayFabEconomyAPI_DeleteItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_DeleteItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteItem, onSuccess) == 0x000030, "Member 'PlayFabEconomyAPI_DeleteItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteItem, onFailure) == 0x000040, "Member 'PlayFabEconomyAPI_DeleteItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteItem, customData) == 0x000050, "Member 'PlayFabEconomyAPI_DeleteItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteItem, ReturnValue) == 0x000058, "Member 'PlayFabEconomyAPI_DeleteItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.ExecuteInventoryOperations
// 0x0088 (0x0088 - 0x0000)
struct PlayFabEconomyAPI_ExecuteInventoryOperations final
{
public:
	struct FEconomyExecuteInventoryOperationsRequest Request;                                        // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyExecuteInventoryOperationsResponse& Result, class UObject* customData)> onSuccess; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_ExecuteInventoryOperations) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_ExecuteInventoryOperations");
static_assert(sizeof(PlayFabEconomyAPI_ExecuteInventoryOperations) == 0x000088, "Wrong size on PlayFabEconomyAPI_ExecuteInventoryOperations");
static_assert(offsetof(PlayFabEconomyAPI_ExecuteInventoryOperations, Request) == 0x000000, "Member 'PlayFabEconomyAPI_ExecuteInventoryOperations::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ExecuteInventoryOperations, onSuccess) == 0x000058, "Member 'PlayFabEconomyAPI_ExecuteInventoryOperations::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ExecuteInventoryOperations, onFailure) == 0x000068, "Member 'PlayFabEconomyAPI_ExecuteInventoryOperations::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ExecuteInventoryOperations, customData) == 0x000078, "Member 'PlayFabEconomyAPI_ExecuteInventoryOperations::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ExecuteInventoryOperations, ReturnValue) == 0x000080, "Member 'PlayFabEconomyAPI_ExecuteInventoryOperations::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.ExecuteTransferOperations
// 0x00A0 (0x00A0 - 0x0000)
struct PlayFabEconomyAPI_ExecuteTransferOperations final
{
public:
	struct FEconomyExecuteTransferOperationsRequest Request;                                         // 0x0000(0x0070)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyExecuteTransferOperationsResponse& Result, class UObject* customData)> onSuccess; // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0080(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0090(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_ExecuteTransferOperations) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_ExecuteTransferOperations");
static_assert(sizeof(PlayFabEconomyAPI_ExecuteTransferOperations) == 0x0000A0, "Wrong size on PlayFabEconomyAPI_ExecuteTransferOperations");
static_assert(offsetof(PlayFabEconomyAPI_ExecuteTransferOperations, Request) == 0x000000, "Member 'PlayFabEconomyAPI_ExecuteTransferOperations::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ExecuteTransferOperations, onSuccess) == 0x000070, "Member 'PlayFabEconomyAPI_ExecuteTransferOperations::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ExecuteTransferOperations, onFailure) == 0x000080, "Member 'PlayFabEconomyAPI_ExecuteTransferOperations::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ExecuteTransferOperations, customData) == 0x000090, "Member 'PlayFabEconomyAPI_ExecuteTransferOperations::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ExecuteTransferOperations, ReturnValue) == 0x000098, "Member 'PlayFabEconomyAPI_ExecuteTransferOperations::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetCatalogConfig
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyAPI_GetCatalogConfig final
{
public:
	struct FEconomyGetCatalogConfigRequest        Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetCatalogConfigResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetCatalogConfig) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetCatalogConfig");
static_assert(sizeof(PlayFabEconomyAPI_GetCatalogConfig) == 0x000040, "Wrong size on PlayFabEconomyAPI_GetCatalogConfig");
static_assert(offsetof(PlayFabEconomyAPI_GetCatalogConfig, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetCatalogConfig::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetCatalogConfig, onSuccess) == 0x000010, "Member 'PlayFabEconomyAPI_GetCatalogConfig::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetCatalogConfig, onFailure) == 0x000020, "Member 'PlayFabEconomyAPI_GetCatalogConfig::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetCatalogConfig, customData) == 0x000030, "Member 'PlayFabEconomyAPI_GetCatalogConfig::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetCatalogConfig, ReturnValue) == 0x000038, "Member 'PlayFabEconomyAPI_GetCatalogConfig::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetDraftItem
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEconomyAPI_GetDraftItem final
{
public:
	struct FEconomyGetDraftItemRequest            Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetDraftItemResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_GetDraftItem) == 0x000060, "Wrong size on PlayFabEconomyAPI_GetDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetDraftItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItem, onSuccess) == 0x000030, "Member 'PlayFabEconomyAPI_GetDraftItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItem, onFailure) == 0x000040, "Member 'PlayFabEconomyAPI_GetDraftItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItem, customData) == 0x000050, "Member 'PlayFabEconomyAPI_GetDraftItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItem, ReturnValue) == 0x000058, "Member 'PlayFabEconomyAPI_GetDraftItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetDraftItems
// 0x0068 (0x0068 - 0x0000)
struct PlayFabEconomyAPI_GetDraftItems final
{
public:
	struct FEconomyGetDraftItemsRequest           Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetDraftItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetDraftItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetDraftItems");
static_assert(sizeof(PlayFabEconomyAPI_GetDraftItems) == 0x000068, "Wrong size on PlayFabEconomyAPI_GetDraftItems");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetDraftItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItems, onSuccess) == 0x000038, "Member 'PlayFabEconomyAPI_GetDraftItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItems, onFailure) == 0x000048, "Member 'PlayFabEconomyAPI_GetDraftItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItems, customData) == 0x000058, "Member 'PlayFabEconomyAPI_GetDraftItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItems, ReturnValue) == 0x000060, "Member 'PlayFabEconomyAPI_GetDraftItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetEntityDraftItems
// 0x0070 (0x0070 - 0x0000)
struct PlayFabEconomyAPI_GetEntityDraftItems final
{
public:
	struct FEconomyGetEntityDraftItemsRequest     Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetEntityDraftItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetEntityDraftItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetEntityDraftItems");
static_assert(sizeof(PlayFabEconomyAPI_GetEntityDraftItems) == 0x000070, "Wrong size on PlayFabEconomyAPI_GetEntityDraftItems");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityDraftItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetEntityDraftItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityDraftItems, onSuccess) == 0x000040, "Member 'PlayFabEconomyAPI_GetEntityDraftItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityDraftItems, onFailure) == 0x000050, "Member 'PlayFabEconomyAPI_GetEntityDraftItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityDraftItems, customData) == 0x000060, "Member 'PlayFabEconomyAPI_GetEntityDraftItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityDraftItems, ReturnValue) == 0x000068, "Member 'PlayFabEconomyAPI_GetEntityDraftItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetEntityItemReview
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEconomyAPI_GetEntityItemReview final
{
public:
	struct FEconomyGetEntityItemReviewRequest     Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetEntityItemReviewResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetEntityItemReview) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetEntityItemReview");
static_assert(sizeof(PlayFabEconomyAPI_GetEntityItemReview) == 0x000060, "Wrong size on PlayFabEconomyAPI_GetEntityItemReview");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityItemReview, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetEntityItemReview::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityItemReview, onSuccess) == 0x000030, "Member 'PlayFabEconomyAPI_GetEntityItemReview::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityItemReview, onFailure) == 0x000040, "Member 'PlayFabEconomyAPI_GetEntityItemReview::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityItemReview, customData) == 0x000050, "Member 'PlayFabEconomyAPI_GetEntityItemReview::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityItemReview, ReturnValue) == 0x000058, "Member 'PlayFabEconomyAPI_GetEntityItemReview::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetInventoryCollectionIds
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEconomyAPI_GetInventoryCollectionIds final
{
public:
	struct FEconomyGetInventoryCollectionIdsRequest Request;                                         // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetInventoryCollectionIdsResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetInventoryCollectionIds) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetInventoryCollectionIds");
static_assert(sizeof(PlayFabEconomyAPI_GetInventoryCollectionIds) == 0x000060, "Wrong size on PlayFabEconomyAPI_GetInventoryCollectionIds");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryCollectionIds, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetInventoryCollectionIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryCollectionIds, onSuccess) == 0x000030, "Member 'PlayFabEconomyAPI_GetInventoryCollectionIds::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryCollectionIds, onFailure) == 0x000040, "Member 'PlayFabEconomyAPI_GetInventoryCollectionIds::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryCollectionIds, customData) == 0x000050, "Member 'PlayFabEconomyAPI_GetInventoryCollectionIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryCollectionIds, ReturnValue) == 0x000058, "Member 'PlayFabEconomyAPI_GetInventoryCollectionIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetInventoryItems
// 0x0080 (0x0080 - 0x0000)
struct PlayFabEconomyAPI_GetInventoryItems final
{
public:
	struct FEconomyGetInventoryItemsRequest       Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_GetInventoryItems) == 0x000080, "Wrong size on PlayFabEconomyAPI_GetInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryItems, onSuccess) == 0x000050, "Member 'PlayFabEconomyAPI_GetInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryItems, onFailure) == 0x000060, "Member 'PlayFabEconomyAPI_GetInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryItems, customData) == 0x000070, "Member 'PlayFabEconomyAPI_GetInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryItems, ReturnValue) == 0x000078, "Member 'PlayFabEconomyAPI_GetInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetInventoryOperationStatus
// 0x0058 (0x0058 - 0x0000)
struct PlayFabEconomyAPI_GetInventoryOperationStatus final
{
public:
	struct FEconomyGetInventoryOperationStatusRequest Request;                                       // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetInventoryOperationStatusResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetInventoryOperationStatus) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetInventoryOperationStatus");
static_assert(sizeof(PlayFabEconomyAPI_GetInventoryOperationStatus) == 0x000058, "Wrong size on PlayFabEconomyAPI_GetInventoryOperationStatus");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryOperationStatus, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetInventoryOperationStatus::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryOperationStatus, onSuccess) == 0x000028, "Member 'PlayFabEconomyAPI_GetInventoryOperationStatus::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryOperationStatus, onFailure) == 0x000038, "Member 'PlayFabEconomyAPI_GetInventoryOperationStatus::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryOperationStatus, customData) == 0x000048, "Member 'PlayFabEconomyAPI_GetInventoryOperationStatus::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetInventoryOperationStatus, ReturnValue) == 0x000050, "Member 'PlayFabEconomyAPI_GetInventoryOperationStatus::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItem
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEconomyAPI_GetItem final
{
public:
	struct FEconomyGetItemRequest                 Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItem");
static_assert(sizeof(PlayFabEconomyAPI_GetItem) == 0x000060, "Wrong size on PlayFabEconomyAPI_GetItem");
static_assert(offsetof(PlayFabEconomyAPI_GetItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItem, onSuccess) == 0x000030, "Member 'PlayFabEconomyAPI_GetItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItem, onFailure) == 0x000040, "Member 'PlayFabEconomyAPI_GetItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItem, customData) == 0x000050, "Member 'PlayFabEconomyAPI_GetItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItem, ReturnValue) == 0x000058, "Member 'PlayFabEconomyAPI_GetItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItemContainers
// 0x0078 (0x0078 - 0x0000)
struct PlayFabEconomyAPI_GetItemContainers final
{
public:
	struct FEconomyGetItemContainersRequest       Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemContainersResponse& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItemContainers) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItemContainers");
static_assert(sizeof(PlayFabEconomyAPI_GetItemContainers) == 0x000078, "Wrong size on PlayFabEconomyAPI_GetItemContainers");
static_assert(offsetof(PlayFabEconomyAPI_GetItemContainers, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItemContainers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemContainers, onSuccess) == 0x000048, "Member 'PlayFabEconomyAPI_GetItemContainers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemContainers, onFailure) == 0x000058, "Member 'PlayFabEconomyAPI_GetItemContainers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemContainers, customData) == 0x000068, "Member 'PlayFabEconomyAPI_GetItemContainers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemContainers, ReturnValue) == 0x000070, "Member 'PlayFabEconomyAPI_GetItemContainers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItemModerationState
// 0x0058 (0x0058 - 0x0000)
struct PlayFabEconomyAPI_GetItemModerationState final
{
public:
	struct FEconomyGetItemModerationStateRequest  Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemModerationStateResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItemModerationState) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItemModerationState");
static_assert(sizeof(PlayFabEconomyAPI_GetItemModerationState) == 0x000058, "Wrong size on PlayFabEconomyAPI_GetItemModerationState");
static_assert(offsetof(PlayFabEconomyAPI_GetItemModerationState, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItemModerationState::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemModerationState, onSuccess) == 0x000028, "Member 'PlayFabEconomyAPI_GetItemModerationState::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemModerationState, onFailure) == 0x000038, "Member 'PlayFabEconomyAPI_GetItemModerationState::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemModerationState, customData) == 0x000048, "Member 'PlayFabEconomyAPI_GetItemModerationState::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemModerationState, ReturnValue) == 0x000050, "Member 'PlayFabEconomyAPI_GetItemModerationState::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItemPublishStatus
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEconomyAPI_GetItemPublishStatus final
{
public:
	struct FEconomyGetItemPublishStatusRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemPublishStatusResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItemPublishStatus) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItemPublishStatus");
static_assert(sizeof(PlayFabEconomyAPI_GetItemPublishStatus) == 0x000060, "Wrong size on PlayFabEconomyAPI_GetItemPublishStatus");
static_assert(offsetof(PlayFabEconomyAPI_GetItemPublishStatus, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItemPublishStatus::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemPublishStatus, onSuccess) == 0x000030, "Member 'PlayFabEconomyAPI_GetItemPublishStatus::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemPublishStatus, onFailure) == 0x000040, "Member 'PlayFabEconomyAPI_GetItemPublishStatus::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemPublishStatus, customData) == 0x000050, "Member 'PlayFabEconomyAPI_GetItemPublishStatus::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemPublishStatus, ReturnValue) == 0x000058, "Member 'PlayFabEconomyAPI_GetItemPublishStatus::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItemReviews
// 0x0080 (0x0080 - 0x0000)
struct PlayFabEconomyAPI_GetItemReviews final
{
public:
	struct FEconomyGetItemReviewsRequest          Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemReviewsResponse& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItemReviews) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItemReviews");
static_assert(sizeof(PlayFabEconomyAPI_GetItemReviews) == 0x000080, "Wrong size on PlayFabEconomyAPI_GetItemReviews");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviews, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItemReviews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviews, onSuccess) == 0x000050, "Member 'PlayFabEconomyAPI_GetItemReviews::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviews, onFailure) == 0x000060, "Member 'PlayFabEconomyAPI_GetItemReviews::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviews, customData) == 0x000070, "Member 'PlayFabEconomyAPI_GetItemReviews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviews, ReturnValue) == 0x000078, "Member 'PlayFabEconomyAPI_GetItemReviews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItemReviewSummary
// 0x0058 (0x0058 - 0x0000)
struct PlayFabEconomyAPI_GetItemReviewSummary final
{
public:
	struct FEconomyGetItemReviewSummaryRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemReviewSummaryResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItemReviewSummary) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItemReviewSummary");
static_assert(sizeof(PlayFabEconomyAPI_GetItemReviewSummary) == 0x000058, "Wrong size on PlayFabEconomyAPI_GetItemReviewSummary");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviewSummary, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItemReviewSummary::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviewSummary, onSuccess) == 0x000028, "Member 'PlayFabEconomyAPI_GetItemReviewSummary::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviewSummary, onFailure) == 0x000038, "Member 'PlayFabEconomyAPI_GetItemReviewSummary::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviewSummary, customData) == 0x000048, "Member 'PlayFabEconomyAPI_GetItemReviewSummary::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviewSummary, ReturnValue) == 0x000050, "Member 'PlayFabEconomyAPI_GetItemReviewSummary::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItems
// 0x0068 (0x0068 - 0x0000)
struct PlayFabEconomyAPI_GetItems final
{
public:
	struct FEconomyGetItemsRequest                Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItems");
static_assert(sizeof(PlayFabEconomyAPI_GetItems) == 0x000068, "Wrong size on PlayFabEconomyAPI_GetItems");
static_assert(offsetof(PlayFabEconomyAPI_GetItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItems, onSuccess) == 0x000038, "Member 'PlayFabEconomyAPI_GetItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItems, onFailure) == 0x000048, "Member 'PlayFabEconomyAPI_GetItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItems, customData) == 0x000058, "Member 'PlayFabEconomyAPI_GetItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItems, ReturnValue) == 0x000060, "Member 'PlayFabEconomyAPI_GetItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetMicrosoftStoreAccessTokens
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens final
{
public:
	struct FEconomyGetMicrosoftStoreAccessTokensRequest Request;                                     // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetMicrosoftStoreAccessTokensResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens");
static_assert(sizeof(PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens) == 0x000040, "Wrong size on PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens");
static_assert(offsetof(PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens, onSuccess) == 0x000010, "Member 'PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens, onFailure) == 0x000020, "Member 'PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens, customData) == 0x000030, "Member 'PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens, ReturnValue) == 0x000038, "Member 'PlayFabEconomyAPI_GetMicrosoftStoreAccessTokens::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetTransactionHistory
// 0x0090 (0x0090 - 0x0000)
struct PlayFabEconomyAPI_GetTransactionHistory final
{
public:
	struct FEconomyGetTransactionHistoryRequest   Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetTransactionHistoryResponse& Result, class UObject* customData)> onSuccess; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetTransactionHistory) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetTransactionHistory");
static_assert(sizeof(PlayFabEconomyAPI_GetTransactionHistory) == 0x000090, "Wrong size on PlayFabEconomyAPI_GetTransactionHistory");
static_assert(offsetof(PlayFabEconomyAPI_GetTransactionHistory, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetTransactionHistory::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetTransactionHistory, onSuccess) == 0x000060, "Member 'PlayFabEconomyAPI_GetTransactionHistory::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetTransactionHistory, onFailure) == 0x000070, "Member 'PlayFabEconomyAPI_GetTransactionHistory::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetTransactionHistory, customData) == 0x000080, "Member 'PlayFabEconomyAPI_GetTransactionHistory::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetTransactionHistory, ReturnValue) == 0x000088, "Member 'PlayFabEconomyAPI_GetTransactionHistory::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.PublishDraftItem
// 0x0070 (0x0070 - 0x0000)
struct PlayFabEconomyAPI_PublishDraftItem final
{
public:
	struct FEconomyPublishDraftItemRequest        Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyPublishDraftItemResponse& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_PublishDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_PublishDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_PublishDraftItem) == 0x000070, "Wrong size on PlayFabEconomyAPI_PublishDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_PublishDraftItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_PublishDraftItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_PublishDraftItem, onSuccess) == 0x000040, "Member 'PlayFabEconomyAPI_PublishDraftItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_PublishDraftItem, onFailure) == 0x000050, "Member 'PlayFabEconomyAPI_PublishDraftItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_PublishDraftItem, customData) == 0x000060, "Member 'PlayFabEconomyAPI_PublishDraftItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_PublishDraftItem, ReturnValue) == 0x000068, "Member 'PlayFabEconomyAPI_PublishDraftItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.PurchaseInventoryItems
// 0x00B8 (0x00B8 - 0x0000)
struct PlayFabEconomyAPI_PurchaseInventoryItems final
{
public:
	struct FEconomyPurchaseInventoryItemsRequest  Request;                                           // 0x0000(0x0088)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyPurchaseInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0088(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0098(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x00A8(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_PurchaseInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_PurchaseInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_PurchaseInventoryItems) == 0x0000B8, "Wrong size on PlayFabEconomyAPI_PurchaseInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_PurchaseInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_PurchaseInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_PurchaseInventoryItems, onSuccess) == 0x000088, "Member 'PlayFabEconomyAPI_PurchaseInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_PurchaseInventoryItems, onFailure) == 0x000098, "Member 'PlayFabEconomyAPI_PurchaseInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_PurchaseInventoryItems, customData) == 0x0000A8, "Member 'PlayFabEconomyAPI_PurchaseInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_PurchaseInventoryItems, ReturnValue) == 0x0000B0, "Member 'PlayFabEconomyAPI_PurchaseInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.RedeemAppleAppStoreInventoryItems
// 0x0068 (0x0068 - 0x0000)
struct PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems final
{
public:
	struct FEconomyRedeemAppleAppStoreInventoryItemsRequest Request;                                 // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyRedeemAppleAppStoreInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems) == 0x000068, "Wrong size on PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems, onSuccess) == 0x000038, "Member 'PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems, onFailure) == 0x000048, "Member 'PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems, customData) == 0x000058, "Member 'PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems, ReturnValue) == 0x000060, "Member 'PlayFabEconomyAPI_RedeemAppleAppStoreInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.RedeemGooglePlayInventoryItems
// 0x0068 (0x0068 - 0x0000)
struct PlayFabEconomyAPI_RedeemGooglePlayInventoryItems final
{
public:
	struct FEconomyRedeemGooglePlayInventoryItemsRequest Request;                                    // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyRedeemGooglePlayInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_RedeemGooglePlayInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_RedeemGooglePlayInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_RedeemGooglePlayInventoryItems) == 0x000068, "Wrong size on PlayFabEconomyAPI_RedeemGooglePlayInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_RedeemGooglePlayInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_RedeemGooglePlayInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemGooglePlayInventoryItems, onSuccess) == 0x000038, "Member 'PlayFabEconomyAPI_RedeemGooglePlayInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemGooglePlayInventoryItems, onFailure) == 0x000048, "Member 'PlayFabEconomyAPI_RedeemGooglePlayInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemGooglePlayInventoryItems, customData) == 0x000058, "Member 'PlayFabEconomyAPI_RedeemGooglePlayInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemGooglePlayInventoryItems, ReturnValue) == 0x000060, "Member 'PlayFabEconomyAPI_RedeemGooglePlayInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.RedeemMicrosoftStoreInventoryItems
// 0x0078 (0x0078 - 0x0000)
struct PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems final
{
public:
	struct FEconomyRedeemMicrosoftStoreInventoryItemsRequest Request;                                // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyRedeemMicrosoftStoreInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems) == 0x000078, "Wrong size on PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems, onSuccess) == 0x000048, "Member 'PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems, onFailure) == 0x000058, "Member 'PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems, customData) == 0x000068, "Member 'PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems, ReturnValue) == 0x000070, "Member 'PlayFabEconomyAPI_RedeemMicrosoftStoreInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.RedeemNintendoEShopInventoryItems
// 0x0068 (0x0068 - 0x0000)
struct PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems final
{
public:
	struct FEconomyRedeemNintendoEShopInventoryItemsRequest Request;                                 // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyRedeemNintendoEShopInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems) == 0x000068, "Wrong size on PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems, onSuccess) == 0x000038, "Member 'PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems, onFailure) == 0x000048, "Member 'PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems, customData) == 0x000058, "Member 'PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems, ReturnValue) == 0x000060, "Member 'PlayFabEconomyAPI_RedeemNintendoEShopInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.RedeemPlayStationStoreInventoryItems
// 0x0088 (0x0088 - 0x0000)
struct PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems final
{
public:
	struct FEconomyRedeemPlayStationStoreInventoryItemsRequest Request;                              // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyRedeemPlayStationStoreInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems) == 0x000088, "Wrong size on PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems, onSuccess) == 0x000058, "Member 'PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems, onFailure) == 0x000068, "Member 'PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems, customData) == 0x000078, "Member 'PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems, ReturnValue) == 0x000080, "Member 'PlayFabEconomyAPI_RedeemPlayStationStoreInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.RedeemSteamInventoryItems
// 0x0058 (0x0058 - 0x0000)
struct PlayFabEconomyAPI_RedeemSteamInventoryItems final
{
public:
	struct FEconomyRedeemSteamInventoryItemsRequest Request;                                         // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyRedeemSteamInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_RedeemSteamInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_RedeemSteamInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_RedeemSteamInventoryItems) == 0x000058, "Wrong size on PlayFabEconomyAPI_RedeemSteamInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_RedeemSteamInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_RedeemSteamInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemSteamInventoryItems, onSuccess) == 0x000028, "Member 'PlayFabEconomyAPI_RedeemSteamInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemSteamInventoryItems, onFailure) == 0x000038, "Member 'PlayFabEconomyAPI_RedeemSteamInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemSteamInventoryItems, customData) == 0x000048, "Member 'PlayFabEconomyAPI_RedeemSteamInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_RedeemSteamInventoryItems, ReturnValue) == 0x000050, "Member 'PlayFabEconomyAPI_RedeemSteamInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.ReportItem
// 0x0078 (0x0078 - 0x0000)
struct PlayFabEconomyAPI_ReportItem final
{
public:
	struct FEconomyReportItemRequest              Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyReportItemResponse& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_ReportItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_ReportItem");
static_assert(sizeof(PlayFabEconomyAPI_ReportItem) == 0x000078, "Wrong size on PlayFabEconomyAPI_ReportItem");
static_assert(offsetof(PlayFabEconomyAPI_ReportItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_ReportItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItem, onSuccess) == 0x000048, "Member 'PlayFabEconomyAPI_ReportItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItem, onFailure) == 0x000058, "Member 'PlayFabEconomyAPI_ReportItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItem, customData) == 0x000068, "Member 'PlayFabEconomyAPI_ReportItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItem, ReturnValue) == 0x000070, "Member 'PlayFabEconomyAPI_ReportItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.ReportItemReview
// 0x0088 (0x0088 - 0x0000)
struct PlayFabEconomyAPI_ReportItemReview final
{
public:
	struct FEconomyReportItemReviewRequest        Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyReportItemReviewResponse& Result, class UObject* customData)> onSuccess; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_ReportItemReview) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_ReportItemReview");
static_assert(sizeof(PlayFabEconomyAPI_ReportItemReview) == 0x000088, "Wrong size on PlayFabEconomyAPI_ReportItemReview");
static_assert(offsetof(PlayFabEconomyAPI_ReportItemReview, Request) == 0x000000, "Member 'PlayFabEconomyAPI_ReportItemReview::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItemReview, onSuccess) == 0x000058, "Member 'PlayFabEconomyAPI_ReportItemReview::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItemReview, onFailure) == 0x000068, "Member 'PlayFabEconomyAPI_ReportItemReview::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItemReview, customData) == 0x000078, "Member 'PlayFabEconomyAPI_ReportItemReview::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItemReview, ReturnValue) == 0x000080, "Member 'PlayFabEconomyAPI_ReportItemReview::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.ReviewItem
// 0x0068 (0x0068 - 0x0000)
struct PlayFabEconomyAPI_ReviewItem final
{
public:
	struct FEconomyReviewItemRequest              Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyReviewItemResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_ReviewItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_ReviewItem");
static_assert(sizeof(PlayFabEconomyAPI_ReviewItem) == 0x000068, "Wrong size on PlayFabEconomyAPI_ReviewItem");
static_assert(offsetof(PlayFabEconomyAPI_ReviewItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_ReviewItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReviewItem, onSuccess) == 0x000038, "Member 'PlayFabEconomyAPI_ReviewItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReviewItem, onFailure) == 0x000048, "Member 'PlayFabEconomyAPI_ReviewItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReviewItem, customData) == 0x000058, "Member 'PlayFabEconomyAPI_ReviewItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReviewItem, ReturnValue) == 0x000060, "Member 'PlayFabEconomyAPI_ReviewItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.SearchItems
// 0x00B8 (0x00B8 - 0x0000)
struct PlayFabEconomyAPI_SearchItems final
{
public:
	struct FEconomySearchItemsRequest             Request;                                           // 0x0000(0x0088)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomySearchItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0088(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0098(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x00A8(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_SearchItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_SearchItems");
static_assert(sizeof(PlayFabEconomyAPI_SearchItems) == 0x0000B8, "Wrong size on PlayFabEconomyAPI_SearchItems");
static_assert(offsetof(PlayFabEconomyAPI_SearchItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_SearchItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SearchItems, onSuccess) == 0x000088, "Member 'PlayFabEconomyAPI_SearchItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SearchItems, onFailure) == 0x000098, "Member 'PlayFabEconomyAPI_SearchItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SearchItems, customData) == 0x0000A8, "Member 'PlayFabEconomyAPI_SearchItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SearchItems, ReturnValue) == 0x0000B0, "Member 'PlayFabEconomyAPI_SearchItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.SetItemModerationState
// 0x0070 (0x0070 - 0x0000)
struct PlayFabEconomyAPI_SetItemModerationState final
{
public:
	struct FEconomySetItemModerationStateRequest  Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomySetItemModerationStateResponse& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_SetItemModerationState) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_SetItemModerationState");
static_assert(sizeof(PlayFabEconomyAPI_SetItemModerationState) == 0x000070, "Wrong size on PlayFabEconomyAPI_SetItemModerationState");
static_assert(offsetof(PlayFabEconomyAPI_SetItemModerationState, Request) == 0x000000, "Member 'PlayFabEconomyAPI_SetItemModerationState::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SetItemModerationState, onSuccess) == 0x000040, "Member 'PlayFabEconomyAPI_SetItemModerationState::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SetItemModerationState, onFailure) == 0x000050, "Member 'PlayFabEconomyAPI_SetItemModerationState::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SetItemModerationState, customData) == 0x000060, "Member 'PlayFabEconomyAPI_SetItemModerationState::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SetItemModerationState, ReturnValue) == 0x000068, "Member 'PlayFabEconomyAPI_SetItemModerationState::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.SubmitItemReviewVote
// 0x0078 (0x0078 - 0x0000)
struct PlayFabEconomyAPI_SubmitItemReviewVote final
{
public:
	struct FEconomySubmitItemReviewVoteRequest    Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomySubmitItemReviewVoteResponse& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_SubmitItemReviewVote) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_SubmitItemReviewVote");
static_assert(sizeof(PlayFabEconomyAPI_SubmitItemReviewVote) == 0x000078, "Wrong size on PlayFabEconomyAPI_SubmitItemReviewVote");
static_assert(offsetof(PlayFabEconomyAPI_SubmitItemReviewVote, Request) == 0x000000, "Member 'PlayFabEconomyAPI_SubmitItemReviewVote::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SubmitItemReviewVote, onSuccess) == 0x000048, "Member 'PlayFabEconomyAPI_SubmitItemReviewVote::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SubmitItemReviewVote, onFailure) == 0x000058, "Member 'PlayFabEconomyAPI_SubmitItemReviewVote::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SubmitItemReviewVote, customData) == 0x000068, "Member 'PlayFabEconomyAPI_SubmitItemReviewVote::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SubmitItemReviewVote, ReturnValue) == 0x000070, "Member 'PlayFabEconomyAPI_SubmitItemReviewVote::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.SubtractInventoryItems
// 0x0090 (0x0090 - 0x0000)
struct PlayFabEconomyAPI_SubtractInventoryItems final
{
public:
	struct FEconomySubtractInventoryItemsRequest  Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomySubtractInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_SubtractInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_SubtractInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_SubtractInventoryItems) == 0x000090, "Wrong size on PlayFabEconomyAPI_SubtractInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_SubtractInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_SubtractInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SubtractInventoryItems, onSuccess) == 0x000060, "Member 'PlayFabEconomyAPI_SubtractInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SubtractInventoryItems, onFailure) == 0x000070, "Member 'PlayFabEconomyAPI_SubtractInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SubtractInventoryItems, customData) == 0x000080, "Member 'PlayFabEconomyAPI_SubtractInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SubtractInventoryItems, ReturnValue) == 0x000088, "Member 'PlayFabEconomyAPI_SubtractInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.TakedownItemReviews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_TakedownItemReviews final
{
public:
	struct FEconomyTakedownItemReviewsRequest     Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyTakedownItemReviewsResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_TakedownItemReviews) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_TakedownItemReviews");
static_assert(sizeof(PlayFabEconomyAPI_TakedownItemReviews) == 0x000050, "Wrong size on PlayFabEconomyAPI_TakedownItemReviews");
static_assert(offsetof(PlayFabEconomyAPI_TakedownItemReviews, Request) == 0x000000, "Member 'PlayFabEconomyAPI_TakedownItemReviews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_TakedownItemReviews, onSuccess) == 0x000020, "Member 'PlayFabEconomyAPI_TakedownItemReviews::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_TakedownItemReviews, onFailure) == 0x000030, "Member 'PlayFabEconomyAPI_TakedownItemReviews::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_TakedownItemReviews, customData) == 0x000040, "Member 'PlayFabEconomyAPI_TakedownItemReviews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_TakedownItemReviews, ReturnValue) == 0x000048, "Member 'PlayFabEconomyAPI_TakedownItemReviews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.TransferInventoryItems
// 0x00B8 (0x00B8 - 0x0000)
struct PlayFabEconomyAPI_TransferInventoryItems final
{
public:
	struct FEconomyTransferInventoryItemsRequest  Request;                                           // 0x0000(0x0088)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyTransferInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0088(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0098(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x00A8(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_TransferInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_TransferInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_TransferInventoryItems) == 0x0000B8, "Wrong size on PlayFabEconomyAPI_TransferInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_TransferInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_TransferInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_TransferInventoryItems, onSuccess) == 0x000088, "Member 'PlayFabEconomyAPI_TransferInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_TransferInventoryItems, onFailure) == 0x000098, "Member 'PlayFabEconomyAPI_TransferInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_TransferInventoryItems, customData) == 0x0000A8, "Member 'PlayFabEconomyAPI_TransferInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_TransferInventoryItems, ReturnValue) == 0x0000B0, "Member 'PlayFabEconomyAPI_TransferInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.UpdateCatalogConfig
// 0x0048 (0x0048 - 0x0000)
struct PlayFabEconomyAPI_UpdateCatalogConfig final
{
public:
	struct FEconomyUpdateCatalogConfigRequest     Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyUpdateCatalogConfigResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_UpdateCatalogConfig) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_UpdateCatalogConfig");
static_assert(sizeof(PlayFabEconomyAPI_UpdateCatalogConfig) == 0x000048, "Wrong size on PlayFabEconomyAPI_UpdateCatalogConfig");
static_assert(offsetof(PlayFabEconomyAPI_UpdateCatalogConfig, Request) == 0x000000, "Member 'PlayFabEconomyAPI_UpdateCatalogConfig::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateCatalogConfig, onSuccess) == 0x000018, "Member 'PlayFabEconomyAPI_UpdateCatalogConfig::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateCatalogConfig, onFailure) == 0x000028, "Member 'PlayFabEconomyAPI_UpdateCatalogConfig::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateCatalogConfig, customData) == 0x000038, "Member 'PlayFabEconomyAPI_UpdateCatalogConfig::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateCatalogConfig, ReturnValue) == 0x000040, "Member 'PlayFabEconomyAPI_UpdateCatalogConfig::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.UpdateDraftItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_UpdateDraftItem final
{
public:
	struct FEconomyUpdateDraftItemRequest         Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyUpdateDraftItemResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_UpdateDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_UpdateDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_UpdateDraftItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_UpdateDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_UpdateDraftItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_UpdateDraftItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateDraftItem, onSuccess) == 0x000020, "Member 'PlayFabEconomyAPI_UpdateDraftItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateDraftItem, onFailure) == 0x000030, "Member 'PlayFabEconomyAPI_UpdateDraftItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateDraftItem, customData) == 0x000040, "Member 'PlayFabEconomyAPI_UpdateDraftItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateDraftItem, ReturnValue) == 0x000048, "Member 'PlayFabEconomyAPI_UpdateDraftItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.UpdateInventoryItems
// 0x0080 (0x0080 - 0x0000)
struct PlayFabEconomyAPI_UpdateInventoryItems final
{
public:
	struct FEconomyUpdateInventoryItemsRequest    Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyUpdateInventoryItemsResponse& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_UpdateInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_UpdateInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_UpdateInventoryItems) == 0x000080, "Wrong size on PlayFabEconomyAPI_UpdateInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_UpdateInventoryItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_UpdateInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateInventoryItems, onSuccess) == 0x000050, "Member 'PlayFabEconomyAPI_UpdateInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateInventoryItems, onFailure) == 0x000060, "Member 'PlayFabEconomyAPI_UpdateInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateInventoryItems, customData) == 0x000070, "Member 'PlayFabEconomyAPI_UpdateInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateInventoryItems, ReturnValue) == 0x000078, "Member 'PlayFabEconomyAPI_UpdateInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperAddInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperAddInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperAddInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperAddInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperAddInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperAddInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperAddInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperAddInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperAddInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperAddInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperAddInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperAddInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperCreateDraftItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperCreateDraftItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperCreateDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperCreateDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperCreateDraftItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperCreateDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperCreateDraftItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperCreateDraftItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperCreateDraftItem, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperCreateDraftItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperCreateDraftItem, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperCreateDraftItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperCreateUploadUrls
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperCreateUploadUrls final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperCreateUploadUrls) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperCreateUploadUrls");
static_assert(sizeof(PlayFabEconomyAPI_HelperCreateUploadUrls) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperCreateUploadUrls");
static_assert(offsetof(PlayFabEconomyAPI_HelperCreateUploadUrls, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperCreateUploadUrls::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperCreateUploadUrls, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperCreateUploadUrls::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperCreateUploadUrls, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperCreateUploadUrls::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperDeleteEntityItemReviews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperDeleteEntityItemReviews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperDeleteEntityItemReviews) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperDeleteEntityItemReviews");
static_assert(sizeof(PlayFabEconomyAPI_HelperDeleteEntityItemReviews) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperDeleteEntityItemReviews");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteEntityItemReviews, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperDeleteEntityItemReviews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteEntityItemReviews, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperDeleteEntityItemReviews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteEntityItemReviews, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperDeleteEntityItemReviews::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperDeleteInventoryCollection
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperDeleteInventoryCollection final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperDeleteInventoryCollection) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperDeleteInventoryCollection");
static_assert(sizeof(PlayFabEconomyAPI_HelperDeleteInventoryCollection) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperDeleteInventoryCollection");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteInventoryCollection, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperDeleteInventoryCollection::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteInventoryCollection, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperDeleteInventoryCollection::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteInventoryCollection, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperDeleteInventoryCollection::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperDeleteInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperDeleteInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperDeleteInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperDeleteInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperDeleteInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperDeleteInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperDeleteInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperDeleteInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperDeleteInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperDeleteItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperDeleteItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperDeleteItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperDeleteItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperDeleteItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperDeleteItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperDeleteItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteItem, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperDeleteItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteItem, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperDeleteItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperExecuteInventoryOperations
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperExecuteInventoryOperations final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperExecuteInventoryOperations) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperExecuteInventoryOperations");
static_assert(sizeof(PlayFabEconomyAPI_HelperExecuteInventoryOperations) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperExecuteInventoryOperations");
static_assert(offsetof(PlayFabEconomyAPI_HelperExecuteInventoryOperations, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperExecuteInventoryOperations::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperExecuteInventoryOperations, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperExecuteInventoryOperations::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperExecuteInventoryOperations, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperExecuteInventoryOperations::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperExecuteTransferOperations
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperExecuteTransferOperations final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperExecuteTransferOperations) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperExecuteTransferOperations");
static_assert(sizeof(PlayFabEconomyAPI_HelperExecuteTransferOperations) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperExecuteTransferOperations");
static_assert(offsetof(PlayFabEconomyAPI_HelperExecuteTransferOperations, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperExecuteTransferOperations::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperExecuteTransferOperations, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperExecuteTransferOperations::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperExecuteTransferOperations, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperExecuteTransferOperations::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetCatalogConfig
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetCatalogConfig final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetCatalogConfig) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetCatalogConfig");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetCatalogConfig) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetCatalogConfig");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetCatalogConfig, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetCatalogConfig::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetCatalogConfig, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetCatalogConfig::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetCatalogConfig, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetCatalogConfig::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetDraftItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetDraftItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetDraftItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetDraftItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetDraftItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetDraftItem, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetDraftItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetDraftItem, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetDraftItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetDraftItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetDraftItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetDraftItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetDraftItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetDraftItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetDraftItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetDraftItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetDraftItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetDraftItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetDraftItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetDraftItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetDraftItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetEntityDraftItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetEntityDraftItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetEntityDraftItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetEntityDraftItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetEntityDraftItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetEntityDraftItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetEntityDraftItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetEntityDraftItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetEntityDraftItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetEntityDraftItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetEntityDraftItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetEntityDraftItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetEntityItemReview
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetEntityItemReview final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetEntityItemReview) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetEntityItemReview");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetEntityItemReview) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetEntityItemReview");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetEntityItemReview, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetEntityItemReview::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetEntityItemReview, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetEntityItemReview::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetEntityItemReview, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetEntityItemReview::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetInventoryCollectionIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetInventoryCollectionIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetInventoryCollectionIds) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetInventoryCollectionIds");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetInventoryCollectionIds) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetInventoryCollectionIds");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetInventoryCollectionIds, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetInventoryCollectionIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetInventoryCollectionIds, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetInventoryCollectionIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetInventoryCollectionIds, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetInventoryCollectionIds::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetInventoryOperationStatus
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetInventoryOperationStatus final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetInventoryOperationStatus) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetInventoryOperationStatus");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetInventoryOperationStatus) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetInventoryOperationStatus");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetInventoryOperationStatus, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetInventoryOperationStatus::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetInventoryOperationStatus, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetInventoryOperationStatus::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetInventoryOperationStatus, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetInventoryOperationStatus::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItem, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItem, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItemContainers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItemContainers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItemContainers) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItemContainers");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItemContainers) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItemContainers");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemContainers, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItemContainers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemContainers, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItemContainers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemContainers, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItemContainers::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItemModerationState
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItemModerationState final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItemModerationState) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItemModerationState");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItemModerationState) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItemModerationState");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemModerationState, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItemModerationState::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemModerationState, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItemModerationState::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemModerationState, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItemModerationState::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItemPublishStatus
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItemPublishStatus final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItemPublishStatus) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItemPublishStatus");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItemPublishStatus) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItemPublishStatus");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemPublishStatus, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItemPublishStatus::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemPublishStatus, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItemPublishStatus::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemPublishStatus, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItemPublishStatus::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItemReviews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItemReviews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItemReviews) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItemReviews");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItemReviews) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItemReviews");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemReviews, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItemReviews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemReviews, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItemReviews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemReviews, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItemReviews::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItemReviewSummary
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItemReviewSummary final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItemReviewSummary) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItemReviewSummary");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItemReviewSummary) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItemReviewSummary");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemReviewSummary, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItemReviewSummary::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemReviewSummary, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItemReviewSummary::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemReviewSummary, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItemReviewSummary::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetMicrosoftStoreAccessTokens
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetMicrosoftStoreAccessTokens final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetMicrosoftStoreAccessTokens) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetMicrosoftStoreAccessTokens");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetMicrosoftStoreAccessTokens) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetMicrosoftStoreAccessTokens");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetMicrosoftStoreAccessTokens, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetMicrosoftStoreAccessTokens::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetMicrosoftStoreAccessTokens, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetMicrosoftStoreAccessTokens::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetMicrosoftStoreAccessTokens, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetMicrosoftStoreAccessTokens::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetTransactionHistory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetTransactionHistory final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetTransactionHistory) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetTransactionHistory");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetTransactionHistory) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetTransactionHistory");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetTransactionHistory, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetTransactionHistory::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetTransactionHistory, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetTransactionHistory::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetTransactionHistory, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetTransactionHistory::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperPublishDraftItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperPublishDraftItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperPublishDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperPublishDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperPublishDraftItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperPublishDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperPublishDraftItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperPublishDraftItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperPublishDraftItem, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperPublishDraftItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperPublishDraftItem, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperPublishDraftItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperPurchaseInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperPurchaseInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperPurchaseInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperPurchaseInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperPurchaseInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperPurchaseInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperPurchaseInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperPurchaseInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperPurchaseInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperPurchaseInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperPurchaseInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperPurchaseInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperRedeemAppleAppStoreInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperRedeemAppleAppStoreInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperRedeemAppleAppStoreInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperRedeemAppleAppStoreInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperRedeemAppleAppStoreInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperRedeemAppleAppStoreInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemAppleAppStoreInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperRedeemAppleAppStoreInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemAppleAppStoreInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperRedeemAppleAppStoreInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemAppleAppStoreInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperRedeemAppleAppStoreInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperRedeemGooglePlayInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperRedeemGooglePlayInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperRedeemGooglePlayInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperRedeemGooglePlayInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperRedeemGooglePlayInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperRedeemGooglePlayInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemGooglePlayInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperRedeemGooglePlayInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemGooglePlayInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperRedeemGooglePlayInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemGooglePlayInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperRedeemGooglePlayInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperRedeemMicrosoftStoreInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperRedeemMicrosoftStoreInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperRedeemMicrosoftStoreInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperRedeemMicrosoftStoreInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperRedeemMicrosoftStoreInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperRedeemMicrosoftStoreInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemMicrosoftStoreInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperRedeemMicrosoftStoreInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemMicrosoftStoreInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperRedeemMicrosoftStoreInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemMicrosoftStoreInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperRedeemMicrosoftStoreInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperRedeemNintendoEShopInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperRedeemNintendoEShopInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperRedeemNintendoEShopInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperRedeemNintendoEShopInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperRedeemNintendoEShopInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperRedeemNintendoEShopInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemNintendoEShopInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperRedeemNintendoEShopInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemNintendoEShopInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperRedeemNintendoEShopInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemNintendoEShopInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperRedeemNintendoEShopInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperRedeemPlayStationStoreInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperRedeemPlayStationStoreInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperRedeemPlayStationStoreInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperRedeemPlayStationStoreInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperRedeemPlayStationStoreInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperRedeemPlayStationStoreInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemPlayStationStoreInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperRedeemPlayStationStoreInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemPlayStationStoreInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperRedeemPlayStationStoreInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemPlayStationStoreInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperRedeemPlayStationStoreInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperRedeemSteamInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperRedeemSteamInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperRedeemSteamInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperRedeemSteamInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperRedeemSteamInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperRedeemSteamInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemSteamInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperRedeemSteamInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemSteamInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperRedeemSteamInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperRedeemSteamInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperRedeemSteamInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperReportItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperReportItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperReportItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperReportItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperReportItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperReportItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperReportItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperReportItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperReportItem, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperReportItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperReportItem, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperReportItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperReportItemReview
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperReportItemReview final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperReportItemReview) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperReportItemReview");
static_assert(sizeof(PlayFabEconomyAPI_HelperReportItemReview) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperReportItemReview");
static_assert(offsetof(PlayFabEconomyAPI_HelperReportItemReview, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperReportItemReview::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperReportItemReview, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperReportItemReview::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperReportItemReview, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperReportItemReview::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperReviewItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperReviewItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperReviewItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperReviewItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperReviewItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperReviewItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperReviewItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperReviewItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperReviewItem, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperReviewItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperReviewItem, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperReviewItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperSearchItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperSearchItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperSearchItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperSearchItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperSearchItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperSearchItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperSearchItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperSearchItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSearchItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperSearchItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSearchItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperSearchItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperSetItemModerationState
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperSetItemModerationState final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperSetItemModerationState) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperSetItemModerationState");
static_assert(sizeof(PlayFabEconomyAPI_HelperSetItemModerationState) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperSetItemModerationState");
static_assert(offsetof(PlayFabEconomyAPI_HelperSetItemModerationState, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperSetItemModerationState::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSetItemModerationState, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperSetItemModerationState::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSetItemModerationState, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperSetItemModerationState::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperSubmitItemReviewVote
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperSubmitItemReviewVote final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperSubmitItemReviewVote) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperSubmitItemReviewVote");
static_assert(sizeof(PlayFabEconomyAPI_HelperSubmitItemReviewVote) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperSubmitItemReviewVote");
static_assert(offsetof(PlayFabEconomyAPI_HelperSubmitItemReviewVote, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperSubmitItemReviewVote::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSubmitItemReviewVote, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperSubmitItemReviewVote::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSubmitItemReviewVote, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperSubmitItemReviewVote::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperSubtractInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperSubtractInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperSubtractInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperSubtractInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperSubtractInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperSubtractInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperSubtractInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperSubtractInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSubtractInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperSubtractInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSubtractInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperSubtractInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperTakedownItemReviews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperTakedownItemReviews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperTakedownItemReviews) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperTakedownItemReviews");
static_assert(sizeof(PlayFabEconomyAPI_HelperTakedownItemReviews) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperTakedownItemReviews");
static_assert(offsetof(PlayFabEconomyAPI_HelperTakedownItemReviews, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperTakedownItemReviews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperTakedownItemReviews, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperTakedownItemReviews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperTakedownItemReviews, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperTakedownItemReviews::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperTransferInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperTransferInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperTransferInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperTransferInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperTransferInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperTransferInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperTransferInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperTransferInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperTransferInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperTransferInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperTransferInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperTransferInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperUpdateCatalogConfig
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperUpdateCatalogConfig final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperUpdateCatalogConfig) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperUpdateCatalogConfig");
static_assert(sizeof(PlayFabEconomyAPI_HelperUpdateCatalogConfig) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperUpdateCatalogConfig");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateCatalogConfig, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperUpdateCatalogConfig::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateCatalogConfig, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperUpdateCatalogConfig::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateCatalogConfig, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperUpdateCatalogConfig::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperUpdateDraftItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperUpdateDraftItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperUpdateDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperUpdateDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperUpdateDraftItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperUpdateDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateDraftItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperUpdateDraftItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateDraftItem, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperUpdateDraftItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateDraftItem, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperUpdateDraftItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperUpdateInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperUpdateInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperUpdateInventoryItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperUpdateInventoryItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperUpdateInventoryItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperUpdateInventoryItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateInventoryItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperUpdateInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateInventoryItems, customData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperUpdateInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateInventoryItems, successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperUpdateInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeAddInventoryItemsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeAddInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyAddInventoryItemsResponse      ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeAddInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeAddInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeAddInventoryItemsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodeAddInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeAddInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeAddInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeAddInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeAddInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeCreateDraftItemResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeCreateDraftItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyCreateDraftItemResponse        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeCreateDraftItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeCreateDraftItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeCreateDraftItemResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_decodeCreateDraftItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeCreateDraftItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeCreateDraftItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeCreateDraftItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeCreateDraftItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeCreateUploadUrlsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeCreateUploadUrlsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyCreateUploadUrlsResponse       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeCreateUploadUrlsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeCreateUploadUrlsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeCreateUploadUrlsResponseResponse) == 0x000020, "Wrong size on PlayFabEconomyModelDecoder_decodeCreateUploadUrlsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeCreateUploadUrlsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeCreateUploadUrlsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeCreateUploadUrlsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeCreateUploadUrlsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeDeleteEntityItemReviewsResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeDeleteEntityItemReviewsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyDeleteEntityItemReviewsResponse ReturnValue;                                      // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeDeleteEntityItemReviewsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeDeleteEntityItemReviewsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeDeleteEntityItemReviewsResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_decodeDeleteEntityItemReviewsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeDeleteEntityItemReviewsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeDeleteEntityItemReviewsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeDeleteEntityItemReviewsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeDeleteEntityItemReviewsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeDeleteInventoryCollectionResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeDeleteInventoryCollectionResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyDeleteInventoryCollectionResponse ReturnValue;                                    // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeDeleteInventoryCollectionResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeDeleteInventoryCollectionResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeDeleteInventoryCollectionResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_decodeDeleteInventoryCollectionResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeDeleteInventoryCollectionResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeDeleteInventoryCollectionResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeDeleteInventoryCollectionResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeDeleteInventoryCollectionResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeDeleteInventoryItemsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeDeleteInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyDeleteInventoryItemsResponse   ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeDeleteInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeDeleteInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeDeleteInventoryItemsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodeDeleteInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeDeleteInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeDeleteInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeDeleteInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeDeleteInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeDeleteItemResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeDeleteItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyDeleteItemResponse             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeDeleteItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeDeleteItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeDeleteItemResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_decodeDeleteItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeDeleteItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeDeleteItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeDeleteItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeDeleteItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeExecuteInventoryOperationsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeExecuteInventoryOperationsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyExecuteInventoryOperationsResponse ReturnValue;                                   // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeExecuteInventoryOperationsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeExecuteInventoryOperationsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeExecuteInventoryOperationsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodeExecuteInventoryOperationsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeExecuteInventoryOperationsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeExecuteInventoryOperationsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeExecuteInventoryOperationsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeExecuteInventoryOperationsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeExecuteTransferOperationsResponseResponse
// 0x0080 (0x0080 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeExecuteTransferOperationsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyExecuteTransferOperationsResponse ReturnValue;                                    // 0x0008(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeExecuteTransferOperationsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeExecuteTransferOperationsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeExecuteTransferOperationsResponseResponse) == 0x000080, "Wrong size on PlayFabEconomyModelDecoder_decodeExecuteTransferOperationsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeExecuteTransferOperationsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeExecuteTransferOperationsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeExecuteTransferOperationsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeExecuteTransferOperationsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetCatalogConfigResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetCatalogConfigResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetCatalogConfigResponse       ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetCatalogConfigResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetCatalogConfigResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetCatalogConfigResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_decodeGetCatalogConfigResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetCatalogConfigResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetCatalogConfigResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetCatalogConfigResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetCatalogConfigResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetDraftItemResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetDraftItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetDraftItemResponse           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetDraftItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetDraftItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetDraftItemResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_decodeGetDraftItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetDraftItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetDraftItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetDraftItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetDraftItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetDraftItemsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetDraftItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetDraftItemsResponse          ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetDraftItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetDraftItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetDraftItemsResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_decodeGetDraftItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetDraftItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetDraftItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetDraftItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetDraftItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetEntityDraftItemsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetEntityDraftItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetEntityDraftItemsResponse    ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetEntityDraftItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetEntityDraftItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetEntityDraftItemsResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_decodeGetEntityDraftItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetEntityDraftItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetEntityDraftItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetEntityDraftItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetEntityDraftItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetEntityItemReviewResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetEntityItemReviewResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetEntityItemReviewResponse    ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetEntityItemReviewResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetEntityItemReviewResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetEntityItemReviewResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_decodeGetEntityItemReviewResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetEntityItemReviewResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetEntityItemReviewResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetEntityItemReviewResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetEntityItemReviewResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetInventoryCollectionIdsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetInventoryCollectionIdsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetInventoryCollectionIdsResponse ReturnValue;                                    // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetInventoryCollectionIdsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetInventoryCollectionIdsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetInventoryCollectionIdsResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_decodeGetInventoryCollectionIdsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetInventoryCollectionIdsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetInventoryCollectionIdsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetInventoryCollectionIdsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetInventoryCollectionIdsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetInventoryItemsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetInventoryItemsResponse      ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetInventoryItemsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodeGetInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetInventoryOperationStatusResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetInventoryOperationStatusResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetInventoryOperationStatusResponse ReturnValue;                                  // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetInventoryOperationStatusResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetInventoryOperationStatusResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetInventoryOperationStatusResponseResponse) == 0x000020, "Wrong size on PlayFabEconomyModelDecoder_decodeGetInventoryOperationStatusResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetInventoryOperationStatusResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetInventoryOperationStatusResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetInventoryOperationStatusResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetInventoryOperationStatusResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemContainersResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetItemContainersResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemContainersResponse      ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetItemContainersResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetItemContainersResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetItemContainersResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_decodeGetItemContainersResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemContainersResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetItemContainersResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemContainersResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetItemContainersResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemModerationStateResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetItemModerationStateResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemModerationStateResponse ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetItemModerationStateResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetItemModerationStateResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetItemModerationStateResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_decodeGetItemModerationStateResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemModerationStateResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetItemModerationStateResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemModerationStateResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetItemModerationStateResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemPublishStatusResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetItemPublishStatusResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemPublishStatusResponse   ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetItemPublishStatusResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetItemPublishStatusResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetItemPublishStatusResponseResponse) == 0x000028, "Wrong size on PlayFabEconomyModelDecoder_decodeGetItemPublishStatusResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemPublishStatusResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetItemPublishStatusResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemPublishStatusResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetItemPublishStatusResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemResponse                ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetItemResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_decodeGetItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemReviewsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetItemReviewsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemReviewsResponse         ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetItemReviewsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetItemReviewsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetItemReviewsResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_decodeGetItemReviewsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemReviewsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetItemReviewsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemReviewsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetItemReviewsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemReviewSummaryResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetItemReviewSummaryResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemReviewSummaryResponse   ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetItemReviewSummaryResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetItemReviewSummaryResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetItemReviewSummaryResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_decodeGetItemReviewSummaryResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemReviewSummaryResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetItemReviewSummaryResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemReviewSummaryResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetItemReviewSummaryResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemsResponse               ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetItemsResponseResponse) == 0x000020, "Wrong size on PlayFabEconomyModelDecoder_decodeGetItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetMicrosoftStoreAccessTokensResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetMicrosoftStoreAccessTokensResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetMicrosoftStoreAccessTokensResponse ReturnValue;                                // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetMicrosoftStoreAccessTokensResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetMicrosoftStoreAccessTokensResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetMicrosoftStoreAccessTokensResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_decodeGetMicrosoftStoreAccessTokensResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetMicrosoftStoreAccessTokensResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetMicrosoftStoreAccessTokensResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetMicrosoftStoreAccessTokensResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetMicrosoftStoreAccessTokensResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetTransactionHistoryResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeGetTransactionHistoryResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetTransactionHistoryResponse  ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeGetTransactionHistoryResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeGetTransactionHistoryResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeGetTransactionHistoryResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_decodeGetTransactionHistoryResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetTransactionHistoryResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeGetTransactionHistoryResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeGetTransactionHistoryResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeGetTransactionHistoryResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodePublishDraftItemResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_decodePublishDraftItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyPublishDraftItemResponse       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodePublishDraftItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodePublishDraftItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodePublishDraftItemResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_decodePublishDraftItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodePublishDraftItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodePublishDraftItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodePublishDraftItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodePublishDraftItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodePurchaseInventoryItemsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodePurchaseInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyPurchaseInventoryItemsResponse ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodePurchaseInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodePurchaseInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodePurchaseInventoryItemsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodePurchaseInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodePurchaseInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodePurchaseInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodePurchaseInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodePurchaseInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeRedeemAppleAppStoreInventoryItemsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeRedeemAppleAppStoreInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyRedeemAppleAppStoreInventoryItemsResponse ReturnValue;                            // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeRedeemAppleAppStoreInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeRedeemAppleAppStoreInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeRedeemAppleAppStoreInventoryItemsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodeRedeemAppleAppStoreInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeRedeemAppleAppStoreInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeRedeemAppleAppStoreInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeRedeemAppleAppStoreInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeRedeemAppleAppStoreInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeRedeemGooglePlayInventoryItemsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeRedeemGooglePlayInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyRedeemGooglePlayInventoryItemsResponse ReturnValue;                               // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeRedeemGooglePlayInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeRedeemGooglePlayInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeRedeemGooglePlayInventoryItemsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodeRedeemGooglePlayInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeRedeemGooglePlayInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeRedeemGooglePlayInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeRedeemGooglePlayInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeRedeemGooglePlayInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeRedeemMicrosoftStoreInventoryItemsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeRedeemMicrosoftStoreInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyRedeemMicrosoftStoreInventoryItemsResponse ReturnValue;                           // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeRedeemMicrosoftStoreInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeRedeemMicrosoftStoreInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeRedeemMicrosoftStoreInventoryItemsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodeRedeemMicrosoftStoreInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeRedeemMicrosoftStoreInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeRedeemMicrosoftStoreInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeRedeemMicrosoftStoreInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeRedeemMicrosoftStoreInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeRedeemNintendoEShopInventoryItemsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeRedeemNintendoEShopInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyRedeemNintendoEShopInventoryItemsResponse ReturnValue;                            // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeRedeemNintendoEShopInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeRedeemNintendoEShopInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeRedeemNintendoEShopInventoryItemsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodeRedeemNintendoEShopInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeRedeemNintendoEShopInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeRedeemNintendoEShopInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeRedeemNintendoEShopInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeRedeemNintendoEShopInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeRedeemPlayStationStoreInventoryItemsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeRedeemPlayStationStoreInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyRedeemPlayStationStoreInventoryItemsResponse ReturnValue;                         // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeRedeemPlayStationStoreInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeRedeemPlayStationStoreInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeRedeemPlayStationStoreInventoryItemsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodeRedeemPlayStationStoreInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeRedeemPlayStationStoreInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeRedeemPlayStationStoreInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeRedeemPlayStationStoreInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeRedeemPlayStationStoreInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeRedeemSteamInventoryItemsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeRedeemSteamInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyRedeemSteamInventoryItemsResponse ReturnValue;                                    // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeRedeemSteamInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeRedeemSteamInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeRedeemSteamInventoryItemsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodeRedeemSteamInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeRedeemSteamInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeRedeemSteamInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeRedeemSteamInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeRedeemSteamInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeReportItemResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeReportItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyReportItemResponse             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeReportItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeReportItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeReportItemResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_decodeReportItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeReportItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeReportItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeReportItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeReportItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeReportItemReviewResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeReportItemReviewResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyReportItemReviewResponse       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeReportItemReviewResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeReportItemReviewResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeReportItemReviewResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_decodeReportItemReviewResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeReportItemReviewResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeReportItemReviewResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeReportItemReviewResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeReportItemReviewResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeReviewItemResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeReviewItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyReviewItemResponse             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeReviewItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeReviewItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeReviewItemResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_decodeReviewItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeReviewItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeReviewItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeReviewItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeReviewItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeSearchItemsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeSearchItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomySearchItemsResponse            ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeSearchItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeSearchItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeSearchItemsResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_decodeSearchItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeSearchItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeSearchItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeSearchItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeSearchItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeSetItemModerationStateResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeSetItemModerationStateResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomySetItemModerationStateResponse ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeSetItemModerationStateResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeSetItemModerationStateResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeSetItemModerationStateResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_decodeSetItemModerationStateResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeSetItemModerationStateResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeSetItemModerationStateResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeSetItemModerationStateResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeSetItemModerationStateResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeSubmitItemReviewVoteResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeSubmitItemReviewVoteResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomySubmitItemReviewVoteResponse   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeSubmitItemReviewVoteResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeSubmitItemReviewVoteResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeSubmitItemReviewVoteResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_decodeSubmitItemReviewVoteResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeSubmitItemReviewVoteResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeSubmitItemReviewVoteResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeSubmitItemReviewVoteResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeSubmitItemReviewVoteResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeSubtractInventoryItemsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeSubtractInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomySubtractInventoryItemsResponse ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeSubtractInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeSubtractInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeSubtractInventoryItemsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodeSubtractInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeSubtractInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeSubtractInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeSubtractInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeSubtractInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeTakedownItemReviewsResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeTakedownItemReviewsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyTakedownItemReviewsResponse    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeTakedownItemReviewsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeTakedownItemReviewsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeTakedownItemReviewsResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_decodeTakedownItemReviewsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeTakedownItemReviewsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeTakedownItemReviewsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeTakedownItemReviewsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeTakedownItemReviewsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeTransferInventoryItemsResponseResponse
// 0x0070 (0x0070 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeTransferInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyTransferInventoryItemsResponse ReturnValue;                                       // 0x0008(0x0068)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeTransferInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeTransferInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeTransferInventoryItemsResponseResponse) == 0x000070, "Wrong size on PlayFabEconomyModelDecoder_decodeTransferInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeTransferInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeTransferInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeTransferInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeTransferInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeUpdateCatalogConfigResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeUpdateCatalogConfigResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyUpdateCatalogConfigResponse    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeUpdateCatalogConfigResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeUpdateCatalogConfigResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeUpdateCatalogConfigResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_decodeUpdateCatalogConfigResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeUpdateCatalogConfigResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeUpdateCatalogConfigResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeUpdateCatalogConfigResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeUpdateCatalogConfigResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeUpdateDraftItemResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeUpdateDraftItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyUpdateDraftItemResponse        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeUpdateDraftItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeUpdateDraftItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeUpdateDraftItemResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_decodeUpdateDraftItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeUpdateDraftItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeUpdateDraftItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeUpdateDraftItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeUpdateDraftItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeUpdateInventoryItemsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyModelDecoder_decodeUpdateInventoryItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyUpdateInventoryItemsResponse   ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_decodeUpdateInventoryItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_decodeUpdateInventoryItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_decodeUpdateInventoryItemsResponseResponse) == 0x000040, "Wrong size on PlayFabEconomyModelDecoder_decodeUpdateInventoryItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeUpdateInventoryItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_decodeUpdateInventoryItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_decodeUpdateInventoryItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_decodeUpdateInventoryItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.CreateTelemetryKey
// 0x0058 (0x0058 - 0x0000)
struct PlayFabEventsAPI_CreateTelemetryKey final
{
public:
	struct FEventsCreateTelemetryKeyRequest       Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEventsCreateTelemetryKeyResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEventsAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_CreateTelemetryKey) == 0x000008, "Wrong alignment on PlayFabEventsAPI_CreateTelemetryKey");
static_assert(sizeof(PlayFabEventsAPI_CreateTelemetryKey) == 0x000058, "Wrong size on PlayFabEventsAPI_CreateTelemetryKey");
static_assert(offsetof(PlayFabEventsAPI_CreateTelemetryKey, Request) == 0x000000, "Member 'PlayFabEventsAPI_CreateTelemetryKey::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_CreateTelemetryKey, onSuccess) == 0x000028, "Member 'PlayFabEventsAPI_CreateTelemetryKey::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_CreateTelemetryKey, onFailure) == 0x000038, "Member 'PlayFabEventsAPI_CreateTelemetryKey::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_CreateTelemetryKey, customData) == 0x000048, "Member 'PlayFabEventsAPI_CreateTelemetryKey::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_CreateTelemetryKey, ReturnValue) == 0x000050, "Member 'PlayFabEventsAPI_CreateTelemetryKey::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.DeleteTelemetryKey
// 0x0058 (0x0058 - 0x0000)
struct PlayFabEventsAPI_DeleteTelemetryKey final
{
public:
	struct FEventsDeleteTelemetryKeyRequest       Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEventsDeleteTelemetryKeyResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEventsAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_DeleteTelemetryKey) == 0x000008, "Wrong alignment on PlayFabEventsAPI_DeleteTelemetryKey");
static_assert(sizeof(PlayFabEventsAPI_DeleteTelemetryKey) == 0x000058, "Wrong size on PlayFabEventsAPI_DeleteTelemetryKey");
static_assert(offsetof(PlayFabEventsAPI_DeleteTelemetryKey, Request) == 0x000000, "Member 'PlayFabEventsAPI_DeleteTelemetryKey::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_DeleteTelemetryKey, onSuccess) == 0x000028, "Member 'PlayFabEventsAPI_DeleteTelemetryKey::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_DeleteTelemetryKey, onFailure) == 0x000038, "Member 'PlayFabEventsAPI_DeleteTelemetryKey::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_DeleteTelemetryKey, customData) == 0x000048, "Member 'PlayFabEventsAPI_DeleteTelemetryKey::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_DeleteTelemetryKey, ReturnValue) == 0x000050, "Member 'PlayFabEventsAPI_DeleteTelemetryKey::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.GetTelemetryKey
// 0x0058 (0x0058 - 0x0000)
struct PlayFabEventsAPI_GetTelemetryKey final
{
public:
	struct FEventsGetTelemetryKeyRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEventsGetTelemetryKeyResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEventsAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_GetTelemetryKey) == 0x000008, "Wrong alignment on PlayFabEventsAPI_GetTelemetryKey");
static_assert(sizeof(PlayFabEventsAPI_GetTelemetryKey) == 0x000058, "Wrong size on PlayFabEventsAPI_GetTelemetryKey");
static_assert(offsetof(PlayFabEventsAPI_GetTelemetryKey, Request) == 0x000000, "Member 'PlayFabEventsAPI_GetTelemetryKey::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_GetTelemetryKey, onSuccess) == 0x000028, "Member 'PlayFabEventsAPI_GetTelemetryKey::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_GetTelemetryKey, onFailure) == 0x000038, "Member 'PlayFabEventsAPI_GetTelemetryKey::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_GetTelemetryKey, customData) == 0x000048, "Member 'PlayFabEventsAPI_GetTelemetryKey::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_GetTelemetryKey, ReturnValue) == 0x000050, "Member 'PlayFabEventsAPI_GetTelemetryKey::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.ListTelemetryKeys
// 0x0048 (0x0048 - 0x0000)
struct PlayFabEventsAPI_ListTelemetryKeys final
{
public:
	struct FEventsListTelemetryKeysRequest        Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEventsListTelemetryKeysResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEventsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_ListTelemetryKeys) == 0x000008, "Wrong alignment on PlayFabEventsAPI_ListTelemetryKeys");
static_assert(sizeof(PlayFabEventsAPI_ListTelemetryKeys) == 0x000048, "Wrong size on PlayFabEventsAPI_ListTelemetryKeys");
static_assert(offsetof(PlayFabEventsAPI_ListTelemetryKeys, Request) == 0x000000, "Member 'PlayFabEventsAPI_ListTelemetryKeys::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_ListTelemetryKeys, onSuccess) == 0x000018, "Member 'PlayFabEventsAPI_ListTelemetryKeys::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_ListTelemetryKeys, onFailure) == 0x000028, "Member 'PlayFabEventsAPI_ListTelemetryKeys::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_ListTelemetryKeys, customData) == 0x000038, "Member 'PlayFabEventsAPI_ListTelemetryKeys::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_ListTelemetryKeys, ReturnValue) == 0x000040, "Member 'PlayFabEventsAPI_ListTelemetryKeys::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.SetTelemetryKeyActive
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEventsAPI_SetTelemetryKeyActive final
{
public:
	struct FEventsSetTelemetryKeyActiveRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEventsSetTelemetryKeyActiveResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEventsAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_SetTelemetryKeyActive) == 0x000008, "Wrong alignment on PlayFabEventsAPI_SetTelemetryKeyActive");
static_assert(sizeof(PlayFabEventsAPI_SetTelemetryKeyActive) == 0x000060, "Wrong size on PlayFabEventsAPI_SetTelemetryKeyActive");
static_assert(offsetof(PlayFabEventsAPI_SetTelemetryKeyActive, Request) == 0x000000, "Member 'PlayFabEventsAPI_SetTelemetryKeyActive::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_SetTelemetryKeyActive, onSuccess) == 0x000030, "Member 'PlayFabEventsAPI_SetTelemetryKeyActive::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_SetTelemetryKeyActive, onFailure) == 0x000040, "Member 'PlayFabEventsAPI_SetTelemetryKeyActive::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_SetTelemetryKeyActive, customData) == 0x000050, "Member 'PlayFabEventsAPI_SetTelemetryKeyActive::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_SetTelemetryKeyActive, ReturnValue) == 0x000058, "Member 'PlayFabEventsAPI_SetTelemetryKeyActive::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.WriteEvents
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_WriteEvents final
{
public:
	struct FEventsWriteEventsRequest              Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEventsWriteEventsResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEventsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_WriteEvents) == 0x000008, "Wrong alignment on PlayFabEventsAPI_WriteEvents");
static_assert(sizeof(PlayFabEventsAPI_WriteEvents) == 0x000050, "Wrong size on PlayFabEventsAPI_WriteEvents");
static_assert(offsetof(PlayFabEventsAPI_WriteEvents, Request) == 0x000000, "Member 'PlayFabEventsAPI_WriteEvents::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteEvents, onSuccess) == 0x000020, "Member 'PlayFabEventsAPI_WriteEvents::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteEvents, onFailure) == 0x000030, "Member 'PlayFabEventsAPI_WriteEvents::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteEvents, customData) == 0x000040, "Member 'PlayFabEventsAPI_WriteEvents::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteEvents, ReturnValue) == 0x000048, "Member 'PlayFabEventsAPI_WriteEvents::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.WriteTelemetryEvents
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_WriteTelemetryEvents final
{
public:
	struct FEventsWriteEventsRequest              Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEventsWriteEventsResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEventsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_WriteTelemetryEvents) == 0x000008, "Wrong alignment on PlayFabEventsAPI_WriteTelemetryEvents");
static_assert(sizeof(PlayFabEventsAPI_WriteTelemetryEvents) == 0x000050, "Wrong size on PlayFabEventsAPI_WriteTelemetryEvents");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEvents, Request) == 0x000000, "Member 'PlayFabEventsAPI_WriteTelemetryEvents::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEvents, onSuccess) == 0x000020, "Member 'PlayFabEventsAPI_WriteTelemetryEvents::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEvents, onFailure) == 0x000030, "Member 'PlayFabEventsAPI_WriteTelemetryEvents::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEvents, customData) == 0x000040, "Member 'PlayFabEventsAPI_WriteTelemetryEvents::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEvents, ReturnValue) == 0x000048, "Member 'PlayFabEventsAPI_WriteTelemetryEvents::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.WriteTelemetryEventsWithTelemetryKey
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey final
{
public:
	struct FEventsWriteEventsRequest              Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class FString                                 telemetryKey;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEventsWriteEventsResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEventsAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey) == 0x000008, "Wrong alignment on PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey");
static_assert(sizeof(PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey) == 0x000060, "Wrong size on PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey, Request) == 0x000000, "Member 'PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey, telemetryKey) == 0x000020, "Member 'PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey::telemetryKey' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey, onSuccess) == 0x000030, "Member 'PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey, onFailure) == 0x000040, "Member 'PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey, customData) == 0x000050, "Member 'PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey, ReturnValue) == 0x000058, "Member 'PlayFabEventsAPI_WriteTelemetryEventsWithTelemetryKey::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.HelperCreateTelemetryKey
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_HelperCreateTelemetryKey final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEventsAPI_HelperCreateTelemetryKey) == 0x000008, "Wrong alignment on PlayFabEventsAPI_HelperCreateTelemetryKey");
static_assert(sizeof(PlayFabEventsAPI_HelperCreateTelemetryKey) == 0x000050, "Wrong size on PlayFabEventsAPI_HelperCreateTelemetryKey");
static_assert(offsetof(PlayFabEventsAPI_HelperCreateTelemetryKey, Response) == 0x000000, "Member 'PlayFabEventsAPI_HelperCreateTelemetryKey::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperCreateTelemetryKey, customData) == 0x000040, "Member 'PlayFabEventsAPI_HelperCreateTelemetryKey::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperCreateTelemetryKey, successful) == 0x000048, "Member 'PlayFabEventsAPI_HelperCreateTelemetryKey::successful' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.HelperDeleteTelemetryKey
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_HelperDeleteTelemetryKey final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEventsAPI_HelperDeleteTelemetryKey) == 0x000008, "Wrong alignment on PlayFabEventsAPI_HelperDeleteTelemetryKey");
static_assert(sizeof(PlayFabEventsAPI_HelperDeleteTelemetryKey) == 0x000050, "Wrong size on PlayFabEventsAPI_HelperDeleteTelemetryKey");
static_assert(offsetof(PlayFabEventsAPI_HelperDeleteTelemetryKey, Response) == 0x000000, "Member 'PlayFabEventsAPI_HelperDeleteTelemetryKey::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperDeleteTelemetryKey, customData) == 0x000040, "Member 'PlayFabEventsAPI_HelperDeleteTelemetryKey::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperDeleteTelemetryKey, successful) == 0x000048, "Member 'PlayFabEventsAPI_HelperDeleteTelemetryKey::successful' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.HelperGetTelemetryKey
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_HelperGetTelemetryKey final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEventsAPI_HelperGetTelemetryKey) == 0x000008, "Wrong alignment on PlayFabEventsAPI_HelperGetTelemetryKey");
static_assert(sizeof(PlayFabEventsAPI_HelperGetTelemetryKey) == 0x000050, "Wrong size on PlayFabEventsAPI_HelperGetTelemetryKey");
static_assert(offsetof(PlayFabEventsAPI_HelperGetTelemetryKey, Response) == 0x000000, "Member 'PlayFabEventsAPI_HelperGetTelemetryKey::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperGetTelemetryKey, customData) == 0x000040, "Member 'PlayFabEventsAPI_HelperGetTelemetryKey::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperGetTelemetryKey, successful) == 0x000048, "Member 'PlayFabEventsAPI_HelperGetTelemetryKey::successful' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.HelperListTelemetryKeys
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_HelperListTelemetryKeys final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEventsAPI_HelperListTelemetryKeys) == 0x000008, "Wrong alignment on PlayFabEventsAPI_HelperListTelemetryKeys");
static_assert(sizeof(PlayFabEventsAPI_HelperListTelemetryKeys) == 0x000050, "Wrong size on PlayFabEventsAPI_HelperListTelemetryKeys");
static_assert(offsetof(PlayFabEventsAPI_HelperListTelemetryKeys, Response) == 0x000000, "Member 'PlayFabEventsAPI_HelperListTelemetryKeys::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperListTelemetryKeys, customData) == 0x000040, "Member 'PlayFabEventsAPI_HelperListTelemetryKeys::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperListTelemetryKeys, successful) == 0x000048, "Member 'PlayFabEventsAPI_HelperListTelemetryKeys::successful' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.HelperSetTelemetryKeyActive
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_HelperSetTelemetryKeyActive final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEventsAPI_HelperSetTelemetryKeyActive) == 0x000008, "Wrong alignment on PlayFabEventsAPI_HelperSetTelemetryKeyActive");
static_assert(sizeof(PlayFabEventsAPI_HelperSetTelemetryKeyActive) == 0x000050, "Wrong size on PlayFabEventsAPI_HelperSetTelemetryKeyActive");
static_assert(offsetof(PlayFabEventsAPI_HelperSetTelemetryKeyActive, Response) == 0x000000, "Member 'PlayFabEventsAPI_HelperSetTelemetryKeyActive::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperSetTelemetryKeyActive, customData) == 0x000040, "Member 'PlayFabEventsAPI_HelperSetTelemetryKeyActive::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperSetTelemetryKeyActive, successful) == 0x000048, "Member 'PlayFabEventsAPI_HelperSetTelemetryKeyActive::successful' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.HelperWriteEvents
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_HelperWriteEvents final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEventsAPI_HelperWriteEvents) == 0x000008, "Wrong alignment on PlayFabEventsAPI_HelperWriteEvents");
static_assert(sizeof(PlayFabEventsAPI_HelperWriteEvents) == 0x000050, "Wrong size on PlayFabEventsAPI_HelperWriteEvents");
static_assert(offsetof(PlayFabEventsAPI_HelperWriteEvents, Response) == 0x000000, "Member 'PlayFabEventsAPI_HelperWriteEvents::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperWriteEvents, customData) == 0x000040, "Member 'PlayFabEventsAPI_HelperWriteEvents::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperWriteEvents, successful) == 0x000048, "Member 'PlayFabEventsAPI_HelperWriteEvents::successful' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.HelperWriteTelemetryEvents
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_HelperWriteTelemetryEvents final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEventsAPI_HelperWriteTelemetryEvents) == 0x000008, "Wrong alignment on PlayFabEventsAPI_HelperWriteTelemetryEvents");
static_assert(sizeof(PlayFabEventsAPI_HelperWriteTelemetryEvents) == 0x000050, "Wrong size on PlayFabEventsAPI_HelperWriteTelemetryEvents");
static_assert(offsetof(PlayFabEventsAPI_HelperWriteTelemetryEvents, Response) == 0x000000, "Member 'PlayFabEventsAPI_HelperWriteTelemetryEvents::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperWriteTelemetryEvents, customData) == 0x000040, "Member 'PlayFabEventsAPI_HelperWriteTelemetryEvents::customData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperWriteTelemetryEvents, successful) == 0x000048, "Member 'PlayFabEventsAPI_HelperWriteTelemetryEvents::successful' has a wrong offset!");

// Function PlayFab.PlayFabEventsModelDecoder.decodeCreateTelemetryKeyResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEventsModelDecoder_decodeCreateTelemetryKeyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEventsCreateTelemetryKeyResponse      ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsModelDecoder_decodeCreateTelemetryKeyResponseResponse) == 0x000008, "Wrong alignment on PlayFabEventsModelDecoder_decodeCreateTelemetryKeyResponseResponse");
static_assert(sizeof(PlayFabEventsModelDecoder_decodeCreateTelemetryKeyResponseResponse) == 0x000018, "Wrong size on PlayFabEventsModelDecoder_decodeCreateTelemetryKeyResponseResponse");
static_assert(offsetof(PlayFabEventsModelDecoder_decodeCreateTelemetryKeyResponseResponse, Response) == 0x000000, "Member 'PlayFabEventsModelDecoder_decodeCreateTelemetryKeyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsModelDecoder_decodeCreateTelemetryKeyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEventsModelDecoder_decodeCreateTelemetryKeyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsModelDecoder.decodeDeleteTelemetryKeyResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEventsModelDecoder_decodeDeleteTelemetryKeyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEventsDeleteTelemetryKeyResponse      ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsModelDecoder_decodeDeleteTelemetryKeyResponseResponse) == 0x000008, "Wrong alignment on PlayFabEventsModelDecoder_decodeDeleteTelemetryKeyResponseResponse");
static_assert(sizeof(PlayFabEventsModelDecoder_decodeDeleteTelemetryKeyResponseResponse) == 0x000018, "Wrong size on PlayFabEventsModelDecoder_decodeDeleteTelemetryKeyResponseResponse");
static_assert(offsetof(PlayFabEventsModelDecoder_decodeDeleteTelemetryKeyResponseResponse, Response) == 0x000000, "Member 'PlayFabEventsModelDecoder_decodeDeleteTelemetryKeyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsModelDecoder_decodeDeleteTelemetryKeyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEventsModelDecoder_decodeDeleteTelemetryKeyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsModelDecoder.decodeGetTelemetryKeyResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEventsModelDecoder_decodeGetTelemetryKeyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEventsGetTelemetryKeyResponse         ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsModelDecoder_decodeGetTelemetryKeyResponseResponse) == 0x000008, "Wrong alignment on PlayFabEventsModelDecoder_decodeGetTelemetryKeyResponseResponse");
static_assert(sizeof(PlayFabEventsModelDecoder_decodeGetTelemetryKeyResponseResponse) == 0x000018, "Wrong size on PlayFabEventsModelDecoder_decodeGetTelemetryKeyResponseResponse");
static_assert(offsetof(PlayFabEventsModelDecoder_decodeGetTelemetryKeyResponseResponse, Response) == 0x000000, "Member 'PlayFabEventsModelDecoder_decodeGetTelemetryKeyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsModelDecoder_decodeGetTelemetryKeyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEventsModelDecoder_decodeGetTelemetryKeyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsModelDecoder.decodeListTelemetryKeysResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEventsModelDecoder_decodeListTelemetryKeysResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEventsListTelemetryKeysResponse       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsModelDecoder_decodeListTelemetryKeysResponseResponse) == 0x000008, "Wrong alignment on PlayFabEventsModelDecoder_decodeListTelemetryKeysResponseResponse");
static_assert(sizeof(PlayFabEventsModelDecoder_decodeListTelemetryKeysResponseResponse) == 0x000020, "Wrong size on PlayFabEventsModelDecoder_decodeListTelemetryKeysResponseResponse");
static_assert(offsetof(PlayFabEventsModelDecoder_decodeListTelemetryKeysResponseResponse, Response) == 0x000000, "Member 'PlayFabEventsModelDecoder_decodeListTelemetryKeysResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsModelDecoder_decodeListTelemetryKeysResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEventsModelDecoder_decodeListTelemetryKeysResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsModelDecoder.decodeSetTelemetryKeyActiveResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEventsModelDecoder_decodeSetTelemetryKeyActiveResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEventsSetTelemetryKeyActiveResponse   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsModelDecoder_decodeSetTelemetryKeyActiveResponseResponse) == 0x000008, "Wrong alignment on PlayFabEventsModelDecoder_decodeSetTelemetryKeyActiveResponseResponse");
static_assert(sizeof(PlayFabEventsModelDecoder_decodeSetTelemetryKeyActiveResponseResponse) == 0x000020, "Wrong size on PlayFabEventsModelDecoder_decodeSetTelemetryKeyActiveResponseResponse");
static_assert(offsetof(PlayFabEventsModelDecoder_decodeSetTelemetryKeyActiveResponseResponse, Response) == 0x000000, "Member 'PlayFabEventsModelDecoder_decodeSetTelemetryKeyActiveResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsModelDecoder_decodeSetTelemetryKeyActiveResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEventsModelDecoder_decodeSetTelemetryKeyActiveResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsModelDecoder.decodeWriteEventsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEventsModelDecoder_decodeWriteEventsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEventsWriteEventsResponse             ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsModelDecoder_decodeWriteEventsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEventsModelDecoder_decodeWriteEventsResponseResponse");
static_assert(sizeof(PlayFabEventsModelDecoder_decodeWriteEventsResponseResponse) == 0x000020, "Wrong size on PlayFabEventsModelDecoder_decodeWriteEventsResponseResponse");
static_assert(offsetof(PlayFabEventsModelDecoder_decodeWriteEventsResponseResponse, Response) == 0x000000, "Member 'PlayFabEventsModelDecoder_decodeWriteEventsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsModelDecoder_decodeWriteEventsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEventsModelDecoder_decodeWriteEventsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.CreateExclusionGroup
// 0x0060 (0x0060 - 0x0000)
struct PlayFabExperimentationAPI_CreateExclusionGroup final
{
public:
	struct FExperimentationCreateExclusionGroupRequest Request;                                      // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationCreateExclusionGroupResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_CreateExclusionGroup) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_CreateExclusionGroup");
static_assert(sizeof(PlayFabExperimentationAPI_CreateExclusionGroup) == 0x000060, "Wrong size on PlayFabExperimentationAPI_CreateExclusionGroup");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExclusionGroup, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_CreateExclusionGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExclusionGroup, onSuccess) == 0x000030, "Member 'PlayFabExperimentationAPI_CreateExclusionGroup::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExclusionGroup, onFailure) == 0x000040, "Member 'PlayFabExperimentationAPI_CreateExclusionGroup::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExclusionGroup, customData) == 0x000050, "Member 'PlayFabExperimentationAPI_CreateExclusionGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExclusionGroup, ReturnValue) == 0x000058, "Member 'PlayFabExperimentationAPI_CreateExclusionGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.CreateExperiment
// 0x00C8 (0x00C8 - 0x0000)
struct PlayFabExperimentationAPI_CreateExperiment final
{
public:
	struct FExperimentationCreateExperimentRequest Request;                                          // 0x0000(0x0098)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationCreateExperimentResult& Result, class UObject* customData)> onSuccess; // 0x0098(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x00A8(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x00B8(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x00C0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_CreateExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_CreateExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_CreateExperiment) == 0x0000C8, "Wrong size on PlayFabExperimentationAPI_CreateExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExperiment, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_CreateExperiment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExperiment, onSuccess) == 0x000098, "Member 'PlayFabExperimentationAPI_CreateExperiment::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExperiment, onFailure) == 0x0000A8, "Member 'PlayFabExperimentationAPI_CreateExperiment::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExperiment, customData) == 0x0000B8, "Member 'PlayFabExperimentationAPI_CreateExperiment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExperiment, ReturnValue) == 0x0000C0, "Member 'PlayFabExperimentationAPI_CreateExperiment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.DeleteExclusionGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_DeleteExclusionGroup final
{
public:
	struct FExperimentationDeleteExclusionGroupRequest Request;                                      // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DeleteExclusionGroup) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DeleteExclusionGroup");
static_assert(sizeof(PlayFabExperimentationAPI_DeleteExclusionGroup) == 0x000050, "Wrong size on PlayFabExperimentationAPI_DeleteExclusionGroup");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExclusionGroup, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_DeleteExclusionGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExclusionGroup, onSuccess) == 0x000020, "Member 'PlayFabExperimentationAPI_DeleteExclusionGroup::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExclusionGroup, onFailure) == 0x000030, "Member 'PlayFabExperimentationAPI_DeleteExclusionGroup::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExclusionGroup, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_DeleteExclusionGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExclusionGroup, ReturnValue) == 0x000048, "Member 'PlayFabExperimentationAPI_DeleteExclusionGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.DeleteExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_DeleteExperiment final
{
public:
	struct FExperimentationDeleteExperimentRequest Request;                                          // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DeleteExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DeleteExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_DeleteExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_DeleteExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExperiment, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_DeleteExperiment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExperiment, onSuccess) == 0x000020, "Member 'PlayFabExperimentationAPI_DeleteExperiment::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExperiment, onFailure) == 0x000030, "Member 'PlayFabExperimentationAPI_DeleteExperiment::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExperiment, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_DeleteExperiment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExperiment, ReturnValue) == 0x000048, "Member 'PlayFabExperimentationAPI_DeleteExperiment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.GetExclusionGroups
// 0x0040 (0x0040 - 0x0000)
struct PlayFabExperimentationAPI_GetExclusionGroups final
{
public:
	struct FExperimentationGetExclusionGroupsRequest Request;                                        // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationGetExclusionGroupsResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_GetExclusionGroups) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_GetExclusionGroups");
static_assert(sizeof(PlayFabExperimentationAPI_GetExclusionGroups) == 0x000040, "Wrong size on PlayFabExperimentationAPI_GetExclusionGroups");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroups, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_GetExclusionGroups::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroups, onSuccess) == 0x000010, "Member 'PlayFabExperimentationAPI_GetExclusionGroups::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroups, onFailure) == 0x000020, "Member 'PlayFabExperimentationAPI_GetExclusionGroups::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroups, customData) == 0x000030, "Member 'PlayFabExperimentationAPI_GetExclusionGroups::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroups, ReturnValue) == 0x000038, "Member 'PlayFabExperimentationAPI_GetExclusionGroups::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.GetExclusionGroupTraffic
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_GetExclusionGroupTraffic final
{
public:
	struct FExperimentationGetExclusionGroupTrafficRequest Request;                                  // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationGetExclusionGroupTrafficResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_GetExclusionGroupTraffic) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_GetExclusionGroupTraffic");
static_assert(sizeof(PlayFabExperimentationAPI_GetExclusionGroupTraffic) == 0x000050, "Wrong size on PlayFabExperimentationAPI_GetExclusionGroupTraffic");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroupTraffic, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_GetExclusionGroupTraffic::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroupTraffic, onSuccess) == 0x000020, "Member 'PlayFabExperimentationAPI_GetExclusionGroupTraffic::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroupTraffic, onFailure) == 0x000030, "Member 'PlayFabExperimentationAPI_GetExclusionGroupTraffic::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroupTraffic, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_GetExclusionGroupTraffic::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroupTraffic, ReturnValue) == 0x000048, "Member 'PlayFabExperimentationAPI_GetExclusionGroupTraffic::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.GetExperiments
// 0x0040 (0x0040 - 0x0000)
struct PlayFabExperimentationAPI_GetExperiments final
{
public:
	struct FExperimentationGetExperimentsRequest  Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationGetExperimentsResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_GetExperiments) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_GetExperiments");
static_assert(sizeof(PlayFabExperimentationAPI_GetExperiments) == 0x000040, "Wrong size on PlayFabExperimentationAPI_GetExperiments");
static_assert(offsetof(PlayFabExperimentationAPI_GetExperiments, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_GetExperiments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExperiments, onSuccess) == 0x000010, "Member 'PlayFabExperimentationAPI_GetExperiments::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExperiments, onFailure) == 0x000020, "Member 'PlayFabExperimentationAPI_GetExperiments::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExperiments, customData) == 0x000030, "Member 'PlayFabExperimentationAPI_GetExperiments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExperiments, ReturnValue) == 0x000038, "Member 'PlayFabExperimentationAPI_GetExperiments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.GetLatestScorecard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_GetLatestScorecard final
{
public:
	struct FExperimentationGetLatestScorecardRequest Request;                                        // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationGetLatestScorecardResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_GetLatestScorecard) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_GetLatestScorecard");
static_assert(sizeof(PlayFabExperimentationAPI_GetLatestScorecard) == 0x000050, "Wrong size on PlayFabExperimentationAPI_GetLatestScorecard");
static_assert(offsetof(PlayFabExperimentationAPI_GetLatestScorecard, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_GetLatestScorecard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetLatestScorecard, onSuccess) == 0x000020, "Member 'PlayFabExperimentationAPI_GetLatestScorecard::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetLatestScorecard, onFailure) == 0x000030, "Member 'PlayFabExperimentationAPI_GetLatestScorecard::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetLatestScorecard, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_GetLatestScorecard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetLatestScorecard, ReturnValue) == 0x000048, "Member 'PlayFabExperimentationAPI_GetLatestScorecard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.GetTreatmentAssignment
// 0x0048 (0x0048 - 0x0000)
struct PlayFabExperimentationAPI_GetTreatmentAssignment final
{
public:
	struct FExperimentationGetTreatmentAssignmentRequest Request;                                    // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationGetTreatmentAssignmentResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_GetTreatmentAssignment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_GetTreatmentAssignment");
static_assert(sizeof(PlayFabExperimentationAPI_GetTreatmentAssignment) == 0x000048, "Wrong size on PlayFabExperimentationAPI_GetTreatmentAssignment");
static_assert(offsetof(PlayFabExperimentationAPI_GetTreatmentAssignment, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_GetTreatmentAssignment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetTreatmentAssignment, onSuccess) == 0x000018, "Member 'PlayFabExperimentationAPI_GetTreatmentAssignment::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetTreatmentAssignment, onFailure) == 0x000028, "Member 'PlayFabExperimentationAPI_GetTreatmentAssignment::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetTreatmentAssignment, customData) == 0x000038, "Member 'PlayFabExperimentationAPI_GetTreatmentAssignment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetTreatmentAssignment, ReturnValue) == 0x000040, "Member 'PlayFabExperimentationAPI_GetTreatmentAssignment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.StartExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_StartExperiment final
{
public:
	struct FExperimentationStartExperimentRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_StartExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_StartExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_StartExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_StartExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_StartExperiment, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_StartExperiment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StartExperiment, onSuccess) == 0x000020, "Member 'PlayFabExperimentationAPI_StartExperiment::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StartExperiment, onFailure) == 0x000030, "Member 'PlayFabExperimentationAPI_StartExperiment::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StartExperiment, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_StartExperiment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StartExperiment, ReturnValue) == 0x000048, "Member 'PlayFabExperimentationAPI_StartExperiment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.StopExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_StopExperiment final
{
public:
	struct FExperimentationStopExperimentRequest  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_StopExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_StopExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_StopExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_StopExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_StopExperiment, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_StopExperiment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StopExperiment, onSuccess) == 0x000020, "Member 'PlayFabExperimentationAPI_StopExperiment::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StopExperiment, onFailure) == 0x000030, "Member 'PlayFabExperimentationAPI_StopExperiment::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StopExperiment, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_StopExperiment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StopExperiment, ReturnValue) == 0x000048, "Member 'PlayFabExperimentationAPI_StopExperiment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.UpdateExclusionGroup
// 0x0070 (0x0070 - 0x0000)
struct PlayFabExperimentationAPI_UpdateExclusionGroup final
{
public:
	struct FExperimentationUpdateExclusionGroupRequest Request;                                      // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_UpdateExclusionGroup) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_UpdateExclusionGroup");
static_assert(sizeof(PlayFabExperimentationAPI_UpdateExclusionGroup) == 0x000070, "Wrong size on PlayFabExperimentationAPI_UpdateExclusionGroup");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExclusionGroup, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_UpdateExclusionGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExclusionGroup, onSuccess) == 0x000040, "Member 'PlayFabExperimentationAPI_UpdateExclusionGroup::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExclusionGroup, onFailure) == 0x000050, "Member 'PlayFabExperimentationAPI_UpdateExclusionGroup::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExclusionGroup, customData) == 0x000060, "Member 'PlayFabExperimentationAPI_UpdateExclusionGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExclusionGroup, ReturnValue) == 0x000068, "Member 'PlayFabExperimentationAPI_UpdateExclusionGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.UpdateExperiment
// 0x00D8 (0x00D8 - 0x0000)
struct PlayFabExperimentationAPI_UpdateExperiment final
{
public:
	struct FExperimentationUpdateExperimentRequest Request;                                          // 0x0000(0x00A8)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x00A8(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x00B8(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x00C8(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x00D0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_UpdateExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_UpdateExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_UpdateExperiment) == 0x0000D8, "Wrong size on PlayFabExperimentationAPI_UpdateExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExperiment, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_UpdateExperiment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExperiment, onSuccess) == 0x0000A8, "Member 'PlayFabExperimentationAPI_UpdateExperiment::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExperiment, onFailure) == 0x0000B8, "Member 'PlayFabExperimentationAPI_UpdateExperiment::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExperiment, customData) == 0x0000C8, "Member 'PlayFabExperimentationAPI_UpdateExperiment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExperiment, ReturnValue) == 0x0000D0, "Member 'PlayFabExperimentationAPI_UpdateExperiment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperCreateExclusionGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperCreateExclusionGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperCreateExclusionGroup) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperCreateExclusionGroup");
static_assert(sizeof(PlayFabExperimentationAPI_HelperCreateExclusionGroup) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperCreateExclusionGroup");
static_assert(offsetof(PlayFabExperimentationAPI_HelperCreateExclusionGroup, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperCreateExclusionGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperCreateExclusionGroup, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperCreateExclusionGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperCreateExclusionGroup, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperCreateExclusionGroup::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperCreateExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperCreateExperiment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperCreateExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperCreateExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_HelperCreateExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperCreateExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_HelperCreateExperiment, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperCreateExperiment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperCreateExperiment, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperCreateExperiment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperCreateExperiment, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperCreateExperiment::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperDeleteExclusionGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperDeleteExclusionGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperDeleteExclusionGroup) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperDeleteExclusionGroup");
static_assert(sizeof(PlayFabExperimentationAPI_HelperDeleteExclusionGroup) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperDeleteExclusionGroup");
static_assert(offsetof(PlayFabExperimentationAPI_HelperDeleteExclusionGroup, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperDeleteExclusionGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperDeleteExclusionGroup, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperDeleteExclusionGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperDeleteExclusionGroup, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperDeleteExclusionGroup::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperDeleteExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperDeleteExperiment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperDeleteExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperDeleteExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_HelperDeleteExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperDeleteExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_HelperDeleteExperiment, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperDeleteExperiment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperDeleteExperiment, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperDeleteExperiment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperDeleteExperiment, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperDeleteExperiment::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperGetExclusionGroups
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperGetExclusionGroups final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperGetExclusionGroups) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperGetExclusionGroups");
static_assert(sizeof(PlayFabExperimentationAPI_HelperGetExclusionGroups) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperGetExclusionGroups");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExclusionGroups, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperGetExclusionGroups::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExclusionGroups, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperGetExclusionGroups::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExclusionGroups, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperGetExclusionGroups::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperGetExclusionGroupTraffic
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic");
static_assert(sizeof(PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperGetExperiments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperGetExperiments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperGetExperiments) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperGetExperiments");
static_assert(sizeof(PlayFabExperimentationAPI_HelperGetExperiments) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperGetExperiments");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExperiments, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperGetExperiments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExperiments, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperGetExperiments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExperiments, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperGetExperiments::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperGetLatestScorecard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperGetLatestScorecard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperGetLatestScorecard) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperGetLatestScorecard");
static_assert(sizeof(PlayFabExperimentationAPI_HelperGetLatestScorecard) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperGetLatestScorecard");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetLatestScorecard, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperGetLatestScorecard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetLatestScorecard, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperGetLatestScorecard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetLatestScorecard, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperGetLatestScorecard::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperGetTreatmentAssignment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperGetTreatmentAssignment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperGetTreatmentAssignment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperGetTreatmentAssignment");
static_assert(sizeof(PlayFabExperimentationAPI_HelperGetTreatmentAssignment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperGetTreatmentAssignment");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetTreatmentAssignment, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperGetTreatmentAssignment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetTreatmentAssignment, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperGetTreatmentAssignment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetTreatmentAssignment, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperGetTreatmentAssignment::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperStartExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperStartExperiment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperStartExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperStartExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_HelperStartExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperStartExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_HelperStartExperiment, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperStartExperiment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperStartExperiment, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperStartExperiment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperStartExperiment, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperStartExperiment::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperStopExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperStopExperiment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperStopExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperStopExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_HelperStopExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperStopExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_HelperStopExperiment, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperStopExperiment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperStopExperiment, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperStopExperiment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperStopExperiment, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperStopExperiment::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperUpdateExclusionGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperUpdateExclusionGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperUpdateExclusionGroup) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperUpdateExclusionGroup");
static_assert(sizeof(PlayFabExperimentationAPI_HelperUpdateExclusionGroup) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperUpdateExclusionGroup");
static_assert(offsetof(PlayFabExperimentationAPI_HelperUpdateExclusionGroup, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperUpdateExclusionGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperUpdateExclusionGroup, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperUpdateExclusionGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperUpdateExclusionGroup, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperUpdateExclusionGroup::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperUpdateExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperUpdateExperiment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperUpdateExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperUpdateExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_HelperUpdateExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperUpdateExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_HelperUpdateExperiment, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperUpdateExperiment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperUpdateExperiment, customData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperUpdateExperiment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperUpdateExperiment, successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperUpdateExperiment::successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeCreateExclusionGroupResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationModelDecoder_decodeCreateExclusionGroupResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationCreateExclusionGroupResult ReturnValue;                                   // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_decodeCreateExclusionGroupResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_decodeCreateExclusionGroupResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_decodeCreateExclusionGroupResultResponse) == 0x000020, "Wrong size on PlayFabExperimentationModelDecoder_decodeCreateExclusionGroupResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeCreateExclusionGroupResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_decodeCreateExclusionGroupResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeCreateExclusionGroupResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_decodeCreateExclusionGroupResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeCreateExperimentResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationModelDecoder_decodeCreateExperimentResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationCreateExperimentResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_decodeCreateExperimentResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_decodeCreateExperimentResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_decodeCreateExperimentResultResponse) == 0x000020, "Wrong size on PlayFabExperimentationModelDecoder_decodeCreateExperimentResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeCreateExperimentResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_decodeCreateExperimentResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeCreateExperimentResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_decodeCreateExperimentResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabExperimentationModelDecoder_decodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationEmptyResponse          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_decodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_decodeEmptyResponseResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_decodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabExperimentationModelDecoder_decodeEmptyResponseResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_decodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_decodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetExclusionGroupsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationModelDecoder_decodeGetExclusionGroupsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationGetExclusionGroupsResult ReturnValue;                                     // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_decodeGetExclusionGroupsResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_decodeGetExclusionGroupsResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_decodeGetExclusionGroupsResultResponse) == 0x000020, "Wrong size on PlayFabExperimentationModelDecoder_decodeGetExclusionGroupsResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeGetExclusionGroupsResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_decodeGetExclusionGroupsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeGetExclusionGroupsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_decodeGetExclusionGroupsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetExclusionGroupTrafficResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationModelDecoder_decodeGetExclusionGroupTrafficResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationGetExclusionGroupTrafficResult ReturnValue;                               // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_decodeGetExclusionGroupTrafficResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_decodeGetExclusionGroupTrafficResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_decodeGetExclusionGroupTrafficResultResponse) == 0x000020, "Wrong size on PlayFabExperimentationModelDecoder_decodeGetExclusionGroupTrafficResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeGetExclusionGroupTrafficResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_decodeGetExclusionGroupTrafficResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeGetExclusionGroupTrafficResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_decodeGetExclusionGroupTrafficResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetExperimentsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationModelDecoder_decodeGetExperimentsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationGetExperimentsResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_decodeGetExperimentsResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_decodeGetExperimentsResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_decodeGetExperimentsResultResponse) == 0x000020, "Wrong size on PlayFabExperimentationModelDecoder_decodeGetExperimentsResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeGetExperimentsResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_decodeGetExperimentsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeGetExperimentsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_decodeGetExperimentsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetLatestScorecardResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabExperimentationModelDecoder_decodeGetLatestScorecardResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationGetLatestScorecardResult ReturnValue;                                     // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_decodeGetLatestScorecardResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_decodeGetLatestScorecardResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_decodeGetLatestScorecardResultResponse) == 0x000018, "Wrong size on PlayFabExperimentationModelDecoder_decodeGetLatestScorecardResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeGetLatestScorecardResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_decodeGetLatestScorecardResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeGetLatestScorecardResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_decodeGetLatestScorecardResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetTreatmentAssignmentResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabExperimentationModelDecoder_decodeGetTreatmentAssignmentResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationGetTreatmentAssignmentResult ReturnValue;                                 // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_decodeGetTreatmentAssignmentResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_decodeGetTreatmentAssignmentResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_decodeGetTreatmentAssignmentResultResponse) == 0x000018, "Wrong size on PlayFabExperimentationModelDecoder_decodeGetTreatmentAssignmentResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeGetTreatmentAssignmentResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_decodeGetTreatmentAssignmentResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_decodeGetTreatmentAssignmentResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_decodeGetTreatmentAssignmentResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.AcceptGroupApplication
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_AcceptGroupApplication final
{
public:
	struct FGroupsAcceptGroupApplicationRequest   Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_AcceptGroupApplication) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_AcceptGroupApplication");
static_assert(sizeof(PlayFabGroupsAPI_AcceptGroupApplication) == 0x000050, "Wrong size on PlayFabGroupsAPI_AcceptGroupApplication");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupApplication, Request) == 0x000000, "Member 'PlayFabGroupsAPI_AcceptGroupApplication::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupApplication, onSuccess) == 0x000020, "Member 'PlayFabGroupsAPI_AcceptGroupApplication::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupApplication, onFailure) == 0x000030, "Member 'PlayFabGroupsAPI_AcceptGroupApplication::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupApplication, customData) == 0x000040, "Member 'PlayFabGroupsAPI_AcceptGroupApplication::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupApplication, ReturnValue) == 0x000048, "Member 'PlayFabGroupsAPI_AcceptGroupApplication::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.AcceptGroupInvitation
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_AcceptGroupInvitation final
{
public:
	struct FGroupsAcceptGroupInvitationRequest    Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_AcceptGroupInvitation) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_AcceptGroupInvitation");
static_assert(sizeof(PlayFabGroupsAPI_AcceptGroupInvitation) == 0x000050, "Wrong size on PlayFabGroupsAPI_AcceptGroupInvitation");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupInvitation, Request) == 0x000000, "Member 'PlayFabGroupsAPI_AcceptGroupInvitation::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupInvitation, onSuccess) == 0x000020, "Member 'PlayFabGroupsAPI_AcceptGroupInvitation::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupInvitation, onFailure) == 0x000030, "Member 'PlayFabGroupsAPI_AcceptGroupInvitation::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupInvitation, customData) == 0x000040, "Member 'PlayFabGroupsAPI_AcceptGroupInvitation::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupInvitation, ReturnValue) == 0x000048, "Member 'PlayFabGroupsAPI_AcceptGroupInvitation::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.AddMembers
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsAPI_AddMembers final
{
public:
	struct FGroupsAddMembersRequest               Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_AddMembers) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_AddMembers");
static_assert(sizeof(PlayFabGroupsAPI_AddMembers) == 0x000068, "Wrong size on PlayFabGroupsAPI_AddMembers");
static_assert(offsetof(PlayFabGroupsAPI_AddMembers, Request) == 0x000000, "Member 'PlayFabGroupsAPI_AddMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AddMembers, onSuccess) == 0x000038, "Member 'PlayFabGroupsAPI_AddMembers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AddMembers, onFailure) == 0x000048, "Member 'PlayFabGroupsAPI_AddMembers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AddMembers, customData) == 0x000058, "Member 'PlayFabGroupsAPI_AddMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AddMembers, ReturnValue) == 0x000060, "Member 'PlayFabGroupsAPI_AddMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ApplyToGroup
// 0x0058 (0x0058 - 0x0000)
struct PlayFabGroupsAPI_ApplyToGroup final
{
public:
	struct FGroupsApplyToGroupRequest             Request;                                           // 0x0000(0x0028)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsApplyToGroupResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ApplyToGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ApplyToGroup");
static_assert(sizeof(PlayFabGroupsAPI_ApplyToGroup) == 0x000058, "Wrong size on PlayFabGroupsAPI_ApplyToGroup");
static_assert(offsetof(PlayFabGroupsAPI_ApplyToGroup, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ApplyToGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ApplyToGroup, onSuccess) == 0x000028, "Member 'PlayFabGroupsAPI_ApplyToGroup::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ApplyToGroup, onFailure) == 0x000038, "Member 'PlayFabGroupsAPI_ApplyToGroup::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ApplyToGroup, customData) == 0x000048, "Member 'PlayFabGroupsAPI_ApplyToGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ApplyToGroup, ReturnValue) == 0x000050, "Member 'PlayFabGroupsAPI_ApplyToGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.BlockEntity
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_BlockEntity final
{
public:
	struct FGroupsBlockEntityRequest              Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_BlockEntity) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_BlockEntity");
static_assert(sizeof(PlayFabGroupsAPI_BlockEntity) == 0x000050, "Wrong size on PlayFabGroupsAPI_BlockEntity");
static_assert(offsetof(PlayFabGroupsAPI_BlockEntity, Request) == 0x000000, "Member 'PlayFabGroupsAPI_BlockEntity::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_BlockEntity, onSuccess) == 0x000020, "Member 'PlayFabGroupsAPI_BlockEntity::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_BlockEntity, onFailure) == 0x000030, "Member 'PlayFabGroupsAPI_BlockEntity::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_BlockEntity, customData) == 0x000040, "Member 'PlayFabGroupsAPI_BlockEntity::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_BlockEntity, ReturnValue) == 0x000048, "Member 'PlayFabGroupsAPI_BlockEntity::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ChangeMemberRole
// 0x0078 (0x0078 - 0x0000)
struct PlayFabGroupsAPI_ChangeMemberRole final
{
public:
	struct FGroupsChangeMemberRoleRequest         Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ChangeMemberRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ChangeMemberRole");
static_assert(sizeof(PlayFabGroupsAPI_ChangeMemberRole) == 0x000078, "Wrong size on PlayFabGroupsAPI_ChangeMemberRole");
static_assert(offsetof(PlayFabGroupsAPI_ChangeMemberRole, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ChangeMemberRole::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ChangeMemberRole, onSuccess) == 0x000048, "Member 'PlayFabGroupsAPI_ChangeMemberRole::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ChangeMemberRole, onFailure) == 0x000058, "Member 'PlayFabGroupsAPI_ChangeMemberRole::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ChangeMemberRole, customData) == 0x000068, "Member 'PlayFabGroupsAPI_ChangeMemberRole::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ChangeMemberRole, ReturnValue) == 0x000070, "Member 'PlayFabGroupsAPI_ChangeMemberRole::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.CreateGroup
// 0x0058 (0x0058 - 0x0000)
struct PlayFabGroupsAPI_CreateGroup final
{
public:
	struct FGroupsCreateGroupRequest              Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsCreateGroupResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_CreateGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_CreateGroup");
static_assert(sizeof(PlayFabGroupsAPI_CreateGroup) == 0x000058, "Wrong size on PlayFabGroupsAPI_CreateGroup");
static_assert(offsetof(PlayFabGroupsAPI_CreateGroup, Request) == 0x000000, "Member 'PlayFabGroupsAPI_CreateGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateGroup, onSuccess) == 0x000028, "Member 'PlayFabGroupsAPI_CreateGroup::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateGroup, onFailure) == 0x000038, "Member 'PlayFabGroupsAPI_CreateGroup::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateGroup, customData) == 0x000048, "Member 'PlayFabGroupsAPI_CreateGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateGroup, ReturnValue) == 0x000050, "Member 'PlayFabGroupsAPI_CreateGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.CreateRole
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsAPI_CreateRole final
{
public:
	struct FGroupsCreateGroupRoleRequest          Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsCreateGroupRoleResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_CreateRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_CreateRole");
static_assert(sizeof(PlayFabGroupsAPI_CreateRole) == 0x000068, "Wrong size on PlayFabGroupsAPI_CreateRole");
static_assert(offsetof(PlayFabGroupsAPI_CreateRole, Request) == 0x000000, "Member 'PlayFabGroupsAPI_CreateRole::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateRole, onSuccess) == 0x000038, "Member 'PlayFabGroupsAPI_CreateRole::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateRole, onFailure) == 0x000048, "Member 'PlayFabGroupsAPI_CreateRole::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateRole, customData) == 0x000058, "Member 'PlayFabGroupsAPI_CreateRole::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateRole, ReturnValue) == 0x000060, "Member 'PlayFabGroupsAPI_CreateRole::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.DeleteGroup
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_DeleteGroup final
{
public:
	struct FGroupsDeleteGroupRequest              Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DeleteGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DeleteGroup");
static_assert(sizeof(PlayFabGroupsAPI_DeleteGroup) == 0x000048, "Wrong size on PlayFabGroupsAPI_DeleteGroup");
static_assert(offsetof(PlayFabGroupsAPI_DeleteGroup, Request) == 0x000000, "Member 'PlayFabGroupsAPI_DeleteGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteGroup, onSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_DeleteGroup::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteGroup, onFailure) == 0x000028, "Member 'PlayFabGroupsAPI_DeleteGroup::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteGroup, customData) == 0x000038, "Member 'PlayFabGroupsAPI_DeleteGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteGroup, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_DeleteGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.DeleteRole
// 0x0058 (0x0058 - 0x0000)
struct PlayFabGroupsAPI_DeleteRole final
{
public:
	struct FGroupsDeleteRoleRequest               Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DeleteRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DeleteRole");
static_assert(sizeof(PlayFabGroupsAPI_DeleteRole) == 0x000058, "Wrong size on PlayFabGroupsAPI_DeleteRole");
static_assert(offsetof(PlayFabGroupsAPI_DeleteRole, Request) == 0x000000, "Member 'PlayFabGroupsAPI_DeleteRole::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteRole, onSuccess) == 0x000028, "Member 'PlayFabGroupsAPI_DeleteRole::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteRole, onFailure) == 0x000038, "Member 'PlayFabGroupsAPI_DeleteRole::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteRole, customData) == 0x000048, "Member 'PlayFabGroupsAPI_DeleteRole::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteRole, ReturnValue) == 0x000050, "Member 'PlayFabGroupsAPI_DeleteRole::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.GetGroup
// 0x0058 (0x0058 - 0x0000)
struct PlayFabGroupsAPI_GetGroup final
{
public:
	struct FGroupsGetGroupRequest                 Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsGetGroupResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_GetGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_GetGroup");
static_assert(sizeof(PlayFabGroupsAPI_GetGroup) == 0x000058, "Wrong size on PlayFabGroupsAPI_GetGroup");
static_assert(offsetof(PlayFabGroupsAPI_GetGroup, Request) == 0x000000, "Member 'PlayFabGroupsAPI_GetGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_GetGroup, onSuccess) == 0x000028, "Member 'PlayFabGroupsAPI_GetGroup::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_GetGroup, onFailure) == 0x000038, "Member 'PlayFabGroupsAPI_GetGroup::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_GetGroup, customData) == 0x000048, "Member 'PlayFabGroupsAPI_GetGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_GetGroup, ReturnValue) == 0x000050, "Member 'PlayFabGroupsAPI_GetGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.InviteToGroup
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsAPI_InviteToGroup final
{
public:
	struct FGroupsInviteToGroupRequest            Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsInviteToGroupResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_InviteToGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_InviteToGroup");
static_assert(sizeof(PlayFabGroupsAPI_InviteToGroup) == 0x000068, "Wrong size on PlayFabGroupsAPI_InviteToGroup");
static_assert(offsetof(PlayFabGroupsAPI_InviteToGroup, Request) == 0x000000, "Member 'PlayFabGroupsAPI_InviteToGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_InviteToGroup, onSuccess) == 0x000038, "Member 'PlayFabGroupsAPI_InviteToGroup::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_InviteToGroup, onFailure) == 0x000048, "Member 'PlayFabGroupsAPI_InviteToGroup::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_InviteToGroup, customData) == 0x000058, "Member 'PlayFabGroupsAPI_InviteToGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_InviteToGroup, ReturnValue) == 0x000060, "Member 'PlayFabGroupsAPI_InviteToGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.IsMember
// 0x0060 (0x0060 - 0x0000)
struct PlayFabGroupsAPI_IsMember final
{
public:
	struct FGroupsIsMemberRequest                 Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsIsMemberResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_IsMember) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_IsMember");
static_assert(sizeof(PlayFabGroupsAPI_IsMember) == 0x000060, "Wrong size on PlayFabGroupsAPI_IsMember");
static_assert(offsetof(PlayFabGroupsAPI_IsMember, Request) == 0x000000, "Member 'PlayFabGroupsAPI_IsMember::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_IsMember, onSuccess) == 0x000030, "Member 'PlayFabGroupsAPI_IsMember::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_IsMember, onFailure) == 0x000040, "Member 'PlayFabGroupsAPI_IsMember::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_IsMember, customData) == 0x000050, "Member 'PlayFabGroupsAPI_IsMember::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_IsMember, ReturnValue) == 0x000058, "Member 'PlayFabGroupsAPI_IsMember::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ListGroupApplications
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_ListGroupApplications final
{
public:
	struct FGroupsListGroupApplicationsRequest    Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsListGroupApplicationsResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ListGroupApplications) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ListGroupApplications");
static_assert(sizeof(PlayFabGroupsAPI_ListGroupApplications) == 0x000048, "Wrong size on PlayFabGroupsAPI_ListGroupApplications");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupApplications, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ListGroupApplications::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupApplications, onSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_ListGroupApplications::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupApplications, onFailure) == 0x000028, "Member 'PlayFabGroupsAPI_ListGroupApplications::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupApplications, customData) == 0x000038, "Member 'PlayFabGroupsAPI_ListGroupApplications::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupApplications, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_ListGroupApplications::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ListGroupBlocks
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_ListGroupBlocks final
{
public:
	struct FGroupsListGroupBlocksRequest          Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsListGroupBlocksResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ListGroupBlocks) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ListGroupBlocks");
static_assert(sizeof(PlayFabGroupsAPI_ListGroupBlocks) == 0x000048, "Wrong size on PlayFabGroupsAPI_ListGroupBlocks");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupBlocks, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ListGroupBlocks::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupBlocks, onSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_ListGroupBlocks::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupBlocks, onFailure) == 0x000028, "Member 'PlayFabGroupsAPI_ListGroupBlocks::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupBlocks, customData) == 0x000038, "Member 'PlayFabGroupsAPI_ListGroupBlocks::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupBlocks, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_ListGroupBlocks::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ListGroupInvitations
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_ListGroupInvitations final
{
public:
	struct FGroupsListGroupInvitationsRequest     Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsListGroupInvitationsResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ListGroupInvitations) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ListGroupInvitations");
static_assert(sizeof(PlayFabGroupsAPI_ListGroupInvitations) == 0x000048, "Wrong size on PlayFabGroupsAPI_ListGroupInvitations");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupInvitations, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ListGroupInvitations::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupInvitations, onSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_ListGroupInvitations::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupInvitations, onFailure) == 0x000028, "Member 'PlayFabGroupsAPI_ListGroupInvitations::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupInvitations, customData) == 0x000038, "Member 'PlayFabGroupsAPI_ListGroupInvitations::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupInvitations, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_ListGroupInvitations::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ListGroupMembers
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_ListGroupMembers final
{
public:
	struct FGroupsListGroupMembersRequest         Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsListGroupMembersResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ListGroupMembers) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ListGroupMembers");
static_assert(sizeof(PlayFabGroupsAPI_ListGroupMembers) == 0x000048, "Wrong size on PlayFabGroupsAPI_ListGroupMembers");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupMembers, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ListGroupMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupMembers, onSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_ListGroupMembers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupMembers, onFailure) == 0x000028, "Member 'PlayFabGroupsAPI_ListGroupMembers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupMembers, customData) == 0x000038, "Member 'PlayFabGroupsAPI_ListGroupMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupMembers, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_ListGroupMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ListMembership
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_ListMembership final
{
public:
	struct FGroupsListMembershipRequest           Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsListMembershipResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ListMembership) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ListMembership");
static_assert(sizeof(PlayFabGroupsAPI_ListMembership) == 0x000048, "Wrong size on PlayFabGroupsAPI_ListMembership");
static_assert(offsetof(PlayFabGroupsAPI_ListMembership, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ListMembership::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembership, onSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_ListMembership::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembership, onFailure) == 0x000028, "Member 'PlayFabGroupsAPI_ListMembership::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembership, customData) == 0x000038, "Member 'PlayFabGroupsAPI_ListMembership::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembership, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_ListMembership::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ListMembershipOpportunities
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_ListMembershipOpportunities final
{
public:
	struct FGroupsListMembershipOpportunitiesRequest Request;                                        // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsListMembershipOpportunitiesResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ListMembershipOpportunities) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ListMembershipOpportunities");
static_assert(sizeof(PlayFabGroupsAPI_ListMembershipOpportunities) == 0x000048, "Wrong size on PlayFabGroupsAPI_ListMembershipOpportunities");
static_assert(offsetof(PlayFabGroupsAPI_ListMembershipOpportunities, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ListMembershipOpportunities::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembershipOpportunities, onSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_ListMembershipOpportunities::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembershipOpportunities, onFailure) == 0x000028, "Member 'PlayFabGroupsAPI_ListMembershipOpportunities::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembershipOpportunities, customData) == 0x000038, "Member 'PlayFabGroupsAPI_ListMembershipOpportunities::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembershipOpportunities, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_ListMembershipOpportunities::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.RemoveGroupApplication
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_RemoveGroupApplication final
{
public:
	struct FGroupsRemoveGroupApplicationRequest   Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_RemoveGroupApplication) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_RemoveGroupApplication");
static_assert(sizeof(PlayFabGroupsAPI_RemoveGroupApplication) == 0x000050, "Wrong size on PlayFabGroupsAPI_RemoveGroupApplication");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupApplication, Request) == 0x000000, "Member 'PlayFabGroupsAPI_RemoveGroupApplication::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupApplication, onSuccess) == 0x000020, "Member 'PlayFabGroupsAPI_RemoveGroupApplication::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupApplication, onFailure) == 0x000030, "Member 'PlayFabGroupsAPI_RemoveGroupApplication::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupApplication, customData) == 0x000040, "Member 'PlayFabGroupsAPI_RemoveGroupApplication::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupApplication, ReturnValue) == 0x000048, "Member 'PlayFabGroupsAPI_RemoveGroupApplication::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.RemoveGroupInvitation
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_RemoveGroupInvitation final
{
public:
	struct FGroupsRemoveGroupInvitationRequest    Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_RemoveGroupInvitation) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_RemoveGroupInvitation");
static_assert(sizeof(PlayFabGroupsAPI_RemoveGroupInvitation) == 0x000050, "Wrong size on PlayFabGroupsAPI_RemoveGroupInvitation");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupInvitation, Request) == 0x000000, "Member 'PlayFabGroupsAPI_RemoveGroupInvitation::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupInvitation, onSuccess) == 0x000020, "Member 'PlayFabGroupsAPI_RemoveGroupInvitation::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupInvitation, onFailure) == 0x000030, "Member 'PlayFabGroupsAPI_RemoveGroupInvitation::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupInvitation, customData) == 0x000040, "Member 'PlayFabGroupsAPI_RemoveGroupInvitation::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupInvitation, ReturnValue) == 0x000048, "Member 'PlayFabGroupsAPI_RemoveGroupInvitation::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.RemoveMembers
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsAPI_RemoveMembers final
{
public:
	struct FGroupsRemoveMembersRequest            Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_RemoveMembers) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_RemoveMembers");
static_assert(sizeof(PlayFabGroupsAPI_RemoveMembers) == 0x000068, "Wrong size on PlayFabGroupsAPI_RemoveMembers");
static_assert(offsetof(PlayFabGroupsAPI_RemoveMembers, Request) == 0x000000, "Member 'PlayFabGroupsAPI_RemoveMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveMembers, onSuccess) == 0x000038, "Member 'PlayFabGroupsAPI_RemoveMembers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveMembers, onFailure) == 0x000048, "Member 'PlayFabGroupsAPI_RemoveMembers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveMembers, customData) == 0x000058, "Member 'PlayFabGroupsAPI_RemoveMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveMembers, ReturnValue) == 0x000060, "Member 'PlayFabGroupsAPI_RemoveMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.UnblockEntity
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_UnblockEntity final
{
public:
	struct FGroupsUnblockEntityRequest            Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_UnblockEntity) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_UnblockEntity");
static_assert(sizeof(PlayFabGroupsAPI_UnblockEntity) == 0x000050, "Wrong size on PlayFabGroupsAPI_UnblockEntity");
static_assert(offsetof(PlayFabGroupsAPI_UnblockEntity, Request) == 0x000000, "Member 'PlayFabGroupsAPI_UnblockEntity::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UnblockEntity, onSuccess) == 0x000020, "Member 'PlayFabGroupsAPI_UnblockEntity::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UnblockEntity, onFailure) == 0x000030, "Member 'PlayFabGroupsAPI_UnblockEntity::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UnblockEntity, customData) == 0x000040, "Member 'PlayFabGroupsAPI_UnblockEntity::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UnblockEntity, ReturnValue) == 0x000048, "Member 'PlayFabGroupsAPI_UnblockEntity::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.UpdateGroup
// 0x0080 (0x0080 - 0x0000)
struct PlayFabGroupsAPI_UpdateGroup final
{
public:
	struct FGroupsUpdateGroupRequest              Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsUpdateGroupResponse& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_UpdateGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_UpdateGroup");
static_assert(sizeof(PlayFabGroupsAPI_UpdateGroup) == 0x000080, "Wrong size on PlayFabGroupsAPI_UpdateGroup");
static_assert(offsetof(PlayFabGroupsAPI_UpdateGroup, Request) == 0x000000, "Member 'PlayFabGroupsAPI_UpdateGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateGroup, onSuccess) == 0x000050, "Member 'PlayFabGroupsAPI_UpdateGroup::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateGroup, onFailure) == 0x000060, "Member 'PlayFabGroupsAPI_UpdateGroup::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateGroup, customData) == 0x000070, "Member 'PlayFabGroupsAPI_UpdateGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateGroup, ReturnValue) == 0x000078, "Member 'PlayFabGroupsAPI_UpdateGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.UpdateRole
// 0x0070 (0x0070 - 0x0000)
struct PlayFabGroupsAPI_UpdateRole final
{
public:
	struct FGroupsUpdateGroupRoleRequest          Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsUpdateGroupRoleResponse& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_UpdateRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_UpdateRole");
static_assert(sizeof(PlayFabGroupsAPI_UpdateRole) == 0x000070, "Wrong size on PlayFabGroupsAPI_UpdateRole");
static_assert(offsetof(PlayFabGroupsAPI_UpdateRole, Request) == 0x000000, "Member 'PlayFabGroupsAPI_UpdateRole::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateRole, onSuccess) == 0x000040, "Member 'PlayFabGroupsAPI_UpdateRole::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateRole, onFailure) == 0x000050, "Member 'PlayFabGroupsAPI_UpdateRole::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateRole, customData) == 0x000060, "Member 'PlayFabGroupsAPI_UpdateRole::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateRole, ReturnValue) == 0x000068, "Member 'PlayFabGroupsAPI_UpdateRole::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperAcceptGroupApplication
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperAcceptGroupApplication final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperAcceptGroupApplication) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperAcceptGroupApplication");
static_assert(sizeof(PlayFabGroupsAPI_HelperAcceptGroupApplication) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperAcceptGroupApplication");
static_assert(offsetof(PlayFabGroupsAPI_HelperAcceptGroupApplication, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperAcceptGroupApplication::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperAcceptGroupApplication, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperAcceptGroupApplication::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperAcceptGroupApplication, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperAcceptGroupApplication::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperAcceptGroupInvitation
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperAcceptGroupInvitation final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperAcceptGroupInvitation) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperAcceptGroupInvitation");
static_assert(sizeof(PlayFabGroupsAPI_HelperAcceptGroupInvitation) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperAcceptGroupInvitation");
static_assert(offsetof(PlayFabGroupsAPI_HelperAcceptGroupInvitation, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperAcceptGroupInvitation::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperAcceptGroupInvitation, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperAcceptGroupInvitation::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperAcceptGroupInvitation, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperAcceptGroupInvitation::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperAddMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperAddMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperAddMembers) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperAddMembers");
static_assert(sizeof(PlayFabGroupsAPI_HelperAddMembers) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperAddMembers");
static_assert(offsetof(PlayFabGroupsAPI_HelperAddMembers, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperAddMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperAddMembers, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperAddMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperAddMembers, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperAddMembers::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperApplyToGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperApplyToGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperApplyToGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperApplyToGroup");
static_assert(sizeof(PlayFabGroupsAPI_HelperApplyToGroup) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperApplyToGroup");
static_assert(offsetof(PlayFabGroupsAPI_HelperApplyToGroup, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperApplyToGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperApplyToGroup, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperApplyToGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperApplyToGroup, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperApplyToGroup::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperBlockEntity
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperBlockEntity final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperBlockEntity) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperBlockEntity");
static_assert(sizeof(PlayFabGroupsAPI_HelperBlockEntity) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperBlockEntity");
static_assert(offsetof(PlayFabGroupsAPI_HelperBlockEntity, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperBlockEntity::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperBlockEntity, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperBlockEntity::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperBlockEntity, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperBlockEntity::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperChangeMemberRole
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperChangeMemberRole final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperChangeMemberRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperChangeMemberRole");
static_assert(sizeof(PlayFabGroupsAPI_HelperChangeMemberRole) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperChangeMemberRole");
static_assert(offsetof(PlayFabGroupsAPI_HelperChangeMemberRole, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperChangeMemberRole::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperChangeMemberRole, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperChangeMemberRole::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperChangeMemberRole, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperChangeMemberRole::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperCreateGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperCreateGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperCreateGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperCreateGroup");
static_assert(sizeof(PlayFabGroupsAPI_HelperCreateGroup) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperCreateGroup");
static_assert(offsetof(PlayFabGroupsAPI_HelperCreateGroup, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperCreateGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperCreateGroup, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperCreateGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperCreateGroup, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperCreateGroup::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperCreateRole
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperCreateRole final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperCreateRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperCreateRole");
static_assert(sizeof(PlayFabGroupsAPI_HelperCreateRole) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperCreateRole");
static_assert(offsetof(PlayFabGroupsAPI_HelperCreateRole, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperCreateRole::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperCreateRole, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperCreateRole::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperCreateRole, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperCreateRole::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperDeleteGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperDeleteGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperDeleteGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperDeleteGroup");
static_assert(sizeof(PlayFabGroupsAPI_HelperDeleteGroup) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperDeleteGroup");
static_assert(offsetof(PlayFabGroupsAPI_HelperDeleteGroup, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperDeleteGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperDeleteGroup, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperDeleteGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperDeleteGroup, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperDeleteGroup::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperDeleteRole
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperDeleteRole final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperDeleteRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperDeleteRole");
static_assert(sizeof(PlayFabGroupsAPI_HelperDeleteRole) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperDeleteRole");
static_assert(offsetof(PlayFabGroupsAPI_HelperDeleteRole, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperDeleteRole::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperDeleteRole, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperDeleteRole::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperDeleteRole, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperDeleteRole::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperGetGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperGetGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperGetGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperGetGroup");
static_assert(sizeof(PlayFabGroupsAPI_HelperGetGroup) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperGetGroup");
static_assert(offsetof(PlayFabGroupsAPI_HelperGetGroup, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperGetGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperGetGroup, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperGetGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperGetGroup, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperGetGroup::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperInviteToGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperInviteToGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperInviteToGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperInviteToGroup");
static_assert(sizeof(PlayFabGroupsAPI_HelperInviteToGroup) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperInviteToGroup");
static_assert(offsetof(PlayFabGroupsAPI_HelperInviteToGroup, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperInviteToGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperInviteToGroup, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperInviteToGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperInviteToGroup, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperInviteToGroup::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperIsMember
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperIsMember final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperIsMember) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperIsMember");
static_assert(sizeof(PlayFabGroupsAPI_HelperIsMember) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperIsMember");
static_assert(offsetof(PlayFabGroupsAPI_HelperIsMember, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperIsMember::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperIsMember, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperIsMember::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperIsMember, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperIsMember::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperListGroupApplications
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperListGroupApplications final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperListGroupApplications) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperListGroupApplications");
static_assert(sizeof(PlayFabGroupsAPI_HelperListGroupApplications) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperListGroupApplications");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupApplications, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperListGroupApplications::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupApplications, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperListGroupApplications::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupApplications, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperListGroupApplications::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperListGroupBlocks
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperListGroupBlocks final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperListGroupBlocks) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperListGroupBlocks");
static_assert(sizeof(PlayFabGroupsAPI_HelperListGroupBlocks) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperListGroupBlocks");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupBlocks, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperListGroupBlocks::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupBlocks, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperListGroupBlocks::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupBlocks, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperListGroupBlocks::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperListGroupInvitations
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperListGroupInvitations final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperListGroupInvitations) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperListGroupInvitations");
static_assert(sizeof(PlayFabGroupsAPI_HelperListGroupInvitations) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperListGroupInvitations");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupInvitations, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperListGroupInvitations::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupInvitations, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperListGroupInvitations::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupInvitations, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperListGroupInvitations::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperListGroupMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperListGroupMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperListGroupMembers) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperListGroupMembers");
static_assert(sizeof(PlayFabGroupsAPI_HelperListGroupMembers) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperListGroupMembers");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupMembers, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperListGroupMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupMembers, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperListGroupMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupMembers, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperListGroupMembers::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperListMembership
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperListMembership final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperListMembership) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperListMembership");
static_assert(sizeof(PlayFabGroupsAPI_HelperListMembership) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperListMembership");
static_assert(offsetof(PlayFabGroupsAPI_HelperListMembership, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperListMembership::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListMembership, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperListMembership::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListMembership, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperListMembership::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperListMembershipOpportunities
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperListMembershipOpportunities final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperListMembershipOpportunities) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperListMembershipOpportunities");
static_assert(sizeof(PlayFabGroupsAPI_HelperListMembershipOpportunities) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperListMembershipOpportunities");
static_assert(offsetof(PlayFabGroupsAPI_HelperListMembershipOpportunities, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperListMembershipOpportunities::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListMembershipOpportunities, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperListMembershipOpportunities::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListMembershipOpportunities, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperListMembershipOpportunities::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperRemoveGroupApplication
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperRemoveGroupApplication final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperRemoveGroupApplication) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperRemoveGroupApplication");
static_assert(sizeof(PlayFabGroupsAPI_HelperRemoveGroupApplication) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperRemoveGroupApplication");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveGroupApplication, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperRemoveGroupApplication::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveGroupApplication, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperRemoveGroupApplication::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveGroupApplication, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperRemoveGroupApplication::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperRemoveGroupInvitation
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperRemoveGroupInvitation final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperRemoveGroupInvitation) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperRemoveGroupInvitation");
static_assert(sizeof(PlayFabGroupsAPI_HelperRemoveGroupInvitation) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperRemoveGroupInvitation");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveGroupInvitation, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperRemoveGroupInvitation::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveGroupInvitation, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperRemoveGroupInvitation::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveGroupInvitation, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperRemoveGroupInvitation::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperRemoveMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperRemoveMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperRemoveMembers) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperRemoveMembers");
static_assert(sizeof(PlayFabGroupsAPI_HelperRemoveMembers) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperRemoveMembers");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveMembers, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperRemoveMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveMembers, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperRemoveMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveMembers, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperRemoveMembers::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperUnblockEntity
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperUnblockEntity final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperUnblockEntity) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperUnblockEntity");
static_assert(sizeof(PlayFabGroupsAPI_HelperUnblockEntity) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperUnblockEntity");
static_assert(offsetof(PlayFabGroupsAPI_HelperUnblockEntity, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperUnblockEntity::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperUnblockEntity, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperUnblockEntity::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperUnblockEntity, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperUnblockEntity::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperUpdateGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperUpdateGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperUpdateGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperUpdateGroup");
static_assert(sizeof(PlayFabGroupsAPI_HelperUpdateGroup) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperUpdateGroup");
static_assert(offsetof(PlayFabGroupsAPI_HelperUpdateGroup, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperUpdateGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperUpdateGroup, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperUpdateGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperUpdateGroup, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperUpdateGroup::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperUpdateRole
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperUpdateRole final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperUpdateRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperUpdateRole");
static_assert(sizeof(PlayFabGroupsAPI_HelperUpdateRole) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperUpdateRole");
static_assert(offsetof(PlayFabGroupsAPI_HelperUpdateRole, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperUpdateRole::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperUpdateRole, customData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperUpdateRole::customData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperUpdateRole, successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperUpdateRole::successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeApplyToGroupResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeApplyToGroupResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsApplyToGroupResponse            ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeApplyToGroupResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeApplyToGroupResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeApplyToGroupResponseResponse) == 0x000030, "Wrong size on PlayFabGroupsModelDecoder_decodeApplyToGroupResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeApplyToGroupResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeApplyToGroupResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeApplyToGroupResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeApplyToGroupResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeCreateGroupResponseResponse
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeCreateGroupResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsCreateGroupResponse             ReturnValue;                                       // 0x0008(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeCreateGroupResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeCreateGroupResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeCreateGroupResponseResponse) == 0x000068, "Wrong size on PlayFabGroupsModelDecoder_decodeCreateGroupResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeCreateGroupResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeCreateGroupResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeCreateGroupResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeCreateGroupResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeCreateGroupRoleResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeCreateGroupRoleResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsCreateGroupRoleResponse         ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeCreateGroupRoleResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeCreateGroupRoleResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeCreateGroupRoleResponseResponse) == 0x000038, "Wrong size on PlayFabGroupsModelDecoder_decodeCreateGroupRoleResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeCreateGroupRoleResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeCreateGroupRoleResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeCreateGroupRoleResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeCreateGroupRoleResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsEmptyResponse                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeEmptyResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabGroupsModelDecoder_decodeEmptyResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeGetGroupResponseResponse
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeGetGroupResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsGetGroupResponse                ReturnValue;                                       // 0x0008(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeGetGroupResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeGetGroupResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeGetGroupResponseResponse) == 0x000068, "Wrong size on PlayFabGroupsModelDecoder_decodeGetGroupResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeGetGroupResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeGetGroupResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeGetGroupResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeGetGroupResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeInviteToGroupResponseResponse
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeInviteToGroupResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsInviteToGroupResponse           ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeInviteToGroupResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeInviteToGroupResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeInviteToGroupResponseResponse) == 0x000048, "Wrong size on PlayFabGroupsModelDecoder_decodeInviteToGroupResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeInviteToGroupResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeInviteToGroupResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeInviteToGroupResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeInviteToGroupResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeIsMemberResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeIsMemberResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsIsMemberResponse                ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeIsMemberResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeIsMemberResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeIsMemberResponseResponse) == 0x000018, "Wrong size on PlayFabGroupsModelDecoder_decodeIsMemberResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeIsMemberResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeIsMemberResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeIsMemberResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeIsMemberResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeListGroupApplicationsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeListGroupApplicationsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsListGroupApplicationsResponse   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeListGroupApplicationsResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeListGroupApplicationsResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeListGroupApplicationsResponseResponse) == 0x000020, "Wrong size on PlayFabGroupsModelDecoder_decodeListGroupApplicationsResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeListGroupApplicationsResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeListGroupApplicationsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeListGroupApplicationsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeListGroupApplicationsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeListGroupBlocksResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeListGroupBlocksResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsListGroupBlocksResponse         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeListGroupBlocksResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeListGroupBlocksResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeListGroupBlocksResponseResponse) == 0x000020, "Wrong size on PlayFabGroupsModelDecoder_decodeListGroupBlocksResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeListGroupBlocksResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeListGroupBlocksResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeListGroupBlocksResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeListGroupBlocksResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeListGroupInvitationsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeListGroupInvitationsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsListGroupInvitationsResponse    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeListGroupInvitationsResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeListGroupInvitationsResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeListGroupInvitationsResponseResponse) == 0x000020, "Wrong size on PlayFabGroupsModelDecoder_decodeListGroupInvitationsResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeListGroupInvitationsResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeListGroupInvitationsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeListGroupInvitationsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeListGroupInvitationsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeListGroupMembersResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeListGroupMembersResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsListGroupMembersResponse        ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeListGroupMembersResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeListGroupMembersResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeListGroupMembersResponseResponse) == 0x000020, "Wrong size on PlayFabGroupsModelDecoder_decodeListGroupMembersResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeListGroupMembersResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeListGroupMembersResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeListGroupMembersResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeListGroupMembersResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeListMembershipOpportunitiesResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeListMembershipOpportunitiesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsListMembershipOpportunitiesResponse ReturnValue;                                   // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeListMembershipOpportunitiesResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeListMembershipOpportunitiesResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeListMembershipOpportunitiesResponseResponse) == 0x000030, "Wrong size on PlayFabGroupsModelDecoder_decodeListMembershipOpportunitiesResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeListMembershipOpportunitiesResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeListMembershipOpportunitiesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeListMembershipOpportunitiesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeListMembershipOpportunitiesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeListMembershipResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeListMembershipResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsListMembershipResponse          ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeListMembershipResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeListMembershipResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeListMembershipResponseResponse) == 0x000020, "Wrong size on PlayFabGroupsModelDecoder_decodeListMembershipResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeListMembershipResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeListMembershipResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeListMembershipResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeListMembershipResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeUpdateGroupResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeUpdateGroupResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsUpdateGroupResponse             ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeUpdateGroupResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeUpdateGroupResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeUpdateGroupResponseResponse) == 0x000028, "Wrong size on PlayFabGroupsModelDecoder_decodeUpdateGroupResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeUpdateGroupResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeUpdateGroupResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeUpdateGroupResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeUpdateGroupResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeUpdateGroupRoleResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabGroupsModelDecoder_decodeUpdateGroupRoleResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsUpdateGroupRoleResponse         ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_decodeUpdateGroupRoleResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_decodeUpdateGroupRoleResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_decodeUpdateGroupRoleResponseResponse) == 0x000028, "Wrong size on PlayFabGroupsModelDecoder_decodeUpdateGroupRoleResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeUpdateGroupRoleResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_decodeUpdateGroupRoleResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_decodeUpdateGroupRoleResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_decodeUpdateGroupRoleResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.GetDetails
// 0x0040 (0x0040 - 0x0000)
struct PlayFabInsightsAPI_GetDetails final
{
public:
	struct FInsightsInsightsEmptyRequest          Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FInsightsInsightsGetDetailsResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabInsightsAPI*                    ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_GetDetails) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_GetDetails");
static_assert(sizeof(PlayFabInsightsAPI_GetDetails) == 0x000040, "Wrong size on PlayFabInsightsAPI_GetDetails");
static_assert(offsetof(PlayFabInsightsAPI_GetDetails, Request) == 0x000000, "Member 'PlayFabInsightsAPI_GetDetails::Request' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetDetails, onSuccess) == 0x000010, "Member 'PlayFabInsightsAPI_GetDetails::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetDetails, onFailure) == 0x000020, "Member 'PlayFabInsightsAPI_GetDetails::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetDetails, customData) == 0x000030, "Member 'PlayFabInsightsAPI_GetDetails::customData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetDetails, ReturnValue) == 0x000038, "Member 'PlayFabInsightsAPI_GetDetails::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.GetLimits
// 0x0040 (0x0040 - 0x0000)
struct PlayFabInsightsAPI_GetLimits final
{
public:
	struct FInsightsInsightsEmptyRequest          Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FInsightsInsightsGetLimitsResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabInsightsAPI*                    ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_GetLimits) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_GetLimits");
static_assert(sizeof(PlayFabInsightsAPI_GetLimits) == 0x000040, "Wrong size on PlayFabInsightsAPI_GetLimits");
static_assert(offsetof(PlayFabInsightsAPI_GetLimits, Request) == 0x000000, "Member 'PlayFabInsightsAPI_GetLimits::Request' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetLimits, onSuccess) == 0x000010, "Member 'PlayFabInsightsAPI_GetLimits::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetLimits, onFailure) == 0x000020, "Member 'PlayFabInsightsAPI_GetLimits::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetLimits, customData) == 0x000030, "Member 'PlayFabInsightsAPI_GetLimits::customData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetLimits, ReturnValue) == 0x000038, "Member 'PlayFabInsightsAPI_GetLimits::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.GetOperationStatus
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_GetOperationStatus final
{
public:
	struct FInsightsInsightsGetOperationStatusRequest Request;                                       // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FInsightsInsightsGetOperationStatusResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabInsightsAPI*                    ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_GetOperationStatus) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_GetOperationStatus");
static_assert(sizeof(PlayFabInsightsAPI_GetOperationStatus) == 0x000050, "Wrong size on PlayFabInsightsAPI_GetOperationStatus");
static_assert(offsetof(PlayFabInsightsAPI_GetOperationStatus, Request) == 0x000000, "Member 'PlayFabInsightsAPI_GetOperationStatus::Request' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetOperationStatus, onSuccess) == 0x000020, "Member 'PlayFabInsightsAPI_GetOperationStatus::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetOperationStatus, onFailure) == 0x000030, "Member 'PlayFabInsightsAPI_GetOperationStatus::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetOperationStatus, customData) == 0x000040, "Member 'PlayFabInsightsAPI_GetOperationStatus::customData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetOperationStatus, ReturnValue) == 0x000048, "Member 'PlayFabInsightsAPI_GetOperationStatus::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.GetPendingOperations
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_GetPendingOperations final
{
public:
	struct FInsightsInsightsGetPendingOperationsRequest Request;                                     // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FInsightsInsightsGetPendingOperationsResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabInsightsAPI*                    ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_GetPendingOperations) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_GetPendingOperations");
static_assert(sizeof(PlayFabInsightsAPI_GetPendingOperations) == 0x000050, "Wrong size on PlayFabInsightsAPI_GetPendingOperations");
static_assert(offsetof(PlayFabInsightsAPI_GetPendingOperations, Request) == 0x000000, "Member 'PlayFabInsightsAPI_GetPendingOperations::Request' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetPendingOperations, onSuccess) == 0x000020, "Member 'PlayFabInsightsAPI_GetPendingOperations::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetPendingOperations, onFailure) == 0x000030, "Member 'PlayFabInsightsAPI_GetPendingOperations::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetPendingOperations, customData) == 0x000040, "Member 'PlayFabInsightsAPI_GetPendingOperations::customData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetPendingOperations, ReturnValue) == 0x000048, "Member 'PlayFabInsightsAPI_GetPendingOperations::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.SetPerformance
// 0x0048 (0x0048 - 0x0000)
struct PlayFabInsightsAPI_SetPerformance final
{
public:
	struct FInsightsInsightsSetPerformanceRequest Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FInsightsInsightsOperationResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabInsightsAPI*                    ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_SetPerformance) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_SetPerformance");
static_assert(sizeof(PlayFabInsightsAPI_SetPerformance) == 0x000048, "Wrong size on PlayFabInsightsAPI_SetPerformance");
static_assert(offsetof(PlayFabInsightsAPI_SetPerformance, Request) == 0x000000, "Member 'PlayFabInsightsAPI_SetPerformance::Request' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetPerformance, onSuccess) == 0x000018, "Member 'PlayFabInsightsAPI_SetPerformance::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetPerformance, onFailure) == 0x000028, "Member 'PlayFabInsightsAPI_SetPerformance::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetPerformance, customData) == 0x000038, "Member 'PlayFabInsightsAPI_SetPerformance::customData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetPerformance, ReturnValue) == 0x000040, "Member 'PlayFabInsightsAPI_SetPerformance::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.SetStorageRetention
// 0x0048 (0x0048 - 0x0000)
struct PlayFabInsightsAPI_SetStorageRetention final
{
public:
	struct FInsightsInsightsSetStorageRetentionRequest Request;                                      // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FInsightsInsightsOperationResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabInsightsAPI*                    ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_SetStorageRetention) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_SetStorageRetention");
static_assert(sizeof(PlayFabInsightsAPI_SetStorageRetention) == 0x000048, "Wrong size on PlayFabInsightsAPI_SetStorageRetention");
static_assert(offsetof(PlayFabInsightsAPI_SetStorageRetention, Request) == 0x000000, "Member 'PlayFabInsightsAPI_SetStorageRetention::Request' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetStorageRetention, onSuccess) == 0x000018, "Member 'PlayFabInsightsAPI_SetStorageRetention::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetStorageRetention, onFailure) == 0x000028, "Member 'PlayFabInsightsAPI_SetStorageRetention::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetStorageRetention, customData) == 0x000038, "Member 'PlayFabInsightsAPI_SetStorageRetention::customData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetStorageRetention, ReturnValue) == 0x000040, "Member 'PlayFabInsightsAPI_SetStorageRetention::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.HelperGetDetails
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_HelperGetDetails final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabInsightsAPI_HelperGetDetails) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_HelperGetDetails");
static_assert(sizeof(PlayFabInsightsAPI_HelperGetDetails) == 0x000050, "Wrong size on PlayFabInsightsAPI_HelperGetDetails");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetDetails, Response) == 0x000000, "Member 'PlayFabInsightsAPI_HelperGetDetails::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetDetails, customData) == 0x000040, "Member 'PlayFabInsightsAPI_HelperGetDetails::customData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetDetails, successful) == 0x000048, "Member 'PlayFabInsightsAPI_HelperGetDetails::successful' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.HelperGetLimits
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_HelperGetLimits final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabInsightsAPI_HelperGetLimits) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_HelperGetLimits");
static_assert(sizeof(PlayFabInsightsAPI_HelperGetLimits) == 0x000050, "Wrong size on PlayFabInsightsAPI_HelperGetLimits");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetLimits, Response) == 0x000000, "Member 'PlayFabInsightsAPI_HelperGetLimits::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetLimits, customData) == 0x000040, "Member 'PlayFabInsightsAPI_HelperGetLimits::customData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetLimits, successful) == 0x000048, "Member 'PlayFabInsightsAPI_HelperGetLimits::successful' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.HelperGetOperationStatus
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_HelperGetOperationStatus final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabInsightsAPI_HelperGetOperationStatus) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_HelperGetOperationStatus");
static_assert(sizeof(PlayFabInsightsAPI_HelperGetOperationStatus) == 0x000050, "Wrong size on PlayFabInsightsAPI_HelperGetOperationStatus");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetOperationStatus, Response) == 0x000000, "Member 'PlayFabInsightsAPI_HelperGetOperationStatus::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetOperationStatus, customData) == 0x000040, "Member 'PlayFabInsightsAPI_HelperGetOperationStatus::customData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetOperationStatus, successful) == 0x000048, "Member 'PlayFabInsightsAPI_HelperGetOperationStatus::successful' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.HelperGetPendingOperations
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_HelperGetPendingOperations final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabInsightsAPI_HelperGetPendingOperations) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_HelperGetPendingOperations");
static_assert(sizeof(PlayFabInsightsAPI_HelperGetPendingOperations) == 0x000050, "Wrong size on PlayFabInsightsAPI_HelperGetPendingOperations");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetPendingOperations, Response) == 0x000000, "Member 'PlayFabInsightsAPI_HelperGetPendingOperations::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetPendingOperations, customData) == 0x000040, "Member 'PlayFabInsightsAPI_HelperGetPendingOperations::customData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetPendingOperations, successful) == 0x000048, "Member 'PlayFabInsightsAPI_HelperGetPendingOperations::successful' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.HelperSetPerformance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_HelperSetPerformance final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabInsightsAPI_HelperSetPerformance) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_HelperSetPerformance");
static_assert(sizeof(PlayFabInsightsAPI_HelperSetPerformance) == 0x000050, "Wrong size on PlayFabInsightsAPI_HelperSetPerformance");
static_assert(offsetof(PlayFabInsightsAPI_HelperSetPerformance, Response) == 0x000000, "Member 'PlayFabInsightsAPI_HelperSetPerformance::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperSetPerformance, customData) == 0x000040, "Member 'PlayFabInsightsAPI_HelperSetPerformance::customData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperSetPerformance, successful) == 0x000048, "Member 'PlayFabInsightsAPI_HelperSetPerformance::successful' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.HelperSetStorageRetention
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_HelperSetStorageRetention final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabInsightsAPI_HelperSetStorageRetention) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_HelperSetStorageRetention");
static_assert(sizeof(PlayFabInsightsAPI_HelperSetStorageRetention) == 0x000050, "Wrong size on PlayFabInsightsAPI_HelperSetStorageRetention");
static_assert(offsetof(PlayFabInsightsAPI_HelperSetStorageRetention, Response) == 0x000000, "Member 'PlayFabInsightsAPI_HelperSetStorageRetention::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperSetStorageRetention, customData) == 0x000040, "Member 'PlayFabInsightsAPI_HelperSetStorageRetention::customData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperSetStorageRetention, successful) == 0x000048, "Member 'PlayFabInsightsAPI_HelperSetStorageRetention::successful' has a wrong offset!");

// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetDetailsResponseResponse
// 0x0048 (0x0048 - 0x0000)
struct PlayFabInsightsModelDecoder_decodeInsightsGetDetailsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInsightsInsightsGetDetailsResponse    ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsModelDecoder_decodeInsightsGetDetailsResponseResponse) == 0x000008, "Wrong alignment on PlayFabInsightsModelDecoder_decodeInsightsGetDetailsResponseResponse");
static_assert(sizeof(PlayFabInsightsModelDecoder_decodeInsightsGetDetailsResponseResponse) == 0x000048, "Wrong size on PlayFabInsightsModelDecoder_decodeInsightsGetDetailsResponseResponse");
static_assert(offsetof(PlayFabInsightsModelDecoder_decodeInsightsGetDetailsResponseResponse, Response) == 0x000000, "Member 'PlayFabInsightsModelDecoder_decodeInsightsGetDetailsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsModelDecoder_decodeInsightsGetDetailsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabInsightsModelDecoder_decodeInsightsGetDetailsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetLimitsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabInsightsModelDecoder_decodeInsightsGetLimitsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInsightsInsightsGetLimitsResponse     ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsModelDecoder_decodeInsightsGetLimitsResponseResponse) == 0x000008, "Wrong alignment on PlayFabInsightsModelDecoder_decodeInsightsGetLimitsResponseResponse");
static_assert(sizeof(PlayFabInsightsModelDecoder_decodeInsightsGetLimitsResponseResponse) == 0x000030, "Wrong size on PlayFabInsightsModelDecoder_decodeInsightsGetLimitsResponseResponse");
static_assert(offsetof(PlayFabInsightsModelDecoder_decodeInsightsGetLimitsResponseResponse, Response) == 0x000000, "Member 'PlayFabInsightsModelDecoder_decodeInsightsGetLimitsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsModelDecoder_decodeInsightsGetLimitsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabInsightsModelDecoder_decodeInsightsGetLimitsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetOperationStatusResponseResponse
// 0x0088 (0x0088 - 0x0000)
struct PlayFabInsightsModelDecoder_decodeInsightsGetOperationStatusResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInsightsInsightsGetOperationStatusResponse ReturnValue;                                  // 0x0008(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsModelDecoder_decodeInsightsGetOperationStatusResponseResponse) == 0x000008, "Wrong alignment on PlayFabInsightsModelDecoder_decodeInsightsGetOperationStatusResponseResponse");
static_assert(sizeof(PlayFabInsightsModelDecoder_decodeInsightsGetOperationStatusResponseResponse) == 0x000088, "Wrong size on PlayFabInsightsModelDecoder_decodeInsightsGetOperationStatusResponseResponse");
static_assert(offsetof(PlayFabInsightsModelDecoder_decodeInsightsGetOperationStatusResponseResponse, Response) == 0x000000, "Member 'PlayFabInsightsModelDecoder_decodeInsightsGetOperationStatusResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsModelDecoder_decodeInsightsGetOperationStatusResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabInsightsModelDecoder_decodeInsightsGetOperationStatusResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetPendingOperationsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabInsightsModelDecoder_decodeInsightsGetPendingOperationsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInsightsInsightsGetPendingOperationsResponse ReturnValue;                                // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsModelDecoder_decodeInsightsGetPendingOperationsResponseResponse) == 0x000008, "Wrong alignment on PlayFabInsightsModelDecoder_decodeInsightsGetPendingOperationsResponseResponse");
static_assert(sizeof(PlayFabInsightsModelDecoder_decodeInsightsGetPendingOperationsResponseResponse) == 0x000020, "Wrong size on PlayFabInsightsModelDecoder_decodeInsightsGetPendingOperationsResponseResponse");
static_assert(offsetof(PlayFabInsightsModelDecoder_decodeInsightsGetPendingOperationsResponseResponse, Response) == 0x000000, "Member 'PlayFabInsightsModelDecoder_decodeInsightsGetPendingOperationsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsModelDecoder_decodeInsightsGetPendingOperationsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabInsightsModelDecoder_decodeInsightsGetPendingOperationsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsOperationResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabInsightsModelDecoder_decodeInsightsOperationResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInsightsInsightsOperationResponse     ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsModelDecoder_decodeInsightsOperationResponseResponse) == 0x000008, "Wrong alignment on PlayFabInsightsModelDecoder_decodeInsightsOperationResponseResponse");
static_assert(sizeof(PlayFabInsightsModelDecoder_decodeInsightsOperationResponseResponse) == 0x000040, "Wrong size on PlayFabInsightsModelDecoder_decodeInsightsOperationResponseResponse");
static_assert(offsetof(PlayFabInsightsModelDecoder_decodeInsightsOperationResponseResponse, Response) == 0x000000, "Member 'PlayFabInsightsModelDecoder_decodeInsightsOperationResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsModelDecoder_decodeInsightsOperationResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabInsightsModelDecoder_decodeInsightsOperationResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.ConstructJsonObject
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonObject_ConstructJsonObject final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonObject*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_ConstructJsonObject) == 0x000008, "Wrong alignment on PlayFabJsonObject_ConstructJsonObject");
static_assert(sizeof(PlayFabJsonObject_ConstructJsonObject) == 0x000010, "Wrong size on PlayFabJsonObject_ConstructJsonObject");
static_assert(offsetof(PlayFabJsonObject_ConstructJsonObject, WorldContextObject) == 0x000000, "Member 'PlayFabJsonObject_ConstructJsonObject::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_ConstructJsonObject, ReturnValue) == 0x000008, "Member 'PlayFabJsonObject_ConstructJsonObject::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.DecodeJson
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_DecodeJson final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_DecodeJson) == 0x000008, "Wrong alignment on PlayFabJsonObject_DecodeJson");
static_assert(sizeof(PlayFabJsonObject_DecodeJson) == 0x000018, "Wrong size on PlayFabJsonObject_DecodeJson");
static_assert(offsetof(PlayFabJsonObject_DecodeJson, JsonString) == 0x000000, "Member 'PlayFabJsonObject_DecodeJson::JsonString' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_DecodeJson, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_DecodeJson::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_GetArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayFabJsonValue*>              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetArrayField");
static_assert(sizeof(PlayFabJsonObject_GetArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_GetArrayField");
static_assert(offsetof(PlayFabJsonObject_GetArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetArrayField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetArrayField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetBoolArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_GetBoolArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetBoolArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetBoolArrayField");
static_assert(sizeof(PlayFabJsonObject_GetBoolArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_GetBoolArrayField");
static_assert(offsetof(PlayFabJsonObject_GetBoolArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetBoolArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetBoolArrayField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetBoolArrayField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetFieldNames
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonObject_GetFieldNames final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetFieldNames) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetFieldNames");
static_assert(sizeof(PlayFabJsonObject_GetFieldNames) == 0x000010, "Wrong size on PlayFabJsonObject_GetFieldNames");
static_assert(offsetof(PlayFabJsonObject_GetFieldNames, ReturnValue) == 0x000000, "Member 'PlayFabJsonObject_GetFieldNames::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetNumberArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_GetNumberArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetNumberArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetNumberArrayField");
static_assert(sizeof(PlayFabJsonObject_GetNumberArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_GetNumberArrayField");
static_assert(offsetof(PlayFabJsonObject_GetNumberArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetNumberArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetNumberArrayField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetNumberArrayField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetObjectArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_GetObjectArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayFabJsonObject*>             ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetObjectArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetObjectArrayField");
static_assert(sizeof(PlayFabJsonObject_GetObjectArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_GetObjectArrayField");
static_assert(offsetof(PlayFabJsonObject_GetObjectArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetObjectArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetObjectArrayField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetObjectArrayField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetStringArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_GetStringArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetStringArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetStringArrayField");
static_assert(sizeof(PlayFabJsonObject_GetStringArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_GetStringArrayField");
static_assert(offsetof(PlayFabJsonObject_GetStringArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetStringArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetStringArrayField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetStringArrayField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.MergeJsonObject
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonObject_MergeJsonObject final
{
public:
	class UPlayFabJsonObject*                     InJsonObject;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Overwrite;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_MergeJsonObject) == 0x000008, "Wrong alignment on PlayFabJsonObject_MergeJsonObject");
static_assert(sizeof(PlayFabJsonObject_MergeJsonObject) == 0x000010, "Wrong size on PlayFabJsonObject_MergeJsonObject");
static_assert(offsetof(PlayFabJsonObject_MergeJsonObject, InJsonObject) == 0x000000, "Member 'PlayFabJsonObject_MergeJsonObject::InJsonObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_MergeJsonObject, Overwrite) == 0x000008, "Member 'PlayFabJsonObject_MergeJsonObject::Overwrite' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.RemoveField
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonObject_RemoveField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_RemoveField) == 0x000008, "Wrong alignment on PlayFabJsonObject_RemoveField");
static_assert(sizeof(PlayFabJsonObject_RemoveField) == 0x000010, "Wrong size on PlayFabJsonObject_RemoveField");
static_assert(offsetof(PlayFabJsonObject_RemoveField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_RemoveField::FieldName' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_SetArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayFabJsonValue*>              inArray;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetArrayField");
static_assert(sizeof(PlayFabJsonObject_SetArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_SetArrayField");
static_assert(offsetof(PlayFabJsonObject_SetArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetArrayField, inArray) == 0x000010, "Member 'PlayFabJsonObject_SetArrayField::inArray' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetBoolArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_SetBoolArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  BoolArray;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetBoolArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetBoolArrayField");
static_assert(sizeof(PlayFabJsonObject_SetBoolArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_SetBoolArrayField");
static_assert(offsetof(PlayFabJsonObject_SetBoolArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetBoolArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetBoolArrayField, BoolArray) == 0x000010, "Member 'PlayFabJsonObject_SetBoolArrayField::BoolArray' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetBoolField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_SetBoolField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_SetBoolField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetBoolField");
static_assert(sizeof(PlayFabJsonObject_SetBoolField) == 0x000018, "Wrong size on PlayFabJsonObject_SetBoolField");
static_assert(offsetof(PlayFabJsonObject_SetBoolField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetBoolField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetBoolField, InValue) == 0x000010, "Member 'PlayFabJsonObject_SetBoolField::InValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_SetField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonValue*                      JsonValue;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetField");
static_assert(sizeof(PlayFabJsonObject_SetField) == 0x000018, "Wrong size on PlayFabJsonObject_SetField");
static_assert(offsetof(PlayFabJsonObject_SetField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetField, JsonValue) == 0x000010, "Member 'PlayFabJsonObject_SetField::JsonValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetFieldNull
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonObject_SetFieldNull final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetFieldNull) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetFieldNull");
static_assert(sizeof(PlayFabJsonObject_SetFieldNull) == 0x000010, "Wrong size on PlayFabJsonObject_SetFieldNull");
static_assert(offsetof(PlayFabJsonObject_SetFieldNull, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetFieldNull::FieldName' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetNumberArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_SetNumberArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 NumberArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetNumberArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetNumberArrayField");
static_assert(sizeof(PlayFabJsonObject_SetNumberArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_SetNumberArrayField");
static_assert(offsetof(PlayFabJsonObject_SetNumberArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetNumberArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetNumberArrayField, NumberArray) == 0x000010, "Member 'PlayFabJsonObject_SetNumberArrayField::NumberArray' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetNumberField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_SetNumberField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Number;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_SetNumberField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetNumberField");
static_assert(sizeof(PlayFabJsonObject_SetNumberField) == 0x000018, "Wrong size on PlayFabJsonObject_SetNumberField");
static_assert(offsetof(PlayFabJsonObject_SetNumberField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetNumberField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetNumberField, Number) == 0x000010, "Member 'PlayFabJsonObject_SetNumberField::Number' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetObjectArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_SetObjectArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayFabJsonObject*>             ObjectArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetObjectArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetObjectArrayField");
static_assert(sizeof(PlayFabJsonObject_SetObjectArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_SetObjectArrayField");
static_assert(offsetof(PlayFabJsonObject_SetObjectArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetObjectArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetObjectArrayField, ObjectArray) == 0x000010, "Member 'PlayFabJsonObject_SetObjectArrayField::ObjectArray' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetObjectField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_SetObjectField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonObject*                     JsonObject;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetObjectField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetObjectField");
static_assert(sizeof(PlayFabJsonObject_SetObjectField) == 0x000018, "Wrong size on PlayFabJsonObject_SetObjectField");
static_assert(offsetof(PlayFabJsonObject_SetObjectField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetObjectField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetObjectField, JsonObject) == 0x000010, "Member 'PlayFabJsonObject_SetObjectField::JsonObject' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetStringArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_SetStringArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         StringArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetStringArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetStringArrayField");
static_assert(sizeof(PlayFabJsonObject_SetStringArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_SetStringArrayField");
static_assert(offsetof(PlayFabJsonObject_SetStringArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetStringArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetStringArrayField, StringArray) == 0x000010, "Member 'PlayFabJsonObject_SetStringArrayField::StringArray' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetStringField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_SetStringField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StringValue;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetStringField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetStringField");
static_assert(sizeof(PlayFabJsonObject_SetStringField) == 0x000020, "Wrong size on PlayFabJsonObject_SetStringField");
static_assert(offsetof(PlayFabJsonObject_SetStringField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetStringField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetStringField, StringValue) == 0x000010, "Member 'PlayFabJsonObject_SetStringField::StringValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.EncodeJson
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonObject_EncodeJson final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_EncodeJson) == 0x000008, "Wrong alignment on PlayFabJsonObject_EncodeJson");
static_assert(sizeof(PlayFabJsonObject_EncodeJson) == 0x000010, "Wrong size on PlayFabJsonObject_EncodeJson");
static_assert(offsetof(PlayFabJsonObject_EncodeJson, ReturnValue) == 0x000000, "Member 'PlayFabJsonObject_EncodeJson::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetBoolField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_GetBoolField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_GetBoolField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetBoolField");
static_assert(sizeof(PlayFabJsonObject_GetBoolField) == 0x000018, "Wrong size on PlayFabJsonObject_GetBoolField");
static_assert(offsetof(PlayFabJsonObject_GetBoolField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetBoolField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetBoolField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetBoolField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_GetField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonValue*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetField");
static_assert(sizeof(PlayFabJsonObject_GetField) == 0x000018, "Wrong size on PlayFabJsonObject_GetField");
static_assert(offsetof(PlayFabJsonObject_GetField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetNumberField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_GetNumberField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_GetNumberField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetNumberField");
static_assert(sizeof(PlayFabJsonObject_GetNumberField) == 0x000018, "Wrong size on PlayFabJsonObject_GetNumberField");
static_assert(offsetof(PlayFabJsonObject_GetNumberField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetNumberField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetNumberField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetNumberField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetObjectField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_GetObjectField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonObject*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetObjectField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetObjectField");
static_assert(sizeof(PlayFabJsonObject_GetObjectField) == 0x000018, "Wrong size on PlayFabJsonObject_GetObjectField");
static_assert(offsetof(PlayFabJsonObject_GetObjectField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetObjectField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetObjectField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetObjectField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetStringField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_GetStringField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetStringField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetStringField");
static_assert(sizeof(PlayFabJsonObject_GetStringField) == 0x000020, "Wrong size on PlayFabJsonObject_GetStringField");
static_assert(offsetof(PlayFabJsonObject_GetStringField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetStringField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetStringField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetStringField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.HasField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_HasField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_HasField) == 0x000008, "Wrong alignment on PlayFabJsonObject_HasField");
static_assert(sizeof(PlayFabJsonObject_HasField) == 0x000018, "Wrong size on PlayFabJsonObject_HasField");
static_assert(offsetof(PlayFabJsonObject_HasField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_HasField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_HasField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_HasField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.ConstructJsonValueArray
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonValue_ConstructJsonValueArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayFabJsonValue*>              inArray;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UPlayFabJsonValue*                      ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_ConstructJsonValueArray) == 0x000008, "Wrong alignment on PlayFabJsonValue_ConstructJsonValueArray");
static_assert(sizeof(PlayFabJsonValue_ConstructJsonValueArray) == 0x000020, "Wrong size on PlayFabJsonValue_ConstructJsonValueArray");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueArray, WorldContextObject) == 0x000000, "Member 'PlayFabJsonValue_ConstructJsonValueArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueArray, inArray) == 0x000008, "Member 'PlayFabJsonValue_ConstructJsonValueArray::inArray' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueArray, ReturnValue) == 0x000018, "Member 'PlayFabJsonValue_ConstructJsonValueArray::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.ConstructJsonValueBool
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonValue_ConstructJsonValueBool final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabJsonValue*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_ConstructJsonValueBool) == 0x000008, "Wrong alignment on PlayFabJsonValue_ConstructJsonValueBool");
static_assert(sizeof(PlayFabJsonValue_ConstructJsonValueBool) == 0x000018, "Wrong size on PlayFabJsonValue_ConstructJsonValueBool");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueBool, WorldContextObject) == 0x000000, "Member 'PlayFabJsonValue_ConstructJsonValueBool::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueBool, InValue) == 0x000008, "Member 'PlayFabJsonValue_ConstructJsonValueBool::InValue' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueBool, ReturnValue) == 0x000010, "Member 'PlayFabJsonValue_ConstructJsonValueBool::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.ConstructJsonValueNumber
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonValue_ConstructJsonValueNumber final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Number;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabJsonValue*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_ConstructJsonValueNumber) == 0x000008, "Wrong alignment on PlayFabJsonValue_ConstructJsonValueNumber");
static_assert(sizeof(PlayFabJsonValue_ConstructJsonValueNumber) == 0x000018, "Wrong size on PlayFabJsonValue_ConstructJsonValueNumber");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueNumber, WorldContextObject) == 0x000000, "Member 'PlayFabJsonValue_ConstructJsonValueNumber::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueNumber, Number) == 0x000008, "Member 'PlayFabJsonValue_ConstructJsonValueNumber::Number' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueNumber, ReturnValue) == 0x000010, "Member 'PlayFabJsonValue_ConstructJsonValueNumber::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.ConstructJsonValueObject
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonValue_ConstructJsonValueObject final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonObject*                     JsonObject;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonValue*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_ConstructJsonValueObject) == 0x000008, "Wrong alignment on PlayFabJsonValue_ConstructJsonValueObject");
static_assert(sizeof(PlayFabJsonValue_ConstructJsonValueObject) == 0x000018, "Wrong size on PlayFabJsonValue_ConstructJsonValueObject");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueObject, WorldContextObject) == 0x000000, "Member 'PlayFabJsonValue_ConstructJsonValueObject::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueObject, JsonObject) == 0x000008, "Member 'PlayFabJsonValue_ConstructJsonValueObject::JsonObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueObject, ReturnValue) == 0x000010, "Member 'PlayFabJsonValue_ConstructJsonValueObject::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.ConstructJsonValueString
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonValue_ConstructJsonValueString final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StringValue;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonValue*                      ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_ConstructJsonValueString) == 0x000008, "Wrong alignment on PlayFabJsonValue_ConstructJsonValueString");
static_assert(sizeof(PlayFabJsonValue_ConstructJsonValueString) == 0x000020, "Wrong size on PlayFabJsonValue_ConstructJsonValueString");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueString, WorldContextObject) == 0x000000, "Member 'PlayFabJsonValue_ConstructJsonValueString::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueString, StringValue) == 0x000008, "Member 'PlayFabJsonValue_ConstructJsonValueString::StringValue' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueString, ReturnValue) == 0x000018, "Member 'PlayFabJsonValue_ConstructJsonValueString::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.AsObject
// 0x0008 (0x0008 - 0x0000)
struct PlayFabJsonValue_AsObject final
{
public:
	class UPlayFabJsonObject*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_AsObject) == 0x000008, "Wrong alignment on PlayFabJsonValue_AsObject");
static_assert(sizeof(PlayFabJsonValue_AsObject) == 0x000008, "Wrong size on PlayFabJsonValue_AsObject");
static_assert(offsetof(PlayFabJsonValue_AsObject, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_AsObject::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.AsArray
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonValue_AsArray final
{
public:
	TArray<class UPlayFabJsonValue*>              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_AsArray) == 0x000008, "Wrong alignment on PlayFabJsonValue_AsArray");
static_assert(sizeof(PlayFabJsonValue_AsArray) == 0x000010, "Wrong size on PlayFabJsonValue_AsArray");
static_assert(offsetof(PlayFabJsonValue_AsArray, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_AsArray::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.AsBool
// 0x0001 (0x0001 - 0x0000)
struct PlayFabJsonValue_AsBool final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_AsBool) == 0x000001, "Wrong alignment on PlayFabJsonValue_AsBool");
static_assert(sizeof(PlayFabJsonValue_AsBool) == 0x000001, "Wrong size on PlayFabJsonValue_AsBool");
static_assert(offsetof(PlayFabJsonValue_AsBool, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_AsBool::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.AsNumber
// 0x0004 (0x0004 - 0x0000)
struct PlayFabJsonValue_AsNumber final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_AsNumber) == 0x000004, "Wrong alignment on PlayFabJsonValue_AsNumber");
static_assert(sizeof(PlayFabJsonValue_AsNumber) == 0x000004, "Wrong size on PlayFabJsonValue_AsNumber");
static_assert(offsetof(PlayFabJsonValue_AsNumber, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_AsNumber::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.AsString
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonValue_AsString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_AsString) == 0x000008, "Wrong alignment on PlayFabJsonValue_AsString");
static_assert(sizeof(PlayFabJsonValue_AsString) == 0x000010, "Wrong size on PlayFabJsonValue_AsString");
static_assert(offsetof(PlayFabJsonValue_AsString, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_AsString::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.GetType
// 0x0001 (0x0001 - 0x0000)
struct PlayFabJsonValue_GetType final
{
public:
	EPFJson                                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_GetType) == 0x000001, "Wrong alignment on PlayFabJsonValue_GetType");
static_assert(sizeof(PlayFabJsonValue_GetType) == 0x000001, "Wrong size on PlayFabJsonValue_GetType");
static_assert(offsetof(PlayFabJsonValue_GetType, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_GetType::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.GetTypeString
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonValue_GetTypeString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_GetTypeString) == 0x000008, "Wrong alignment on PlayFabJsonValue_GetTypeString");
static_assert(sizeof(PlayFabJsonValue_GetTypeString) == 0x000010, "Wrong size on PlayFabJsonValue_GetTypeString");
static_assert(offsetof(PlayFabJsonValue_GetTypeString, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_GetTypeString::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.IsNull
// 0x0001 (0x0001 - 0x0000)
struct PlayFabJsonValue_IsNull final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_IsNull) == 0x000001, "Wrong alignment on PlayFabJsonValue_IsNull");
static_assert(sizeof(PlayFabJsonValue_IsNull) == 0x000001, "Wrong size on PlayFabJsonValue_IsNull");
static_assert(offsetof(PlayFabJsonValue_IsNull, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_IsNull::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabLocalizationAPI.GetLanguageList
// 0x0040 (0x0040 - 0x0000)
struct PlayFabLocalizationAPI_GetLanguageList final
{
public:
	struct FLocalizationGetLanguageListRequest    Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FLocalizationGetLanguageListResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabLocalizationAPI*                ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabLocalizationAPI_GetLanguageList) == 0x000008, "Wrong alignment on PlayFabLocalizationAPI_GetLanguageList");
static_assert(sizeof(PlayFabLocalizationAPI_GetLanguageList) == 0x000040, "Wrong size on PlayFabLocalizationAPI_GetLanguageList");
static_assert(offsetof(PlayFabLocalizationAPI_GetLanguageList, Request) == 0x000000, "Member 'PlayFabLocalizationAPI_GetLanguageList::Request' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_GetLanguageList, onSuccess) == 0x000010, "Member 'PlayFabLocalizationAPI_GetLanguageList::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_GetLanguageList, onFailure) == 0x000020, "Member 'PlayFabLocalizationAPI_GetLanguageList::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_GetLanguageList, customData) == 0x000030, "Member 'PlayFabLocalizationAPI_GetLanguageList::customData' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_GetLanguageList, ReturnValue) == 0x000038, "Member 'PlayFabLocalizationAPI_GetLanguageList::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabLocalizationAPI.HelperGetLanguageList
// 0x0050 (0x0050 - 0x0000)
struct PlayFabLocalizationAPI_HelperGetLanguageList final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabLocalizationAPI_HelperGetLanguageList) == 0x000008, "Wrong alignment on PlayFabLocalizationAPI_HelperGetLanguageList");
static_assert(sizeof(PlayFabLocalizationAPI_HelperGetLanguageList) == 0x000050, "Wrong size on PlayFabLocalizationAPI_HelperGetLanguageList");
static_assert(offsetof(PlayFabLocalizationAPI_HelperGetLanguageList, Response) == 0x000000, "Member 'PlayFabLocalizationAPI_HelperGetLanguageList::Response' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_HelperGetLanguageList, customData) == 0x000040, "Member 'PlayFabLocalizationAPI_HelperGetLanguageList::customData' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_HelperGetLanguageList, successful) == 0x000048, "Member 'PlayFabLocalizationAPI_HelperGetLanguageList::successful' has a wrong offset!");

// Function PlayFab.PlayFabLocalizationModelDecoder.decodeGetLanguageListResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabLocalizationModelDecoder_decodeGetLanguageListResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLocalizationGetLanguageListResponse   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabLocalizationModelDecoder_decodeGetLanguageListResponseResponse) == 0x000008, "Wrong alignment on PlayFabLocalizationModelDecoder_decodeGetLanguageListResponseResponse");
static_assert(sizeof(PlayFabLocalizationModelDecoder_decodeGetLanguageListResponseResponse) == 0x000020, "Wrong size on PlayFabLocalizationModelDecoder_decodeGetLanguageListResponseResponse");
static_assert(offsetof(PlayFabLocalizationModelDecoder_decodeGetLanguageListResponseResponse, Response) == 0x000000, "Member 'PlayFabLocalizationModelDecoder_decodeGetLanguageListResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationModelDecoder_decodeGetLanguageListResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabLocalizationModelDecoder_decodeGetLanguageListResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CancelAllMatchmakingTicketsForPlayer
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer final
{
public:
	struct FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest Request;                          // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CancelAllServerBackfillTicketsForPlayer
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer final
{
public:
	struct FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest Request;                       // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CancelMatchmakingTicket
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_CancelMatchmakingTicket final
{
public:
	struct FMultiplayerCancelMatchmakingTicketRequest Request;                                       // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCancelMatchmakingTicketResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CancelMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CancelMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_CancelMatchmakingTicket) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_CancelMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelMatchmakingTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CancelMatchmakingTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelMatchmakingTicket, onSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_CancelMatchmakingTicket::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelMatchmakingTicket, onFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_CancelMatchmakingTicket::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelMatchmakingTicket, customData) == 0x000050, "Member 'PlayFabMultiplayerAPI_CancelMatchmakingTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelMatchmakingTicket, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_CancelMatchmakingTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CancelServerBackfillTicket
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_CancelServerBackfillTicket final
{
public:
	struct FMultiplayerCancelServerBackfillTicketRequest Request;                                    // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCancelServerBackfillTicketResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CancelServerBackfillTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CancelServerBackfillTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_CancelServerBackfillTicket) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_CancelServerBackfillTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelServerBackfillTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CancelServerBackfillTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelServerBackfillTicket, onSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_CancelServerBackfillTicket::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelServerBackfillTicket, onFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_CancelServerBackfillTicket::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelServerBackfillTicket, customData) == 0x000050, "Member 'PlayFabMultiplayerAPI_CancelServerBackfillTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelServerBackfillTicket, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_CancelServerBackfillTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateBuildAlias
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_CreateBuildAlias final
{
public:
	struct FMultiplayerCreateBuildAliasRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateBuildAlias) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_CreateBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildAlias, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateBuildAlias::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildAlias, onSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_CreateBuildAlias::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildAlias, onFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_CreateBuildAlias::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildAlias, customData) == 0x000050, "Member 'PlayFabMultiplayerAPI_CreateBuildAlias::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildAlias, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_CreateBuildAlias::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateBuildWithCustomContainer
// 0x00F0 (0x00F0 - 0x0000)
struct PlayFabMultiplayerAPI_CreateBuildWithCustomContainer final
{
public:
	struct FMultiplayerCreateBuildWithCustomContainerRequest Request;                                // 0x0000(0x00C0)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateBuildWithCustomContainerResponse& Result, class UObject* customData)> onSuccess; // 0x00C0(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x00D0(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x00E0(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x00E8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateBuildWithCustomContainer");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer) == 0x0000F0, "Wrong size on PlayFabMultiplayerAPI_CreateBuildWithCustomContainer");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateBuildWithCustomContainer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer, onSuccess) == 0x0000C0, "Member 'PlayFabMultiplayerAPI_CreateBuildWithCustomContainer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer, onFailure) == 0x0000D0, "Member 'PlayFabMultiplayerAPI_CreateBuildWithCustomContainer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer, customData) == 0x0000E0, "Member 'PlayFabMultiplayerAPI_CreateBuildWithCustomContainer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer, ReturnValue) == 0x0000E8, "Member 'PlayFabMultiplayerAPI_CreateBuildWithCustomContainer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateBuildWithManagedContainer
// 0x0100 (0x0100 - 0x0000)
struct PlayFabMultiplayerAPI_CreateBuildWithManagedContainer final
{
public:
	struct FMultiplayerCreateBuildWithManagedContainerRequest Request;                               // 0x0000(0x00D0)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateBuildWithManagedContainerResponse& Result, class UObject* customData)> onSuccess; // 0x00D0(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x00E0(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x00F0(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x00F8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateBuildWithManagedContainer");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer) == 0x000100, "Wrong size on PlayFabMultiplayerAPI_CreateBuildWithManagedContainer");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateBuildWithManagedContainer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer, onSuccess) == 0x0000D0, "Member 'PlayFabMultiplayerAPI_CreateBuildWithManagedContainer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer, onFailure) == 0x0000E0, "Member 'PlayFabMultiplayerAPI_CreateBuildWithManagedContainer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer, customData) == 0x0000F0, "Member 'PlayFabMultiplayerAPI_CreateBuildWithManagedContainer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer, ReturnValue) == 0x0000F8, "Member 'PlayFabMultiplayerAPI_CreateBuildWithManagedContainer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateBuildWithProcessBasedServer
// 0x0100 (0x0100 - 0x0000)
struct PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer final
{
public:
	struct FMultiplayerCreateBuildWithProcessBasedServerRequest Request;                             // 0x0000(0x00D0)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateBuildWithProcessBasedServerResponse& Result, class UObject* customData)> onSuccess; // 0x00D0(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x00E0(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x00F0(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x00F8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer) == 0x000100, "Wrong size on PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer, onSuccess) == 0x0000D0, "Member 'PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer, onFailure) == 0x0000E0, "Member 'PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer, customData) == 0x0000F0, "Member 'PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer, ReturnValue) == 0x0000F8, "Member 'PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateLobby
// 0x0088 (0x0088 - 0x0000)
struct PlayFabMultiplayerAPI_CreateLobby final
{
public:
	struct FMultiplayerCreateLobbyRequest         Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateLobbyResult& Result, class UObject* customData)> onSuccess; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateLobby) == 0x000088, "Wrong size on PlayFabMultiplayerAPI_CreateLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateLobby, onSuccess) == 0x000058, "Member 'PlayFabMultiplayerAPI_CreateLobby::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateLobby, onFailure) == 0x000068, "Member 'PlayFabMultiplayerAPI_CreateLobby::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateLobby, customData) == 0x000078, "Member 'PlayFabMultiplayerAPI_CreateLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateLobby, ReturnValue) == 0x000080, "Member 'PlayFabMultiplayerAPI_CreateLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateMatchmakingTicket
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_CreateMatchmakingTicket final
{
public:
	struct FMultiplayerCreateMatchmakingTicketRequest Request;                                       // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateMatchmakingTicketResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateMatchmakingTicket) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_CreateMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateMatchmakingTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateMatchmakingTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateMatchmakingTicket, onSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_CreateMatchmakingTicket::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateMatchmakingTicket, onFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_CreateMatchmakingTicket::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateMatchmakingTicket, customData) == 0x000060, "Member 'PlayFabMultiplayerAPI_CreateMatchmakingTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateMatchmakingTicket, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_CreateMatchmakingTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateRemoteUser
// 0x0090 (0x0090 - 0x0000)
struct PlayFabMultiplayerAPI_CreateRemoteUser final
{
public:
	struct FMultiplayerCreateRemoteUserRequest    Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateRemoteUserResponse& Result, class UObject* customData)> onSuccess; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateRemoteUser) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateRemoteUser");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateRemoteUser) == 0x000090, "Wrong size on PlayFabMultiplayerAPI_CreateRemoteUser");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateRemoteUser, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateRemoteUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateRemoteUser, onSuccess) == 0x000060, "Member 'PlayFabMultiplayerAPI_CreateRemoteUser::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateRemoteUser, onFailure) == 0x000070, "Member 'PlayFabMultiplayerAPI_CreateRemoteUser::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateRemoteUser, customData) == 0x000080, "Member 'PlayFabMultiplayerAPI_CreateRemoteUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateRemoteUser, ReturnValue) == 0x000088, "Member 'PlayFabMultiplayerAPI_CreateRemoteUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateServerBackfillTicket
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_CreateServerBackfillTicket final
{
public:
	struct FMultiplayerCreateServerBackfillTicketRequest Request;                                    // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateServerBackfillTicketResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateServerBackfillTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateServerBackfillTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateServerBackfillTicket) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_CreateServerBackfillTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerBackfillTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateServerBackfillTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerBackfillTicket, onSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_CreateServerBackfillTicket::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerBackfillTicket, onFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_CreateServerBackfillTicket::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerBackfillTicket, customData) == 0x000060, "Member 'PlayFabMultiplayerAPI_CreateServerBackfillTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerBackfillTicket, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_CreateServerBackfillTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateServerMatchmakingTicket
// 0x0068 (0x0068 - 0x0000)
struct PlayFabMultiplayerAPI_CreateServerMatchmakingTicket final
{
public:
	struct FMultiplayerCreateServerMatchmakingTicketRequest Request;                                 // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateMatchmakingTicketResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateServerMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket) == 0x000068, "Wrong size on PlayFabMultiplayerAPI_CreateServerMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateServerMatchmakingTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket, onSuccess) == 0x000038, "Member 'PlayFabMultiplayerAPI_CreateServerMatchmakingTicket::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket, onFailure) == 0x000048, "Member 'PlayFabMultiplayerAPI_CreateServerMatchmakingTicket::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket, customData) == 0x000058, "Member 'PlayFabMultiplayerAPI_CreateServerMatchmakingTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket, ReturnValue) == 0x000060, "Member 'PlayFabMultiplayerAPI_CreateServerMatchmakingTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateTitleMultiplayerServersQuotaChange
// 0x0090 (0x0090 - 0x0000)
struct PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange final
{
public:
	struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest Request;                      // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse& Result, class UObject* customData)> onSuccess; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange) == 0x000090, "Wrong size on PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange, onSuccess) == 0x000060, "Member 'PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange, onFailure) == 0x000070, "Member 'PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange, customData) == 0x000080, "Member 'PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange, ReturnValue) == 0x000088, "Member 'PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteAsset
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteAsset final
{
public:
	struct FMultiplayerDeleteAssetRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteAsset) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteAsset");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteAsset) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_DeleteAsset");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteAsset, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteAsset::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteAsset, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_DeleteAsset::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteAsset, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteAsset::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteAsset, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteAsset::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteAsset, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_DeleteAsset::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteBuild
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteBuild final
{
public:
	struct FMultiplayerDeleteBuildRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteBuild) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteBuild");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteBuild) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_DeleteBuild");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuild, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteBuild::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuild, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_DeleteBuild::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuild, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteBuild::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuild, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteBuild::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuild, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_DeleteBuild::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteBuildAlias
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteBuildAlias final
{
public:
	struct FMultiplayerDeleteBuildAliasRequest    Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteBuildAlias) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_DeleteBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildAlias, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteBuildAlias::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildAlias, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_DeleteBuildAlias::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildAlias, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteBuildAlias::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildAlias, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteBuildAlias::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildAlias, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_DeleteBuildAlias::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteBuildRegion
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteBuildRegion final
{
public:
	struct FMultiplayerDeleteBuildRegionRequest   Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteBuildRegion) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteBuildRegion");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteBuildRegion) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_DeleteBuildRegion");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildRegion, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteBuildRegion::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildRegion, onSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteBuildRegion::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildRegion, onFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteBuildRegion::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildRegion, customData) == 0x000050, "Member 'PlayFabMultiplayerAPI_DeleteBuildRegion::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildRegion, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_DeleteBuildRegion::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteCertificate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteCertificate final
{
public:
	struct FMultiplayerDeleteCertificateRequest   Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteCertificate) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteCertificate");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteCertificate) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_DeleteCertificate");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteCertificate, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteCertificate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteCertificate, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_DeleteCertificate::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteCertificate, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteCertificate::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteCertificate, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteCertificate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteCertificate, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_DeleteCertificate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteContainerImageRepository
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteContainerImageRepository final
{
public:
	struct FMultiplayerDeleteContainerImageRequest Request;                                          // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteContainerImageRepository) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteContainerImageRepository");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteContainerImageRepository) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_DeleteContainerImageRepository");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteContainerImageRepository, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteContainerImageRepository::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteContainerImageRepository, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_DeleteContainerImageRepository::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteContainerImageRepository, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteContainerImageRepository::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteContainerImageRepository, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteContainerImageRepository::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteContainerImageRepository, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_DeleteContainerImageRepository::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteLobby final
{
public:
	struct FMultiplayerDeleteLobbyRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_DeleteLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteLobby, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_DeleteLobby::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteLobby, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteLobby::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteLobby, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteLobby, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_DeleteLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteRemoteUser
// 0x0080 (0x0080 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteRemoteUser final
{
public:
	struct FMultiplayerDeleteRemoteUserRequest    Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteRemoteUser) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteRemoteUser");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteRemoteUser) == 0x000080, "Wrong size on PlayFabMultiplayerAPI_DeleteRemoteUser");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteRemoteUser, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteRemoteUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteRemoteUser, onSuccess) == 0x000050, "Member 'PlayFabMultiplayerAPI_DeleteRemoteUser::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteRemoteUser, onFailure) == 0x000060, "Member 'PlayFabMultiplayerAPI_DeleteRemoteUser::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteRemoteUser, customData) == 0x000070, "Member 'PlayFabMultiplayerAPI_DeleteRemoteUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteRemoteUser, ReturnValue) == 0x000078, "Member 'PlayFabMultiplayerAPI_DeleteRemoteUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.EnableMultiplayerServersForTitle
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle final
{
public:
	struct FMultiplayerEnableMultiplayerServersForTitleRequest Request;                              // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEnableMultiplayerServersForTitleResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle");
static_assert(sizeof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle");
static_assert(offsetof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle, onSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle, onFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle, customData) == 0x000030, "Member 'PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.FindFriendLobbies
// 0x0080 (0x0080 - 0x0000)
struct PlayFabMultiplayerAPI_FindFriendLobbies final
{
public:
	struct FMultiplayerFindFriendLobbiesRequest   Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerFindFriendLobbiesResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_FindFriendLobbies) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_FindFriendLobbies");
static_assert(sizeof(PlayFabMultiplayerAPI_FindFriendLobbies) == 0x000080, "Wrong size on PlayFabMultiplayerAPI_FindFriendLobbies");
static_assert(offsetof(PlayFabMultiplayerAPI_FindFriendLobbies, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_FindFriendLobbies::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindFriendLobbies, onSuccess) == 0x000050, "Member 'PlayFabMultiplayerAPI_FindFriendLobbies::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindFriendLobbies, onFailure) == 0x000060, "Member 'PlayFabMultiplayerAPI_FindFriendLobbies::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindFriendLobbies, customData) == 0x000070, "Member 'PlayFabMultiplayerAPI_FindFriendLobbies::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindFriendLobbies, ReturnValue) == 0x000078, "Member 'PlayFabMultiplayerAPI_FindFriendLobbies::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.FindLobbies
// 0x0068 (0x0068 - 0x0000)
struct PlayFabMultiplayerAPI_FindLobbies final
{
public:
	struct FMultiplayerFindLobbiesRequest         Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerFindLobbiesResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_FindLobbies) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_FindLobbies");
static_assert(sizeof(PlayFabMultiplayerAPI_FindLobbies) == 0x000068, "Wrong size on PlayFabMultiplayerAPI_FindLobbies");
static_assert(offsetof(PlayFabMultiplayerAPI_FindLobbies, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_FindLobbies::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindLobbies, onSuccess) == 0x000038, "Member 'PlayFabMultiplayerAPI_FindLobbies::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindLobbies, onFailure) == 0x000048, "Member 'PlayFabMultiplayerAPI_FindLobbies::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindLobbies, customData) == 0x000058, "Member 'PlayFabMultiplayerAPI_FindLobbies::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindLobbies, ReturnValue) == 0x000060, "Member 'PlayFabMultiplayerAPI_FindLobbies::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetAssetDownloadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetAssetDownloadUrl final
{
public:
	struct FMultiplayerGetAssetDownloadUrlRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetAssetDownloadUrlResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetAssetDownloadUrl) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetAssetDownloadUrl");
static_assert(sizeof(PlayFabMultiplayerAPI_GetAssetDownloadUrl) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetAssetDownloadUrl");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetDownloadUrl, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetAssetDownloadUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetDownloadUrl, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetAssetDownloadUrl::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetDownloadUrl, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetAssetDownloadUrl::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetDownloadUrl, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetAssetDownloadUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetDownloadUrl, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetAssetDownloadUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetAssetUploadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetAssetUploadUrl final
{
public:
	struct FMultiplayerGetAssetUploadUrlRequest   Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetAssetUploadUrlResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetAssetUploadUrl) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetAssetUploadUrl");
static_assert(sizeof(PlayFabMultiplayerAPI_GetAssetUploadUrl) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetAssetUploadUrl");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetUploadUrl, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetAssetUploadUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetUploadUrl, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetAssetUploadUrl::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetUploadUrl, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetAssetUploadUrl::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetUploadUrl, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetAssetUploadUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetUploadUrl, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetAssetUploadUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetBuild
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetBuild final
{
public:
	struct FMultiplayerGetBuildRequest            Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetBuildResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetBuild) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetBuild");
static_assert(sizeof(PlayFabMultiplayerAPI_GetBuild) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetBuild");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuild, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetBuild::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuild, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetBuild::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuild, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetBuild::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuild, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetBuild::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuild, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetBuild::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetBuildAlias
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetBuildAlias final
{
public:
	struct FMultiplayerGetBuildAliasRequest       Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_GetBuildAlias) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuildAlias, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetBuildAlias::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuildAlias, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetBuildAlias::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuildAlias, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetBuildAlias::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuildAlias, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetBuildAlias::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuildAlias, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetBuildAlias::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetContainerRegistryCredentials
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_GetContainerRegistryCredentials final
{
public:
	struct FMultiplayerGetContainerRegistryCredentialsRequest Request;                               // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetContainerRegistryCredentialsResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetContainerRegistryCredentials");
static_assert(sizeof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_GetContainerRegistryCredentials");
static_assert(offsetof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetContainerRegistryCredentials::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials, onSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_GetContainerRegistryCredentials::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials, onFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetContainerRegistryCredentials::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials, customData) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetContainerRegistryCredentials::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_GetContainerRegistryCredentials::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetLobby final
{
public:
	struct FMultiplayerGetLobbyRequest            Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetLobbyResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_GetLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_GetLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetLobby, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetLobby::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetLobby, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetLobby::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetLobby, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetLobby, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetMatch
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_GetMatch final
{
public:
	struct FMultiplayerGetMatchRequest            Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetMatchResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetMatch) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetMatch");
static_assert(sizeof(PlayFabMultiplayerAPI_GetMatch) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_GetMatch");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatch, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetMatch::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatch, onSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetMatch::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatch, onFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_GetMatch::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatch, customData) == 0x000060, "Member 'PlayFabMultiplayerAPI_GetMatch::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatch, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_GetMatch::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetMatchmakingTicket
// 0x0068 (0x0068 - 0x0000)
struct PlayFabMultiplayerAPI_GetMatchmakingTicket final
{
public:
	struct FMultiplayerGetMatchmakingTicketRequest Request;                                          // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetMatchmakingTicketResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_GetMatchmakingTicket) == 0x000068, "Wrong size on PlayFabMultiplayerAPI_GetMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatchmakingTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetMatchmakingTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatchmakingTicket, onSuccess) == 0x000038, "Member 'PlayFabMultiplayerAPI_GetMatchmakingTicket::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatchmakingTicket, onFailure) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetMatchmakingTicket::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatchmakingTicket, customData) == 0x000058, "Member 'PlayFabMultiplayerAPI_GetMatchmakingTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatchmakingTicket, ReturnValue) == 0x000060, "Member 'PlayFabMultiplayerAPI_GetMatchmakingTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetMultiplayerServerDetails
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetMultiplayerServerDetails final
{
public:
	struct FMultiplayerGetMultiplayerServerDetailsRequest Request;                                   // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetMultiplayerServerDetailsResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetMultiplayerServerDetails");
static_assert(sizeof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetMultiplayerServerDetails");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerDetails::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerDetails::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerDetails::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerDetails::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerDetails::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetMultiplayerServerLogs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetMultiplayerServerLogs final
{
public:
	struct FMultiplayerGetMultiplayerServerLogsRequest Request;                                      // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetMultiplayerServerLogsResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetMultiplayerServerLogs");
static_assert(sizeof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetMultiplayerServerLogs");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerLogs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerLogs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerLogs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerLogs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerLogs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetMultiplayerSessionLogsBySessionId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId final
{
public:
	struct FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest Request;                          // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetMultiplayerServerLogsResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId");
static_assert(sizeof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetQueueStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetQueueStatistics final
{
public:
	struct FMultiplayerGetQueueStatisticsRequest  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetQueueStatisticsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetQueueStatistics) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetQueueStatistics");
static_assert(sizeof(PlayFabMultiplayerAPI_GetQueueStatistics) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetQueueStatistics");
static_assert(offsetof(PlayFabMultiplayerAPI_GetQueueStatistics, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetQueueStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetQueueStatistics, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetQueueStatistics::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetQueueStatistics, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetQueueStatistics::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetQueueStatistics, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetQueueStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetQueueStatistics, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetQueueStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetRemoteLoginEndpoint
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_GetRemoteLoginEndpoint final
{
public:
	struct FMultiplayerGetRemoteLoginEndpointRequest Request;                                        // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetRemoteLoginEndpointResponse& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetRemoteLoginEndpoint");
static_assert(sizeof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_GetRemoteLoginEndpoint");
static_assert(offsetof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetRemoteLoginEndpoint::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint, onSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetRemoteLoginEndpoint::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint, onFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_GetRemoteLoginEndpoint::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint, customData) == 0x000060, "Member 'PlayFabMultiplayerAPI_GetRemoteLoginEndpoint::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_GetRemoteLoginEndpoint::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetServerBackfillTicket
// 0x0068 (0x0068 - 0x0000)
struct PlayFabMultiplayerAPI_GetServerBackfillTicket final
{
public:
	struct FMultiplayerGetServerBackfillTicketRequest Request;                                       // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetServerBackfillTicketResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetServerBackfillTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetServerBackfillTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_GetServerBackfillTicket) == 0x000068, "Wrong size on PlayFabMultiplayerAPI_GetServerBackfillTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_GetServerBackfillTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetServerBackfillTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetServerBackfillTicket, onSuccess) == 0x000038, "Member 'PlayFabMultiplayerAPI_GetServerBackfillTicket::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetServerBackfillTicket, onFailure) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetServerBackfillTicket::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetServerBackfillTicket, customData) == 0x000058, "Member 'PlayFabMultiplayerAPI_GetServerBackfillTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetServerBackfillTicket, ReturnValue) == 0x000060, "Member 'PlayFabMultiplayerAPI_GetServerBackfillTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetTitleEnabledForMultiplayerServersStatus
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus final
{
public:
	struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest Request;                    // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus");
static_assert(sizeof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus, onSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus, onFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus, customData) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetTitleMultiplayerServersQuotaChange
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange final
{
public:
	struct FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest Request;                         // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange");
static_assert(sizeof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetTitleMultiplayerServersQuotas
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas final
{
public:
	struct FMultiplayerGetTitleMultiplayerServersQuotasRequest Request;                              // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetTitleMultiplayerServersQuotasResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas");
static_assert(sizeof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas, onSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas, onFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas, customData) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.InviteToLobby
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_InviteToLobby final
{
public:
	struct FMultiplayerInviteToLobbyRequest       Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_InviteToLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_InviteToLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_InviteToLobby) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_InviteToLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_InviteToLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_InviteToLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_InviteToLobby, onSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_InviteToLobby::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_InviteToLobby, onFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_InviteToLobby::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_InviteToLobby, customData) == 0x000050, "Member 'PlayFabMultiplayerAPI_InviteToLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_InviteToLobby, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_InviteToLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.JoinArrangedLobby
// 0x0078 (0x0078 - 0x0000)
struct PlayFabMultiplayerAPI_JoinArrangedLobby final
{
public:
	struct FMultiplayerJoinArrangedLobbyRequest   Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerJoinLobbyResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_JoinArrangedLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_JoinArrangedLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_JoinArrangedLobby) == 0x000078, "Wrong size on PlayFabMultiplayerAPI_JoinArrangedLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinArrangedLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_JoinArrangedLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinArrangedLobby, onSuccess) == 0x000048, "Member 'PlayFabMultiplayerAPI_JoinArrangedLobby::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinArrangedLobby, onFailure) == 0x000058, "Member 'PlayFabMultiplayerAPI_JoinArrangedLobby::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinArrangedLobby, customData) == 0x000068, "Member 'PlayFabMultiplayerAPI_JoinArrangedLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinArrangedLobby, ReturnValue) == 0x000070, "Member 'PlayFabMultiplayerAPI_JoinArrangedLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.JoinLobby
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_JoinLobby final
{
public:
	struct FMultiplayerJoinLobbyRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerJoinLobbyResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_JoinLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_JoinLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_JoinLobby) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_JoinLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_JoinLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobby, onSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_JoinLobby::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobby, onFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_JoinLobby::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobby, customData) == 0x000050, "Member 'PlayFabMultiplayerAPI_JoinLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobby, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_JoinLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.JoinLobbyAsServer
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_JoinLobbyAsServer final
{
public:
	struct FMultiplayerJoinLobbyAsServerRequest   Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerJoinLobbyAsServerResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_JoinLobbyAsServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_JoinLobbyAsServer");
static_assert(sizeof(PlayFabMultiplayerAPI_JoinLobbyAsServer) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_JoinLobbyAsServer");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobbyAsServer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_JoinLobbyAsServer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobbyAsServer, onSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_JoinLobbyAsServer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobbyAsServer, onFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_JoinLobbyAsServer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobbyAsServer, customData) == 0x000050, "Member 'PlayFabMultiplayerAPI_JoinLobbyAsServer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobbyAsServer, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_JoinLobbyAsServer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.JoinMatchmakingTicket
// 0x0068 (0x0068 - 0x0000)
struct PlayFabMultiplayerAPI_JoinMatchmakingTicket final
{
public:
	struct FMultiplayerJoinMatchmakingTicketRequest Request;                                         // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerJoinMatchmakingTicketResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_JoinMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_JoinMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_JoinMatchmakingTicket) == 0x000068, "Wrong size on PlayFabMultiplayerAPI_JoinMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinMatchmakingTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_JoinMatchmakingTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinMatchmakingTicket, onSuccess) == 0x000038, "Member 'PlayFabMultiplayerAPI_JoinMatchmakingTicket::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinMatchmakingTicket, onFailure) == 0x000048, "Member 'PlayFabMultiplayerAPI_JoinMatchmakingTicket::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinMatchmakingTicket, customData) == 0x000058, "Member 'PlayFabMultiplayerAPI_JoinMatchmakingTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinMatchmakingTicket, ReturnValue) == 0x000060, "Member 'PlayFabMultiplayerAPI_JoinMatchmakingTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.LeaveLobby
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_LeaveLobby final
{
public:
	struct FMultiplayerLeaveLobbyRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_LeaveLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_LeaveLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_LeaveLobby) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_LeaveLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_LeaveLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobby, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_LeaveLobby::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobby, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_LeaveLobby::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobby, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_LeaveLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobby, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_LeaveLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.LeaveLobbyAsServer
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_LeaveLobbyAsServer final
{
public:
	struct FMultiplayerLeaveLobbyAsServerRequest  Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_LeaveLobbyAsServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_LeaveLobbyAsServer");
static_assert(sizeof(PlayFabMultiplayerAPI_LeaveLobbyAsServer) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_LeaveLobbyAsServer");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobbyAsServer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_LeaveLobbyAsServer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobbyAsServer, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_LeaveLobbyAsServer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobbyAsServer, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_LeaveLobbyAsServer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobbyAsServer, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_LeaveLobbyAsServer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobbyAsServer, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_LeaveLobbyAsServer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListArchivedMultiplayerServers
// 0x0078 (0x0078 - 0x0000)
struct PlayFabMultiplayerAPI_ListArchivedMultiplayerServers final
{
public:
	struct FMultiplayerListMultiplayerServersRequest Request;                                        // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListMultiplayerServersResponse& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListArchivedMultiplayerServers");
static_assert(sizeof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers) == 0x000078, "Wrong size on PlayFabMultiplayerAPI_ListArchivedMultiplayerServers");
static_assert(offsetof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListArchivedMultiplayerServers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers, onSuccess) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListArchivedMultiplayerServers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers, onFailure) == 0x000058, "Member 'PlayFabMultiplayerAPI_ListArchivedMultiplayerServers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers, customData) == 0x000068, "Member 'PlayFabMultiplayerAPI_ListArchivedMultiplayerServers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers, ReturnValue) == 0x000070, "Member 'PlayFabMultiplayerAPI_ListArchivedMultiplayerServers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListAssetSummaries
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListAssetSummaries final
{
public:
	struct FMultiplayerListAssetSummariesRequest  Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListAssetSummariesResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListAssetSummaries) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListAssetSummaries");
static_assert(sizeof(PlayFabMultiplayerAPI_ListAssetSummaries) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListAssetSummaries");
static_assert(offsetof(PlayFabMultiplayerAPI_ListAssetSummaries, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListAssetSummaries::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListAssetSummaries, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListAssetSummaries::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListAssetSummaries, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListAssetSummaries::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListAssetSummaries, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListAssetSummaries::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListAssetSummaries, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListAssetSummaries::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListBuildAliases
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListBuildAliases final
{
public:
	struct FMultiplayerListBuildAliasesRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListBuildAliasesResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListBuildAliases) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListBuildAliases");
static_assert(sizeof(PlayFabMultiplayerAPI_ListBuildAliases) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListBuildAliases");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildAliases, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListBuildAliases::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildAliases, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListBuildAliases::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildAliases, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListBuildAliases::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildAliases, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListBuildAliases::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildAliases, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListBuildAliases::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListBuildSummariesV2
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListBuildSummariesV2 final
{
public:
	struct FMultiplayerListBuildSummariesRequest  Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListBuildSummariesResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListBuildSummariesV2) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListBuildSummariesV2");
static_assert(sizeof(PlayFabMultiplayerAPI_ListBuildSummariesV2) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListBuildSummariesV2");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildSummariesV2, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListBuildSummariesV2::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildSummariesV2, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListBuildSummariesV2::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildSummariesV2, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListBuildSummariesV2::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildSummariesV2, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListBuildSummariesV2::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildSummariesV2, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListBuildSummariesV2::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListCertificateSummaries
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListCertificateSummaries final
{
public:
	struct FMultiplayerListCertificateSummariesRequest Request;                                      // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListCertificateSummariesResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListCertificateSummaries) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListCertificateSummaries");
static_assert(sizeof(PlayFabMultiplayerAPI_ListCertificateSummaries) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListCertificateSummaries");
static_assert(offsetof(PlayFabMultiplayerAPI_ListCertificateSummaries, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListCertificateSummaries::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListCertificateSummaries, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListCertificateSummaries::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListCertificateSummaries, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListCertificateSummaries::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListCertificateSummaries, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListCertificateSummaries::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListCertificateSummaries, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListCertificateSummaries::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListContainerImages
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListContainerImages final
{
public:
	struct FMultiplayerListContainerImagesRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListContainerImagesResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListContainerImages) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListContainerImages");
static_assert(sizeof(PlayFabMultiplayerAPI_ListContainerImages) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListContainerImages");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImages, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListContainerImages::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImages, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListContainerImages::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImages, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListContainerImages::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImages, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListContainerImages::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImages, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListContainerImages::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListContainerImageTags
// 0x0068 (0x0068 - 0x0000)
struct PlayFabMultiplayerAPI_ListContainerImageTags final
{
public:
	struct FMultiplayerListContainerImageTagsRequest Request;                                        // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListContainerImageTagsResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListContainerImageTags) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListContainerImageTags");
static_assert(sizeof(PlayFabMultiplayerAPI_ListContainerImageTags) == 0x000068, "Wrong size on PlayFabMultiplayerAPI_ListContainerImageTags");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImageTags, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListContainerImageTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImageTags, onSuccess) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListContainerImageTags::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImageTags, onFailure) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListContainerImageTags::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImageTags, customData) == 0x000058, "Member 'PlayFabMultiplayerAPI_ListContainerImageTags::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImageTags, ReturnValue) == 0x000060, "Member 'PlayFabMultiplayerAPI_ListContainerImageTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListMatchmakingTicketsForPlayer
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer final
{
public:
	struct FMultiplayerListMatchmakingTicketsForPlayerRequest Request;                               // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListMatchmakingTicketsForPlayerResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListMultiplayerServers
// 0x0078 (0x0078 - 0x0000)
struct PlayFabMultiplayerAPI_ListMultiplayerServers final
{
public:
	struct FMultiplayerListMultiplayerServersRequest Request;                                        // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListMultiplayerServersResponse& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListMultiplayerServers) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListMultiplayerServers");
static_assert(sizeof(PlayFabMultiplayerAPI_ListMultiplayerServers) == 0x000078, "Wrong size on PlayFabMultiplayerAPI_ListMultiplayerServers");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMultiplayerServers, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListMultiplayerServers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMultiplayerServers, onSuccess) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListMultiplayerServers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMultiplayerServers, onFailure) == 0x000058, "Member 'PlayFabMultiplayerAPI_ListMultiplayerServers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMultiplayerServers, customData) == 0x000068, "Member 'PlayFabMultiplayerAPI_ListMultiplayerServers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMultiplayerServers, ReturnValue) == 0x000070, "Member 'PlayFabMultiplayerAPI_ListMultiplayerServers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListPartyQosServers
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_ListPartyQosServers final
{
public:
	struct FMultiplayerListPartyQosServersRequest Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListPartyQosServersResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListPartyQosServers) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListPartyQosServers");
static_assert(sizeof(PlayFabMultiplayerAPI_ListPartyQosServers) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_ListPartyQosServers");
static_assert(offsetof(PlayFabMultiplayerAPI_ListPartyQosServers, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListPartyQosServers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListPartyQosServers, onSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_ListPartyQosServers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListPartyQosServers, onFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_ListPartyQosServers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListPartyQosServers, customData) == 0x000030, "Member 'PlayFabMultiplayerAPI_ListPartyQosServers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListPartyQosServers, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListPartyQosServers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListQosServersForTitle
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListQosServersForTitle final
{
public:
	struct FMultiplayerListQosServersForTitleRequest Request;                                        // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListQosServersForTitleResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListQosServersForTitle) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListQosServersForTitle");
static_assert(sizeof(PlayFabMultiplayerAPI_ListQosServersForTitle) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListQosServersForTitle");
static_assert(offsetof(PlayFabMultiplayerAPI_ListQosServersForTitle, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListQosServersForTitle::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListQosServersForTitle, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListQosServersForTitle::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListQosServersForTitle, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListQosServersForTitle::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListQosServersForTitle, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListQosServersForTitle::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListQosServersForTitle, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListQosServersForTitle::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListServerBackfillTicketsForPlayer
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer final
{
public:
	struct FMultiplayerListServerBackfillTicketsForPlayerRequest Request;                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListServerBackfillTicketsForPlayerResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListTitleMultiplayerServersQuotaChanges
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges final
{
public:
	struct FMultiplayerListTitleMultiplayerServersQuotaChangesRequest Request;                       // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges");
static_assert(sizeof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges");
static_assert(offsetof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges, onSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges, onFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges, customData) == 0x000030, "Member 'PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListVirtualMachineSummaries
// 0x0078 (0x0078 - 0x0000)
struct PlayFabMultiplayerAPI_ListVirtualMachineSummaries final
{
public:
	struct FMultiplayerListVirtualMachineSummariesRequest Request;                                   // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListVirtualMachineSummariesResponse& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListVirtualMachineSummaries");
static_assert(sizeof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries) == 0x000078, "Wrong size on PlayFabMultiplayerAPI_ListVirtualMachineSummaries");
static_assert(offsetof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListVirtualMachineSummaries::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries, onSuccess) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListVirtualMachineSummaries::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries, onFailure) == 0x000058, "Member 'PlayFabMultiplayerAPI_ListVirtualMachineSummaries::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries, customData) == 0x000068, "Member 'PlayFabMultiplayerAPI_ListVirtualMachineSummaries::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries, ReturnValue) == 0x000070, "Member 'PlayFabMultiplayerAPI_ListVirtualMachineSummaries::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.RemoveMember
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_RemoveMember final
{
public:
	struct FMultiplayerRemoveMemberFromLobbyRequest Request;                                         // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_RemoveMember) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_RemoveMember");
static_assert(sizeof(PlayFabMultiplayerAPI_RemoveMember) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_RemoveMember");
static_assert(offsetof(PlayFabMultiplayerAPI_RemoveMember, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_RemoveMember::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RemoveMember, onSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_RemoveMember::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RemoveMember, onFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_RemoveMember::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RemoveMember, customData) == 0x000050, "Member 'PlayFabMultiplayerAPI_RemoveMember::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RemoveMember, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_RemoveMember::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.RequestMultiplayerServer
// 0x0098 (0x0098 - 0x0000)
struct PlayFabMultiplayerAPI_RequestMultiplayerServer final
{
public:
	struct FMultiplayerRequestMultiplayerServerRequest Request;                                      // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerRequestMultiplayerServerResponse& Result, class UObject* customData)> onSuccess; // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_RequestMultiplayerServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_RequestMultiplayerServer");
static_assert(sizeof(PlayFabMultiplayerAPI_RequestMultiplayerServer) == 0x000098, "Wrong size on PlayFabMultiplayerAPI_RequestMultiplayerServer");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestMultiplayerServer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_RequestMultiplayerServer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestMultiplayerServer, onSuccess) == 0x000068, "Member 'PlayFabMultiplayerAPI_RequestMultiplayerServer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestMultiplayerServer, onFailure) == 0x000078, "Member 'PlayFabMultiplayerAPI_RequestMultiplayerServer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestMultiplayerServer, customData) == 0x000088, "Member 'PlayFabMultiplayerAPI_RequestMultiplayerServer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestMultiplayerServer, ReturnValue) == 0x000090, "Member 'PlayFabMultiplayerAPI_RequestMultiplayerServer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.RequestPartyService
// 0x0068 (0x0068 - 0x0000)
struct PlayFabMultiplayerAPI_RequestPartyService final
{
public:
	struct FMultiplayerRequestPartyServiceRequest Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerRequestPartyServiceResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_RequestPartyService) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_RequestPartyService");
static_assert(sizeof(PlayFabMultiplayerAPI_RequestPartyService) == 0x000068, "Wrong size on PlayFabMultiplayerAPI_RequestPartyService");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestPartyService, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_RequestPartyService::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestPartyService, onSuccess) == 0x000038, "Member 'PlayFabMultiplayerAPI_RequestPartyService::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestPartyService, onFailure) == 0x000048, "Member 'PlayFabMultiplayerAPI_RequestPartyService::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestPartyService, customData) == 0x000058, "Member 'PlayFabMultiplayerAPI_RequestPartyService::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestPartyService, ReturnValue) == 0x000060, "Member 'PlayFabMultiplayerAPI_RequestPartyService::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.RolloverContainerRegistryCredentials
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials final
{
public:
	struct FMultiplayerRolloverContainerRegistryCredentialsRequest Request;                          // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerRolloverContainerRegistryCredentialsResponse& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials");
static_assert(sizeof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials");
static_assert(offsetof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials, onSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials, onFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials, customData) == 0x000030, "Member 'PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ShutdownMultiplayerServer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_ShutdownMultiplayerServer final
{
public:
	struct FMultiplayerShutdownMultiplayerServerRequest Request;                                     // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ShutdownMultiplayerServer");
static_assert(sizeof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_ShutdownMultiplayerServer");
static_assert(offsetof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ShutdownMultiplayerServer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_ShutdownMultiplayerServer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_ShutdownMultiplayerServer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_ShutdownMultiplayerServer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_ShutdownMultiplayerServer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.SubscribeToLobbyResource
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_SubscribeToLobbyResource final
{
public:
	struct FMultiplayerSubscribeToLobbyResourceRequest Request;                                      // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerSubscribeToLobbyResourceResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_SubscribeToLobbyResource) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_SubscribeToLobbyResource");
static_assert(sizeof(PlayFabMultiplayerAPI_SubscribeToLobbyResource) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_SubscribeToLobbyResource");
static_assert(offsetof(PlayFabMultiplayerAPI_SubscribeToLobbyResource, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_SubscribeToLobbyResource::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_SubscribeToLobbyResource, onSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_SubscribeToLobbyResource::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_SubscribeToLobbyResource, onFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_SubscribeToLobbyResource::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_SubscribeToLobbyResource, customData) == 0x000060, "Member 'PlayFabMultiplayerAPI_SubscribeToLobbyResource::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_SubscribeToLobbyResource, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_SubscribeToLobbyResource::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UnsubscribeFromLobbyResource
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource final
{
public:
	struct FMultiplayerUnsubscribeFromLobbyResourceRequest Request;                                  // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource");
static_assert(sizeof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource");
static_assert(offsetof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource, onSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource, onFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource, customData) == 0x000060, "Member 'PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UntagContainerImage
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_UntagContainerImage final
{
public:
	struct FMultiplayerUntagContainerImageRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UntagContainerImage) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UntagContainerImage");
static_assert(sizeof(PlayFabMultiplayerAPI_UntagContainerImage) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_UntagContainerImage");
static_assert(offsetof(PlayFabMultiplayerAPI_UntagContainerImage, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UntagContainerImage::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UntagContainerImage, onSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_UntagContainerImage::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UntagContainerImage, onFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_UntagContainerImage::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UntagContainerImage, customData) == 0x000050, "Member 'PlayFabMultiplayerAPI_UntagContainerImage::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UntagContainerImage, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_UntagContainerImage::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UpdateBuildAlias
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_UpdateBuildAlias final
{
public:
	struct FMultiplayerUpdateBuildAliasRequest    Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UpdateBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UpdateBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_UpdateBuildAlias) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_UpdateBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildAlias, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UpdateBuildAlias::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildAlias, onSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_UpdateBuildAlias::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildAlias, onFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_UpdateBuildAlias::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildAlias, customData) == 0x000060, "Member 'PlayFabMultiplayerAPI_UpdateBuildAlias::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildAlias, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_UpdateBuildAlias::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UpdateBuildName
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_UpdateBuildName final
{
public:
	struct FMultiplayerUpdateBuildNameRequest     Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UpdateBuildName) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UpdateBuildName");
static_assert(sizeof(PlayFabMultiplayerAPI_UpdateBuildName) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_UpdateBuildName");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildName, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UpdateBuildName::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildName, onSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_UpdateBuildName::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildName, onFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_UpdateBuildName::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildName, customData) == 0x000050, "Member 'PlayFabMultiplayerAPI_UpdateBuildName::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildName, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_UpdateBuildName::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UpdateBuildRegion
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_UpdateBuildRegion final
{
public:
	struct FMultiplayerUpdateBuildRegionRequest   Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UpdateBuildRegion) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UpdateBuildRegion");
static_assert(sizeof(PlayFabMultiplayerAPI_UpdateBuildRegion) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_UpdateBuildRegion");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegion, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegion::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegion, onSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegion::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegion, onFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegion::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegion, customData) == 0x000048, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegion::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegion, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegion::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UpdateBuildRegions
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_UpdateBuildRegions final
{
public:
	struct FMultiplayerUpdateBuildRegionsRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UpdateBuildRegions) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UpdateBuildRegions");
static_assert(sizeof(PlayFabMultiplayerAPI_UpdateBuildRegions) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_UpdateBuildRegions");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegions, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegions, onSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegions::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegions, onFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegions::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegions, customData) == 0x000050, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegions, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UpdateLobby
// 0x00C0 (0x00C0 - 0x0000)
struct PlayFabMultiplayerAPI_UpdateLobby final
{
public:
	struct FMultiplayerUpdateLobbyRequest         Request;                                           // 0x0000(0x0090)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0090(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x00A0(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x00B0(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x00B8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UpdateLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UpdateLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_UpdateLobby) == 0x0000C0, "Wrong size on PlayFabMultiplayerAPI_UpdateLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UpdateLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobby, onSuccess) == 0x000090, "Member 'PlayFabMultiplayerAPI_UpdateLobby::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobby, onFailure) == 0x0000A0, "Member 'PlayFabMultiplayerAPI_UpdateLobby::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobby, customData) == 0x0000B0, "Member 'PlayFabMultiplayerAPI_UpdateLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobby, ReturnValue) == 0x0000B8, "Member 'PlayFabMultiplayerAPI_UpdateLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UpdateLobbyAsServer
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_UpdateLobbyAsServer final
{
public:
	struct FMultiplayerUpdateLobbyAsServerRequest Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UpdateLobbyAsServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UpdateLobbyAsServer");
static_assert(sizeof(PlayFabMultiplayerAPI_UpdateLobbyAsServer) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_UpdateLobbyAsServer");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobbyAsServer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UpdateLobbyAsServer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobbyAsServer, onSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_UpdateLobbyAsServer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobbyAsServer, onFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_UpdateLobbyAsServer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobbyAsServer, customData) == 0x000060, "Member 'PlayFabMultiplayerAPI_UpdateLobbyAsServer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobbyAsServer, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_UpdateLobbyAsServer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UploadCertificate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_UploadCertificate final
{
public:
	struct FMultiplayerUploadCertificateRequest   Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UploadCertificate) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UploadCertificate");
static_assert(sizeof(PlayFabMultiplayerAPI_UploadCertificate) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_UploadCertificate");
static_assert(offsetof(PlayFabMultiplayerAPI_UploadCertificate, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UploadCertificate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UploadCertificate, onSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_UploadCertificate::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UploadCertificate, onFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_UploadCertificate::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UploadCertificate, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_UploadCertificate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UploadCertificate, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_UploadCertificate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCancelAllMatchmakingTicketsForPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCancelAllServerBackfillTicketsForPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCancelMatchmakingTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCancelServerBackfillTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildAlias
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateBuildAlias final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateBuildAlias) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildAlias, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildAlias::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildAlias, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildAlias::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildAlias, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildAlias::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildWithCustomContainer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildWithManagedContainer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildWithProcessBasedServer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateLobby, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateLobby, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateLobby::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateMatchmakingTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateRemoteUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateRemoteUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateRemoteUser) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateRemoteUser");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateRemoteUser) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateRemoteUser");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateRemoteUser, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateRemoteUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateRemoteUser, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateRemoteUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateRemoteUser, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateRemoteUser::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateServerBackfillTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateServerMatchmakingTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateTitleMultiplayerServersQuotaChange
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteAsset
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteAsset final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteAsset) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteAsset");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteAsset) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteAsset");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteAsset, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteAsset::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteAsset, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteAsset::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteAsset, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteAsset::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteBuild
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteBuild final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteBuild) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteBuild");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteBuild) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteBuild");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuild, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuild::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuild, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuild::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuild, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuild::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteBuildAlias
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteBuildAlias final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteBuildAlias) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuildAlias, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuildAlias::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuildAlias, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuildAlias::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuildAlias, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuildAlias::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteBuildRegion
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteBuildRegion final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteBuildRegion) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteBuildRegion");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteBuildRegion) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteBuildRegion");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuildRegion, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuildRegion::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuildRegion, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuildRegion::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuildRegion, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuildRegion::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteCertificate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteCertificate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteCertificate) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteCertificate");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteCertificate) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteCertificate");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteCertificate, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteCertificate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteCertificate, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteCertificate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteCertificate, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteCertificate::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteContainerImageRepository
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteLobby, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteLobby, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteLobby::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteRemoteUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteRemoteUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteRemoteUser) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteRemoteUser");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteRemoteUser) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteRemoteUser");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteRemoteUser, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteRemoteUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteRemoteUser, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteRemoteUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteRemoteUser, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteRemoteUser::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperEnableMultiplayerServersForTitle
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperFindFriendLobbies
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperFindFriendLobbies final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperFindFriendLobbies) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperFindFriendLobbies");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperFindFriendLobbies) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperFindFriendLobbies");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperFindFriendLobbies, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperFindFriendLobbies::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperFindFriendLobbies, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperFindFriendLobbies::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperFindFriendLobbies, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperFindFriendLobbies::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperFindLobbies
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperFindLobbies final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperFindLobbies) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperFindLobbies");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperFindLobbies) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperFindLobbies");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperFindLobbies, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperFindLobbies::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperFindLobbies, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperFindLobbies::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperFindLobbies, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperFindLobbies::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetAssetDownloadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetAssetUploadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetAssetUploadUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetAssetUploadUrl) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetAssetUploadUrl");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetAssetUploadUrl) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetAssetUploadUrl");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetAssetUploadUrl, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetAssetUploadUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetAssetUploadUrl, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetAssetUploadUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetAssetUploadUrl, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetAssetUploadUrl::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetBuild
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetBuild final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetBuild) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetBuild");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetBuild) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetBuild");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetBuild, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetBuild::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetBuild, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetBuild::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetBuild, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetBuild::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetBuildAlias
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetBuildAlias final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetBuildAlias) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetBuildAlias, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetBuildAlias::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetBuildAlias, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetBuildAlias::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetBuildAlias, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetBuildAlias::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetContainerRegistryCredentials
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetLobby, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetLobby, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetLobby::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMatch
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetMatch final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetMatch) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetMatch");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetMatch) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetMatch");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMatch, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetMatch::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMatch, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetMatch::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMatch, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetMatch::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMatchmakingTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetMatchmakingTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetMatchmakingTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMatchmakingTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetMatchmakingTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMatchmakingTicket, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetMatchmakingTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMatchmakingTicket, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetMatchmakingTicket::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMultiplayerServerDetails
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMultiplayerServerLogs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMultiplayerSessionLogsBySessionId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetQueueStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetQueueStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetQueueStatistics) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetQueueStatistics");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetQueueStatistics) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetQueueStatistics");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetQueueStatistics, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetQueueStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetQueueStatistics, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetQueueStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetQueueStatistics, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetQueueStatistics::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetRemoteLoginEndpoint
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetServerBackfillTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetServerBackfillTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetServerBackfillTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetServerBackfillTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetServerBackfillTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetServerBackfillTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetServerBackfillTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetServerBackfillTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetServerBackfillTicket, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetServerBackfillTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetServerBackfillTicket, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetServerBackfillTicket::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetTitleEnabledForMultiplayerServersStatus
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetTitleMultiplayerServersQuotaChange
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetTitleMultiplayerServersQuotas
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperInviteToLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperInviteToLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperInviteToLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperInviteToLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperInviteToLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperInviteToLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperInviteToLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperInviteToLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperInviteToLobby, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperInviteToLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperInviteToLobby, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperInviteToLobby::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperJoinArrangedLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperJoinArrangedLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperJoinArrangedLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperJoinArrangedLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperJoinArrangedLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperJoinArrangedLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinArrangedLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperJoinArrangedLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinArrangedLobby, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperJoinArrangedLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinArrangedLobby, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperJoinArrangedLobby::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperJoinLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperJoinLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperJoinLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperJoinLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperJoinLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperJoinLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperJoinLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinLobby, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperJoinLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinLobby, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperJoinLobby::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperJoinLobbyAsServer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperJoinLobbyAsServer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperJoinLobbyAsServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperJoinLobbyAsServer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperJoinLobbyAsServer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperJoinLobbyAsServer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinLobbyAsServer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperJoinLobbyAsServer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinLobbyAsServer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperJoinLobbyAsServer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinLobbyAsServer, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperJoinLobbyAsServer::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperJoinMatchmakingTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperLeaveLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperLeaveLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperLeaveLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperLeaveLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperLeaveLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperLeaveLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperLeaveLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperLeaveLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperLeaveLobby, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperLeaveLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperLeaveLobby, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperLeaveLobby::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperLeaveLobbyAsServer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperLeaveLobbyAsServer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperLeaveLobbyAsServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperLeaveLobbyAsServer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperLeaveLobbyAsServer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperLeaveLobbyAsServer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperLeaveLobbyAsServer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperLeaveLobbyAsServer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperLeaveLobbyAsServer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperLeaveLobbyAsServer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperLeaveLobbyAsServer, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperLeaveLobbyAsServer::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListArchivedMultiplayerServers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListAssetSummaries
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListAssetSummaries final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListAssetSummaries) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListAssetSummaries");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListAssetSummaries) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListAssetSummaries");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListAssetSummaries, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListAssetSummaries::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListAssetSummaries, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListAssetSummaries::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListAssetSummaries, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListAssetSummaries::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListBuildAliases
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListBuildAliases final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListBuildAliases) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListBuildAliases");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListBuildAliases) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListBuildAliases");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListBuildAliases, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListBuildAliases::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListBuildAliases, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListBuildAliases::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListBuildAliases, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListBuildAliases::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListBuildSummariesV2
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListBuildSummariesV2 final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListBuildSummariesV2) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListBuildSummariesV2");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListBuildSummariesV2) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListBuildSummariesV2");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListBuildSummariesV2, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListBuildSummariesV2::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListBuildSummariesV2, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListBuildSummariesV2::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListBuildSummariesV2, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListBuildSummariesV2::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListCertificateSummaries
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListCertificateSummaries final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListCertificateSummaries) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListCertificateSummaries");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListCertificateSummaries) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListCertificateSummaries");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListCertificateSummaries, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListCertificateSummaries::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListCertificateSummaries, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListCertificateSummaries::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListCertificateSummaries, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListCertificateSummaries::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListContainerImages
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListContainerImages final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListContainerImages) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListContainerImages");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListContainerImages) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListContainerImages");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListContainerImages, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListContainerImages::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListContainerImages, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListContainerImages::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListContainerImages, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListContainerImages::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListContainerImageTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListContainerImageTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListContainerImageTags) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListContainerImageTags");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListContainerImageTags) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListContainerImageTags");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListContainerImageTags, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListContainerImageTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListContainerImageTags, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListContainerImageTags::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListContainerImageTags, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListContainerImageTags::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListMatchmakingTicketsForPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListMultiplayerServers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListMultiplayerServers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListMultiplayerServers) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListMultiplayerServers");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListMultiplayerServers) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListMultiplayerServers");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListMultiplayerServers, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListMultiplayerServers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListMultiplayerServers, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListMultiplayerServers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListMultiplayerServers, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListMultiplayerServers::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListPartyQosServers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListPartyQosServers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListPartyQosServers) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListPartyQosServers");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListPartyQosServers) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListPartyQosServers");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListPartyQosServers, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListPartyQosServers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListPartyQosServers, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListPartyQosServers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListPartyQosServers, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListPartyQosServers::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListQosServersForTitle
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListQosServersForTitle final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListQosServersForTitle) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListQosServersForTitle");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListQosServersForTitle) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListQosServersForTitle");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListQosServersForTitle, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListQosServersForTitle::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListQosServersForTitle, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListQosServersForTitle::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListQosServersForTitle, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListQosServersForTitle::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListServerBackfillTicketsForPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListTitleMultiplayerServersQuotaChanges
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListVirtualMachineSummaries
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperRemoveMember
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperRemoveMember final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperRemoveMember) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperRemoveMember");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperRemoveMember) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperRemoveMember");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRemoveMember, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperRemoveMember::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRemoveMember, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperRemoveMember::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRemoveMember, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperRemoveMember::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperRequestMultiplayerServer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperRequestMultiplayerServer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperRequestMultiplayerServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperRequestMultiplayerServer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperRequestMultiplayerServer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperRequestMultiplayerServer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRequestMultiplayerServer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperRequestMultiplayerServer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRequestMultiplayerServer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperRequestMultiplayerServer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRequestMultiplayerServer, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperRequestMultiplayerServer::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperRequestPartyService
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperRequestPartyService final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperRequestPartyService) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperRequestPartyService");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperRequestPartyService) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperRequestPartyService");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRequestPartyService, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperRequestPartyService::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRequestPartyService, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperRequestPartyService::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRequestPartyService, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperRequestPartyService::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperRolloverContainerRegistryCredentials
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperShutdownMultiplayerServer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperSubscribeToLobbyResource
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUnsubscribeFromLobbyResource
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUntagContainerImage
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUntagContainerImage final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUntagContainerImage) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUntagContainerImage");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUntagContainerImage) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUntagContainerImage");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUntagContainerImage, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUntagContainerImage::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUntagContainerImage, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUntagContainerImage::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUntagContainerImage, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUntagContainerImage::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildAlias
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUpdateBuildAlias final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUpdateBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUpdateBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUpdateBuildAlias) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUpdateBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildAlias, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildAlias::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildAlias, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildAlias::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildAlias, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildAlias::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildName
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUpdateBuildName final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUpdateBuildName) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUpdateBuildName");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUpdateBuildName) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUpdateBuildName");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildName, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildName::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildName, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildName::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildName, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildName::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildRegion
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUpdateBuildRegion final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUpdateBuildRegion) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUpdateBuildRegion");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUpdateBuildRegion) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUpdateBuildRegion");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildRegion, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildRegion::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildRegion, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildRegion::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildRegion, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildRegion::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildRegions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUpdateBuildRegions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUpdateBuildRegions) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUpdateBuildRegions");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUpdateBuildRegions) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUpdateBuildRegions");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildRegions, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildRegions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildRegions, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildRegions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildRegions, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildRegions::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUpdateLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUpdateLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUpdateLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUpdateLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUpdateLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUpdateLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateLobby, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUpdateLobby::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateLobby, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUpdateLobby::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateLobbyAsServer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUpdateLobbyAsServer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUpdateLobbyAsServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUpdateLobbyAsServer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUpdateLobbyAsServer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUpdateLobbyAsServer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateLobbyAsServer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUpdateLobbyAsServer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateLobbyAsServer, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUpdateLobbyAsServer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateLobbyAsServer, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUpdateLobbyAsServer::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUploadCertificate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUploadCertificate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUploadCertificate) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUploadCertificate");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUploadCertificate) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUploadCertificate");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUploadCertificate, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUploadCertificate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUploadCertificate, customData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUploadCertificate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUploadCertificate, successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUploadCertificate::successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeBuildAliasDetailsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeBuildAliasDetailsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerBuildAliasDetailsResponse  ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeBuildAliasDetailsResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeBuildAliasDetailsResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeBuildAliasDetailsResponseResponse) == 0x000040, "Wrong size on PlayFabMultiplayerModelDecoder_decodeBuildAliasDetailsResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeBuildAliasDetailsResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeBuildAliasDetailsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeBuildAliasDetailsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeBuildAliasDetailsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelAllMatchmakingTicketsForPlayerResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeCancelAllMatchmakingTicketsForPlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult ReturnValue;                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeCancelAllMatchmakingTicketsForPlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeCancelAllMatchmakingTicketsForPlayerResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeCancelAllMatchmakingTicketsForPlayerResultResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_decodeCancelAllMatchmakingTicketsForPlayerResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCancelAllMatchmakingTicketsForPlayerResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeCancelAllMatchmakingTicketsForPlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCancelAllMatchmakingTicketsForPlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeCancelAllMatchmakingTicketsForPlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelAllServerBackfillTicketsForPlayerResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeCancelAllServerBackfillTicketsForPlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult ReturnValue;                    // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeCancelAllServerBackfillTicketsForPlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeCancelAllServerBackfillTicketsForPlayerResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeCancelAllServerBackfillTicketsForPlayerResultResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_decodeCancelAllServerBackfillTicketsForPlayerResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCancelAllServerBackfillTicketsForPlayerResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeCancelAllServerBackfillTicketsForPlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCancelAllServerBackfillTicketsForPlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeCancelAllServerBackfillTicketsForPlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelMatchmakingTicketResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeCancelMatchmakingTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCancelMatchmakingTicketResult ReturnValue;                                    // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeCancelMatchmakingTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeCancelMatchmakingTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeCancelMatchmakingTicketResultResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_decodeCancelMatchmakingTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCancelMatchmakingTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeCancelMatchmakingTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCancelMatchmakingTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeCancelMatchmakingTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelServerBackfillTicketResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeCancelServerBackfillTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCancelServerBackfillTicketResult ReturnValue;                                 // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeCancelServerBackfillTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeCancelServerBackfillTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeCancelServerBackfillTicketResultResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_decodeCancelServerBackfillTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCancelServerBackfillTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeCancelServerBackfillTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCancelServerBackfillTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeCancelServerBackfillTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateBuildWithCustomContainerResponseResponse
// 0x0100 (0x0100 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeCreateBuildWithCustomContainerResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateBuildWithCustomContainerResponse ReturnValue;                           // 0x0008(0x00F8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeCreateBuildWithCustomContainerResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeCreateBuildWithCustomContainerResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeCreateBuildWithCustomContainerResponseResponse) == 0x000100, "Wrong size on PlayFabMultiplayerModelDecoder_decodeCreateBuildWithCustomContainerResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateBuildWithCustomContainerResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateBuildWithCustomContainerResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateBuildWithCustomContainerResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateBuildWithCustomContainerResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateBuildWithManagedContainerResponseResponse
// 0x0108 (0x0108 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeCreateBuildWithManagedContainerResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateBuildWithManagedContainerResponse ReturnValue;                          // 0x0008(0x0100)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeCreateBuildWithManagedContainerResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeCreateBuildWithManagedContainerResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeCreateBuildWithManagedContainerResponseResponse) == 0x000108, "Wrong size on PlayFabMultiplayerModelDecoder_decodeCreateBuildWithManagedContainerResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateBuildWithManagedContainerResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateBuildWithManagedContainerResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateBuildWithManagedContainerResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateBuildWithManagedContainerResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateBuildWithProcessBasedServerResponseResponse
// 0x0108 (0x0108 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeCreateBuildWithProcessBasedServerResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateBuildWithProcessBasedServerResponse ReturnValue;                        // 0x0008(0x0100)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeCreateBuildWithProcessBasedServerResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeCreateBuildWithProcessBasedServerResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeCreateBuildWithProcessBasedServerResponseResponse) == 0x000108, "Wrong size on PlayFabMultiplayerModelDecoder_decodeCreateBuildWithProcessBasedServerResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateBuildWithProcessBasedServerResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateBuildWithProcessBasedServerResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateBuildWithProcessBasedServerResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateBuildWithProcessBasedServerResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateLobbyResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeCreateLobbyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateLobbyResult          ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeCreateLobbyResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeCreateLobbyResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeCreateLobbyResultResponse) == 0x000030, "Wrong size on PlayFabMultiplayerModelDecoder_decodeCreateLobbyResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateLobbyResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateLobbyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateLobbyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateLobbyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateMatchmakingTicketResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeCreateMatchmakingTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateMatchmakingTicketResult ReturnValue;                                    // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeCreateMatchmakingTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeCreateMatchmakingTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeCreateMatchmakingTicketResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_decodeCreateMatchmakingTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateMatchmakingTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateMatchmakingTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateMatchmakingTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateMatchmakingTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateRemoteUserResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeCreateRemoteUserResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateRemoteUserResponse   ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeCreateRemoteUserResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeCreateRemoteUserResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeCreateRemoteUserResponseResponse) == 0x000040, "Wrong size on PlayFabMultiplayerModelDecoder_decodeCreateRemoteUserResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateRemoteUserResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateRemoteUserResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateRemoteUserResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateRemoteUserResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateServerBackfillTicketResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeCreateServerBackfillTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateServerBackfillTicketResult ReturnValue;                                 // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeCreateServerBackfillTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeCreateServerBackfillTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeCreateServerBackfillTicketResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_decodeCreateServerBackfillTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateServerBackfillTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateServerBackfillTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateServerBackfillTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateServerBackfillTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse ReturnValue;                 // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse) == 0x000028, "Wrong size on PlayFabMultiplayerModelDecoder_decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerEmptyResponse              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeEmptyResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_decodeEmptyResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeEnableMultiplayerServersForTitleResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeEnableMultiplayerServersForTitleResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerEnableMultiplayerServersForTitleResponse ReturnValue;                         // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeEnableMultiplayerServersForTitleResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeEnableMultiplayerServersForTitleResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeEnableMultiplayerServersForTitleResponseResponse) == 0x000018, "Wrong size on PlayFabMultiplayerModelDecoder_decodeEnableMultiplayerServersForTitleResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeEnableMultiplayerServersForTitleResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeEnableMultiplayerServersForTitleResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeEnableMultiplayerServersForTitleResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeEnableMultiplayerServersForTitleResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeFindFriendLobbiesResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeFindFriendLobbiesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerFindFriendLobbiesResult    ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeFindFriendLobbiesResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeFindFriendLobbiesResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeFindFriendLobbiesResultResponse) == 0x000028, "Wrong size on PlayFabMultiplayerModelDecoder_decodeFindFriendLobbiesResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeFindFriendLobbiesResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeFindFriendLobbiesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeFindFriendLobbiesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeFindFriendLobbiesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeFindLobbiesResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeFindLobbiesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerFindLobbiesResult          ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeFindLobbiesResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeFindLobbiesResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeFindLobbiesResultResponse) == 0x000028, "Wrong size on PlayFabMultiplayerModelDecoder_decodeFindLobbiesResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeFindLobbiesResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeFindLobbiesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeFindLobbiesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeFindLobbiesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetAssetDownloadUrlResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetAssetDownloadUrlResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetAssetDownloadUrlResponse ReturnValue;                                      // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetAssetDownloadUrlResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetAssetDownloadUrlResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetAssetDownloadUrlResponseResponse) == 0x000030, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetAssetDownloadUrlResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetAssetDownloadUrlResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetAssetDownloadUrlResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetAssetDownloadUrlResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetAssetDownloadUrlResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetAssetUploadUrlResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetAssetUploadUrlResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetAssetUploadUrlResponse  ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetAssetUploadUrlResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetAssetUploadUrlResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetAssetUploadUrlResponseResponse) == 0x000030, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetAssetUploadUrlResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetAssetUploadUrlResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetAssetUploadUrlResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetAssetUploadUrlResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetAssetUploadUrlResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetBuildResponseResponse
// 0x0118 (0x0118 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetBuildResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetBuildResponse           ReturnValue;                                       // 0x0008(0x0110)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetBuildResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetBuildResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetBuildResponseResponse) == 0x000118, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetBuildResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetBuildResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetBuildResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetBuildResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetBuildResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetContainerRegistryCredentialsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetContainerRegistryCredentialsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetContainerRegistryCredentialsResponse ReturnValue;                          // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetContainerRegistryCredentialsResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetContainerRegistryCredentialsResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetContainerRegistryCredentialsResponseResponse) == 0x000040, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetContainerRegistryCredentialsResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetContainerRegistryCredentialsResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetContainerRegistryCredentialsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetContainerRegistryCredentialsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetContainerRegistryCredentialsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetLobbyResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetLobbyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetLobbyResult             ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetLobbyResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetLobbyResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetLobbyResultResponse) == 0x000018, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetLobbyResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetLobbyResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetLobbyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetLobbyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetLobbyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMatchmakingTicketResultResponse
// 0x00A8 (0x00A8 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetMatchmakingTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetMatchmakingTicketResult ReturnValue;                                       // 0x0008(0x00A0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetMatchmakingTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetMatchmakingTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetMatchmakingTicketResultResponse) == 0x0000A8, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetMatchmakingTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetMatchmakingTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetMatchmakingTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetMatchmakingTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetMatchmakingTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMatchResultResponse
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetMatchResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetMatchResult             ReturnValue;                                       // 0x0008(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetMatchResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetMatchResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetMatchResultResponse) == 0x000058, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetMatchResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetMatchResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetMatchResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetMatchResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetMatchResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMultiplayerServerDetailsResponseResponse
// 0x00D0 (0x00D0 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerDetailsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetMultiplayerServerDetailsResponse ReturnValue;                              // 0x0008(0x00C8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerDetailsResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerDetailsResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerDetailsResponseResponse) == 0x0000D0, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerDetailsResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerDetailsResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerDetailsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerDetailsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerDetailsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMultiplayerServerLogsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerLogsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetMultiplayerServerLogsResponse ReturnValue;                                 // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerLogsResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerLogsResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerLogsResponseResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerLogsResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerLogsResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerLogsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerLogsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerLogsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetQueueStatisticsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetQueueStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetQueueStatisticsResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetQueueStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetQueueStatisticsResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetQueueStatisticsResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetQueueStatisticsResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetQueueStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetQueueStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetQueueStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetQueueStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetRemoteLoginEndpointResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetRemoteLoginEndpointResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetRemoteLoginEndpointResponse ReturnValue;                                   // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetRemoteLoginEndpointResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetRemoteLoginEndpointResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetRemoteLoginEndpointResponseResponse) == 0x000028, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetRemoteLoginEndpointResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetRemoteLoginEndpointResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetRemoteLoginEndpointResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetRemoteLoginEndpointResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetRemoteLoginEndpointResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetServerBackfillTicketResultResponse
// 0x0090 (0x0090 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetServerBackfillTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetServerBackfillTicketResult ReturnValue;                                    // 0x0008(0x0088)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetServerBackfillTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetServerBackfillTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetServerBackfillTicketResultResponse) == 0x000090, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetServerBackfillTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetServerBackfillTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetServerBackfillTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetServerBackfillTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetServerBackfillTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse ReturnValue;               // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse) == 0x000018, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetTitleMultiplayerServersQuotaChangeResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotaChangeResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse ReturnValue;                    // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotaChangeResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotaChangeResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotaChangeResponseResponse) == 0x000018, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotaChangeResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotaChangeResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotaChangeResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotaChangeResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotaChangeResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetTitleMultiplayerServersQuotasResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotasResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetTitleMultiplayerServersQuotasResponse ReturnValue;                         // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotasResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotasResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotasResponseResponse) == 0x000018, "Wrong size on PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotasResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotasResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotasResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotasResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotasResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeJoinLobbyAsServerResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeJoinLobbyAsServerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerJoinLobbyAsServerResult    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeJoinLobbyAsServerResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeJoinLobbyAsServerResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeJoinLobbyAsServerResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_decodeJoinLobbyAsServerResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeJoinLobbyAsServerResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeJoinLobbyAsServerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeJoinLobbyAsServerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeJoinLobbyAsServerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeJoinLobbyResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeJoinLobbyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerJoinLobbyResult            ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeJoinLobbyResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeJoinLobbyResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeJoinLobbyResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_decodeJoinLobbyResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeJoinLobbyResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeJoinLobbyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeJoinLobbyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeJoinLobbyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeJoinMatchmakingTicketResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeJoinMatchmakingTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerJoinMatchmakingTicketResult ReturnValue;                                      // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeJoinMatchmakingTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeJoinMatchmakingTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeJoinMatchmakingTicketResultResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_decodeJoinMatchmakingTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeJoinMatchmakingTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeJoinMatchmakingTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeJoinMatchmakingTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeJoinMatchmakingTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListAssetSummariesResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListAssetSummariesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListAssetSummariesResponse ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListAssetSummariesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListAssetSummariesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListAssetSummariesResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListAssetSummariesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListAssetSummariesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListAssetSummariesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListAssetSummariesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListAssetSummariesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListBuildAliasesResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListBuildAliasesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListBuildAliasesResponse   ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListBuildAliasesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListBuildAliasesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListBuildAliasesResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListBuildAliasesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListBuildAliasesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListBuildAliasesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListBuildAliasesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListBuildAliasesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListBuildSummariesResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListBuildSummariesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListBuildSummariesResponse ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListBuildSummariesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListBuildSummariesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListBuildSummariesResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListBuildSummariesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListBuildSummariesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListBuildSummariesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListBuildSummariesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListBuildSummariesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListCertificateSummariesResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListCertificateSummariesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListCertificateSummariesResponse ReturnValue;                                 // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListCertificateSummariesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListCertificateSummariesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListCertificateSummariesResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListCertificateSummariesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListCertificateSummariesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListCertificateSummariesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListCertificateSummariesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListCertificateSummariesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListContainerImagesResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListContainerImagesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListContainerImagesResponse ReturnValue;                                      // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListContainerImagesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListContainerImagesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListContainerImagesResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListContainerImagesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListContainerImagesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListContainerImagesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListContainerImagesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListContainerImagesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListContainerImageTagsResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListContainerImageTagsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListContainerImageTagsResponse ReturnValue;                                   // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListContainerImageTagsResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListContainerImageTagsResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListContainerImageTagsResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListContainerImageTagsResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListContainerImageTagsResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListContainerImageTagsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListContainerImageTagsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListContainerImageTagsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListMatchmakingTicketsForPlayerResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListMatchmakingTicketsForPlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListMatchmakingTicketsForPlayerResult ReturnValue;                            // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListMatchmakingTicketsForPlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListMatchmakingTicketsForPlayerResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListMatchmakingTicketsForPlayerResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListMatchmakingTicketsForPlayerResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListMatchmakingTicketsForPlayerResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListMatchmakingTicketsForPlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListMatchmakingTicketsForPlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListMatchmakingTicketsForPlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListMultiplayerServersResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListMultiplayerServersResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListMultiplayerServersResponse ReturnValue;                                   // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListMultiplayerServersResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListMultiplayerServersResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListMultiplayerServersResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListMultiplayerServersResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListMultiplayerServersResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListMultiplayerServersResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListMultiplayerServersResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListMultiplayerServersResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListPartyQosServersResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListPartyQosServersResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListPartyQosServersResponse ReturnValue;                                      // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListPartyQosServersResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListPartyQosServersResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListPartyQosServersResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListPartyQosServersResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListPartyQosServersResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListPartyQosServersResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListPartyQosServersResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListPartyQosServersResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListQosServersForTitleResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListQosServersForTitleResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListQosServersForTitleResponse ReturnValue;                                   // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListQosServersForTitleResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListQosServersForTitleResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListQosServersForTitleResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListQosServersForTitleResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListQosServersForTitleResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListQosServersForTitleResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListQosServersForTitleResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListQosServersForTitleResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListServerBackfillTicketsForPlayerResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListServerBackfillTicketsForPlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListServerBackfillTicketsForPlayerResult ReturnValue;                         // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListServerBackfillTicketsForPlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListServerBackfillTicketsForPlayerResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListServerBackfillTicketsForPlayerResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListServerBackfillTicketsForPlayerResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListServerBackfillTicketsForPlayerResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListServerBackfillTicketsForPlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListServerBackfillTicketsForPlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListServerBackfillTicketsForPlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListTitleMultiplayerServersQuotaChangesResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListTitleMultiplayerServersQuotaChangesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponse ReturnValue;                  // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListTitleMultiplayerServersQuotaChangesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListTitleMultiplayerServersQuotaChangesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListTitleMultiplayerServersQuotaChangesResponseResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListTitleMultiplayerServersQuotaChangesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListTitleMultiplayerServersQuotaChangesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListTitleMultiplayerServersQuotaChangesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListTitleMultiplayerServersQuotaChangesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListTitleMultiplayerServersQuotaChangesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListVirtualMachineSummariesResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeListVirtualMachineSummariesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListVirtualMachineSummariesResponse ReturnValue;                              // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeListVirtualMachineSummariesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeListVirtualMachineSummariesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeListVirtualMachineSummariesResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_decodeListVirtualMachineSummariesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListVirtualMachineSummariesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeListVirtualMachineSummariesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeListVirtualMachineSummariesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeListVirtualMachineSummariesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeLobbyEmptyResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeLobbyEmptyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerLobbyEmptyResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeLobbyEmptyResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeLobbyEmptyResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeLobbyEmptyResultResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_decodeLobbyEmptyResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeLobbyEmptyResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeLobbyEmptyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeLobbyEmptyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeLobbyEmptyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeRequestMultiplayerServerResponseResponse
// 0x00D0 (0x00D0 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeRequestMultiplayerServerResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerRequestMultiplayerServerResponse ReturnValue;                                 // 0x0008(0x00C8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeRequestMultiplayerServerResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeRequestMultiplayerServerResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeRequestMultiplayerServerResponseResponse) == 0x0000D0, "Wrong size on PlayFabMultiplayerModelDecoder_decodeRequestMultiplayerServerResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeRequestMultiplayerServerResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeRequestMultiplayerServerResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeRequestMultiplayerServerResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeRequestMultiplayerServerResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeRequestPartyServiceResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeRequestPartyServiceResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerRequestPartyServiceResponse ReturnValue;                                      // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeRequestPartyServiceResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeRequestPartyServiceResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeRequestPartyServiceResponseResponse) == 0x000040, "Wrong size on PlayFabMultiplayerModelDecoder_decodeRequestPartyServiceResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeRequestPartyServiceResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeRequestPartyServiceResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeRequestPartyServiceResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeRequestPartyServiceResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeRolloverContainerRegistryCredentialsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeRolloverContainerRegistryCredentialsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerRolloverContainerRegistryCredentialsResponse ReturnValue;                     // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeRolloverContainerRegistryCredentialsResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeRolloverContainerRegistryCredentialsResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeRolloverContainerRegistryCredentialsResponseResponse) == 0x000040, "Wrong size on PlayFabMultiplayerModelDecoder_decodeRolloverContainerRegistryCredentialsResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeRolloverContainerRegistryCredentialsResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeRolloverContainerRegistryCredentialsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeRolloverContainerRegistryCredentialsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeRolloverContainerRegistryCredentialsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeSubscribeToLobbyResourceResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_decodeSubscribeToLobbyResourceResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerSubscribeToLobbyResourceResult ReturnValue;                                   // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_decodeSubscribeToLobbyResourceResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_decodeSubscribeToLobbyResourceResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_decodeSubscribeToLobbyResourceResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_decodeSubscribeToLobbyResourceResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeSubscribeToLobbyResourceResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_decodeSubscribeToLobbyResourceResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_decodeSubscribeToLobbyResourceResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_decodeSubscribeToLobbyResourceResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.GetGlobalPolicy
// 0x0048 (0x0048 - 0x0000)
struct PlayFabProfilesAPI_GetGlobalPolicy final
{
public:
	struct FProfilesGetGlobalPolicyRequest        Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesGetGlobalPolicyResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_GetGlobalPolicy) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_GetGlobalPolicy");
static_assert(sizeof(PlayFabProfilesAPI_GetGlobalPolicy) == 0x000048, "Wrong size on PlayFabProfilesAPI_GetGlobalPolicy");
static_assert(offsetof(PlayFabProfilesAPI_GetGlobalPolicy, Request) == 0x000000, "Member 'PlayFabProfilesAPI_GetGlobalPolicy::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetGlobalPolicy, onSuccess) == 0x000018, "Member 'PlayFabProfilesAPI_GetGlobalPolicy::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetGlobalPolicy, onFailure) == 0x000028, "Member 'PlayFabProfilesAPI_GetGlobalPolicy::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetGlobalPolicy, customData) == 0x000038, "Member 'PlayFabProfilesAPI_GetGlobalPolicy::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetGlobalPolicy, ReturnValue) == 0x000040, "Member 'PlayFabProfilesAPI_GetGlobalPolicy::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.GetProfile
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_GetProfile final
{
public:
	struct FProfilesGetEntityProfileRequest       Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesGetEntityProfileResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_GetProfile) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_GetProfile");
static_assert(sizeof(PlayFabProfilesAPI_GetProfile) == 0x000050, "Wrong size on PlayFabProfilesAPI_GetProfile");
static_assert(offsetof(PlayFabProfilesAPI_GetProfile, Request) == 0x000000, "Member 'PlayFabProfilesAPI_GetProfile::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfile, onSuccess) == 0x000020, "Member 'PlayFabProfilesAPI_GetProfile::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfile, onFailure) == 0x000030, "Member 'PlayFabProfilesAPI_GetProfile::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfile, customData) == 0x000040, "Member 'PlayFabProfilesAPI_GetProfile::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfile, ReturnValue) == 0x000048, "Member 'PlayFabProfilesAPI_GetProfile::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.GetProfiles
// 0x0058 (0x0058 - 0x0000)
struct PlayFabProfilesAPI_GetProfiles final
{
public:
	struct FProfilesGetEntityProfilesRequest      Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesGetEntityProfilesResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_GetProfiles) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_GetProfiles");
static_assert(sizeof(PlayFabProfilesAPI_GetProfiles) == 0x000058, "Wrong size on PlayFabProfilesAPI_GetProfiles");
static_assert(offsetof(PlayFabProfilesAPI_GetProfiles, Request) == 0x000000, "Member 'PlayFabProfilesAPI_GetProfiles::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfiles, onSuccess) == 0x000028, "Member 'PlayFabProfilesAPI_GetProfiles::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfiles, onFailure) == 0x000038, "Member 'PlayFabProfilesAPI_GetProfiles::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfiles, customData) == 0x000048, "Member 'PlayFabProfilesAPI_GetProfiles::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfiles, ReturnValue) == 0x000050, "Member 'PlayFabProfilesAPI_GetProfiles::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.GetTitlePlayersFromMasterPlayerAccountIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds final
{
public:
	struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest Request;                        // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds");
static_assert(sizeof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds) == 0x000050, "Wrong size on PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds, Request) == 0x000000, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds, onSuccess) == 0x000020, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds, onFailure) == 0x000030, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds, customData) == 0x000040, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds, ReturnValue) == 0x000048, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.GetTitlePlayersFromXboxLiveIDs
// 0x0060 (0x0060 - 0x0000)
struct PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs final
{
public:
	struct FProfilesGetTitlePlayersFromXboxLiveIDsRequest Request;                                   // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesGetTitlePlayersFromProviderIDsResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs");
static_assert(sizeof(PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs) == 0x000060, "Wrong size on PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs, Request) == 0x000000, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs, onSuccess) == 0x000030, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs, onFailure) == 0x000040, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs, customData) == 0x000050, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs, ReturnValue) == 0x000058, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromXboxLiveIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.SetGlobalPolicy
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_SetGlobalPolicy final
{
public:
	struct FProfilesSetGlobalPolicyRequest        Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesSetGlobalPolicyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_SetGlobalPolicy) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_SetGlobalPolicy");
static_assert(sizeof(PlayFabProfilesAPI_SetGlobalPolicy) == 0x000050, "Wrong size on PlayFabProfilesAPI_SetGlobalPolicy");
static_assert(offsetof(PlayFabProfilesAPI_SetGlobalPolicy, Request) == 0x000000, "Member 'PlayFabProfilesAPI_SetGlobalPolicy::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetGlobalPolicy, onSuccess) == 0x000020, "Member 'PlayFabProfilesAPI_SetGlobalPolicy::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetGlobalPolicy, onFailure) == 0x000030, "Member 'PlayFabProfilesAPI_SetGlobalPolicy::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetGlobalPolicy, customData) == 0x000040, "Member 'PlayFabProfilesAPI_SetGlobalPolicy::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetGlobalPolicy, ReturnValue) == 0x000048, "Member 'PlayFabProfilesAPI_SetGlobalPolicy::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.SetProfileLanguage
// 0x0060 (0x0060 - 0x0000)
struct PlayFabProfilesAPI_SetProfileLanguage final
{
public:
	struct FProfilesSetProfileLanguageRequest     Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesSetProfileLanguageResponse& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_SetProfileLanguage) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_SetProfileLanguage");
static_assert(sizeof(PlayFabProfilesAPI_SetProfileLanguage) == 0x000060, "Wrong size on PlayFabProfilesAPI_SetProfileLanguage");
static_assert(offsetof(PlayFabProfilesAPI_SetProfileLanguage, Request) == 0x000000, "Member 'PlayFabProfilesAPI_SetProfileLanguage::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfileLanguage, onSuccess) == 0x000030, "Member 'PlayFabProfilesAPI_SetProfileLanguage::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfileLanguage, onFailure) == 0x000040, "Member 'PlayFabProfilesAPI_SetProfileLanguage::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfileLanguage, customData) == 0x000050, "Member 'PlayFabProfilesAPI_SetProfileLanguage::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfileLanguage, ReturnValue) == 0x000058, "Member 'PlayFabProfilesAPI_SetProfileLanguage::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.SetProfilePolicy
// 0x0058 (0x0058 - 0x0000)
struct PlayFabProfilesAPI_SetProfilePolicy final
{
public:
	struct FProfilesSetEntityProfilePolicyRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesSetEntityProfilePolicyResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_SetProfilePolicy) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_SetProfilePolicy");
static_assert(sizeof(PlayFabProfilesAPI_SetProfilePolicy) == 0x000058, "Wrong size on PlayFabProfilesAPI_SetProfilePolicy");
static_assert(offsetof(PlayFabProfilesAPI_SetProfilePolicy, Request) == 0x000000, "Member 'PlayFabProfilesAPI_SetProfilePolicy::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfilePolicy, onSuccess) == 0x000028, "Member 'PlayFabProfilesAPI_SetProfilePolicy::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfilePolicy, onFailure) == 0x000038, "Member 'PlayFabProfilesAPI_SetProfilePolicy::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfilePolicy, customData) == 0x000048, "Member 'PlayFabProfilesAPI_SetProfilePolicy::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfilePolicy, ReturnValue) == 0x000050, "Member 'PlayFabProfilesAPI_SetProfilePolicy::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperGetGlobalPolicy
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperGetGlobalPolicy final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperGetGlobalPolicy) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperGetGlobalPolicy");
static_assert(sizeof(PlayFabProfilesAPI_HelperGetGlobalPolicy) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperGetGlobalPolicy");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetGlobalPolicy, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperGetGlobalPolicy::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetGlobalPolicy, customData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperGetGlobalPolicy::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetGlobalPolicy, successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperGetGlobalPolicy::successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperGetProfile
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperGetProfile final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperGetProfile) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperGetProfile");
static_assert(sizeof(PlayFabProfilesAPI_HelperGetProfile) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperGetProfile");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetProfile, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperGetProfile::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetProfile, customData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperGetProfile::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetProfile, successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperGetProfile::successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperGetProfiles
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperGetProfiles final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperGetProfiles) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperGetProfiles");
static_assert(sizeof(PlayFabProfilesAPI_HelperGetProfiles) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperGetProfiles");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetProfiles, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperGetProfiles::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetProfiles, customData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperGetProfiles::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetProfiles, successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperGetProfiles::successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperGetTitlePlayersFromMasterPlayerAccountIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds");
static_assert(sizeof(PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds, customData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds, successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds::successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperGetTitlePlayersFromXboxLiveIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperGetTitlePlayersFromXboxLiveIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperGetTitlePlayersFromXboxLiveIDs) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperGetTitlePlayersFromXboxLiveIDs");
static_assert(sizeof(PlayFabProfilesAPI_HelperGetTitlePlayersFromXboxLiveIDs) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperGetTitlePlayersFromXboxLiveIDs");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetTitlePlayersFromXboxLiveIDs, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperGetTitlePlayersFromXboxLiveIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetTitlePlayersFromXboxLiveIDs, customData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperGetTitlePlayersFromXboxLiveIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetTitlePlayersFromXboxLiveIDs, successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperGetTitlePlayersFromXboxLiveIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperSetGlobalPolicy
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperSetGlobalPolicy final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperSetGlobalPolicy) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperSetGlobalPolicy");
static_assert(sizeof(PlayFabProfilesAPI_HelperSetGlobalPolicy) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperSetGlobalPolicy");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetGlobalPolicy, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperSetGlobalPolicy::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetGlobalPolicy, customData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperSetGlobalPolicy::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetGlobalPolicy, successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperSetGlobalPolicy::successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperSetProfileLanguage
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperSetProfileLanguage final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperSetProfileLanguage) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperSetProfileLanguage");
static_assert(sizeof(PlayFabProfilesAPI_HelperSetProfileLanguage) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperSetProfileLanguage");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetProfileLanguage, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperSetProfileLanguage::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetProfileLanguage, customData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperSetProfileLanguage::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetProfileLanguage, successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperSetProfileLanguage::successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperSetProfilePolicy
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperSetProfilePolicy final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperSetProfilePolicy) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperSetProfilePolicy");
static_assert(sizeof(PlayFabProfilesAPI_HelperSetProfilePolicy) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperSetProfilePolicy");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetProfilePolicy, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperSetProfilePolicy::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetProfilePolicy, customData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperSetProfilePolicy::customData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetProfilePolicy, successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperSetProfilePolicy::successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetEntityProfileResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabProfilesModelDecoder_decodeGetEntityProfileResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesGetEntityProfileResponse      ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_decodeGetEntityProfileResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_decodeGetEntityProfileResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_decodeGetEntityProfileResponseResponse) == 0x000018, "Wrong size on PlayFabProfilesModelDecoder_decodeGetEntityProfileResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeGetEntityProfileResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_decodeGetEntityProfileResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeGetEntityProfileResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_decodeGetEntityProfileResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetEntityProfilesResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabProfilesModelDecoder_decodeGetEntityProfilesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesGetEntityProfilesResponse     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_decodeGetEntityProfilesResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_decodeGetEntityProfilesResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_decodeGetEntityProfilesResponseResponse) == 0x000020, "Wrong size on PlayFabProfilesModelDecoder_decodeGetEntityProfilesResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeGetEntityProfilesResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_decodeGetEntityProfilesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeGetEntityProfilesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_decodeGetEntityProfilesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetGlobalPolicyResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabProfilesModelDecoder_decodeGetGlobalPolicyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesGetGlobalPolicyResponse       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_decodeGetGlobalPolicyResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_decodeGetGlobalPolicyResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_decodeGetGlobalPolicyResponseResponse) == 0x000020, "Wrong size on PlayFabProfilesModelDecoder_decodeGetGlobalPolicyResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeGetGlobalPolicyResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_decodeGetGlobalPolicyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeGetGlobalPolicyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_decodeGetGlobalPolicyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse ReturnValue;                   // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse) == 0x000028, "Wrong size on PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetTitlePlayersFromProviderIDsResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromProviderIDsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesGetTitlePlayersFromProviderIDsResponse ReturnValue;                              // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromProviderIDsResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromProviderIDsResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromProviderIDsResponseResponse) == 0x000018, "Wrong size on PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromProviderIDsResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromProviderIDsResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromProviderIDsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromProviderIDsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromProviderIDsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeSetEntityProfilePolicyResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabProfilesModelDecoder_decodeSetEntityProfilePolicyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesSetEntityProfilePolicyResponse ReturnValue;                                      // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_decodeSetEntityProfilePolicyResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_decodeSetEntityProfilePolicyResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_decodeSetEntityProfilePolicyResponseResponse) == 0x000020, "Wrong size on PlayFabProfilesModelDecoder_decodeSetEntityProfilePolicyResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeSetEntityProfilePolicyResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_decodeSetEntityProfilePolicyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeSetEntityProfilePolicyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_decodeSetEntityProfilePolicyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeSetGlobalPolicyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabProfilesModelDecoder_decodeSetGlobalPolicyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesSetGlobalPolicyResponse       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_decodeSetGlobalPolicyResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_decodeSetGlobalPolicyResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_decodeSetGlobalPolicyResponseResponse) == 0x000010, "Wrong size on PlayFabProfilesModelDecoder_decodeSetGlobalPolicyResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeSetGlobalPolicyResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_decodeSetGlobalPolicyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeSetGlobalPolicyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_decodeSetGlobalPolicyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeSetProfileLanguageResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabProfilesModelDecoder_decodeSetProfileLanguageResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesSetProfileLanguageResponse    ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_decodeSetProfileLanguageResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_decodeSetProfileLanguageResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_decodeSetProfileLanguageResponseResponse) == 0x000018, "Wrong size on PlayFabProfilesModelDecoder_decodeSetProfileLanguageResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeSetProfileLanguageResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_decodeSetProfileLanguageResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_decodeSetProfileLanguageResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_decodeSetProfileLanguageResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AddCharacterVirtualCurrency
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_AddCharacterVirtualCurrency final
{
public:
	struct FServerAddCharacterVirtualCurrencyRequest Request;                                        // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerModifyCharacterVirtualCurrencyResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AddCharacterVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_AddCharacterVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_AddCharacterVirtualCurrency) == 0x000078, "Wrong size on PlayFabServerAPI_AddCharacterVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_AddCharacterVirtualCurrency, Request) == 0x000000, "Member 'PlayFabServerAPI_AddCharacterVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddCharacterVirtualCurrency, onSuccess) == 0x000048, "Member 'PlayFabServerAPI_AddCharacterVirtualCurrency::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddCharacterVirtualCurrency, onFailure) == 0x000058, "Member 'PlayFabServerAPI_AddCharacterVirtualCurrency::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddCharacterVirtualCurrency, customData) == 0x000068, "Member 'PlayFabServerAPI_AddCharacterVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddCharacterVirtualCurrency, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_AddCharacterVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AddFriend
// 0x0088 (0x0088 - 0x0000)
struct PlayFabServerAPI_AddFriend final
{
public:
	struct FServerAddFriendRequest                Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AddFriend) == 0x000008, "Wrong alignment on PlayFabServerAPI_AddFriend");
static_assert(sizeof(PlayFabServerAPI_AddFriend) == 0x000088, "Wrong size on PlayFabServerAPI_AddFriend");
static_assert(offsetof(PlayFabServerAPI_AddFriend, Request) == 0x000000, "Member 'PlayFabServerAPI_AddFriend::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddFriend, onSuccess) == 0x000058, "Member 'PlayFabServerAPI_AddFriend::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddFriend, onFailure) == 0x000068, "Member 'PlayFabServerAPI_AddFriend::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddFriend, customData) == 0x000078, "Member 'PlayFabServerAPI_AddFriend::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddFriend, ReturnValue) == 0x000080, "Member 'PlayFabServerAPI_AddFriend::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AddGenericID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_AddGenericID final
{
public:
	struct FServerAddGenericIDRequest             Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResult& Result, class UObject* customData)> onSuccess;   // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AddGenericID) == 0x000008, "Wrong alignment on PlayFabServerAPI_AddGenericID");
static_assert(sizeof(PlayFabServerAPI_AddGenericID) == 0x000050, "Wrong size on PlayFabServerAPI_AddGenericID");
static_assert(offsetof(PlayFabServerAPI_AddGenericID, Request) == 0x000000, "Member 'PlayFabServerAPI_AddGenericID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddGenericID, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_AddGenericID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddGenericID, onFailure) == 0x000030, "Member 'PlayFabServerAPI_AddGenericID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddGenericID, customData) == 0x000040, "Member 'PlayFabServerAPI_AddGenericID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddGenericID, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_AddGenericID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AddPlayerTag
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_AddPlayerTag final
{
public:
	struct FServerAddPlayerTagRequest             Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerAddPlayerTagResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AddPlayerTag) == 0x000008, "Wrong alignment on PlayFabServerAPI_AddPlayerTag");
static_assert(sizeof(PlayFabServerAPI_AddPlayerTag) == 0x000060, "Wrong size on PlayFabServerAPI_AddPlayerTag");
static_assert(offsetof(PlayFabServerAPI_AddPlayerTag, Request) == 0x000000, "Member 'PlayFabServerAPI_AddPlayerTag::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddPlayerTag, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_AddPlayerTag::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddPlayerTag, onFailure) == 0x000040, "Member 'PlayFabServerAPI_AddPlayerTag::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddPlayerTag, customData) == 0x000050, "Member 'PlayFabServerAPI_AddPlayerTag::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddPlayerTag, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_AddPlayerTag::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AddSharedGroupMembers
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_AddSharedGroupMembers final
{
public:
	struct FServerAddSharedGroupMembersRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerAddSharedGroupMembersResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AddSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabServerAPI_AddSharedGroupMembers");
static_assert(sizeof(PlayFabServerAPI_AddSharedGroupMembers) == 0x000058, "Wrong size on PlayFabServerAPI_AddSharedGroupMembers");
static_assert(offsetof(PlayFabServerAPI_AddSharedGroupMembers, Request) == 0x000000, "Member 'PlayFabServerAPI_AddSharedGroupMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddSharedGroupMembers, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_AddSharedGroupMembers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddSharedGroupMembers, onFailure) == 0x000038, "Member 'PlayFabServerAPI_AddSharedGroupMembers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddSharedGroupMembers, customData) == 0x000048, "Member 'PlayFabServerAPI_AddSharedGroupMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddSharedGroupMembers, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_AddSharedGroupMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AddUserVirtualCurrency
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_AddUserVirtualCurrency final
{
public:
	struct FServerAddUserVirtualCurrencyRequest   Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerModifyUserVirtualCurrencyResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AddUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_AddUserVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_AddUserVirtualCurrency) == 0x000068, "Wrong size on PlayFabServerAPI_AddUserVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_AddUserVirtualCurrency, Request) == 0x000000, "Member 'PlayFabServerAPI_AddUserVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddUserVirtualCurrency, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_AddUserVirtualCurrency::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddUserVirtualCurrency, onFailure) == 0x000048, "Member 'PlayFabServerAPI_AddUserVirtualCurrency::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddUserVirtualCurrency, customData) == 0x000058, "Member 'PlayFabServerAPI_AddUserVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddUserVirtualCurrency, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_AddUserVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AuthenticateSessionTicket
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_AuthenticateSessionTicket final
{
public:
	struct FServerAuthenticateSessionTicketRequest Request;                                          // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerAuthenticateSessionTicketResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AuthenticateSessionTicket) == 0x000008, "Wrong alignment on PlayFabServerAPI_AuthenticateSessionTicket");
static_assert(sizeof(PlayFabServerAPI_AuthenticateSessionTicket) == 0x000048, "Wrong size on PlayFabServerAPI_AuthenticateSessionTicket");
static_assert(offsetof(PlayFabServerAPI_AuthenticateSessionTicket, Request) == 0x000000, "Member 'PlayFabServerAPI_AuthenticateSessionTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AuthenticateSessionTicket, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_AuthenticateSessionTicket::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AuthenticateSessionTicket, onFailure) == 0x000028, "Member 'PlayFabServerAPI_AuthenticateSessionTicket::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AuthenticateSessionTicket, customData) == 0x000038, "Member 'PlayFabServerAPI_AuthenticateSessionTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AuthenticateSessionTicket, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_AuthenticateSessionTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AwardSteamAchievement
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_AwardSteamAchievement final
{
public:
	struct FServerAwardSteamAchievementRequest    Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerAwardSteamAchievementResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AwardSteamAchievement) == 0x000008, "Wrong alignment on PlayFabServerAPI_AwardSteamAchievement");
static_assert(sizeof(PlayFabServerAPI_AwardSteamAchievement) == 0x000048, "Wrong size on PlayFabServerAPI_AwardSteamAchievement");
static_assert(offsetof(PlayFabServerAPI_AwardSteamAchievement, Request) == 0x000000, "Member 'PlayFabServerAPI_AwardSteamAchievement::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AwardSteamAchievement, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_AwardSteamAchievement::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AwardSteamAchievement, onFailure) == 0x000028, "Member 'PlayFabServerAPI_AwardSteamAchievement::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AwardSteamAchievement, customData) == 0x000038, "Member 'PlayFabServerAPI_AwardSteamAchievement::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AwardSteamAchievement, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_AwardSteamAchievement::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.BanUsers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_BanUsers final
{
public:
	struct FServerBanUsersRequest                 Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerBanUsersResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_BanUsers) == 0x000008, "Wrong alignment on PlayFabServerAPI_BanUsers");
static_assert(sizeof(PlayFabServerAPI_BanUsers) == 0x000050, "Wrong size on PlayFabServerAPI_BanUsers");
static_assert(offsetof(PlayFabServerAPI_BanUsers, Request) == 0x000000, "Member 'PlayFabServerAPI_BanUsers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_BanUsers, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_BanUsers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_BanUsers, onFailure) == 0x000030, "Member 'PlayFabServerAPI_BanUsers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_BanUsers, customData) == 0x000040, "Member 'PlayFabServerAPI_BanUsers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_BanUsers, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_BanUsers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.ConsumeItem
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_ConsumeItem final
{
public:
	struct FServerConsumeItemRequest              Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerConsumeItemResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_ConsumeItem) == 0x000008, "Wrong alignment on PlayFabServerAPI_ConsumeItem");
static_assert(sizeof(PlayFabServerAPI_ConsumeItem) == 0x000078, "Wrong size on PlayFabServerAPI_ConsumeItem");
static_assert(offsetof(PlayFabServerAPI_ConsumeItem, Request) == 0x000000, "Member 'PlayFabServerAPI_ConsumeItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ConsumeItem, onSuccess) == 0x000048, "Member 'PlayFabServerAPI_ConsumeItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ConsumeItem, onFailure) == 0x000058, "Member 'PlayFabServerAPI_ConsumeItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ConsumeItem, customData) == 0x000068, "Member 'PlayFabServerAPI_ConsumeItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ConsumeItem, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_ConsumeItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.CreateSharedGroup
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_CreateSharedGroup final
{
public:
	struct FServerCreateSharedGroupRequest        Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerCreateSharedGroupResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_CreateSharedGroup) == 0x000008, "Wrong alignment on PlayFabServerAPI_CreateSharedGroup");
static_assert(sizeof(PlayFabServerAPI_CreateSharedGroup) == 0x000048, "Wrong size on PlayFabServerAPI_CreateSharedGroup");
static_assert(offsetof(PlayFabServerAPI_CreateSharedGroup, Request) == 0x000000, "Member 'PlayFabServerAPI_CreateSharedGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_CreateSharedGroup, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_CreateSharedGroup::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_CreateSharedGroup, onFailure) == 0x000028, "Member 'PlayFabServerAPI_CreateSharedGroup::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_CreateSharedGroup, customData) == 0x000038, "Member 'PlayFabServerAPI_CreateSharedGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_CreateSharedGroup, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_CreateSharedGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.DeleteCharacterFromUser
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_DeleteCharacterFromUser final
{
public:
	struct FServerDeleteCharacterFromUserRequest  Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerDeleteCharacterFromUserResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DeleteCharacterFromUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_DeleteCharacterFromUser");
static_assert(sizeof(PlayFabServerAPI_DeleteCharacterFromUser) == 0x000068, "Wrong size on PlayFabServerAPI_DeleteCharacterFromUser");
static_assert(offsetof(PlayFabServerAPI_DeleteCharacterFromUser, Request) == 0x000000, "Member 'PlayFabServerAPI_DeleteCharacterFromUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteCharacterFromUser, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_DeleteCharacterFromUser::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteCharacterFromUser, onFailure) == 0x000048, "Member 'PlayFabServerAPI_DeleteCharacterFromUser::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteCharacterFromUser, customData) == 0x000058, "Member 'PlayFabServerAPI_DeleteCharacterFromUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteCharacterFromUser, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_DeleteCharacterFromUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.DeletePlayer
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_DeletePlayer final
{
public:
	struct FServerDeletePlayerRequest             Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerDeletePlayerResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DeletePlayer) == 0x000008, "Wrong alignment on PlayFabServerAPI_DeletePlayer");
static_assert(sizeof(PlayFabServerAPI_DeletePlayer) == 0x000048, "Wrong size on PlayFabServerAPI_DeletePlayer");
static_assert(offsetof(PlayFabServerAPI_DeletePlayer, Request) == 0x000000, "Member 'PlayFabServerAPI_DeletePlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePlayer, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_DeletePlayer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePlayer, onFailure) == 0x000028, "Member 'PlayFabServerAPI_DeletePlayer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePlayer, customData) == 0x000038, "Member 'PlayFabServerAPI_DeletePlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePlayer, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_DeletePlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.DeletePushNotificationTemplate
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_DeletePushNotificationTemplate final
{
public:
	struct FServerDeletePushNotificationTemplateRequest Request;                                     // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerDeletePushNotificationTemplateResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DeletePushNotificationTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_DeletePushNotificationTemplate");
static_assert(sizeof(PlayFabServerAPI_DeletePushNotificationTemplate) == 0x000048, "Wrong size on PlayFabServerAPI_DeletePushNotificationTemplate");
static_assert(offsetof(PlayFabServerAPI_DeletePushNotificationTemplate, Request) == 0x000000, "Member 'PlayFabServerAPI_DeletePushNotificationTemplate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePushNotificationTemplate, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_DeletePushNotificationTemplate::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePushNotificationTemplate, onFailure) == 0x000028, "Member 'PlayFabServerAPI_DeletePushNotificationTemplate::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePushNotificationTemplate, customData) == 0x000038, "Member 'PlayFabServerAPI_DeletePushNotificationTemplate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePushNotificationTemplate, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_DeletePushNotificationTemplate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.DeleteSharedGroup
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_DeleteSharedGroup final
{
public:
	struct FServerDeleteSharedGroupRequest        Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DeleteSharedGroup) == 0x000008, "Wrong alignment on PlayFabServerAPI_DeleteSharedGroup");
static_assert(sizeof(PlayFabServerAPI_DeleteSharedGroup) == 0x000048, "Wrong size on PlayFabServerAPI_DeleteSharedGroup");
static_assert(offsetof(PlayFabServerAPI_DeleteSharedGroup, Request) == 0x000000, "Member 'PlayFabServerAPI_DeleteSharedGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteSharedGroup, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_DeleteSharedGroup::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteSharedGroup, onFailure) == 0x000028, "Member 'PlayFabServerAPI_DeleteSharedGroup::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteSharedGroup, customData) == 0x000038, "Member 'PlayFabServerAPI_DeleteSharedGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteSharedGroup, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_DeleteSharedGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.EvaluateRandomResultTable
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_EvaluateRandomResultTable final
{
public:
	struct FServerEvaluateRandomResultTableRequest Request;                                          // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEvaluateRandomResultTableResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_EvaluateRandomResultTable) == 0x000008, "Wrong alignment on PlayFabServerAPI_EvaluateRandomResultTable");
static_assert(sizeof(PlayFabServerAPI_EvaluateRandomResultTable) == 0x000058, "Wrong size on PlayFabServerAPI_EvaluateRandomResultTable");
static_assert(offsetof(PlayFabServerAPI_EvaluateRandomResultTable, Request) == 0x000000, "Member 'PlayFabServerAPI_EvaluateRandomResultTable::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_EvaluateRandomResultTable, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_EvaluateRandomResultTable::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_EvaluateRandomResultTable, onFailure) == 0x000038, "Member 'PlayFabServerAPI_EvaluateRandomResultTable::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_EvaluateRandomResultTable, customData) == 0x000048, "Member 'PlayFabServerAPI_EvaluateRandomResultTable::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_EvaluateRandomResultTable, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_EvaluateRandomResultTable::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.ExecuteCloudScript
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_ExecuteCloudScript final
{
public:
	struct FServerExecuteCloudScriptServerRequest Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerExecuteCloudScriptResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_ExecuteCloudScript) == 0x000008, "Wrong alignment on PlayFabServerAPI_ExecuteCloudScript");
static_assert(sizeof(PlayFabServerAPI_ExecuteCloudScript) == 0x000078, "Wrong size on PlayFabServerAPI_ExecuteCloudScript");
static_assert(offsetof(PlayFabServerAPI_ExecuteCloudScript, Request) == 0x000000, "Member 'PlayFabServerAPI_ExecuteCloudScript::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ExecuteCloudScript, onSuccess) == 0x000048, "Member 'PlayFabServerAPI_ExecuteCloudScript::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ExecuteCloudScript, onFailure) == 0x000058, "Member 'PlayFabServerAPI_ExecuteCloudScript::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ExecuteCloudScript, customData) == 0x000068, "Member 'PlayFabServerAPI_ExecuteCloudScript::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ExecuteCloudScript, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_ExecuteCloudScript::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetAllSegments
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerAPI_GetAllSegments final
{
public:
	struct FServerGetAllSegmentsRequest           Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetAllSegmentsResult& Result, class UObject* customData)> onSuccess; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetAllSegments) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetAllSegments");
static_assert(sizeof(PlayFabServerAPI_GetAllSegments) == 0x000038, "Wrong size on PlayFabServerAPI_GetAllSegments");
static_assert(offsetof(PlayFabServerAPI_GetAllSegments, Request) == 0x000000, "Member 'PlayFabServerAPI_GetAllSegments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllSegments, onSuccess) == 0x000008, "Member 'PlayFabServerAPI_GetAllSegments::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllSegments, onFailure) == 0x000018, "Member 'PlayFabServerAPI_GetAllSegments::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllSegments, customData) == 0x000028, "Member 'PlayFabServerAPI_GetAllSegments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllSegments, ReturnValue) == 0x000030, "Member 'PlayFabServerAPI_GetAllSegments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetAllUsersCharacters
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetAllUsersCharacters final
{
public:
	struct FServerListUsersCharactersRequest      Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerListUsersCharactersResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetAllUsersCharacters) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetAllUsersCharacters");
static_assert(sizeof(PlayFabServerAPI_GetAllUsersCharacters) == 0x000048, "Wrong size on PlayFabServerAPI_GetAllUsersCharacters");
static_assert(offsetof(PlayFabServerAPI_GetAllUsersCharacters, Request) == 0x000000, "Member 'PlayFabServerAPI_GetAllUsersCharacters::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllUsersCharacters, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetAllUsersCharacters::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllUsersCharacters, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetAllUsersCharacters::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllUsersCharacters, customData) == 0x000038, "Member 'PlayFabServerAPI_GetAllUsersCharacters::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllUsersCharacters, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetAllUsersCharacters::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCatalogItems
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetCatalogItems final
{
public:
	struct FServerGetCatalogItemsRequest          Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCatalogItemsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCatalogItems) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCatalogItems");
static_assert(sizeof(PlayFabServerAPI_GetCatalogItems) == 0x000048, "Wrong size on PlayFabServerAPI_GetCatalogItems");
static_assert(offsetof(PlayFabServerAPI_GetCatalogItems, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCatalogItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCatalogItems, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetCatalogItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCatalogItems, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetCatalogItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCatalogItems, customData) == 0x000038, "Member 'PlayFabServerAPI_GetCatalogItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCatalogItems, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetCatalogItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCharacterData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetCharacterData final
{
public:
	struct FServerGetCharacterDataRequest         Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCharacterData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCharacterData");
static_assert(sizeof(PlayFabServerAPI_GetCharacterData) == 0x000070, "Wrong size on PlayFabServerAPI_GetCharacterData");
static_assert(offsetof(PlayFabServerAPI_GetCharacterData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCharacterData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterData, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetCharacterData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterData, onFailure) == 0x000050, "Member 'PlayFabServerAPI_GetCharacterData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterData, customData) == 0x000060, "Member 'PlayFabServerAPI_GetCharacterData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetCharacterData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCharacterInternalData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetCharacterInternalData final
{
public:
	struct FServerGetCharacterDataRequest         Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCharacterInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCharacterInternalData");
static_assert(sizeof(PlayFabServerAPI_GetCharacterInternalData) == 0x000070, "Wrong size on PlayFabServerAPI_GetCharacterInternalData");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCharacterInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInternalData, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetCharacterInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInternalData, onFailure) == 0x000050, "Member 'PlayFabServerAPI_GetCharacterInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInternalData, customData) == 0x000060, "Member 'PlayFabServerAPI_GetCharacterInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInternalData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetCharacterInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCharacterInventory
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetCharacterInventory final
{
public:
	struct FServerGetCharacterInventoryRequest    Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCharacterInventoryResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCharacterInventory) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCharacterInventory");
static_assert(sizeof(PlayFabServerAPI_GetCharacterInventory) == 0x000070, "Wrong size on PlayFabServerAPI_GetCharacterInventory");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInventory, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCharacterInventory::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInventory, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetCharacterInventory::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInventory, onFailure) == 0x000050, "Member 'PlayFabServerAPI_GetCharacterInventory::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInventory, customData) == 0x000060, "Member 'PlayFabServerAPI_GetCharacterInventory::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInventory, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetCharacterInventory::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCharacterLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_GetCharacterLeaderboard final
{
public:
	struct FServerGetCharacterLeaderboardRequest  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCharacterLeaderboardResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCharacterLeaderboard) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCharacterLeaderboard");
static_assert(sizeof(PlayFabServerAPI_GetCharacterLeaderboard) == 0x000050, "Wrong size on PlayFabServerAPI_GetCharacterLeaderboard");
static_assert(offsetof(PlayFabServerAPI_GetCharacterLeaderboard, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCharacterLeaderboard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterLeaderboard, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_GetCharacterLeaderboard::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterLeaderboard, onFailure) == 0x000030, "Member 'PlayFabServerAPI_GetCharacterLeaderboard::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterLeaderboard, customData) == 0x000040, "Member 'PlayFabServerAPI_GetCharacterLeaderboard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterLeaderboard, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_GetCharacterLeaderboard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCharacterReadOnlyData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetCharacterReadOnlyData final
{
public:
	struct FServerGetCharacterDataRequest         Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCharacterReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCharacterReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_GetCharacterReadOnlyData) == 0x000070, "Wrong size on PlayFabServerAPI_GetCharacterReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_GetCharacterReadOnlyData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCharacterReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterReadOnlyData, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetCharacterReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterReadOnlyData, onFailure) == 0x000050, "Member 'PlayFabServerAPI_GetCharacterReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterReadOnlyData, customData) == 0x000060, "Member 'PlayFabServerAPI_GetCharacterReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterReadOnlyData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetCharacterReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCharacterStatistics
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetCharacterStatistics final
{
public:
	struct FServerGetCharacterStatisticsRequest   Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCharacterStatisticsResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCharacterStatistics");
static_assert(sizeof(PlayFabServerAPI_GetCharacterStatistics) == 0x000058, "Wrong size on PlayFabServerAPI_GetCharacterStatistics");
static_assert(offsetof(PlayFabServerAPI_GetCharacterStatistics, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCharacterStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterStatistics, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetCharacterStatistics::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterStatistics, onFailure) == 0x000038, "Member 'PlayFabServerAPI_GetCharacterStatistics::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterStatistics, customData) == 0x000048, "Member 'PlayFabServerAPI_GetCharacterStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterStatistics, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetCharacterStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetContentDownloadUrl
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetContentDownloadUrl final
{
public:
	struct FServerGetContentDownloadUrlRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetContentDownloadUrlResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetContentDownloadUrl) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetContentDownloadUrl");
static_assert(sizeof(PlayFabServerAPI_GetContentDownloadUrl) == 0x000060, "Wrong size on PlayFabServerAPI_GetContentDownloadUrl");
static_assert(offsetof(PlayFabServerAPI_GetContentDownloadUrl, Request) == 0x000000, "Member 'PlayFabServerAPI_GetContentDownloadUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetContentDownloadUrl, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetContentDownloadUrl::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetContentDownloadUrl, onFailure) == 0x000040, "Member 'PlayFabServerAPI_GetContentDownloadUrl::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetContentDownloadUrl, customData) == 0x000050, "Member 'PlayFabServerAPI_GetContentDownloadUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetContentDownloadUrl, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetContentDownloadUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetFriendLeaderboard
// 0x0090 (0x0090 - 0x0000)
struct PlayFabServerAPI_GetFriendLeaderboard final
{
public:
	struct FServerGetFriendLeaderboardRequest     Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetLeaderboardResult& Result, class UObject* customData)> onSuccess; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetFriendLeaderboard) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetFriendLeaderboard");
static_assert(sizeof(PlayFabServerAPI_GetFriendLeaderboard) == 0x000090, "Wrong size on PlayFabServerAPI_GetFriendLeaderboard");
static_assert(offsetof(PlayFabServerAPI_GetFriendLeaderboard, Request) == 0x000000, "Member 'PlayFabServerAPI_GetFriendLeaderboard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendLeaderboard, onSuccess) == 0x000060, "Member 'PlayFabServerAPI_GetFriendLeaderboard::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendLeaderboard, onFailure) == 0x000070, "Member 'PlayFabServerAPI_GetFriendLeaderboard::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendLeaderboard, customData) == 0x000080, "Member 'PlayFabServerAPI_GetFriendLeaderboard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendLeaderboard, ReturnValue) == 0x000088, "Member 'PlayFabServerAPI_GetFriendLeaderboard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetFriendsList
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetFriendsList final
{
public:
	struct FServerGetFriendsListRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetFriendsListResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetFriendsList) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetFriendsList");
static_assert(sizeof(PlayFabServerAPI_GetFriendsList) == 0x000070, "Wrong size on PlayFabServerAPI_GetFriendsList");
static_assert(offsetof(PlayFabServerAPI_GetFriendsList, Request) == 0x000000, "Member 'PlayFabServerAPI_GetFriendsList::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendsList, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetFriendsList::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendsList, onFailure) == 0x000050, "Member 'PlayFabServerAPI_GetFriendsList::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendsList, customData) == 0x000060, "Member 'PlayFabServerAPI_GetFriendsList::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendsList, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetFriendsList::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetLeaderboard
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetLeaderboard final
{
public:
	struct FServerGetLeaderboardRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetLeaderboardResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetLeaderboard) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetLeaderboard");
static_assert(sizeof(PlayFabServerAPI_GetLeaderboard) == 0x000070, "Wrong size on PlayFabServerAPI_GetLeaderboard");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboard, Request) == 0x000000, "Member 'PlayFabServerAPI_GetLeaderboard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboard, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetLeaderboard::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboard, onFailure) == 0x000050, "Member 'PlayFabServerAPI_GetLeaderboard::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboard, customData) == 0x000060, "Member 'PlayFabServerAPI_GetLeaderboard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboard, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetLeaderboard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetLeaderboardAroundCharacter
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetLeaderboardAroundCharacter final
{
public:
	struct FServerGetLeaderboardAroundCharacterRequest Request;                                      // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetLeaderboardAroundCharacterResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetLeaderboardAroundCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetLeaderboardAroundCharacter");
static_assert(sizeof(PlayFabServerAPI_GetLeaderboardAroundCharacter) == 0x000070, "Wrong size on PlayFabServerAPI_GetLeaderboardAroundCharacter");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundCharacter, Request) == 0x000000, "Member 'PlayFabServerAPI_GetLeaderboardAroundCharacter::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundCharacter, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetLeaderboardAroundCharacter::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundCharacter, onFailure) == 0x000050, "Member 'PlayFabServerAPI_GetLeaderboardAroundCharacter::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundCharacter, customData) == 0x000060, "Member 'PlayFabServerAPI_GetLeaderboardAroundCharacter::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundCharacter, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetLeaderboardAroundCharacter::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetLeaderboardAroundUser
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_GetLeaderboardAroundUser final
{
public:
	struct FServerGetLeaderboardAroundUserRequest Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetLeaderboardAroundUserResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetLeaderboardAroundUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetLeaderboardAroundUser");
static_assert(sizeof(PlayFabServerAPI_GetLeaderboardAroundUser) == 0x000078, "Wrong size on PlayFabServerAPI_GetLeaderboardAroundUser");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundUser, Request) == 0x000000, "Member 'PlayFabServerAPI_GetLeaderboardAroundUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundUser, onSuccess) == 0x000048, "Member 'PlayFabServerAPI_GetLeaderboardAroundUser::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundUser, onFailure) == 0x000058, "Member 'PlayFabServerAPI_GetLeaderboardAroundUser::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundUser, customData) == 0x000068, "Member 'PlayFabServerAPI_GetLeaderboardAroundUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundUser, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_GetLeaderboardAroundUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetLeaderboardForUserCharacters
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetLeaderboardForUserCharacters final
{
public:
	struct FServerGetLeaderboardForUsersCharactersRequest Request;                                   // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetLeaderboardForUsersCharactersResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetLeaderboardForUserCharacters) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetLeaderboardForUserCharacters");
static_assert(sizeof(PlayFabServerAPI_GetLeaderboardForUserCharacters) == 0x000058, "Wrong size on PlayFabServerAPI_GetLeaderboardForUserCharacters");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardForUserCharacters, Request) == 0x000000, "Member 'PlayFabServerAPI_GetLeaderboardForUserCharacters::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardForUserCharacters, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetLeaderboardForUserCharacters::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardForUserCharacters, onFailure) == 0x000038, "Member 'PlayFabServerAPI_GetLeaderboardForUserCharacters::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardForUserCharacters, customData) == 0x000048, "Member 'PlayFabServerAPI_GetLeaderboardForUserCharacters::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardForUserCharacters, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetLeaderboardForUserCharacters::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayerCombinedInfo
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetPlayerCombinedInfo final
{
public:
	struct FServerGetPlayerCombinedInfoRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayerCombinedInfoResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayerCombinedInfo) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayerCombinedInfo");
static_assert(sizeof(PlayFabServerAPI_GetPlayerCombinedInfo) == 0x000058, "Wrong size on PlayFabServerAPI_GetPlayerCombinedInfo");
static_assert(offsetof(PlayFabServerAPI_GetPlayerCombinedInfo, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayerCombinedInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerCombinedInfo, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetPlayerCombinedInfo::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerCombinedInfo, onFailure) == 0x000038, "Member 'PlayFabServerAPI_GetPlayerCombinedInfo::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerCombinedInfo, customData) == 0x000048, "Member 'PlayFabServerAPI_GetPlayerCombinedInfo::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerCombinedInfo, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetPlayerCombinedInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayerProfile
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetPlayerProfile final
{
public:
	struct FServerGetPlayerProfileRequest         Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayerProfileResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayerProfile) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayerProfile");
static_assert(sizeof(PlayFabServerAPI_GetPlayerProfile) == 0x000058, "Wrong size on PlayFabServerAPI_GetPlayerProfile");
static_assert(offsetof(PlayFabServerAPI_GetPlayerProfile, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayerProfile::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerProfile, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetPlayerProfile::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerProfile, onFailure) == 0x000038, "Member 'PlayFabServerAPI_GetPlayerProfile::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerProfile, customData) == 0x000048, "Member 'PlayFabServerAPI_GetPlayerProfile::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerProfile, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetPlayerProfile::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayerSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_GetPlayerSegments final
{
public:
	struct FServerGetPlayersSegmentsRequest       Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayerSegmentsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayerSegments) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayerSegments");
static_assert(sizeof(PlayFabServerAPI_GetPlayerSegments) == 0x000050, "Wrong size on PlayFabServerAPI_GetPlayerSegments");
static_assert(offsetof(PlayFabServerAPI_GetPlayerSegments, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayerSegments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerSegments, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_GetPlayerSegments::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerSegments, onFailure) == 0x000030, "Member 'PlayFabServerAPI_GetPlayerSegments::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerSegments, customData) == 0x000040, "Member 'PlayFabServerAPI_GetPlayerSegments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerSegments, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_GetPlayerSegments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayersInSegment
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetPlayersInSegment final
{
public:
	struct FServerGetPlayersInSegmentRequest      Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayersInSegmentResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayersInSegment) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayersInSegment");
static_assert(sizeof(PlayFabServerAPI_GetPlayersInSegment) == 0x000070, "Wrong size on PlayFabServerAPI_GetPlayersInSegment");
static_assert(offsetof(PlayFabServerAPI_GetPlayersInSegment, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayersInSegment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayersInSegment, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetPlayersInSegment::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayersInSegment, onFailure) == 0x000050, "Member 'PlayFabServerAPI_GetPlayersInSegment::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayersInSegment, customData) == 0x000060, "Member 'PlayFabServerAPI_GetPlayersInSegment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayersInSegment, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetPlayersInSegment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayerStatistics
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetPlayerStatistics final
{
public:
	struct FServerGetPlayerStatisticsRequest      Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayerStatisticsResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayerStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayerStatistics");
static_assert(sizeof(PlayFabServerAPI_GetPlayerStatistics) == 0x000070, "Wrong size on PlayFabServerAPI_GetPlayerStatistics");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatistics, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayerStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatistics, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetPlayerStatistics::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatistics, onFailure) == 0x000050, "Member 'PlayFabServerAPI_GetPlayerStatistics::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatistics, customData) == 0x000060, "Member 'PlayFabServerAPI_GetPlayerStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatistics, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetPlayerStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayerStatisticVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_GetPlayerStatisticVersions final
{
public:
	struct FServerGetPlayerStatisticVersionsRequest Request;                                         // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayerStatisticVersionsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayerStatisticVersions) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayerStatisticVersions");
static_assert(sizeof(PlayFabServerAPI_GetPlayerStatisticVersions) == 0x000050, "Wrong size on PlayFabServerAPI_GetPlayerStatisticVersions");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatisticVersions, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayerStatisticVersions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatisticVersions, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_GetPlayerStatisticVersions::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatisticVersions, onFailure) == 0x000030, "Member 'PlayFabServerAPI_GetPlayerStatisticVersions::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatisticVersions, customData) == 0x000040, "Member 'PlayFabServerAPI_GetPlayerStatisticVersions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatisticVersions, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_GetPlayerStatisticVersions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayerTags
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetPlayerTags final
{
public:
	struct FServerGetPlayerTagsRequest            Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayerTagsResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayerTags) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayerTags");
static_assert(sizeof(PlayFabServerAPI_GetPlayerTags) == 0x000060, "Wrong size on PlayFabServerAPI_GetPlayerTags");
static_assert(offsetof(PlayFabServerAPI_GetPlayerTags, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayerTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerTags, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetPlayerTags::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerTags, onFailure) == 0x000040, "Member 'PlayFabServerAPI_GetPlayerTags::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerTags, customData) == 0x000050, "Member 'PlayFabServerAPI_GetPlayerTags::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerTags, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetPlayerTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromFacebookIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs final
{
public:
	struct FServerGetPlayFabIDsFromFacebookIDsRequest Request;                                       // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromFacebookIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs, customData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromFacebookInstantGamesIds
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds final
{
public:
	struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsRequest Request;                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds, customData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromGenericIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromGenericIDs final
{
public:
	struct FServerGetPlayFabIDsFromGenericIDsRequest Request;                                        // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromGenericIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromGenericIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromGenericIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromGenericIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromGenericIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromGenericIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs, customData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromGenericIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromGenericIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromNintendoServiceAccountIds
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds final
{
public:
	struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsRequest Request;                         // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds, customData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromNintendoSwitchDeviceIds
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds final
{
public:
	struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest Request;                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, customData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromPSNAccountIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs final
{
public:
	struct FServerGetPlayFabIDsFromPSNAccountIDsRequest Request;                                     // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromPSNAccountIDsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs) == 0x000050, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs, onFailure) == 0x000030, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs, customData) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromPSNOnlineIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs final
{
public:
	struct FServerGetPlayFabIDsFromPSNOnlineIDsRequest Request;                                      // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromPSNOnlineIDsResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs) == 0x000050, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs, onFailure) == 0x000030, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs, customData) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNOnlineIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromSteamIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromSteamIDs final
{
public:
	struct FServerGetPlayFabIDsFromSteamIDsRequest Request;                                          // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromSteamIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromSteamIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromSteamIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromSteamIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromSteamIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromSteamIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs, customData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromSteamIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromSteamIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromTwitchIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs final
{
public:
	struct FServerGetPlayFabIDsFromTwitchIDsRequest Request;                                         // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromTwitchIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs, customData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromXboxLiveIDs
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs final
{
public:
	struct FServerGetPlayFabIDsFromXboxLiveIDsRequest Request;                                       // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromXboxLiveIDsResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs) == 0x000058, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs, onFailure) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs, customData) == 0x000048, "Member 'PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPublisherData
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPublisherData final
{
public:
	struct FServerGetPublisherDataRequest         Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPublisherDataResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPublisherData");
static_assert(sizeof(PlayFabServerAPI_GetPublisherData) == 0x000048, "Wrong size on PlayFabServerAPI_GetPublisherData");
static_assert(offsetof(PlayFabServerAPI_GetPublisherData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPublisherData, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPublisherData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPublisherData, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPublisherData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPublisherData, customData) == 0x000038, "Member 'PlayFabServerAPI_GetPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPublisherData, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetRandomResultTables
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetRandomResultTables final
{
public:
	struct FServerGetRandomResultTablesRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetRandomResultTablesResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetRandomResultTables) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetRandomResultTables");
static_assert(sizeof(PlayFabServerAPI_GetRandomResultTables) == 0x000058, "Wrong size on PlayFabServerAPI_GetRandomResultTables");
static_assert(offsetof(PlayFabServerAPI_GetRandomResultTables, Request) == 0x000000, "Member 'PlayFabServerAPI_GetRandomResultTables::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetRandomResultTables, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetRandomResultTables::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetRandomResultTables, onFailure) == 0x000038, "Member 'PlayFabServerAPI_GetRandomResultTables::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetRandomResultTables, customData) == 0x000048, "Member 'PlayFabServerAPI_GetRandomResultTables::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetRandomResultTables, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetRandomResultTables::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetServerCustomIDsFromPlayFabIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs final
{
public:
	struct FServerGetServerCustomIDsFromPlayFabIDsRequest Request;                                   // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetServerCustomIDsFromPlayFabIDsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs");
static_assert(sizeof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs) == 0x000048, "Wrong size on PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs");
static_assert(offsetof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs, customData) == 0x000038, "Member 'PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetSharedGroupData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetSharedGroupData final
{
public:
	struct FServerGetSharedGroupDataRequest       Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetSharedGroupDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetSharedGroupData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetSharedGroupData");
static_assert(sizeof(PlayFabServerAPI_GetSharedGroupData) == 0x000060, "Wrong size on PlayFabServerAPI_GetSharedGroupData");
static_assert(offsetof(PlayFabServerAPI_GetSharedGroupData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetSharedGroupData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetSharedGroupData, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetSharedGroupData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetSharedGroupData, onFailure) == 0x000040, "Member 'PlayFabServerAPI_GetSharedGroupData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetSharedGroupData, customData) == 0x000050, "Member 'PlayFabServerAPI_GetSharedGroupData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetSharedGroupData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetSharedGroupData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetStoreItems
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetStoreItems final
{
public:
	struct FServerGetStoreItemsServerRequest      Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetStoreItemsResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetStoreItems) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetStoreItems");
static_assert(sizeof(PlayFabServerAPI_GetStoreItems) == 0x000070, "Wrong size on PlayFabServerAPI_GetStoreItems");
static_assert(offsetof(PlayFabServerAPI_GetStoreItems, Request) == 0x000000, "Member 'PlayFabServerAPI_GetStoreItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetStoreItems, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetStoreItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetStoreItems, onFailure) == 0x000050, "Member 'PlayFabServerAPI_GetStoreItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetStoreItems, customData) == 0x000060, "Member 'PlayFabServerAPI_GetStoreItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetStoreItems, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetStoreItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetTime
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerAPI_GetTime final
{
public:
	struct FServerGetTimeRequest                  Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetTimeResult& Result, class UObject* customData)> onSuccess; // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetTime) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetTime");
static_assert(sizeof(PlayFabServerAPI_GetTime) == 0x000038, "Wrong size on PlayFabServerAPI_GetTime");
static_assert(offsetof(PlayFabServerAPI_GetTime, Request) == 0x000000, "Member 'PlayFabServerAPI_GetTime::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTime, onSuccess) == 0x000008, "Member 'PlayFabServerAPI_GetTime::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTime, onFailure) == 0x000018, "Member 'PlayFabServerAPI_GetTime::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTime, customData) == 0x000028, "Member 'PlayFabServerAPI_GetTime::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTime, ReturnValue) == 0x000030, "Member 'PlayFabServerAPI_GetTime::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetTitleData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetTitleData final
{
public:
	struct FServerGetTitleDataRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetTitleDataResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetTitleData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetTitleData");
static_assert(sizeof(PlayFabServerAPI_GetTitleData) == 0x000058, "Wrong size on PlayFabServerAPI_GetTitleData");
static_assert(offsetof(PlayFabServerAPI_GetTitleData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetTitleData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleData, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetTitleData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleData, onFailure) == 0x000038, "Member 'PlayFabServerAPI_GetTitleData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleData, customData) == 0x000048, "Member 'PlayFabServerAPI_GetTitleData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleData, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetTitleData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetTitleInternalData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetTitleInternalData final
{
public:
	struct FServerGetTitleDataRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetTitleDataResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetTitleInternalData");
static_assert(sizeof(PlayFabServerAPI_GetTitleInternalData) == 0x000058, "Wrong size on PlayFabServerAPI_GetTitleInternalData");
static_assert(offsetof(PlayFabServerAPI_GetTitleInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetTitleInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleInternalData, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetTitleInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleInternalData, onFailure) == 0x000038, "Member 'PlayFabServerAPI_GetTitleInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleInternalData, customData) == 0x000048, "Member 'PlayFabServerAPI_GetTitleInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleInternalData, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetTitleInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetTitleNews
// 0x0040 (0x0040 - 0x0000)
struct PlayFabServerAPI_GetTitleNews final
{
public:
	struct FServerGetTitleNewsRequest             Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetTitleNewsResult& Result, class UObject* customData)> onSuccess; // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetTitleNews) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetTitleNews");
static_assert(sizeof(PlayFabServerAPI_GetTitleNews) == 0x000040, "Wrong size on PlayFabServerAPI_GetTitleNews");
static_assert(offsetof(PlayFabServerAPI_GetTitleNews, Request) == 0x000000, "Member 'PlayFabServerAPI_GetTitleNews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleNews, onSuccess) == 0x000010, "Member 'PlayFabServerAPI_GetTitleNews::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleNews, onFailure) == 0x000020, "Member 'PlayFabServerAPI_GetTitleNews::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleNews, customData) == 0x000030, "Member 'PlayFabServerAPI_GetTitleNews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleNews, ReturnValue) == 0x000038, "Member 'PlayFabServerAPI_GetTitleNews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserAccountInfo
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetUserAccountInfo final
{
public:
	struct FServerGetUserAccountInfoRequest       Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserAccountInfoResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserAccountInfo) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserAccountInfo");
static_assert(sizeof(PlayFabServerAPI_GetUserAccountInfo) == 0x000048, "Wrong size on PlayFabServerAPI_GetUserAccountInfo");
static_assert(offsetof(PlayFabServerAPI_GetUserAccountInfo, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserAccountInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserAccountInfo, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetUserAccountInfo::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserAccountInfo, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetUserAccountInfo::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserAccountInfo, customData) == 0x000038, "Member 'PlayFabServerAPI_GetUserAccountInfo::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserAccountInfo, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetUserAccountInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserBans
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetUserBans final
{
public:
	struct FServerGetUserBansRequest              Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserBansResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserBans) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserBans");
static_assert(sizeof(PlayFabServerAPI_GetUserBans) == 0x000048, "Wrong size on PlayFabServerAPI_GetUserBans");
static_assert(offsetof(PlayFabServerAPI_GetUserBans, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserBans::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserBans, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetUserBans::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserBans, onFailure) == 0x000028, "Member 'PlayFabServerAPI_GetUserBans::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserBans, customData) == 0x000038, "Member 'PlayFabServerAPI_GetUserBans::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserBans, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetUserBans::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetUserData final
{
public:
	struct FServerGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserData");
static_assert(sizeof(PlayFabServerAPI_GetUserData) == 0x000060, "Wrong size on PlayFabServerAPI_GetUserData");
static_assert(offsetof(PlayFabServerAPI_GetUserData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserData, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetUserData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserData, onFailure) == 0x000040, "Member 'PlayFabServerAPI_GetUserData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserData, customData) == 0x000050, "Member 'PlayFabServerAPI_GetUserData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetUserData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserInternalData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetUserInternalData final
{
public:
	struct FServerGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserInternalData");
static_assert(sizeof(PlayFabServerAPI_GetUserInternalData) == 0x000060, "Wrong size on PlayFabServerAPI_GetUserInternalData");
static_assert(offsetof(PlayFabServerAPI_GetUserInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInternalData, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetUserInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInternalData, onFailure) == 0x000040, "Member 'PlayFabServerAPI_GetUserInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInternalData, customData) == 0x000050, "Member 'PlayFabServerAPI_GetUserInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInternalData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetUserInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_GetUserInventory final
{
public:
	struct FServerGetUserInventoryRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserInventoryResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserInventory) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserInventory");
static_assert(sizeof(PlayFabServerAPI_GetUserInventory) == 0x000050, "Wrong size on PlayFabServerAPI_GetUserInventory");
static_assert(offsetof(PlayFabServerAPI_GetUserInventory, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserInventory::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInventory, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_GetUserInventory::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInventory, onFailure) == 0x000030, "Member 'PlayFabServerAPI_GetUserInventory::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInventory, customData) == 0x000040, "Member 'PlayFabServerAPI_GetUserInventory::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInventory, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_GetUserInventory::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserPublisherData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetUserPublisherData final
{
public:
	struct FServerGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserPublisherData");
static_assert(sizeof(PlayFabServerAPI_GetUserPublisherData) == 0x000060, "Wrong size on PlayFabServerAPI_GetUserPublisherData");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherData, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetUserPublisherData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherData, onFailure) == 0x000040, "Member 'PlayFabServerAPI_GetUserPublisherData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherData, customData) == 0x000050, "Member 'PlayFabServerAPI_GetUserPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetUserPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserPublisherInternalData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetUserPublisherInternalData final
{
public:
	struct FServerGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserPublisherInternalData");
static_assert(sizeof(PlayFabServerAPI_GetUserPublisherInternalData) == 0x000060, "Wrong size on PlayFabServerAPI_GetUserPublisherInternalData");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserPublisherInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherInternalData, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetUserPublisherInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherInternalData, onFailure) == 0x000040, "Member 'PlayFabServerAPI_GetUserPublisherInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherInternalData, customData) == 0x000050, "Member 'PlayFabServerAPI_GetUserPublisherInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherInternalData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetUserPublisherInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserPublisherReadOnlyData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetUserPublisherReadOnlyData final
{
public:
	struct FServerGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_GetUserPublisherReadOnlyData) == 0x000060, "Wrong size on PlayFabServerAPI_GetUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherReadOnlyData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserPublisherReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherReadOnlyData, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetUserPublisherReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherReadOnlyData, onFailure) == 0x000040, "Member 'PlayFabServerAPI_GetUserPublisherReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherReadOnlyData, customData) == 0x000050, "Member 'PlayFabServerAPI_GetUserPublisherReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherReadOnlyData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetUserPublisherReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserReadOnlyData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetUserReadOnlyData final
{
public:
	struct FServerGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_GetUserReadOnlyData) == 0x000060, "Wrong size on PlayFabServerAPI_GetUserReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_GetUserReadOnlyData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserReadOnlyData, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetUserReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserReadOnlyData, onFailure) == 0x000040, "Member 'PlayFabServerAPI_GetUserReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserReadOnlyData, customData) == 0x000050, "Member 'PlayFabServerAPI_GetUserReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserReadOnlyData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetUserReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GrantCharacterToUser
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GrantCharacterToUser final
{
public:
	struct FServerGrantCharacterToUserRequest     Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGrantCharacterToUserResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GrantCharacterToUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_GrantCharacterToUser");
static_assert(sizeof(PlayFabServerAPI_GrantCharacterToUser) == 0x000070, "Wrong size on PlayFabServerAPI_GrantCharacterToUser");
static_assert(offsetof(PlayFabServerAPI_GrantCharacterToUser, Request) == 0x000000, "Member 'PlayFabServerAPI_GrantCharacterToUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantCharacterToUser, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_GrantCharacterToUser::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantCharacterToUser, onFailure) == 0x000050, "Member 'PlayFabServerAPI_GrantCharacterToUser::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantCharacterToUser, customData) == 0x000060, "Member 'PlayFabServerAPI_GrantCharacterToUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantCharacterToUser, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GrantCharacterToUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GrantItemsToCharacter
// 0x0090 (0x0090 - 0x0000)
struct PlayFabServerAPI_GrantItemsToCharacter final
{
public:
	struct FServerGrantItemsToCharacterRequest    Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGrantItemsToCharacterResult& Result, class UObject* customData)> onSuccess; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GrantItemsToCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_GrantItemsToCharacter");
static_assert(sizeof(PlayFabServerAPI_GrantItemsToCharacter) == 0x000090, "Wrong size on PlayFabServerAPI_GrantItemsToCharacter");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToCharacter, Request) == 0x000000, "Member 'PlayFabServerAPI_GrantItemsToCharacter::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToCharacter, onSuccess) == 0x000060, "Member 'PlayFabServerAPI_GrantItemsToCharacter::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToCharacter, onFailure) == 0x000070, "Member 'PlayFabServerAPI_GrantItemsToCharacter::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToCharacter, customData) == 0x000080, "Member 'PlayFabServerAPI_GrantItemsToCharacter::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToCharacter, ReturnValue) == 0x000088, "Member 'PlayFabServerAPI_GrantItemsToCharacter::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GrantItemsToUser
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_GrantItemsToUser final
{
public:
	struct FServerGrantItemsToUserRequest         Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGrantItemsToUserResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GrantItemsToUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_GrantItemsToUser");
static_assert(sizeof(PlayFabServerAPI_GrantItemsToUser) == 0x000080, "Wrong size on PlayFabServerAPI_GrantItemsToUser");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUser, Request) == 0x000000, "Member 'PlayFabServerAPI_GrantItemsToUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUser, onSuccess) == 0x000050, "Member 'PlayFabServerAPI_GrantItemsToUser::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUser, onFailure) == 0x000060, "Member 'PlayFabServerAPI_GrantItemsToUser::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUser, customData) == 0x000070, "Member 'PlayFabServerAPI_GrantItemsToUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUser, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_GrantItemsToUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GrantItemsToUsers
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GrantItemsToUsers final
{
public:
	struct FServerGrantItemsToUsersRequest        Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGrantItemsToUsersResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GrantItemsToUsers) == 0x000008, "Wrong alignment on PlayFabServerAPI_GrantItemsToUsers");
static_assert(sizeof(PlayFabServerAPI_GrantItemsToUsers) == 0x000060, "Wrong size on PlayFabServerAPI_GrantItemsToUsers");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUsers, Request) == 0x000000, "Member 'PlayFabServerAPI_GrantItemsToUsers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUsers, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_GrantItemsToUsers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUsers, onFailure) == 0x000040, "Member 'PlayFabServerAPI_GrantItemsToUsers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUsers, customData) == 0x000050, "Member 'PlayFabServerAPI_GrantItemsToUsers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUsers, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GrantItemsToUsers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LinkNintendoServiceAccount
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_LinkNintendoServiceAccount final
{
public:
	struct FServerLinkNintendoServiceAccountRequest Request;                                         // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResult& Result, class UObject* customData)> onSuccess;   // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LinkNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_LinkNintendoServiceAccount");
static_assert(sizeof(PlayFabServerAPI_LinkNintendoServiceAccount) == 0x000068, "Wrong size on PlayFabServerAPI_LinkNintendoServiceAccount");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoServiceAccount, Request) == 0x000000, "Member 'PlayFabServerAPI_LinkNintendoServiceAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoServiceAccount, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_LinkNintendoServiceAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoServiceAccount, onFailure) == 0x000048, "Member 'PlayFabServerAPI_LinkNintendoServiceAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoServiceAccount, customData) == 0x000058, "Member 'PlayFabServerAPI_LinkNintendoServiceAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoServiceAccount, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_LinkNintendoServiceAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LinkNintendoServiceAccountSubject
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_LinkNintendoServiceAccountSubject final
{
public:
	struct FServerLinkNintendoServiceAccountSubjectRequest Request;                                  // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResult& Result, class UObject* customData)> onSuccess;   // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LinkNintendoServiceAccountSubject) == 0x000008, "Wrong alignment on PlayFabServerAPI_LinkNintendoServiceAccountSubject");
static_assert(sizeof(PlayFabServerAPI_LinkNintendoServiceAccountSubject) == 0x000068, "Wrong size on PlayFabServerAPI_LinkNintendoServiceAccountSubject");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoServiceAccountSubject, Request) == 0x000000, "Member 'PlayFabServerAPI_LinkNintendoServiceAccountSubject::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoServiceAccountSubject, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_LinkNintendoServiceAccountSubject::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoServiceAccountSubject, onFailure) == 0x000048, "Member 'PlayFabServerAPI_LinkNintendoServiceAccountSubject::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoServiceAccountSubject, customData) == 0x000058, "Member 'PlayFabServerAPI_LinkNintendoServiceAccountSubject::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoServiceAccountSubject, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_LinkNintendoServiceAccountSubject::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LinkNintendoSwitchDeviceId
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_LinkNintendoSwitchDeviceId final
{
public:
	struct FServerLinkNintendoSwitchDeviceIdRequest Request;                                         // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerLinkNintendoSwitchDeviceIdResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LinkNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabServerAPI_LinkNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabServerAPI_LinkNintendoSwitchDeviceId) == 0x000068, "Wrong size on PlayFabServerAPI_LinkNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoSwitchDeviceId, Request) == 0x000000, "Member 'PlayFabServerAPI_LinkNintendoSwitchDeviceId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoSwitchDeviceId, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_LinkNintendoSwitchDeviceId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoSwitchDeviceId, onFailure) == 0x000048, "Member 'PlayFabServerAPI_LinkNintendoSwitchDeviceId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoSwitchDeviceId, customData) == 0x000058, "Member 'PlayFabServerAPI_LinkNintendoSwitchDeviceId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkNintendoSwitchDeviceId, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_LinkNintendoSwitchDeviceId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LinkPSNAccount
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_LinkPSNAccount final
{
public:
	struct FServerLinkPSNAccountRequest           Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerLinkPSNAccountResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_LinkPSNAccount");
static_assert(sizeof(PlayFabServerAPI_LinkPSNAccount) == 0x000078, "Wrong size on PlayFabServerAPI_LinkPSNAccount");
static_assert(offsetof(PlayFabServerAPI_LinkPSNAccount, Request) == 0x000000, "Member 'PlayFabServerAPI_LinkPSNAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkPSNAccount, onSuccess) == 0x000048, "Member 'PlayFabServerAPI_LinkPSNAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkPSNAccount, onFailure) == 0x000058, "Member 'PlayFabServerAPI_LinkPSNAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkPSNAccount, customData) == 0x000068, "Member 'PlayFabServerAPI_LinkPSNAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkPSNAccount, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_LinkPSNAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LinkPSNId
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_LinkPSNId final
{
public:
	struct FServerLinkPSNIdRequest                Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerLinkPSNIdResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LinkPSNId) == 0x000008, "Wrong alignment on PlayFabServerAPI_LinkPSNId");
static_assert(sizeof(PlayFabServerAPI_LinkPSNId) == 0x000068, "Wrong size on PlayFabServerAPI_LinkPSNId");
static_assert(offsetof(PlayFabServerAPI_LinkPSNId, Request) == 0x000000, "Member 'PlayFabServerAPI_LinkPSNId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkPSNId, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_LinkPSNId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkPSNId, onFailure) == 0x000048, "Member 'PlayFabServerAPI_LinkPSNId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkPSNId, customData) == 0x000058, "Member 'PlayFabServerAPI_LinkPSNId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkPSNId, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_LinkPSNId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LinkServerCustomId
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_LinkServerCustomId final
{
public:
	struct FServerLinkServerCustomIdRequest       Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerLinkServerCustomIdResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LinkServerCustomId) == 0x000008, "Wrong alignment on PlayFabServerAPI_LinkServerCustomId");
static_assert(sizeof(PlayFabServerAPI_LinkServerCustomId) == 0x000068, "Wrong size on PlayFabServerAPI_LinkServerCustomId");
static_assert(offsetof(PlayFabServerAPI_LinkServerCustomId, Request) == 0x000000, "Member 'PlayFabServerAPI_LinkServerCustomId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkServerCustomId, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_LinkServerCustomId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkServerCustomId, onFailure) == 0x000048, "Member 'PlayFabServerAPI_LinkServerCustomId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkServerCustomId, customData) == 0x000058, "Member 'PlayFabServerAPI_LinkServerCustomId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkServerCustomId, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_LinkServerCustomId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LinkSteamId
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_LinkSteamId final
{
public:
	struct FServerLinkSteamIdRequest              Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerLinkSteamIdResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LinkSteamId) == 0x000008, "Wrong alignment on PlayFabServerAPI_LinkSteamId");
static_assert(sizeof(PlayFabServerAPI_LinkSteamId) == 0x000068, "Wrong size on PlayFabServerAPI_LinkSteamId");
static_assert(offsetof(PlayFabServerAPI_LinkSteamId, Request) == 0x000000, "Member 'PlayFabServerAPI_LinkSteamId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkSteamId, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_LinkSteamId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkSteamId, onFailure) == 0x000048, "Member 'PlayFabServerAPI_LinkSteamId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkSteamId, customData) == 0x000058, "Member 'PlayFabServerAPI_LinkSteamId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkSteamId, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_LinkSteamId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LinkXboxAccount
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_LinkXboxAccount final
{
public:
	struct FServerLinkXboxAccountRequest          Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerLinkXboxAccountResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_LinkXboxAccount");
static_assert(sizeof(PlayFabServerAPI_LinkXboxAccount) == 0x000068, "Wrong size on PlayFabServerAPI_LinkXboxAccount");
static_assert(offsetof(PlayFabServerAPI_LinkXboxAccount, Request) == 0x000000, "Member 'PlayFabServerAPI_LinkXboxAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkXboxAccount, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_LinkXboxAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkXboxAccount, onFailure) == 0x000048, "Member 'PlayFabServerAPI_LinkXboxAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkXboxAccount, customData) == 0x000058, "Member 'PlayFabServerAPI_LinkXboxAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkXboxAccount, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_LinkXboxAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LoginWithServerCustomId
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_LoginWithServerCustomId final
{
public:
	struct FServerLoginWithServerCustomIdRequest  Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LoginWithServerCustomId) == 0x000008, "Wrong alignment on PlayFabServerAPI_LoginWithServerCustomId");
static_assert(sizeof(PlayFabServerAPI_LoginWithServerCustomId) == 0x000070, "Wrong size on PlayFabServerAPI_LoginWithServerCustomId");
static_assert(offsetof(PlayFabServerAPI_LoginWithServerCustomId, Request) == 0x000000, "Member 'PlayFabServerAPI_LoginWithServerCustomId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithServerCustomId, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_LoginWithServerCustomId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithServerCustomId, onFailure) == 0x000050, "Member 'PlayFabServerAPI_LoginWithServerCustomId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithServerCustomId, customData) == 0x000060, "Member 'PlayFabServerAPI_LoginWithServerCustomId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithServerCustomId, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_LoginWithServerCustomId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LoginWithSteamId
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_LoginWithSteamId final
{
public:
	struct FServerLoginWithSteamIdRequest         Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LoginWithSteamId) == 0x000008, "Wrong alignment on PlayFabServerAPI_LoginWithSteamId");
static_assert(sizeof(PlayFabServerAPI_LoginWithSteamId) == 0x000060, "Wrong size on PlayFabServerAPI_LoginWithSteamId");
static_assert(offsetof(PlayFabServerAPI_LoginWithSteamId, Request) == 0x000000, "Member 'PlayFabServerAPI_LoginWithSteamId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithSteamId, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_LoginWithSteamId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithSteamId, onFailure) == 0x000040, "Member 'PlayFabServerAPI_LoginWithSteamId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithSteamId, customData) == 0x000050, "Member 'PlayFabServerAPI_LoginWithSteamId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithSteamId, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_LoginWithSteamId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LoginWithXbox
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_LoginWithXbox final
{
public:
	struct FServerLoginWithXboxRequest            Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LoginWithXbox) == 0x000008, "Wrong alignment on PlayFabServerAPI_LoginWithXbox");
static_assert(sizeof(PlayFabServerAPI_LoginWithXbox) == 0x000060, "Wrong size on PlayFabServerAPI_LoginWithXbox");
static_assert(offsetof(PlayFabServerAPI_LoginWithXbox, Request) == 0x000000, "Member 'PlayFabServerAPI_LoginWithXbox::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXbox, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_LoginWithXbox::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXbox, onFailure) == 0x000040, "Member 'PlayFabServerAPI_LoginWithXbox::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXbox, customData) == 0x000050, "Member 'PlayFabServerAPI_LoginWithXbox::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXbox, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_LoginWithXbox::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LoginWithXboxId
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_LoginWithXboxId final
{
public:
	struct FServerLoginWithXboxIdRequest          Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LoginWithXboxId) == 0x000008, "Wrong alignment on PlayFabServerAPI_LoginWithXboxId");
static_assert(sizeof(PlayFabServerAPI_LoginWithXboxId) == 0x000070, "Wrong size on PlayFabServerAPI_LoginWithXboxId");
static_assert(offsetof(PlayFabServerAPI_LoginWithXboxId, Request) == 0x000000, "Member 'PlayFabServerAPI_LoginWithXboxId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXboxId, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_LoginWithXboxId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXboxId, onFailure) == 0x000050, "Member 'PlayFabServerAPI_LoginWithXboxId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXboxId, customData) == 0x000060, "Member 'PlayFabServerAPI_LoginWithXboxId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXboxId, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_LoginWithXboxId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.ModifyItemUses
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_ModifyItemUses final
{
public:
	struct FServerModifyItemUsesRequest           Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerModifyItemUsesResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_ModifyItemUses) == 0x000008, "Wrong alignment on PlayFabServerAPI_ModifyItemUses");
static_assert(sizeof(PlayFabServerAPI_ModifyItemUses) == 0x000068, "Wrong size on PlayFabServerAPI_ModifyItemUses");
static_assert(offsetof(PlayFabServerAPI_ModifyItemUses, Request) == 0x000000, "Member 'PlayFabServerAPI_ModifyItemUses::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ModifyItemUses, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_ModifyItemUses::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ModifyItemUses, onFailure) == 0x000048, "Member 'PlayFabServerAPI_ModifyItemUses::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ModifyItemUses, customData) == 0x000058, "Member 'PlayFabServerAPI_ModifyItemUses::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ModifyItemUses, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_ModifyItemUses::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.MoveItemToCharacterFromCharacter
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_MoveItemToCharacterFromCharacter final
{
public:
	struct FServerMoveItemToCharacterFromCharacterRequest Request;                                   // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerMoveItemToCharacterFromCharacterResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_MoveItemToCharacterFromCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_MoveItemToCharacterFromCharacter");
static_assert(sizeof(PlayFabServerAPI_MoveItemToCharacterFromCharacter) == 0x000078, "Wrong size on PlayFabServerAPI_MoveItemToCharacterFromCharacter");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromCharacter, Request) == 0x000000, "Member 'PlayFabServerAPI_MoveItemToCharacterFromCharacter::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromCharacter, onSuccess) == 0x000048, "Member 'PlayFabServerAPI_MoveItemToCharacterFromCharacter::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromCharacter, onFailure) == 0x000058, "Member 'PlayFabServerAPI_MoveItemToCharacterFromCharacter::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromCharacter, customData) == 0x000068, "Member 'PlayFabServerAPI_MoveItemToCharacterFromCharacter::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromCharacter, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_MoveItemToCharacterFromCharacter::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.MoveItemToCharacterFromUser
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_MoveItemToCharacterFromUser final
{
public:
	struct FServerMoveItemToCharacterFromUserRequest Request;                                        // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerMoveItemToCharacterFromUserResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_MoveItemToCharacterFromUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_MoveItemToCharacterFromUser");
static_assert(sizeof(PlayFabServerAPI_MoveItemToCharacterFromUser) == 0x000068, "Wrong size on PlayFabServerAPI_MoveItemToCharacterFromUser");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromUser, Request) == 0x000000, "Member 'PlayFabServerAPI_MoveItemToCharacterFromUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromUser, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_MoveItemToCharacterFromUser::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromUser, onFailure) == 0x000048, "Member 'PlayFabServerAPI_MoveItemToCharacterFromUser::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromUser, customData) == 0x000058, "Member 'PlayFabServerAPI_MoveItemToCharacterFromUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromUser, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_MoveItemToCharacterFromUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.MoveItemToUserFromCharacter
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_MoveItemToUserFromCharacter final
{
public:
	struct FServerMoveItemToUserFromCharacterRequest Request;                                        // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerMoveItemToUserFromCharacterResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_MoveItemToUserFromCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_MoveItemToUserFromCharacter");
static_assert(sizeof(PlayFabServerAPI_MoveItemToUserFromCharacter) == 0x000068, "Wrong size on PlayFabServerAPI_MoveItemToUserFromCharacter");
static_assert(offsetof(PlayFabServerAPI_MoveItemToUserFromCharacter, Request) == 0x000000, "Member 'PlayFabServerAPI_MoveItemToUserFromCharacter::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToUserFromCharacter, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_MoveItemToUserFromCharacter::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToUserFromCharacter, onFailure) == 0x000048, "Member 'PlayFabServerAPI_MoveItemToUserFromCharacter::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToUserFromCharacter, customData) == 0x000058, "Member 'PlayFabServerAPI_MoveItemToUserFromCharacter::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToUserFromCharacter, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_MoveItemToUserFromCharacter::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RedeemCoupon
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_RedeemCoupon final
{
public:
	struct FServerRedeemCouponRequest             Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRedeemCouponResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RedeemCoupon) == 0x000008, "Wrong alignment on PlayFabServerAPI_RedeemCoupon");
static_assert(sizeof(PlayFabServerAPI_RedeemCoupon) == 0x000080, "Wrong size on PlayFabServerAPI_RedeemCoupon");
static_assert(offsetof(PlayFabServerAPI_RedeemCoupon, Request) == 0x000000, "Member 'PlayFabServerAPI_RedeemCoupon::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RedeemCoupon, onSuccess) == 0x000050, "Member 'PlayFabServerAPI_RedeemCoupon::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RedeemCoupon, onFailure) == 0x000060, "Member 'PlayFabServerAPI_RedeemCoupon::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RedeemCoupon, customData) == 0x000070, "Member 'PlayFabServerAPI_RedeemCoupon::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RedeemCoupon, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_RedeemCoupon::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RemoveFriend
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_RemoveFriend final
{
public:
	struct FServerRemoveFriendRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RemoveFriend) == 0x000008, "Wrong alignment on PlayFabServerAPI_RemoveFriend");
static_assert(sizeof(PlayFabServerAPI_RemoveFriend) == 0x000058, "Wrong size on PlayFabServerAPI_RemoveFriend");
static_assert(offsetof(PlayFabServerAPI_RemoveFriend, Request) == 0x000000, "Member 'PlayFabServerAPI_RemoveFriend::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveFriend, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_RemoveFriend::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveFriend, onFailure) == 0x000038, "Member 'PlayFabServerAPI_RemoveFriend::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveFriend, customData) == 0x000048, "Member 'PlayFabServerAPI_RemoveFriend::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveFriend, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_RemoveFriend::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RemoveGenericID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_RemoveGenericID final
{
public:
	struct FServerRemoveGenericIDRequest          Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResult& Result, class UObject* customData)> onSuccess;   // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RemoveGenericID) == 0x000008, "Wrong alignment on PlayFabServerAPI_RemoveGenericID");
static_assert(sizeof(PlayFabServerAPI_RemoveGenericID) == 0x000050, "Wrong size on PlayFabServerAPI_RemoveGenericID");
static_assert(offsetof(PlayFabServerAPI_RemoveGenericID, Request) == 0x000000, "Member 'PlayFabServerAPI_RemoveGenericID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveGenericID, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_RemoveGenericID::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveGenericID, onFailure) == 0x000030, "Member 'PlayFabServerAPI_RemoveGenericID::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveGenericID, customData) == 0x000040, "Member 'PlayFabServerAPI_RemoveGenericID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveGenericID, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_RemoveGenericID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RemovePlayerTag
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_RemovePlayerTag final
{
public:
	struct FServerRemovePlayerTagRequest          Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRemovePlayerTagResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RemovePlayerTag) == 0x000008, "Wrong alignment on PlayFabServerAPI_RemovePlayerTag");
static_assert(sizeof(PlayFabServerAPI_RemovePlayerTag) == 0x000060, "Wrong size on PlayFabServerAPI_RemovePlayerTag");
static_assert(offsetof(PlayFabServerAPI_RemovePlayerTag, Request) == 0x000000, "Member 'PlayFabServerAPI_RemovePlayerTag::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemovePlayerTag, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_RemovePlayerTag::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemovePlayerTag, onFailure) == 0x000040, "Member 'PlayFabServerAPI_RemovePlayerTag::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemovePlayerTag, customData) == 0x000050, "Member 'PlayFabServerAPI_RemovePlayerTag::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemovePlayerTag, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_RemovePlayerTag::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RemoveSharedGroupMembers
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_RemoveSharedGroupMembers final
{
public:
	struct FServerRemoveSharedGroupMembersRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRemoveSharedGroupMembersResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RemoveSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabServerAPI_RemoveSharedGroupMembers");
static_assert(sizeof(PlayFabServerAPI_RemoveSharedGroupMembers) == 0x000058, "Wrong size on PlayFabServerAPI_RemoveSharedGroupMembers");
static_assert(offsetof(PlayFabServerAPI_RemoveSharedGroupMembers, Request) == 0x000000, "Member 'PlayFabServerAPI_RemoveSharedGroupMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveSharedGroupMembers, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_RemoveSharedGroupMembers::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveSharedGroupMembers, onFailure) == 0x000038, "Member 'PlayFabServerAPI_RemoveSharedGroupMembers::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveSharedGroupMembers, customData) == 0x000048, "Member 'PlayFabServerAPI_RemoveSharedGroupMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveSharedGroupMembers, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_RemoveSharedGroupMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.ReportPlayer
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_ReportPlayer final
{
public:
	struct FServerReportPlayerServerRequest       Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerReportPlayerServerResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_ReportPlayer) == 0x000008, "Wrong alignment on PlayFabServerAPI_ReportPlayer");
static_assert(sizeof(PlayFabServerAPI_ReportPlayer) == 0x000070, "Wrong size on PlayFabServerAPI_ReportPlayer");
static_assert(offsetof(PlayFabServerAPI_ReportPlayer, Request) == 0x000000, "Member 'PlayFabServerAPI_ReportPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ReportPlayer, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_ReportPlayer::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ReportPlayer, onFailure) == 0x000050, "Member 'PlayFabServerAPI_ReportPlayer::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ReportPlayer, customData) == 0x000060, "Member 'PlayFabServerAPI_ReportPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ReportPlayer, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_ReportPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RevokeAllBansForUser
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_RevokeAllBansForUser final
{
public:
	struct FServerRevokeAllBansForUserRequest     Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRevokeAllBansForUserResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RevokeAllBansForUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_RevokeAllBansForUser");
static_assert(sizeof(PlayFabServerAPI_RevokeAllBansForUser) == 0x000048, "Wrong size on PlayFabServerAPI_RevokeAllBansForUser");
static_assert(offsetof(PlayFabServerAPI_RevokeAllBansForUser, Request) == 0x000000, "Member 'PlayFabServerAPI_RevokeAllBansForUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeAllBansForUser, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_RevokeAllBansForUser::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeAllBansForUser, onFailure) == 0x000028, "Member 'PlayFabServerAPI_RevokeAllBansForUser::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeAllBansForUser, customData) == 0x000038, "Member 'PlayFabServerAPI_RevokeAllBansForUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeAllBansForUser, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_RevokeAllBansForUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RevokeBans
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_RevokeBans final
{
public:
	struct FServerRevokeBansRequest               Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRevokeBansResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RevokeBans) == 0x000008, "Wrong alignment on PlayFabServerAPI_RevokeBans");
static_assert(sizeof(PlayFabServerAPI_RevokeBans) == 0x000048, "Wrong size on PlayFabServerAPI_RevokeBans");
static_assert(offsetof(PlayFabServerAPI_RevokeBans, Request) == 0x000000, "Member 'PlayFabServerAPI_RevokeBans::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeBans, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_RevokeBans::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeBans, onFailure) == 0x000028, "Member 'PlayFabServerAPI_RevokeBans::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeBans, customData) == 0x000038, "Member 'PlayFabServerAPI_RevokeBans::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeBans, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_RevokeBans::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RevokeInventoryItem
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_RevokeInventoryItem final
{
public:
	struct FServerRevokeInventoryItemRequest      Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRevokeInventoryResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RevokeInventoryItem) == 0x000008, "Wrong alignment on PlayFabServerAPI_RevokeInventoryItem");
static_assert(sizeof(PlayFabServerAPI_RevokeInventoryItem) == 0x000068, "Wrong size on PlayFabServerAPI_RevokeInventoryItem");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItem, Request) == 0x000000, "Member 'PlayFabServerAPI_RevokeInventoryItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItem, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_RevokeInventoryItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItem, onFailure) == 0x000048, "Member 'PlayFabServerAPI_RevokeInventoryItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItem, customData) == 0x000058, "Member 'PlayFabServerAPI_RevokeInventoryItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItem, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_RevokeInventoryItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RevokeInventoryItems
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_RevokeInventoryItems final
{
public:
	struct FServerRevokeInventoryItemsRequest     Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRevokeInventoryItemsResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RevokeInventoryItems) == 0x000008, "Wrong alignment on PlayFabServerAPI_RevokeInventoryItems");
static_assert(sizeof(PlayFabServerAPI_RevokeInventoryItems) == 0x000048, "Wrong size on PlayFabServerAPI_RevokeInventoryItems");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItems, Request) == 0x000000, "Member 'PlayFabServerAPI_RevokeInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItems, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_RevokeInventoryItems::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItems, onFailure) == 0x000028, "Member 'PlayFabServerAPI_RevokeInventoryItems::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItems, customData) == 0x000038, "Member 'PlayFabServerAPI_RevokeInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItems, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_RevokeInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SavePushNotificationTemplate
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_SavePushNotificationTemplate final
{
public:
	struct FServerSavePushNotificationTemplateRequest Request;                                       // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSavePushNotificationTemplateResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SavePushNotificationTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_SavePushNotificationTemplate");
static_assert(sizeof(PlayFabServerAPI_SavePushNotificationTemplate) == 0x000080, "Wrong size on PlayFabServerAPI_SavePushNotificationTemplate");
static_assert(offsetof(PlayFabServerAPI_SavePushNotificationTemplate, Request) == 0x000000, "Member 'PlayFabServerAPI_SavePushNotificationTemplate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SavePushNotificationTemplate, onSuccess) == 0x000050, "Member 'PlayFabServerAPI_SavePushNotificationTemplate::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SavePushNotificationTemplate, onFailure) == 0x000060, "Member 'PlayFabServerAPI_SavePushNotificationTemplate::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SavePushNotificationTemplate, customData) == 0x000070, "Member 'PlayFabServerAPI_SavePushNotificationTemplate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SavePushNotificationTemplate, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_SavePushNotificationTemplate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SendCustomAccountRecoveryEmail
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_SendCustomAccountRecoveryEmail final
{
public:
	struct FServerSendCustomAccountRecoveryEmailRequest Request;                                     // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSendCustomAccountRecoveryEmailResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SendCustomAccountRecoveryEmail) == 0x000008, "Wrong alignment on PlayFabServerAPI_SendCustomAccountRecoveryEmail");
static_assert(sizeof(PlayFabServerAPI_SendCustomAccountRecoveryEmail) == 0x000070, "Wrong size on PlayFabServerAPI_SendCustomAccountRecoveryEmail");
static_assert(offsetof(PlayFabServerAPI_SendCustomAccountRecoveryEmail, Request) == 0x000000, "Member 'PlayFabServerAPI_SendCustomAccountRecoveryEmail::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendCustomAccountRecoveryEmail, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_SendCustomAccountRecoveryEmail::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendCustomAccountRecoveryEmail, onFailure) == 0x000050, "Member 'PlayFabServerAPI_SendCustomAccountRecoveryEmail::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendCustomAccountRecoveryEmail, customData) == 0x000060, "Member 'PlayFabServerAPI_SendCustomAccountRecoveryEmail::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendCustomAccountRecoveryEmail, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_SendCustomAccountRecoveryEmail::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SendEmailFromTemplate
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_SendEmailFromTemplate final
{
public:
	struct FServerSendEmailFromTemplateRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSendEmailFromTemplateResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SendEmailFromTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_SendEmailFromTemplate");
static_assert(sizeof(PlayFabServerAPI_SendEmailFromTemplate) == 0x000060, "Wrong size on PlayFabServerAPI_SendEmailFromTemplate");
static_assert(offsetof(PlayFabServerAPI_SendEmailFromTemplate, Request) == 0x000000, "Member 'PlayFabServerAPI_SendEmailFromTemplate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendEmailFromTemplate, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_SendEmailFromTemplate::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendEmailFromTemplate, onFailure) == 0x000040, "Member 'PlayFabServerAPI_SendEmailFromTemplate::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendEmailFromTemplate, customData) == 0x000050, "Member 'PlayFabServerAPI_SendEmailFromTemplate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendEmailFromTemplate, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_SendEmailFromTemplate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SendPushNotification
// 0x0098 (0x0098 - 0x0000)
struct PlayFabServerAPI_SendPushNotification final
{
public:
	struct FServerSendPushNotificationRequest     Request;                                           // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSendPushNotificationResult& Result, class UObject* customData)> onSuccess; // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SendPushNotification) == 0x000008, "Wrong alignment on PlayFabServerAPI_SendPushNotification");
static_assert(sizeof(PlayFabServerAPI_SendPushNotification) == 0x000098, "Wrong size on PlayFabServerAPI_SendPushNotification");
static_assert(offsetof(PlayFabServerAPI_SendPushNotification, Request) == 0x000000, "Member 'PlayFabServerAPI_SendPushNotification::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotification, onSuccess) == 0x000068, "Member 'PlayFabServerAPI_SendPushNotification::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotification, onFailure) == 0x000078, "Member 'PlayFabServerAPI_SendPushNotification::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotification, customData) == 0x000088, "Member 'PlayFabServerAPI_SendPushNotification::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotification, ReturnValue) == 0x000090, "Member 'PlayFabServerAPI_SendPushNotification::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SendPushNotificationFromTemplate
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_SendPushNotificationFromTemplate final
{
public:
	struct FServerSendPushNotificationFromTemplateRequest Request;                                   // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSendPushNotificationResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SendPushNotificationFromTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_SendPushNotificationFromTemplate");
static_assert(sizeof(PlayFabServerAPI_SendPushNotificationFromTemplate) == 0x000060, "Wrong size on PlayFabServerAPI_SendPushNotificationFromTemplate");
static_assert(offsetof(PlayFabServerAPI_SendPushNotificationFromTemplate, Request) == 0x000000, "Member 'PlayFabServerAPI_SendPushNotificationFromTemplate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotificationFromTemplate, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_SendPushNotificationFromTemplate::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotificationFromTemplate, onFailure) == 0x000040, "Member 'PlayFabServerAPI_SendPushNotificationFromTemplate::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotificationFromTemplate, customData) == 0x000050, "Member 'PlayFabServerAPI_SendPushNotificationFromTemplate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotificationFromTemplate, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_SendPushNotificationFromTemplate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetFriendTags
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_SetFriendTags final
{
public:
	struct FServerSetFriendTagsRequest            Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetFriendTags) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetFriendTags");
static_assert(sizeof(PlayFabServerAPI_SetFriendTags) == 0x000068, "Wrong size on PlayFabServerAPI_SetFriendTags");
static_assert(offsetof(PlayFabServerAPI_SetFriendTags, Request) == 0x000000, "Member 'PlayFabServerAPI_SetFriendTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetFriendTags, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_SetFriendTags::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetFriendTags, onFailure) == 0x000048, "Member 'PlayFabServerAPI_SetFriendTags::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetFriendTags, customData) == 0x000058, "Member 'PlayFabServerAPI_SetFriendTags::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetFriendTags, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_SetFriendTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetPlayerSecret
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_SetPlayerSecret final
{
public:
	struct FServerSetPlayerSecretRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSetPlayerSecretResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetPlayerSecret) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetPlayerSecret");
static_assert(sizeof(PlayFabServerAPI_SetPlayerSecret) == 0x000058, "Wrong size on PlayFabServerAPI_SetPlayerSecret");
static_assert(offsetof(PlayFabServerAPI_SetPlayerSecret, Request) == 0x000000, "Member 'PlayFabServerAPI_SetPlayerSecret::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPlayerSecret, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_SetPlayerSecret::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPlayerSecret, onFailure) == 0x000038, "Member 'PlayFabServerAPI_SetPlayerSecret::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPlayerSecret, customData) == 0x000048, "Member 'PlayFabServerAPI_SetPlayerSecret::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPlayerSecret, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_SetPlayerSecret::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetPublisherData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_SetPublisherData final
{
public:
	struct FServerSetPublisherDataRequest         Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSetPublisherDataResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetPublisherData");
static_assert(sizeof(PlayFabServerAPI_SetPublisherData) == 0x000058, "Wrong size on PlayFabServerAPI_SetPublisherData");
static_assert(offsetof(PlayFabServerAPI_SetPublisherData, Request) == 0x000000, "Member 'PlayFabServerAPI_SetPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPublisherData, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_SetPublisherData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPublisherData, onFailure) == 0x000038, "Member 'PlayFabServerAPI_SetPublisherData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPublisherData, customData) == 0x000048, "Member 'PlayFabServerAPI_SetPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPublisherData, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_SetPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetTitleData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_SetTitleData final
{
public:
	struct FServerSetTitleDataRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSetTitleDataResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetTitleData) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetTitleData");
static_assert(sizeof(PlayFabServerAPI_SetTitleData) == 0x000058, "Wrong size on PlayFabServerAPI_SetTitleData");
static_assert(offsetof(PlayFabServerAPI_SetTitleData, Request) == 0x000000, "Member 'PlayFabServerAPI_SetTitleData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleData, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_SetTitleData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleData, onFailure) == 0x000038, "Member 'PlayFabServerAPI_SetTitleData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleData, customData) == 0x000048, "Member 'PlayFabServerAPI_SetTitleData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleData, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_SetTitleData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetTitleInternalData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_SetTitleInternalData final
{
public:
	struct FServerSetTitleDataRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSetTitleDataResult& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetTitleInternalData");
static_assert(sizeof(PlayFabServerAPI_SetTitleInternalData) == 0x000058, "Wrong size on PlayFabServerAPI_SetTitleInternalData");
static_assert(offsetof(PlayFabServerAPI_SetTitleInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_SetTitleInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleInternalData, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_SetTitleInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleInternalData, onFailure) == 0x000038, "Member 'PlayFabServerAPI_SetTitleInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleInternalData, customData) == 0x000048, "Member 'PlayFabServerAPI_SetTitleInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleInternalData, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_SetTitleInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SubtractCharacterVirtualCurrency
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_SubtractCharacterVirtualCurrency final
{
public:
	struct FServerSubtractCharacterVirtualCurrencyRequest Request;                                   // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerModifyCharacterVirtualCurrencyResult& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SubtractCharacterVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_SubtractCharacterVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_SubtractCharacterVirtualCurrency) == 0x000078, "Wrong size on PlayFabServerAPI_SubtractCharacterVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_SubtractCharacterVirtualCurrency, Request) == 0x000000, "Member 'PlayFabServerAPI_SubtractCharacterVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractCharacterVirtualCurrency, onSuccess) == 0x000048, "Member 'PlayFabServerAPI_SubtractCharacterVirtualCurrency::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractCharacterVirtualCurrency, onFailure) == 0x000058, "Member 'PlayFabServerAPI_SubtractCharacterVirtualCurrency::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractCharacterVirtualCurrency, customData) == 0x000068, "Member 'PlayFabServerAPI_SubtractCharacterVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractCharacterVirtualCurrency, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_SubtractCharacterVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SubtractUserVirtualCurrency
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_SubtractUserVirtualCurrency final
{
public:
	struct FServerSubtractUserVirtualCurrencyRequest Request;                                        // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerModifyUserVirtualCurrencyResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SubtractUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_SubtractUserVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_SubtractUserVirtualCurrency) == 0x000068, "Wrong size on PlayFabServerAPI_SubtractUserVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_SubtractUserVirtualCurrency, Request) == 0x000000, "Member 'PlayFabServerAPI_SubtractUserVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractUserVirtualCurrency, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_SubtractUserVirtualCurrency::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractUserVirtualCurrency, onFailure) == 0x000048, "Member 'PlayFabServerAPI_SubtractUserVirtualCurrency::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractUserVirtualCurrency, customData) == 0x000058, "Member 'PlayFabServerAPI_SubtractUserVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractUserVirtualCurrency, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_SubtractUserVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlinkNintendoServiceAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_UnlinkNintendoServiceAccount final
{
public:
	struct FServerUnlinkNintendoServiceAccountRequest Request;                                       // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlinkNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlinkNintendoServiceAccount");
static_assert(sizeof(PlayFabServerAPI_UnlinkNintendoServiceAccount) == 0x000050, "Wrong size on PlayFabServerAPI_UnlinkNintendoServiceAccount");
static_assert(offsetof(PlayFabServerAPI_UnlinkNintendoServiceAccount, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlinkNintendoServiceAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkNintendoServiceAccount, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_UnlinkNintendoServiceAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkNintendoServiceAccount, onFailure) == 0x000030, "Member 'PlayFabServerAPI_UnlinkNintendoServiceAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkNintendoServiceAccount, customData) == 0x000040, "Member 'PlayFabServerAPI_UnlinkNintendoServiceAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkNintendoServiceAccount, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_UnlinkNintendoServiceAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlinkNintendoSwitchDeviceId
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_UnlinkNintendoSwitchDeviceId final
{
public:
	struct FServerUnlinkNintendoSwitchDeviceIdRequest Request;                                       // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUnlinkNintendoSwitchDeviceIdResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlinkNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlinkNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabServerAPI_UnlinkNintendoSwitchDeviceId) == 0x000060, "Wrong size on PlayFabServerAPI_UnlinkNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabServerAPI_UnlinkNintendoSwitchDeviceId, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlinkNintendoSwitchDeviceId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkNintendoSwitchDeviceId, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_UnlinkNintendoSwitchDeviceId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkNintendoSwitchDeviceId, onFailure) == 0x000040, "Member 'PlayFabServerAPI_UnlinkNintendoSwitchDeviceId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkNintendoSwitchDeviceId, customData) == 0x000050, "Member 'PlayFabServerAPI_UnlinkNintendoSwitchDeviceId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkNintendoSwitchDeviceId, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_UnlinkNintendoSwitchDeviceId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlinkPSNAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_UnlinkPSNAccount final
{
public:
	struct FServerUnlinkPSNAccountRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUnlinkPSNAccountResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlinkPSNAccount");
static_assert(sizeof(PlayFabServerAPI_UnlinkPSNAccount) == 0x000050, "Wrong size on PlayFabServerAPI_UnlinkPSNAccount");
static_assert(offsetof(PlayFabServerAPI_UnlinkPSNAccount, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlinkPSNAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkPSNAccount, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_UnlinkPSNAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkPSNAccount, onFailure) == 0x000030, "Member 'PlayFabServerAPI_UnlinkPSNAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkPSNAccount, customData) == 0x000040, "Member 'PlayFabServerAPI_UnlinkPSNAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkPSNAccount, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_UnlinkPSNAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlinkServerCustomId
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_UnlinkServerCustomId final
{
public:
	struct FServerUnlinkServerCustomIdRequest     Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUnlinkServerCustomIdResult& Result, class UObject* customData)> onSuccess; // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlinkServerCustomId) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlinkServerCustomId");
static_assert(sizeof(PlayFabServerAPI_UnlinkServerCustomId) == 0x000060, "Wrong size on PlayFabServerAPI_UnlinkServerCustomId");
static_assert(offsetof(PlayFabServerAPI_UnlinkServerCustomId, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlinkServerCustomId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkServerCustomId, onSuccess) == 0x000030, "Member 'PlayFabServerAPI_UnlinkServerCustomId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkServerCustomId, onFailure) == 0x000040, "Member 'PlayFabServerAPI_UnlinkServerCustomId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkServerCustomId, customData) == 0x000050, "Member 'PlayFabServerAPI_UnlinkServerCustomId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkServerCustomId, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_UnlinkServerCustomId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlinkSteamId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_UnlinkSteamId final
{
public:
	struct FServerUnlinkSteamIdRequest            Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUnlinkSteamIdResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlinkSteamId) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlinkSteamId");
static_assert(sizeof(PlayFabServerAPI_UnlinkSteamId) == 0x000050, "Wrong size on PlayFabServerAPI_UnlinkSteamId");
static_assert(offsetof(PlayFabServerAPI_UnlinkSteamId, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlinkSteamId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkSteamId, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_UnlinkSteamId::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkSteamId, onFailure) == 0x000030, "Member 'PlayFabServerAPI_UnlinkSteamId::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkSteamId, customData) == 0x000040, "Member 'PlayFabServerAPI_UnlinkSteamId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkSteamId, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_UnlinkSteamId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlinkXboxAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_UnlinkXboxAccount final
{
public:
	struct FServerUnlinkXboxAccountRequest        Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUnlinkXboxAccountResult& Result, class UObject* customData)> onSuccess; // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlinkXboxAccount");
static_assert(sizeof(PlayFabServerAPI_UnlinkXboxAccount) == 0x000050, "Wrong size on PlayFabServerAPI_UnlinkXboxAccount");
static_assert(offsetof(PlayFabServerAPI_UnlinkXboxAccount, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlinkXboxAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkXboxAccount, onSuccess) == 0x000020, "Member 'PlayFabServerAPI_UnlinkXboxAccount::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkXboxAccount, onFailure) == 0x000030, "Member 'PlayFabServerAPI_UnlinkXboxAccount::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkXboxAccount, customData) == 0x000040, "Member 'PlayFabServerAPI_UnlinkXboxAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkXboxAccount, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_UnlinkXboxAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlockContainerInstance
// 0x0090 (0x0090 - 0x0000)
struct PlayFabServerAPI_UnlockContainerInstance final
{
public:
	struct FServerUnlockContainerInstanceRequest  Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUnlockContainerItemResult& Result, class UObject* customData)> onSuccess; // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlockContainerInstance) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlockContainerInstance");
static_assert(sizeof(PlayFabServerAPI_UnlockContainerInstance) == 0x000090, "Wrong size on PlayFabServerAPI_UnlockContainerInstance");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerInstance, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlockContainerInstance::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerInstance, onSuccess) == 0x000060, "Member 'PlayFabServerAPI_UnlockContainerInstance::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerInstance, onFailure) == 0x000070, "Member 'PlayFabServerAPI_UnlockContainerInstance::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerInstance, customData) == 0x000080, "Member 'PlayFabServerAPI_UnlockContainerInstance::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerInstance, ReturnValue) == 0x000088, "Member 'PlayFabServerAPI_UnlockContainerInstance::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlockContainerItem
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_UnlockContainerItem final
{
public:
	struct FServerUnlockContainerItemRequest      Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUnlockContainerItemResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlockContainerItem) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlockContainerItem");
static_assert(sizeof(PlayFabServerAPI_UnlockContainerItem) == 0x000080, "Wrong size on PlayFabServerAPI_UnlockContainerItem");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerItem, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlockContainerItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerItem, onSuccess) == 0x000050, "Member 'PlayFabServerAPI_UnlockContainerItem::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerItem, onFailure) == 0x000060, "Member 'PlayFabServerAPI_UnlockContainerItem::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerItem, customData) == 0x000070, "Member 'PlayFabServerAPI_UnlockContainerItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerItem, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_UnlockContainerItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateAvatarUrl
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_UpdateAvatarUrl final
{
public:
	struct FServerUpdateAvatarUrlRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateAvatarUrl) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateAvatarUrl");
static_assert(sizeof(PlayFabServerAPI_UpdateAvatarUrl) == 0x000058, "Wrong size on PlayFabServerAPI_UpdateAvatarUrl");
static_assert(offsetof(PlayFabServerAPI_UpdateAvatarUrl, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateAvatarUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateAvatarUrl, onSuccess) == 0x000028, "Member 'PlayFabServerAPI_UpdateAvatarUrl::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateAvatarUrl, onFailure) == 0x000038, "Member 'PlayFabServerAPI_UpdateAvatarUrl::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateAvatarUrl, customData) == 0x000048, "Member 'PlayFabServerAPI_UpdateAvatarUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateAvatarUrl, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_UpdateAvatarUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateBans
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_UpdateBans final
{
public:
	struct FServerUpdateBansRequest               Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateBansResult& Result, class UObject* customData)> onSuccess; // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateBans) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateBans");
static_assert(sizeof(PlayFabServerAPI_UpdateBans) == 0x000048, "Wrong size on PlayFabServerAPI_UpdateBans");
static_assert(offsetof(PlayFabServerAPI_UpdateBans, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateBans::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateBans, onSuccess) == 0x000018, "Member 'PlayFabServerAPI_UpdateBans::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateBans, onFailure) == 0x000028, "Member 'PlayFabServerAPI_UpdateBans::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateBans, customData) == 0x000038, "Member 'PlayFabServerAPI_UpdateBans::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateBans, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_UpdateBans::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateCharacterData
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_UpdateCharacterData final
{
public:
	struct FServerUpdateCharacterDataRequest      Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateCharacterData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateCharacterData");
static_assert(sizeof(PlayFabServerAPI_UpdateCharacterData) == 0x000080, "Wrong size on PlayFabServerAPI_UpdateCharacterData");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateCharacterData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterData, onSuccess) == 0x000050, "Member 'PlayFabServerAPI_UpdateCharacterData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterData, onFailure) == 0x000060, "Member 'PlayFabServerAPI_UpdateCharacterData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterData, customData) == 0x000070, "Member 'PlayFabServerAPI_UpdateCharacterData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterData, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_UpdateCharacterData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateCharacterInternalData
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_UpdateCharacterInternalData final
{
public:
	struct FServerUpdateCharacterDataRequest      Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateCharacterInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateCharacterInternalData");
static_assert(sizeof(PlayFabServerAPI_UpdateCharacterInternalData) == 0x000080, "Wrong size on PlayFabServerAPI_UpdateCharacterInternalData");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateCharacterInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterInternalData, onSuccess) == 0x000050, "Member 'PlayFabServerAPI_UpdateCharacterInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterInternalData, onFailure) == 0x000060, "Member 'PlayFabServerAPI_UpdateCharacterInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterInternalData, customData) == 0x000070, "Member 'PlayFabServerAPI_UpdateCharacterInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterInternalData, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_UpdateCharacterInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateCharacterReadOnlyData
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_UpdateCharacterReadOnlyData final
{
public:
	struct FServerUpdateCharacterDataRequest      Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* customData)> onSuccess; // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateCharacterReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateCharacterReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_UpdateCharacterReadOnlyData) == 0x000080, "Wrong size on PlayFabServerAPI_UpdateCharacterReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterReadOnlyData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateCharacterReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterReadOnlyData, onSuccess) == 0x000050, "Member 'PlayFabServerAPI_UpdateCharacterReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterReadOnlyData, onFailure) == 0x000060, "Member 'PlayFabServerAPI_UpdateCharacterReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterReadOnlyData, customData) == 0x000070, "Member 'PlayFabServerAPI_UpdateCharacterReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterReadOnlyData, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_UpdateCharacterReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateCharacterStatistics
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_UpdateCharacterStatistics final
{
public:
	struct FServerUpdateCharacterStatisticsRequest Request;                                          // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateCharacterStatisticsResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateCharacterStatistics");
static_assert(sizeof(PlayFabServerAPI_UpdateCharacterStatistics) == 0x000068, "Wrong size on PlayFabServerAPI_UpdateCharacterStatistics");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterStatistics, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateCharacterStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterStatistics, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_UpdateCharacterStatistics::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterStatistics, onFailure) == 0x000048, "Member 'PlayFabServerAPI_UpdateCharacterStatistics::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterStatistics, customData) == 0x000058, "Member 'PlayFabServerAPI_UpdateCharacterStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterStatistics, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_UpdateCharacterStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdatePlayerStatistics
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_UpdatePlayerStatistics final
{
public:
	struct FServerUpdatePlayerStatisticsRequest   Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdatePlayerStatisticsResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdatePlayerStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdatePlayerStatistics");
static_assert(sizeof(PlayFabServerAPI_UpdatePlayerStatistics) == 0x000068, "Wrong size on PlayFabServerAPI_UpdatePlayerStatistics");
static_assert(offsetof(PlayFabServerAPI_UpdatePlayerStatistics, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdatePlayerStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdatePlayerStatistics, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_UpdatePlayerStatistics::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdatePlayerStatistics, onFailure) == 0x000048, "Member 'PlayFabServerAPI_UpdatePlayerStatistics::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdatePlayerStatistics, customData) == 0x000058, "Member 'PlayFabServerAPI_UpdatePlayerStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdatePlayerStatistics, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_UpdatePlayerStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateSharedGroupData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_UpdateSharedGroupData final
{
public:
	struct FServerUpdateSharedGroupDataRequest    Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateSharedGroupDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateSharedGroupData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateSharedGroupData");
static_assert(sizeof(PlayFabServerAPI_UpdateSharedGroupData) == 0x000070, "Wrong size on PlayFabServerAPI_UpdateSharedGroupData");
static_assert(offsetof(PlayFabServerAPI_UpdateSharedGroupData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateSharedGroupData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateSharedGroupData, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_UpdateSharedGroupData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateSharedGroupData, onFailure) == 0x000050, "Member 'PlayFabServerAPI_UpdateSharedGroupData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateSharedGroupData, customData) == 0x000060, "Member 'PlayFabServerAPI_UpdateSharedGroupData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateSharedGroupData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_UpdateSharedGroupData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_UpdateUserData final
{
public:
	struct FServerUpdateUserDataRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserData) == 0x000070, "Wrong size on PlayFabServerAPI_UpdateUserData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserData, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_UpdateUserData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserData, onFailure) == 0x000050, "Member 'PlayFabServerAPI_UpdateUserData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserData, customData) == 0x000060, "Member 'PlayFabServerAPI_UpdateUserData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_UpdateUserData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserInternalData
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_UpdateUserInternalData final
{
public:
	struct FServerUpdateUserInternalDataRequest   Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserInternalData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserInternalData) == 0x000068, "Wrong size on PlayFabServerAPI_UpdateUserInternalData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInternalData, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_UpdateUserInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInternalData, onFailure) == 0x000048, "Member 'PlayFabServerAPI_UpdateUserInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInternalData, customData) == 0x000058, "Member 'PlayFabServerAPI_UpdateUserInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInternalData, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_UpdateUserInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserInventoryItemCustomData
// 0x0088 (0x0088 - 0x0000)
struct PlayFabServerAPI_UpdateUserInventoryItemCustomData final
{
public:
	struct FServerUpdateUserInventoryItemDataRequest Request;                                        // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> onSuccess; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserInventoryItemCustomData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserInventoryItemCustomData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserInventoryItemCustomData) == 0x000088, "Wrong size on PlayFabServerAPI_UpdateUserInventoryItemCustomData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInventoryItemCustomData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserInventoryItemCustomData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInventoryItemCustomData, onSuccess) == 0x000058, "Member 'PlayFabServerAPI_UpdateUserInventoryItemCustomData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInventoryItemCustomData, onFailure) == 0x000068, "Member 'PlayFabServerAPI_UpdateUserInventoryItemCustomData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInventoryItemCustomData, customData) == 0x000078, "Member 'PlayFabServerAPI_UpdateUserInventoryItemCustomData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInventoryItemCustomData, ReturnValue) == 0x000080, "Member 'PlayFabServerAPI_UpdateUserInventoryItemCustomData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserPublisherData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_UpdateUserPublisherData final
{
public:
	struct FServerUpdateUserDataRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserPublisherData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserPublisherData) == 0x000070, "Wrong size on PlayFabServerAPI_UpdateUserPublisherData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherData, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_UpdateUserPublisherData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherData, onFailure) == 0x000050, "Member 'PlayFabServerAPI_UpdateUserPublisherData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherData, customData) == 0x000060, "Member 'PlayFabServerAPI_UpdateUserPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_UpdateUserPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserPublisherInternalData
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_UpdateUserPublisherInternalData final
{
public:
	struct FServerUpdateUserInternalDataRequest   Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserPublisherInternalData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserPublisherInternalData) == 0x000068, "Wrong size on PlayFabServerAPI_UpdateUserPublisherInternalData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserPublisherInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherInternalData, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_UpdateUserPublisherInternalData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherInternalData, onFailure) == 0x000048, "Member 'PlayFabServerAPI_UpdateUserPublisherInternalData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherInternalData, customData) == 0x000058, "Member 'PlayFabServerAPI_UpdateUserPublisherInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherInternalData, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_UpdateUserPublisherInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserPublisherReadOnlyData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_UpdateUserPublisherReadOnlyData final
{
public:
	struct FServerUpdateUserDataRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData) == 0x000070, "Wrong size on PlayFabServerAPI_UpdateUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserPublisherReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_UpdateUserPublisherReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData, onFailure) == 0x000050, "Member 'PlayFabServerAPI_UpdateUserPublisherReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData, customData) == 0x000060, "Member 'PlayFabServerAPI_UpdateUserPublisherReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_UpdateUserPublisherReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserReadOnlyData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_UpdateUserReadOnlyData final
{
public:
	struct FServerUpdateUserDataRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)> onSuccess; // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserReadOnlyData) == 0x000070, "Wrong size on PlayFabServerAPI_UpdateUserReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserReadOnlyData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserReadOnlyData, onSuccess) == 0x000040, "Member 'PlayFabServerAPI_UpdateUserReadOnlyData::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserReadOnlyData, onFailure) == 0x000050, "Member 'PlayFabServerAPI_UpdateUserReadOnlyData::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserReadOnlyData, customData) == 0x000060, "Member 'PlayFabServerAPI_UpdateUserReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserReadOnlyData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_UpdateUserReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.WriteCharacterEvent
// 0x0088 (0x0088 - 0x0000)
struct PlayFabServerAPI_WriteCharacterEvent final
{
public:
	struct FServerWriteServerCharacterEventRequest Request;                                          // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* customData)> onSuccess; // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_WriteCharacterEvent) == 0x000008, "Wrong alignment on PlayFabServerAPI_WriteCharacterEvent");
static_assert(sizeof(PlayFabServerAPI_WriteCharacterEvent) == 0x000088, "Wrong size on PlayFabServerAPI_WriteCharacterEvent");
static_assert(offsetof(PlayFabServerAPI_WriteCharacterEvent, Request) == 0x000000, "Member 'PlayFabServerAPI_WriteCharacterEvent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteCharacterEvent, onSuccess) == 0x000058, "Member 'PlayFabServerAPI_WriteCharacterEvent::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteCharacterEvent, onFailure) == 0x000068, "Member 'PlayFabServerAPI_WriteCharacterEvent::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteCharacterEvent, customData) == 0x000078, "Member 'PlayFabServerAPI_WriteCharacterEvent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteCharacterEvent, ReturnValue) == 0x000080, "Member 'PlayFabServerAPI_WriteCharacterEvent::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.WritePlayerEvent
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_WritePlayerEvent final
{
public:
	struct FServerWriteServerPlayerEventRequest   Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* customData)> onSuccess; // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_WritePlayerEvent) == 0x000008, "Wrong alignment on PlayFabServerAPI_WritePlayerEvent");
static_assert(sizeof(PlayFabServerAPI_WritePlayerEvent) == 0x000078, "Wrong size on PlayFabServerAPI_WritePlayerEvent");
static_assert(offsetof(PlayFabServerAPI_WritePlayerEvent, Request) == 0x000000, "Member 'PlayFabServerAPI_WritePlayerEvent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WritePlayerEvent, onSuccess) == 0x000048, "Member 'PlayFabServerAPI_WritePlayerEvent::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WritePlayerEvent, onFailure) == 0x000058, "Member 'PlayFabServerAPI_WritePlayerEvent::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WritePlayerEvent, customData) == 0x000068, "Member 'PlayFabServerAPI_WritePlayerEvent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WritePlayerEvent, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_WritePlayerEvent::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.WriteTitleEvent
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_WriteTitleEvent final
{
public:
	struct FServerWriteTitleEventRequest          Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* customData)> onSuccess; // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> onFailure;         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_WriteTitleEvent) == 0x000008, "Wrong alignment on PlayFabServerAPI_WriteTitleEvent");
static_assert(sizeof(PlayFabServerAPI_WriteTitleEvent) == 0x000068, "Wrong size on PlayFabServerAPI_WriteTitleEvent");
static_assert(offsetof(PlayFabServerAPI_WriteTitleEvent, Request) == 0x000000, "Member 'PlayFabServerAPI_WriteTitleEvent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteTitleEvent, onSuccess) == 0x000038, "Member 'PlayFabServerAPI_WriteTitleEvent::onSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteTitleEvent, onFailure) == 0x000048, "Member 'PlayFabServerAPI_WriteTitleEvent::onFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteTitleEvent, customData) == 0x000058, "Member 'PlayFabServerAPI_WriteTitleEvent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteTitleEvent, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_WriteTitleEvent::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAddCharacterVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAddCharacterVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAddCharacterVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAddCharacterVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_HelperAddCharacterVirtualCurrency) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAddCharacterVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_HelperAddCharacterVirtualCurrency, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAddCharacterVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddCharacterVirtualCurrency, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperAddCharacterVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddCharacterVirtualCurrency, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAddCharacterVirtualCurrency::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAddFriend
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAddFriend final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAddFriend) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAddFriend");
static_assert(sizeof(PlayFabServerAPI_HelperAddFriend) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAddFriend");
static_assert(offsetof(PlayFabServerAPI_HelperAddFriend, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAddFriend::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddFriend, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperAddFriend::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddFriend, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAddFriend::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAddGenericID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAddGenericID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAddGenericID) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAddGenericID");
static_assert(sizeof(PlayFabServerAPI_HelperAddGenericID) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAddGenericID");
static_assert(offsetof(PlayFabServerAPI_HelperAddGenericID, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAddGenericID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddGenericID, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperAddGenericID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddGenericID, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAddGenericID::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAddPlayerTag
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAddPlayerTag final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAddPlayerTag) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAddPlayerTag");
static_assert(sizeof(PlayFabServerAPI_HelperAddPlayerTag) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAddPlayerTag");
static_assert(offsetof(PlayFabServerAPI_HelperAddPlayerTag, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAddPlayerTag::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddPlayerTag, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperAddPlayerTag::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddPlayerTag, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAddPlayerTag::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAddSharedGroupMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAddSharedGroupMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAddSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAddSharedGroupMembers");
static_assert(sizeof(PlayFabServerAPI_HelperAddSharedGroupMembers) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAddSharedGroupMembers");
static_assert(offsetof(PlayFabServerAPI_HelperAddSharedGroupMembers, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAddSharedGroupMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddSharedGroupMembers, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperAddSharedGroupMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddSharedGroupMembers, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAddSharedGroupMembers::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAddUserVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAddUserVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAddUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAddUserVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_HelperAddUserVirtualCurrency) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAddUserVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_HelperAddUserVirtualCurrency, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAddUserVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddUserVirtualCurrency, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperAddUserVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddUserVirtualCurrency, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAddUserVirtualCurrency::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAuthenticateSessionTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAuthenticateSessionTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAuthenticateSessionTicket) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAuthenticateSessionTicket");
static_assert(sizeof(PlayFabServerAPI_HelperAuthenticateSessionTicket) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAuthenticateSessionTicket");
static_assert(offsetof(PlayFabServerAPI_HelperAuthenticateSessionTicket, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAuthenticateSessionTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAuthenticateSessionTicket, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperAuthenticateSessionTicket::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAuthenticateSessionTicket, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAuthenticateSessionTicket::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAwardSteamAchievement
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAwardSteamAchievement final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAwardSteamAchievement) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAwardSteamAchievement");
static_assert(sizeof(PlayFabServerAPI_HelperAwardSteamAchievement) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAwardSteamAchievement");
static_assert(offsetof(PlayFabServerAPI_HelperAwardSteamAchievement, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAwardSteamAchievement::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAwardSteamAchievement, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperAwardSteamAchievement::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAwardSteamAchievement, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAwardSteamAchievement::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperBanUsers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperBanUsers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperBanUsers) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperBanUsers");
static_assert(sizeof(PlayFabServerAPI_HelperBanUsers) == 0x000050, "Wrong size on PlayFabServerAPI_HelperBanUsers");
static_assert(offsetof(PlayFabServerAPI_HelperBanUsers, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperBanUsers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperBanUsers, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperBanUsers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperBanUsers, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperBanUsers::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperConsumeItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperConsumeItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperConsumeItem) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperConsumeItem");
static_assert(sizeof(PlayFabServerAPI_HelperConsumeItem) == 0x000050, "Wrong size on PlayFabServerAPI_HelperConsumeItem");
static_assert(offsetof(PlayFabServerAPI_HelperConsumeItem, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperConsumeItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperConsumeItem, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperConsumeItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperConsumeItem, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperConsumeItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperCreateSharedGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperCreateSharedGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperCreateSharedGroup) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperCreateSharedGroup");
static_assert(sizeof(PlayFabServerAPI_HelperCreateSharedGroup) == 0x000050, "Wrong size on PlayFabServerAPI_HelperCreateSharedGroup");
static_assert(offsetof(PlayFabServerAPI_HelperCreateSharedGroup, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperCreateSharedGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperCreateSharedGroup, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperCreateSharedGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperCreateSharedGroup, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperCreateSharedGroup::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperDeleteCharacterFromUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperDeleteCharacterFromUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperDeleteCharacterFromUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperDeleteCharacterFromUser");
static_assert(sizeof(PlayFabServerAPI_HelperDeleteCharacterFromUser) == 0x000050, "Wrong size on PlayFabServerAPI_HelperDeleteCharacterFromUser");
static_assert(offsetof(PlayFabServerAPI_HelperDeleteCharacterFromUser, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperDeleteCharacterFromUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeleteCharacterFromUser, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperDeleteCharacterFromUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeleteCharacterFromUser, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperDeleteCharacterFromUser::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperDeletePlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperDeletePlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperDeletePlayer) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperDeletePlayer");
static_assert(sizeof(PlayFabServerAPI_HelperDeletePlayer) == 0x000050, "Wrong size on PlayFabServerAPI_HelperDeletePlayer");
static_assert(offsetof(PlayFabServerAPI_HelperDeletePlayer, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperDeletePlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeletePlayer, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperDeletePlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeletePlayer, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperDeletePlayer::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperDeletePushNotificationTemplate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperDeletePushNotificationTemplate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperDeletePushNotificationTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperDeletePushNotificationTemplate");
static_assert(sizeof(PlayFabServerAPI_HelperDeletePushNotificationTemplate) == 0x000050, "Wrong size on PlayFabServerAPI_HelperDeletePushNotificationTemplate");
static_assert(offsetof(PlayFabServerAPI_HelperDeletePushNotificationTemplate, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperDeletePushNotificationTemplate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeletePushNotificationTemplate, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperDeletePushNotificationTemplate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeletePushNotificationTemplate, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperDeletePushNotificationTemplate::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperDeleteSharedGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperDeleteSharedGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperDeleteSharedGroup) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperDeleteSharedGroup");
static_assert(sizeof(PlayFabServerAPI_HelperDeleteSharedGroup) == 0x000050, "Wrong size on PlayFabServerAPI_HelperDeleteSharedGroup");
static_assert(offsetof(PlayFabServerAPI_HelperDeleteSharedGroup, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperDeleteSharedGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeleteSharedGroup, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperDeleteSharedGroup::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeleteSharedGroup, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperDeleteSharedGroup::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperEvaluateRandomResultTable
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperEvaluateRandomResultTable final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperEvaluateRandomResultTable) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperEvaluateRandomResultTable");
static_assert(sizeof(PlayFabServerAPI_HelperEvaluateRandomResultTable) == 0x000050, "Wrong size on PlayFabServerAPI_HelperEvaluateRandomResultTable");
static_assert(offsetof(PlayFabServerAPI_HelperEvaluateRandomResultTable, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperEvaluateRandomResultTable::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperEvaluateRandomResultTable, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperEvaluateRandomResultTable::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperEvaluateRandomResultTable, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperEvaluateRandomResultTable::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperExecuteCloudScript
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperExecuteCloudScript final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperExecuteCloudScript) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperExecuteCloudScript");
static_assert(sizeof(PlayFabServerAPI_HelperExecuteCloudScript) == 0x000050, "Wrong size on PlayFabServerAPI_HelperExecuteCloudScript");
static_assert(offsetof(PlayFabServerAPI_HelperExecuteCloudScript, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperExecuteCloudScript::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperExecuteCloudScript, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperExecuteCloudScript::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperExecuteCloudScript, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperExecuteCloudScript::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetAllSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetAllSegments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetAllSegments) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetAllSegments");
static_assert(sizeof(PlayFabServerAPI_HelperGetAllSegments) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetAllSegments");
static_assert(offsetof(PlayFabServerAPI_HelperGetAllSegments, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetAllSegments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetAllSegments, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetAllSegments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetAllSegments, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetAllSegments::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetAllUsersCharacters
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetAllUsersCharacters final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetAllUsersCharacters) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetAllUsersCharacters");
static_assert(sizeof(PlayFabServerAPI_HelperGetAllUsersCharacters) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetAllUsersCharacters");
static_assert(offsetof(PlayFabServerAPI_HelperGetAllUsersCharacters, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetAllUsersCharacters::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetAllUsersCharacters, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetAllUsersCharacters::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetAllUsersCharacters, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetAllUsersCharacters::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCatalogItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCatalogItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCatalogItems) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCatalogItems");
static_assert(sizeof(PlayFabServerAPI_HelperGetCatalogItems) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCatalogItems");
static_assert(offsetof(PlayFabServerAPI_HelperGetCatalogItems, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCatalogItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCatalogItems, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCatalogItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCatalogItems, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCatalogItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCharacterData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCharacterData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCharacterData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCharacterData");
static_assert(sizeof(PlayFabServerAPI_HelperGetCharacterData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCharacterData");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCharacterData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCharacterData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCharacterData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCharacterInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCharacterInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCharacterInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCharacterInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperGetCharacterInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCharacterInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCharacterInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterInternalData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCharacterInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterInternalData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCharacterInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCharacterInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCharacterInventory final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCharacterInventory) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCharacterInventory");
static_assert(sizeof(PlayFabServerAPI_HelperGetCharacterInventory) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCharacterInventory");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterInventory, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCharacterInventory::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterInventory, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCharacterInventory::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterInventory, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCharacterInventory::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCharacterLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCharacterLeaderboard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCharacterLeaderboard) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCharacterLeaderboard");
static_assert(sizeof(PlayFabServerAPI_HelperGetCharacterLeaderboard) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCharacterLeaderboard");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterLeaderboard, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCharacterLeaderboard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterLeaderboard, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCharacterLeaderboard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterLeaderboard, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCharacterLeaderboard::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCharacterReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCharacterReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCharacterReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCharacterReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_HelperGetCharacterReadOnlyData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCharacterReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterReadOnlyData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCharacterReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterReadOnlyData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCharacterReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterReadOnlyData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCharacterReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCharacterStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCharacterStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCharacterStatistics");
static_assert(sizeof(PlayFabServerAPI_HelperGetCharacterStatistics) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCharacterStatistics");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterStatistics, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCharacterStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterStatistics, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCharacterStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterStatistics, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCharacterStatistics::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetContentDownloadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetContentDownloadUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetContentDownloadUrl) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetContentDownloadUrl");
static_assert(sizeof(PlayFabServerAPI_HelperGetContentDownloadUrl) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetContentDownloadUrl");
static_assert(offsetof(PlayFabServerAPI_HelperGetContentDownloadUrl, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetContentDownloadUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetContentDownloadUrl, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetContentDownloadUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetContentDownloadUrl, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetContentDownloadUrl::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetFriendLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetFriendLeaderboard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetFriendLeaderboard) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetFriendLeaderboard");
static_assert(sizeof(PlayFabServerAPI_HelperGetFriendLeaderboard) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetFriendLeaderboard");
static_assert(offsetof(PlayFabServerAPI_HelperGetFriendLeaderboard, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetFriendLeaderboard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetFriendLeaderboard, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetFriendLeaderboard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetFriendLeaderboard, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetFriendLeaderboard::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetFriendsList
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetFriendsList final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetFriendsList) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetFriendsList");
static_assert(sizeof(PlayFabServerAPI_HelperGetFriendsList) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetFriendsList");
static_assert(offsetof(PlayFabServerAPI_HelperGetFriendsList, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetFriendsList::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetFriendsList, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetFriendsList::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetFriendsList, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetFriendsList::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetLeaderboard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetLeaderboard) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetLeaderboard");
static_assert(sizeof(PlayFabServerAPI_HelperGetLeaderboard) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetLeaderboard");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboard, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetLeaderboard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboard, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetLeaderboard::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboard, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetLeaderboard::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetLeaderboardAroundCharacter
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetLeaderboardAroundCharacter final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetLeaderboardAroundCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetLeaderboardAroundCharacter");
static_assert(sizeof(PlayFabServerAPI_HelperGetLeaderboardAroundCharacter) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetLeaderboardAroundCharacter");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardAroundCharacter, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetLeaderboardAroundCharacter::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardAroundCharacter, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetLeaderboardAroundCharacter::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardAroundCharacter, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetLeaderboardAroundCharacter::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetLeaderboardAroundUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetLeaderboardAroundUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetLeaderboardAroundUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetLeaderboardAroundUser");
static_assert(sizeof(PlayFabServerAPI_HelperGetLeaderboardAroundUser) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetLeaderboardAroundUser");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardAroundUser, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetLeaderboardAroundUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardAroundUser, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetLeaderboardAroundUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardAroundUser, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetLeaderboardAroundUser::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetLeaderboardForUserCharacters
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetLeaderboardForUserCharacters final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetLeaderboardForUserCharacters) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetLeaderboardForUserCharacters");
static_assert(sizeof(PlayFabServerAPI_HelperGetLeaderboardForUserCharacters) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetLeaderboardForUserCharacters");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardForUserCharacters, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetLeaderboardForUserCharacters::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardForUserCharacters, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetLeaderboardForUserCharacters::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardForUserCharacters, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetLeaderboardForUserCharacters::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayerCombinedInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayerCombinedInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayerCombinedInfo) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayerCombinedInfo");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayerCombinedInfo) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayerCombinedInfo");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerCombinedInfo, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayerCombinedInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerCombinedInfo, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayerCombinedInfo::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerCombinedInfo, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayerCombinedInfo::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayerProfile
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayerProfile final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayerProfile) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayerProfile");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayerProfile) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayerProfile");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerProfile, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayerProfile::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerProfile, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayerProfile::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerProfile, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayerProfile::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayerSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayerSegments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayerSegments) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayerSegments");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayerSegments) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayerSegments");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerSegments, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayerSegments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerSegments, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayerSegments::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerSegments, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayerSegments::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayersInSegment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayersInSegment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayersInSegment) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayersInSegment");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayersInSegment) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayersInSegment");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayersInSegment, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayersInSegment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayersInSegment, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayersInSegment::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayersInSegment, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayersInSegment::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayerStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayerStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayerStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayerStatistics");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayerStatistics) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayerStatistics");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerStatistics, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayerStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerStatistics, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayerStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerStatistics, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayerStatistics::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayerStatisticVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayerStatisticVersions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayerStatisticVersions) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayerStatisticVersions");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayerStatisticVersions) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayerStatisticVersions");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerStatisticVersions, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayerStatisticVersions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerStatisticVersions, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayerStatisticVersions::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerStatisticVersions, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayerStatisticVersions::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayerTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayerTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayerTags) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayerTags");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayerTags) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayerTags");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerTags, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayerTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerTags, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayerTags::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerTags, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayerTags::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromFacebookIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromFacebookInstantGamesIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromGenericIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromNintendoServiceAccountIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromNintendoSwitchDeviceIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromPSNAccountIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromPSNOnlineIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromPSNOnlineIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNOnlineIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromPSNOnlineIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNOnlineIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromPSNOnlineIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNOnlineIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromPSNOnlineIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNOnlineIDs, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromPSNOnlineIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNOnlineIDs, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromPSNOnlineIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromSteamIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromTwitchIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromXboxLiveIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPublisherData");
static_assert(sizeof(PlayFabServerAPI_HelperGetPublisherData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPublisherData");
static_assert(offsetof(PlayFabServerAPI_HelperGetPublisherData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPublisherData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPublisherData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPublisherData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetRandomResultTables
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetRandomResultTables final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetRandomResultTables) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetRandomResultTables");
static_assert(sizeof(PlayFabServerAPI_HelperGetRandomResultTables) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetRandomResultTables");
static_assert(offsetof(PlayFabServerAPI_HelperGetRandomResultTables, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetRandomResultTables::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetRandomResultTables, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetRandomResultTables::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetRandomResultTables, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetRandomResultTables::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetServerCustomIDsFromPlayFabIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetSharedGroupData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetSharedGroupData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetSharedGroupData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetSharedGroupData");
static_assert(sizeof(PlayFabServerAPI_HelperGetSharedGroupData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetSharedGroupData");
static_assert(offsetof(PlayFabServerAPI_HelperGetSharedGroupData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetSharedGroupData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetSharedGroupData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetSharedGroupData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetSharedGroupData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetSharedGroupData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetStoreItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetStoreItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetStoreItems) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetStoreItems");
static_assert(sizeof(PlayFabServerAPI_HelperGetStoreItems) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetStoreItems");
static_assert(offsetof(PlayFabServerAPI_HelperGetStoreItems, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetStoreItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetStoreItems, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetStoreItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetStoreItems, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetStoreItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetTime
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetTime final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetTime) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetTime");
static_assert(sizeof(PlayFabServerAPI_HelperGetTime) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetTime");
static_assert(offsetof(PlayFabServerAPI_HelperGetTime, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetTime::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTime, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetTime::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTime, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetTime::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetTitleData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetTitleData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetTitleData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetTitleData");
static_assert(sizeof(PlayFabServerAPI_HelperGetTitleData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetTitleData");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetTitleData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetTitleData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetTitleData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetTitleInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetTitleInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetTitleInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperGetTitleInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetTitleInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetTitleInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleInternalData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetTitleInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleInternalData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetTitleInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetTitleNews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetTitleNews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetTitleNews) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetTitleNews");
static_assert(sizeof(PlayFabServerAPI_HelperGetTitleNews) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetTitleNews");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleNews, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetTitleNews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleNews, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetTitleNews::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleNews, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetTitleNews::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserAccountInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserAccountInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserAccountInfo) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserAccountInfo");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserAccountInfo) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserAccountInfo");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserAccountInfo, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserAccountInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserAccountInfo, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserAccountInfo::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserAccountInfo, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserAccountInfo::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserBans
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserBans final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserBans) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserBans");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserBans) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserBans");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserBans, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserBans::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserBans, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserBans::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserBans, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserBans::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserData");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserData");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserInternalData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserInternalData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserInventory final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserInventory) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserInventory");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserInventory) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserInventory");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserInventory, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserInventory::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserInventory, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserInventory::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserInventory, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserInventory::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserPublisherData");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserPublisherData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserPublisherData");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserPublisherData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserPublisherInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserPublisherInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserPublisherInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserPublisherInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserPublisherInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserPublisherInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherInternalData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserPublisherInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherInternalData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserPublisherInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserPublisherReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserPublisherReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserPublisherReadOnlyData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherReadOnlyData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserPublisherReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherReadOnlyData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserPublisherReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherReadOnlyData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserPublisherReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserReadOnlyData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserReadOnlyData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserReadOnlyData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserReadOnlyData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGrantCharacterToUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGrantCharacterToUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGrantCharacterToUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGrantCharacterToUser");
static_assert(sizeof(PlayFabServerAPI_HelperGrantCharacterToUser) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGrantCharacterToUser");
static_assert(offsetof(PlayFabServerAPI_HelperGrantCharacterToUser, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGrantCharacterToUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantCharacterToUser, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGrantCharacterToUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantCharacterToUser, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGrantCharacterToUser::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGrantItemsToCharacter
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGrantItemsToCharacter final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGrantItemsToCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGrantItemsToCharacter");
static_assert(sizeof(PlayFabServerAPI_HelperGrantItemsToCharacter) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGrantItemsToCharacter");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToCharacter, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGrantItemsToCharacter::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToCharacter, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGrantItemsToCharacter::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToCharacter, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGrantItemsToCharacter::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGrantItemsToUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGrantItemsToUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGrantItemsToUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGrantItemsToUser");
static_assert(sizeof(PlayFabServerAPI_HelperGrantItemsToUser) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGrantItemsToUser");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToUser, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGrantItemsToUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToUser, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGrantItemsToUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToUser, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGrantItemsToUser::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGrantItemsToUsers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGrantItemsToUsers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGrantItemsToUsers) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGrantItemsToUsers");
static_assert(sizeof(PlayFabServerAPI_HelperGrantItemsToUsers) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGrantItemsToUsers");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToUsers, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGrantItemsToUsers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToUsers, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperGrantItemsToUsers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToUsers, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGrantItemsToUsers::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLinkNintendoServiceAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLinkNintendoServiceAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLinkNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLinkNintendoServiceAccount");
static_assert(sizeof(PlayFabServerAPI_HelperLinkNintendoServiceAccount) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLinkNintendoServiceAccount");
static_assert(offsetof(PlayFabServerAPI_HelperLinkNintendoServiceAccount, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLinkNintendoServiceAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkNintendoServiceAccount, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperLinkNintendoServiceAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkNintendoServiceAccount, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLinkNintendoServiceAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLinkNintendoServiceAccountSubject
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLinkNintendoServiceAccountSubject final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLinkNintendoServiceAccountSubject) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLinkNintendoServiceAccountSubject");
static_assert(sizeof(PlayFabServerAPI_HelperLinkNintendoServiceAccountSubject) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLinkNintendoServiceAccountSubject");
static_assert(offsetof(PlayFabServerAPI_HelperLinkNintendoServiceAccountSubject, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLinkNintendoServiceAccountSubject::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkNintendoServiceAccountSubject, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperLinkNintendoServiceAccountSubject::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkNintendoServiceAccountSubject, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLinkNintendoServiceAccountSubject::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLinkNintendoSwitchDeviceId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLinkNintendoSwitchDeviceId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLinkNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLinkNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabServerAPI_HelperLinkNintendoSwitchDeviceId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLinkNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabServerAPI_HelperLinkNintendoSwitchDeviceId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLinkNintendoSwitchDeviceId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkNintendoSwitchDeviceId, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperLinkNintendoSwitchDeviceId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkNintendoSwitchDeviceId, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLinkNintendoSwitchDeviceId::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLinkPSNAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLinkPSNAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLinkPSNAccount");
static_assert(sizeof(PlayFabServerAPI_HelperLinkPSNAccount) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLinkPSNAccount");
static_assert(offsetof(PlayFabServerAPI_HelperLinkPSNAccount, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLinkPSNAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkPSNAccount, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperLinkPSNAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkPSNAccount, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLinkPSNAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLinkPSNId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLinkPSNId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLinkPSNId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLinkPSNId");
static_assert(sizeof(PlayFabServerAPI_HelperLinkPSNId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLinkPSNId");
static_assert(offsetof(PlayFabServerAPI_HelperLinkPSNId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLinkPSNId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkPSNId, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperLinkPSNId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkPSNId, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLinkPSNId::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLinkServerCustomId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLinkServerCustomId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLinkServerCustomId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLinkServerCustomId");
static_assert(sizeof(PlayFabServerAPI_HelperLinkServerCustomId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLinkServerCustomId");
static_assert(offsetof(PlayFabServerAPI_HelperLinkServerCustomId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLinkServerCustomId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkServerCustomId, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperLinkServerCustomId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkServerCustomId, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLinkServerCustomId::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLinkSteamId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLinkSteamId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLinkSteamId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLinkSteamId");
static_assert(sizeof(PlayFabServerAPI_HelperLinkSteamId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLinkSteamId");
static_assert(offsetof(PlayFabServerAPI_HelperLinkSteamId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLinkSteamId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkSteamId, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperLinkSteamId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkSteamId, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLinkSteamId::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLinkXboxAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLinkXboxAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLinkXboxAccount");
static_assert(sizeof(PlayFabServerAPI_HelperLinkXboxAccount) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLinkXboxAccount");
static_assert(offsetof(PlayFabServerAPI_HelperLinkXboxAccount, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLinkXboxAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkXboxAccount, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperLinkXboxAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkXboxAccount, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLinkXboxAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLoginWithServerCustomId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLoginWithServerCustomId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLoginWithServerCustomId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLoginWithServerCustomId");
static_assert(sizeof(PlayFabServerAPI_HelperLoginWithServerCustomId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLoginWithServerCustomId");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithServerCustomId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLoginWithServerCustomId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithServerCustomId, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperLoginWithServerCustomId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithServerCustomId, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLoginWithServerCustomId::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLoginWithSteamId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLoginWithSteamId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLoginWithSteamId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLoginWithSteamId");
static_assert(sizeof(PlayFabServerAPI_HelperLoginWithSteamId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLoginWithSteamId");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithSteamId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLoginWithSteamId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithSteamId, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperLoginWithSteamId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithSteamId, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLoginWithSteamId::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLoginWithXbox
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLoginWithXbox final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLoginWithXbox) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLoginWithXbox");
static_assert(sizeof(PlayFabServerAPI_HelperLoginWithXbox) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLoginWithXbox");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithXbox, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLoginWithXbox::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithXbox, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperLoginWithXbox::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithXbox, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLoginWithXbox::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLoginWithXboxId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLoginWithXboxId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLoginWithXboxId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLoginWithXboxId");
static_assert(sizeof(PlayFabServerAPI_HelperLoginWithXboxId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLoginWithXboxId");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithXboxId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLoginWithXboxId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithXboxId, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperLoginWithXboxId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithXboxId, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLoginWithXboxId::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperModifyItemUses
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperModifyItemUses final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperModifyItemUses) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperModifyItemUses");
static_assert(sizeof(PlayFabServerAPI_HelperModifyItemUses) == 0x000050, "Wrong size on PlayFabServerAPI_HelperModifyItemUses");
static_assert(offsetof(PlayFabServerAPI_HelperModifyItemUses, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperModifyItemUses::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperModifyItemUses, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperModifyItemUses::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperModifyItemUses, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperModifyItemUses::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperMoveItemToCharacterFromCharacter
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter");
static_assert(sizeof(PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter) == 0x000050, "Wrong size on PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperMoveItemToCharacterFromUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperMoveItemToCharacterFromUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperMoveItemToCharacterFromUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperMoveItemToCharacterFromUser");
static_assert(sizeof(PlayFabServerAPI_HelperMoveItemToCharacterFromUser) == 0x000050, "Wrong size on PlayFabServerAPI_HelperMoveItemToCharacterFromUser");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToCharacterFromUser, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperMoveItemToCharacterFromUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToCharacterFromUser, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperMoveItemToCharacterFromUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToCharacterFromUser, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperMoveItemToCharacterFromUser::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperMoveItemToUserFromCharacter
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperMoveItemToUserFromCharacter final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperMoveItemToUserFromCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperMoveItemToUserFromCharacter");
static_assert(sizeof(PlayFabServerAPI_HelperMoveItemToUserFromCharacter) == 0x000050, "Wrong size on PlayFabServerAPI_HelperMoveItemToUserFromCharacter");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToUserFromCharacter, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperMoveItemToUserFromCharacter::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToUserFromCharacter, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperMoveItemToUserFromCharacter::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToUserFromCharacter, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperMoveItemToUserFromCharacter::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRedeemCoupon
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRedeemCoupon final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRedeemCoupon) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRedeemCoupon");
static_assert(sizeof(PlayFabServerAPI_HelperRedeemCoupon) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRedeemCoupon");
static_assert(offsetof(PlayFabServerAPI_HelperRedeemCoupon, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRedeemCoupon::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRedeemCoupon, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperRedeemCoupon::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRedeemCoupon, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRedeemCoupon::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRemoveFriend
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRemoveFriend final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRemoveFriend) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRemoveFriend");
static_assert(sizeof(PlayFabServerAPI_HelperRemoveFriend) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRemoveFriend");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveFriend, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRemoveFriend::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveFriend, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperRemoveFriend::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveFriend, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRemoveFriend::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRemoveGenericID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRemoveGenericID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRemoveGenericID) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRemoveGenericID");
static_assert(sizeof(PlayFabServerAPI_HelperRemoveGenericID) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRemoveGenericID");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveGenericID, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRemoveGenericID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveGenericID, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperRemoveGenericID::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveGenericID, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRemoveGenericID::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRemovePlayerTag
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRemovePlayerTag final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRemovePlayerTag) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRemovePlayerTag");
static_assert(sizeof(PlayFabServerAPI_HelperRemovePlayerTag) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRemovePlayerTag");
static_assert(offsetof(PlayFabServerAPI_HelperRemovePlayerTag, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRemovePlayerTag::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemovePlayerTag, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperRemovePlayerTag::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemovePlayerTag, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRemovePlayerTag::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRemoveSharedGroupMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRemoveSharedGroupMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRemoveSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRemoveSharedGroupMembers");
static_assert(sizeof(PlayFabServerAPI_HelperRemoveSharedGroupMembers) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRemoveSharedGroupMembers");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveSharedGroupMembers, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRemoveSharedGroupMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveSharedGroupMembers, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperRemoveSharedGroupMembers::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveSharedGroupMembers, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRemoveSharedGroupMembers::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperReportPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperReportPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperReportPlayer) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperReportPlayer");
static_assert(sizeof(PlayFabServerAPI_HelperReportPlayer) == 0x000050, "Wrong size on PlayFabServerAPI_HelperReportPlayer");
static_assert(offsetof(PlayFabServerAPI_HelperReportPlayer, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperReportPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperReportPlayer, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperReportPlayer::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperReportPlayer, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperReportPlayer::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRevokeAllBansForUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRevokeAllBansForUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRevokeAllBansForUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRevokeAllBansForUser");
static_assert(sizeof(PlayFabServerAPI_HelperRevokeAllBansForUser) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRevokeAllBansForUser");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeAllBansForUser, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRevokeAllBansForUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeAllBansForUser, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperRevokeAllBansForUser::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeAllBansForUser, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRevokeAllBansForUser::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRevokeBans
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRevokeBans final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRevokeBans) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRevokeBans");
static_assert(sizeof(PlayFabServerAPI_HelperRevokeBans) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRevokeBans");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeBans, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRevokeBans::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeBans, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperRevokeBans::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeBans, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRevokeBans::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRevokeInventoryItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRevokeInventoryItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRevokeInventoryItem) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRevokeInventoryItem");
static_assert(sizeof(PlayFabServerAPI_HelperRevokeInventoryItem) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRevokeInventoryItem");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeInventoryItem, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRevokeInventoryItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeInventoryItem, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperRevokeInventoryItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeInventoryItem, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRevokeInventoryItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRevokeInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRevokeInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRevokeInventoryItems) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRevokeInventoryItems");
static_assert(sizeof(PlayFabServerAPI_HelperRevokeInventoryItems) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRevokeInventoryItems");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeInventoryItems, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRevokeInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeInventoryItems, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperRevokeInventoryItems::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeInventoryItems, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRevokeInventoryItems::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSavePushNotificationTemplate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSavePushNotificationTemplate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSavePushNotificationTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSavePushNotificationTemplate");
static_assert(sizeof(PlayFabServerAPI_HelperSavePushNotificationTemplate) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSavePushNotificationTemplate");
static_assert(offsetof(PlayFabServerAPI_HelperSavePushNotificationTemplate, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSavePushNotificationTemplate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSavePushNotificationTemplate, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperSavePushNotificationTemplate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSavePushNotificationTemplate, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSavePushNotificationTemplate::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSendCustomAccountRecoveryEmail
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail");
static_assert(sizeof(PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail");
static_assert(offsetof(PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSendEmailFromTemplate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSendEmailFromTemplate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSendEmailFromTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSendEmailFromTemplate");
static_assert(sizeof(PlayFabServerAPI_HelperSendEmailFromTemplate) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSendEmailFromTemplate");
static_assert(offsetof(PlayFabServerAPI_HelperSendEmailFromTemplate, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSendEmailFromTemplate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendEmailFromTemplate, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperSendEmailFromTemplate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendEmailFromTemplate, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSendEmailFromTemplate::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSendPushNotification
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSendPushNotification final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSendPushNotification) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSendPushNotification");
static_assert(sizeof(PlayFabServerAPI_HelperSendPushNotification) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSendPushNotification");
static_assert(offsetof(PlayFabServerAPI_HelperSendPushNotification, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSendPushNotification::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendPushNotification, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperSendPushNotification::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendPushNotification, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSendPushNotification::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSendPushNotificationFromTemplate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSendPushNotificationFromTemplate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSendPushNotificationFromTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSendPushNotificationFromTemplate");
static_assert(sizeof(PlayFabServerAPI_HelperSendPushNotificationFromTemplate) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSendPushNotificationFromTemplate");
static_assert(offsetof(PlayFabServerAPI_HelperSendPushNotificationFromTemplate, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSendPushNotificationFromTemplate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendPushNotificationFromTemplate, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperSendPushNotificationFromTemplate::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendPushNotificationFromTemplate, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSendPushNotificationFromTemplate::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetFriendTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetFriendTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetFriendTags) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetFriendTags");
static_assert(sizeof(PlayFabServerAPI_HelperSetFriendTags) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetFriendTags");
static_assert(offsetof(PlayFabServerAPI_HelperSetFriendTags, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetFriendTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetFriendTags, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetFriendTags::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetFriendTags, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetFriendTags::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetPlayerSecret
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetPlayerSecret final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetPlayerSecret) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetPlayerSecret");
static_assert(sizeof(PlayFabServerAPI_HelperSetPlayerSecret) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetPlayerSecret");
static_assert(offsetof(PlayFabServerAPI_HelperSetPlayerSecret, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetPlayerSecret::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetPlayerSecret, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetPlayerSecret::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetPlayerSecret, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetPlayerSecret::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetPublisherData");
static_assert(sizeof(PlayFabServerAPI_HelperSetPublisherData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetPublisherData");
static_assert(offsetof(PlayFabServerAPI_HelperSetPublisherData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetPublisherData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetPublisherData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetPublisherData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetTitleData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetTitleData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetTitleData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetTitleData");
static_assert(sizeof(PlayFabServerAPI_HelperSetTitleData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetTitleData");
static_assert(offsetof(PlayFabServerAPI_HelperSetTitleData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetTitleData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetTitleData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetTitleData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetTitleData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetTitleData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetTitleInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetTitleInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetTitleInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperSetTitleInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetTitleInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperSetTitleInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetTitleInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetTitleInternalData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetTitleInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetTitleInternalData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetTitleInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSubtractCharacterVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSubtractUserVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSubtractUserVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSubtractUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSubtractUserVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_HelperSubtractUserVirtualCurrency) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSubtractUserVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_HelperSubtractUserVirtualCurrency, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSubtractUserVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSubtractUserVirtualCurrency, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperSubtractUserVirtualCurrency::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSubtractUserVirtualCurrency, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSubtractUserVirtualCurrency::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlinkNintendoServiceAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlinkNintendoServiceAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlinkNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlinkNintendoServiceAccount");
static_assert(sizeof(PlayFabServerAPI_HelperUnlinkNintendoServiceAccount) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlinkNintendoServiceAccount");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkNintendoServiceAccount, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlinkNintendoServiceAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkNintendoServiceAccount, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlinkNintendoServiceAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkNintendoServiceAccount, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlinkNintendoServiceAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlinkNintendoSwitchDeviceId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlinkNintendoSwitchDeviceId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlinkNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlinkNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabServerAPI_HelperUnlinkNintendoSwitchDeviceId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlinkNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkNintendoSwitchDeviceId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlinkNintendoSwitchDeviceId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkNintendoSwitchDeviceId, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlinkNintendoSwitchDeviceId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkNintendoSwitchDeviceId, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlinkNintendoSwitchDeviceId::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlinkPSNAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlinkPSNAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlinkPSNAccount");
static_assert(sizeof(PlayFabServerAPI_HelperUnlinkPSNAccount) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlinkPSNAccount");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkPSNAccount, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlinkPSNAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkPSNAccount, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlinkPSNAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkPSNAccount, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlinkPSNAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlinkServerCustomId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlinkServerCustomId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlinkServerCustomId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlinkServerCustomId");
static_assert(sizeof(PlayFabServerAPI_HelperUnlinkServerCustomId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlinkServerCustomId");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkServerCustomId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlinkServerCustomId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkServerCustomId, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlinkServerCustomId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkServerCustomId, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlinkServerCustomId::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlinkSteamId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlinkSteamId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlinkSteamId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlinkSteamId");
static_assert(sizeof(PlayFabServerAPI_HelperUnlinkSteamId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlinkSteamId");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkSteamId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlinkSteamId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkSteamId, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlinkSteamId::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkSteamId, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlinkSteamId::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlinkXboxAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlinkXboxAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlinkXboxAccount");
static_assert(sizeof(PlayFabServerAPI_HelperUnlinkXboxAccount) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlinkXboxAccount");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkXboxAccount, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlinkXboxAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkXboxAccount, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlinkXboxAccount::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkXboxAccount, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlinkXboxAccount::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlockContainerInstance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlockContainerInstance final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlockContainerInstance) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlockContainerInstance");
static_assert(sizeof(PlayFabServerAPI_HelperUnlockContainerInstance) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlockContainerInstance");
static_assert(offsetof(PlayFabServerAPI_HelperUnlockContainerInstance, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlockContainerInstance::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlockContainerInstance, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlockContainerInstance::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlockContainerInstance, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlockContainerInstance::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlockContainerItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlockContainerItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlockContainerItem) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlockContainerItem");
static_assert(sizeof(PlayFabServerAPI_HelperUnlockContainerItem) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlockContainerItem");
static_assert(offsetof(PlayFabServerAPI_HelperUnlockContainerItem, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlockContainerItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlockContainerItem, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlockContainerItem::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlockContainerItem, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlockContainerItem::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateAvatarUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateAvatarUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateAvatarUrl) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateAvatarUrl");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateAvatarUrl) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateAvatarUrl");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateAvatarUrl, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateAvatarUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateAvatarUrl, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateAvatarUrl::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateAvatarUrl, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateAvatarUrl::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateBans
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateBans final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateBans) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateBans");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateBans) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateBans");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateBans, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateBans::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateBans, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateBans::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateBans, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateBans::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateCharacterData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateCharacterData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateCharacterData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateCharacterData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateCharacterData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateCharacterData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateCharacterData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateCharacterData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateCharacterData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateCharacterInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateCharacterInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateCharacterInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateCharacterInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateCharacterInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateCharacterInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateCharacterInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterInternalData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateCharacterInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterInternalData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateCharacterInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateCharacterReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateCharacterReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateCharacterReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateCharacterReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateCharacterReadOnlyData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateCharacterReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterReadOnlyData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateCharacterReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterReadOnlyData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateCharacterReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterReadOnlyData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateCharacterReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateCharacterStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateCharacterStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateCharacterStatistics");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateCharacterStatistics) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateCharacterStatistics");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterStatistics, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateCharacterStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterStatistics, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateCharacterStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterStatistics, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateCharacterStatistics::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdatePlayerStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdatePlayerStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdatePlayerStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdatePlayerStatistics");
static_assert(sizeof(PlayFabServerAPI_HelperUpdatePlayerStatistics) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdatePlayerStatistics");
static_assert(offsetof(PlayFabServerAPI_HelperUpdatePlayerStatistics, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdatePlayerStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdatePlayerStatistics, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdatePlayerStatistics::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdatePlayerStatistics, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdatePlayerStatistics::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateSharedGroupData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateSharedGroupData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateSharedGroupData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateSharedGroupData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateSharedGroupData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateSharedGroupData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateSharedGroupData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateSharedGroupData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateSharedGroupData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateSharedGroupData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateSharedGroupData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateSharedGroupData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserInternalData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserInternalData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserInventoryItemCustomData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserPublisherData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserPublisherData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserPublisherData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserPublisherInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserPublisherInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserPublisherInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserPublisherInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserPublisherInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherInternalData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherInternalData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherInternalData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherInternalData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserPublisherReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserReadOnlyData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserReadOnlyData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserReadOnlyData, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserReadOnlyData::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserReadOnlyData, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserReadOnlyData::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperWriteCharacterEvent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperWriteCharacterEvent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperWriteCharacterEvent) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperWriteCharacterEvent");
static_assert(sizeof(PlayFabServerAPI_HelperWriteCharacterEvent) == 0x000050, "Wrong size on PlayFabServerAPI_HelperWriteCharacterEvent");
static_assert(offsetof(PlayFabServerAPI_HelperWriteCharacterEvent, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperWriteCharacterEvent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperWriteCharacterEvent, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperWriteCharacterEvent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperWriteCharacterEvent, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperWriteCharacterEvent::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperWritePlayerEvent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperWritePlayerEvent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperWritePlayerEvent) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperWritePlayerEvent");
static_assert(sizeof(PlayFabServerAPI_HelperWritePlayerEvent) == 0x000050, "Wrong size on PlayFabServerAPI_HelperWritePlayerEvent");
static_assert(offsetof(PlayFabServerAPI_HelperWritePlayerEvent, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperWritePlayerEvent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperWritePlayerEvent, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperWritePlayerEvent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperWritePlayerEvent, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperWritePlayerEvent::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperWriteTitleEvent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperWriteTitleEvent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                customData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperWriteTitleEvent) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperWriteTitleEvent");
static_assert(sizeof(PlayFabServerAPI_HelperWriteTitleEvent) == 0x000050, "Wrong size on PlayFabServerAPI_HelperWriteTitleEvent");
static_assert(offsetof(PlayFabServerAPI_HelperWriteTitleEvent, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperWriteTitleEvent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperWriteTitleEvent, customData) == 0x000040, "Member 'PlayFabServerAPI_HelperWriteTitleEvent::customData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperWriteTitleEvent, successful) == 0x000048, "Member 'PlayFabServerAPI_HelperWriteTitleEvent::successful' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeAddPlayerTagResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeAddPlayerTagResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerAddPlayerTagResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeAddPlayerTagResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeAddPlayerTagResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeAddPlayerTagResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeAddPlayerTagResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeAddPlayerTagResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeAddPlayerTagResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeAddPlayerTagResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeAddPlayerTagResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeAddSharedGroupMembersResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeAddSharedGroupMembersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerAddSharedGroupMembersResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeAddSharedGroupMembersResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeAddSharedGroupMembersResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeAddSharedGroupMembersResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeAddSharedGroupMembersResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeAddSharedGroupMembersResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeAddSharedGroupMembersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeAddSharedGroupMembersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeAddSharedGroupMembersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeAuthenticateSessionTicketResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeAuthenticateSessionTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerAuthenticateSessionTicketResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeAuthenticateSessionTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeAuthenticateSessionTicketResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeAuthenticateSessionTicketResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeAuthenticateSessionTicketResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeAuthenticateSessionTicketResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeAuthenticateSessionTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeAuthenticateSessionTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeAuthenticateSessionTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeAwardSteamAchievementResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeAwardSteamAchievementResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerAwardSteamAchievementResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeAwardSteamAchievementResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeAwardSteamAchievementResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeAwardSteamAchievementResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeAwardSteamAchievementResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeAwardSteamAchievementResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeAwardSteamAchievementResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeAwardSteamAchievementResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeAwardSteamAchievementResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeBanUsersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeBanUsersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerBanUsersResult                  ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeBanUsersResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeBanUsersResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeBanUsersResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeBanUsersResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeBanUsersResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeBanUsersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeBanUsersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeBanUsersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeConsumeItemResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerModelDecoder_decodeConsumeItemResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerConsumeItemResult               ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeConsumeItemResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeConsumeItemResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeConsumeItemResultResponse) == 0x000028, "Wrong size on PlayFabServerModelDecoder_decodeConsumeItemResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeConsumeItemResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeConsumeItemResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeConsumeItemResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeConsumeItemResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeCreateSharedGroupResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeCreateSharedGroupResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerCreateSharedGroupResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeCreateSharedGroupResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeCreateSharedGroupResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeCreateSharedGroupResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeCreateSharedGroupResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeCreateSharedGroupResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeCreateSharedGroupResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeCreateSharedGroupResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeCreateSharedGroupResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeDeleteCharacterFromUserResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeDeleteCharacterFromUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerDeleteCharacterFromUserResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeDeleteCharacterFromUserResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeDeleteCharacterFromUserResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeDeleteCharacterFromUserResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeDeleteCharacterFromUserResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeDeleteCharacterFromUserResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeDeleteCharacterFromUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeDeleteCharacterFromUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeDeleteCharacterFromUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeDeletePlayerResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeDeletePlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerDeletePlayerResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeDeletePlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeDeletePlayerResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeDeletePlayerResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeDeletePlayerResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeDeletePlayerResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeDeletePlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeDeletePlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeDeletePlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeDeletePushNotificationTemplateResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeDeletePushNotificationTemplateResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerDeletePushNotificationTemplateResult ReturnValue;                                  // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeDeletePushNotificationTemplateResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeDeletePushNotificationTemplateResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeDeletePushNotificationTemplateResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeDeletePushNotificationTemplateResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeDeletePushNotificationTemplateResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeDeletePushNotificationTemplateResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeDeletePushNotificationTemplateResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeDeletePushNotificationTemplateResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerEmptyResponse                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeEmptyResponseResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeEmptyResponseResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeEmptyResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeEmptyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerEmptyResult                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeEmptyResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeEmptyResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeEmptyResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeEmptyResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeEmptyResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeEmptyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeEmptyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeEmptyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeEvaluateRandomResultTableResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeEvaluateRandomResultTableResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerEvaluateRandomResultTableResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeEvaluateRandomResultTableResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeEvaluateRandomResultTableResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeEvaluateRandomResultTableResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeEvaluateRandomResultTableResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeEvaluateRandomResultTableResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeEvaluateRandomResultTableResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeEvaluateRandomResultTableResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeEvaluateRandomResultTableResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeExecuteCloudScriptResultResponse
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerModelDecoder_decodeExecuteCloudScriptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerExecuteCloudScriptResult        ReturnValue;                                       // 0x0008(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeExecuteCloudScriptResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeExecuteCloudScriptResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeExecuteCloudScriptResultResponse) == 0x000068, "Wrong size on PlayFabServerModelDecoder_decodeExecuteCloudScriptResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeExecuteCloudScriptResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeExecuteCloudScriptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeExecuteCloudScriptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeExecuteCloudScriptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetAllSegmentsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetAllSegmentsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetAllSegmentsResult            ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetAllSegmentsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetAllSegmentsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetAllSegmentsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetAllSegmentsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetAllSegmentsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetAllSegmentsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetAllSegmentsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetAllSegmentsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetCatalogItemsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetCatalogItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetCatalogItemsResult           ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetCatalogItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetCatalogItemsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetCatalogItemsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetCatalogItemsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetCatalogItemsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetCatalogItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetCatalogItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetCatalogItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetCharacterDataResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetCharacterDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetCharacterDataResult          ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetCharacterDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetCharacterDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetCharacterDataResultResponse) == 0x000040, "Wrong size on PlayFabServerModelDecoder_decodeGetCharacterDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetCharacterDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetCharacterDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetCharacterDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetCharacterDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetCharacterInventoryResultResponse
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetCharacterInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetCharacterInventoryResult     ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetCharacterInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetCharacterInventoryResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetCharacterInventoryResultResponse) == 0x000050, "Wrong size on PlayFabServerModelDecoder_decodeGetCharacterInventoryResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetCharacterInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetCharacterInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetCharacterInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetCharacterInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetCharacterLeaderboardResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetCharacterLeaderboardResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetCharacterLeaderboardResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetCharacterLeaderboardResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetCharacterLeaderboardResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetCharacterLeaderboardResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetCharacterLeaderboardResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetCharacterLeaderboardResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetCharacterLeaderboardResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetCharacterLeaderboardResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetCharacterLeaderboardResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetCharacterStatisticsResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetCharacterStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetCharacterStatisticsResult    ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetCharacterStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetCharacterStatisticsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetCharacterStatisticsResultResponse) == 0x000038, "Wrong size on PlayFabServerModelDecoder_decodeGetCharacterStatisticsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetCharacterStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetCharacterStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetCharacterStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetCharacterStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetContentDownloadUrlResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetContentDownloadUrlResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetContentDownloadUrlResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetContentDownloadUrlResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetContentDownloadUrlResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetContentDownloadUrlResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetContentDownloadUrlResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetContentDownloadUrlResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetContentDownloadUrlResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetContentDownloadUrlResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetContentDownloadUrlResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetFriendsListResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetFriendsListResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetFriendsListResult            ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetFriendsListResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetFriendsListResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetFriendsListResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetFriendsListResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetFriendsListResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetFriendsListResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetFriendsListResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetFriendsListResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardAroundCharacterResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetLeaderboardAroundCharacterResult ReturnValue;                                   // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardAroundUserResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetLeaderboardAroundUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetLeaderboardAroundUserResult  ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetLeaderboardAroundUserResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetLeaderboardAroundUserResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetLeaderboardAroundUserResultResponse) == 0x000038, "Wrong size on PlayFabServerModelDecoder_decodeGetLeaderboardAroundUserResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetLeaderboardAroundUserResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetLeaderboardAroundUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetLeaderboardAroundUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetLeaderboardAroundUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardForUsersCharactersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetLeaderboardForUsersCharactersResult ReturnValue;                                // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetLeaderboardResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetLeaderboardResult            ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetLeaderboardResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetLeaderboardResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetLeaderboardResultResponse) == 0x000038, "Wrong size on PlayFabServerModelDecoder_decodeGetLeaderboardResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetLeaderboardResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetLeaderboardResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetLeaderboardResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetLeaderboardResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerCombinedInfoResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayerCombinedInfoResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayerCombinedInfoResult     ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayerCombinedInfoResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayerCombinedInfoResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayerCombinedInfoResultResponse) == 0x000028, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayerCombinedInfoResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayerCombinedInfoResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayerCombinedInfoResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayerCombinedInfoResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayerCombinedInfoResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerProfileResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayerProfileResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayerProfileResult          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayerProfileResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayerProfileResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayerProfileResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayerProfileResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayerProfileResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayerProfileResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayerProfileResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayerProfileResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerSegmentsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayerSegmentsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayerSegmentsResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayerSegmentsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayerSegmentsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayerSegmentsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayerSegmentsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayerSegmentsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayerSegmentsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayerSegmentsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayerSegmentsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayersInSegmentResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayersInSegmentResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayersInSegmentResult       ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayersInSegmentResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayersInSegmentResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayersInSegmentResultResponse) == 0x000038, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayersInSegmentResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayersInSegmentResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayersInSegmentResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayersInSegmentResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayersInSegmentResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerStatisticsResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayerStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayerStatisticsResult       ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayerStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayerStatisticsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayerStatisticsResultResponse) == 0x000030, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayerStatisticsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayerStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayerStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayerStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayerStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerStatisticVersionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayerStatisticVersionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayerStatisticVersionsResult ReturnValue;                                      // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayerStatisticVersionsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayerStatisticVersionsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayerStatisticVersionsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayerStatisticVersionsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayerStatisticVersionsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayerStatisticVersionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayerStatisticVersionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayerStatisticVersionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerTagsResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayerTagsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayerTagsResult             ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayerTagsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayerTagsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayerTagsResultResponse) == 0x000030, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayerTagsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayerTagsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayerTagsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayerTagsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayerTagsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromFacebookIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromFacebookIDsResult ReturnValue;                                    // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult ReturnValue;                        // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromGenericIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromGenericIDsResult ReturnValue;                                     // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsResult ReturnValue;                      // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult ReturnValue;                        // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromPSNAccountIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromPSNAccountIDsResult ReturnValue;                                  // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromPSNOnlineIDsResult ReturnValue;                                   // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNOnlineIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromSteamIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromSteamIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromTwitchIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromTwitchIDsResult ReturnValue;                                      // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromXboxLiveIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromXboxLiveIDsResult ReturnValue;                                    // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPublisherDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetPublisherDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPublisherDataResult          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetPublisherDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetPublisherDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetPublisherDataResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_decodeGetPublisherDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPublisherDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetPublisherDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetPublisherDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetPublisherDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetRandomResultTablesResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetRandomResultTablesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetRandomResultTablesResult     ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetRandomResultTablesResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetRandomResultTablesResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetRandomResultTablesResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_decodeGetRandomResultTablesResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetRandomResultTablesResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetRandomResultTablesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetRandomResultTablesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetRandomResultTablesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetServerCustomIDsFromPlayFabIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetServerCustomIDsFromPlayFabIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetServerCustomIDsFromPlayFabIDsResult ReturnValue;                                // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetServerCustomIDsFromPlayFabIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetServerCustomIDsFromPlayFabIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetServerCustomIDsFromPlayFabIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetServerCustomIDsFromPlayFabIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetServerCustomIDsFromPlayFabIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetServerCustomIDsFromPlayFabIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetServerCustomIDsFromPlayFabIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetServerCustomIDsFromPlayFabIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetSharedGroupDataResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetSharedGroupDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetSharedGroupDataResult        ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetSharedGroupDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetSharedGroupDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetSharedGroupDataResultResponse) == 0x000028, "Wrong size on PlayFabServerModelDecoder_decodeGetSharedGroupDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetSharedGroupDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetSharedGroupDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetSharedGroupDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetSharedGroupDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetStoreItemsResultResponse
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetStoreItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetStoreItemsResult             ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetStoreItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetStoreItemsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetStoreItemsResultResponse) == 0x000050, "Wrong size on PlayFabServerModelDecoder_decodeGetStoreItemsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetStoreItemsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetStoreItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetStoreItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetStoreItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetTimeResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetTimeResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetTimeResult                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetTimeResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetTimeResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetTimeResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetTimeResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetTimeResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetTimeResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetTimeResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetTimeResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetTitleDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetTitleDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetTitleDataResult              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetTitleDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetTitleDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetTitleDataResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_decodeGetTitleDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetTitleDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetTitleDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetTitleDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetTitleDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetTitleNewsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetTitleNewsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetTitleNewsResult              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetTitleNewsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetTitleNewsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetTitleNewsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetTitleNewsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetTitleNewsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetTitleNewsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetTitleNewsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetTitleNewsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetUserAccountInfoResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetUserAccountInfoResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetUserAccountInfoResult        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetUserAccountInfoResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetUserAccountInfoResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetUserAccountInfoResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_decodeGetUserAccountInfoResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetUserAccountInfoResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetUserAccountInfoResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetUserAccountInfoResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetUserAccountInfoResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetUserBansResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetUserBansResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetUserBansResult               ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetUserBansResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetUserBansResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetUserBansResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGetUserBansResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetUserBansResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetUserBansResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetUserBansResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetUserBansResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetUserDataResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetUserDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetUserDataResult               ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetUserDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetUserDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetUserDataResultResponse) == 0x000030, "Wrong size on PlayFabServerModelDecoder_decodeGetUserDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetUserDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetUserDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetUserDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetUserDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetUserInventoryResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabServerModelDecoder_decodeGetUserInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetUserInventoryResult          ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGetUserInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGetUserInventoryResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGetUserInventoryResultResponse) == 0x000040, "Wrong size on PlayFabServerModelDecoder_decodeGetUserInventoryResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetUserInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGetUserInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGetUserInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGetUserInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGrantCharacterToUserResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGrantCharacterToUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGrantCharacterToUserResult      ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGrantCharacterToUserResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGrantCharacterToUserResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGrantCharacterToUserResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGrantCharacterToUserResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGrantCharacterToUserResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGrantCharacterToUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGrantCharacterToUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGrantCharacterToUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGrantItemsToCharacterResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGrantItemsToCharacterResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGrantItemsToCharacterResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGrantItemsToCharacterResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGrantItemsToCharacterResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGrantItemsToCharacterResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGrantItemsToCharacterResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGrantItemsToCharacterResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGrantItemsToCharacterResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGrantItemsToCharacterResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGrantItemsToCharacterResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGrantItemsToUserResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGrantItemsToUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGrantItemsToUserResult          ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGrantItemsToUserResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGrantItemsToUserResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGrantItemsToUserResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGrantItemsToUserResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGrantItemsToUserResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGrantItemsToUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGrantItemsToUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGrantItemsToUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGrantItemsToUsersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeGrantItemsToUsersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGrantItemsToUsersResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeGrantItemsToUsersResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeGrantItemsToUsersResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeGrantItemsToUsersResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeGrantItemsToUsersResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGrantItemsToUsersResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeGrantItemsToUsersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeGrantItemsToUsersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeGrantItemsToUsersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeLinkNintendoSwitchDeviceIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerLinkNintendoSwitchDeviceIdResult ReturnValue;                                      // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeLinkPSNAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeLinkPSNAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerLinkPSNAccountResult            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeLinkPSNAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeLinkPSNAccountResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeLinkPSNAccountResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeLinkPSNAccountResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeLinkPSNAccountResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeLinkPSNAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeLinkPSNAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeLinkPSNAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeLinkPSNIdResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeLinkPSNIdResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerLinkPSNIdResponse               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeLinkPSNIdResponseResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeLinkPSNIdResponseResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeLinkPSNIdResponseResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeLinkPSNIdResponseResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeLinkPSNIdResponseResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeLinkPSNIdResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeLinkPSNIdResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeLinkPSNIdResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeLinkServerCustomIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeLinkServerCustomIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerLinkServerCustomIdResult        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeLinkServerCustomIdResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeLinkServerCustomIdResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeLinkServerCustomIdResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeLinkServerCustomIdResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeLinkServerCustomIdResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeLinkServerCustomIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeLinkServerCustomIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeLinkServerCustomIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeLinkSteamIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeLinkSteamIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerLinkSteamIdResult               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeLinkSteamIdResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeLinkSteamIdResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeLinkSteamIdResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeLinkSteamIdResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeLinkSteamIdResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeLinkSteamIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeLinkSteamIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeLinkSteamIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeLinkXboxAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeLinkXboxAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerLinkXboxAccountResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeLinkXboxAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeLinkXboxAccountResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeLinkXboxAccountResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeLinkXboxAccountResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeLinkXboxAccountResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeLinkXboxAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeLinkXboxAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeLinkXboxAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeListUsersCharactersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeListUsersCharactersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerListUsersCharactersResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeListUsersCharactersResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeListUsersCharactersResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeListUsersCharactersResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeListUsersCharactersResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeListUsersCharactersResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeListUsersCharactersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeListUsersCharactersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeListUsersCharactersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeModifyCharacterVirtualCurrencyResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerModelDecoder_decodeModifyCharacterVirtualCurrencyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerModifyCharacterVirtualCurrencyResult ReturnValue;                                  // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeModifyCharacterVirtualCurrencyResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeModifyCharacterVirtualCurrencyResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeModifyCharacterVirtualCurrencyResultResponse) == 0x000028, "Wrong size on PlayFabServerModelDecoder_decodeModifyCharacterVirtualCurrencyResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeModifyCharacterVirtualCurrencyResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeModifyCharacterVirtualCurrencyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeModifyCharacterVirtualCurrencyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeModifyCharacterVirtualCurrencyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeModifyItemUsesResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerModelDecoder_decodeModifyItemUsesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerModifyItemUsesResult            ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeModifyItemUsesResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeModifyItemUsesResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeModifyItemUsesResultResponse) == 0x000028, "Wrong size on PlayFabServerModelDecoder_decodeModifyItemUsesResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeModifyItemUsesResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeModifyItemUsesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeModifyItemUsesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeModifyItemUsesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeModifyUserVirtualCurrencyResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerModelDecoder_decodeModifyUserVirtualCurrencyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerModifyUserVirtualCurrencyResult ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeModifyUserVirtualCurrencyResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeModifyUserVirtualCurrencyResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeModifyUserVirtualCurrencyResultResponse) == 0x000038, "Wrong size on PlayFabServerModelDecoder_decodeModifyUserVirtualCurrencyResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeModifyUserVirtualCurrencyResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeModifyUserVirtualCurrencyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeModifyUserVirtualCurrencyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeModifyUserVirtualCurrencyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeMoveItemToCharacterFromCharacterResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeMoveItemToCharacterFromCharacterResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerMoveItemToCharacterFromCharacterResult ReturnValue;                                // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeMoveItemToCharacterFromCharacterResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeMoveItemToCharacterFromCharacterResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeMoveItemToCharacterFromCharacterResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeMoveItemToCharacterFromCharacterResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeMoveItemToCharacterFromCharacterResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeMoveItemToCharacterFromCharacterResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeMoveItemToCharacterFromCharacterResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeMoveItemToCharacterFromCharacterResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeMoveItemToCharacterFromUserResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeMoveItemToCharacterFromUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerMoveItemToCharacterFromUserResult ReturnValue;                                     // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeMoveItemToCharacterFromUserResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeMoveItemToCharacterFromUserResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeMoveItemToCharacterFromUserResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeMoveItemToCharacterFromUserResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeMoveItemToCharacterFromUserResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeMoveItemToCharacterFromUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeMoveItemToCharacterFromUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeMoveItemToCharacterFromUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeMoveItemToUserFromCharacterResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeMoveItemToUserFromCharacterResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerMoveItemToUserFromCharacterResult ReturnValue;                                     // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeMoveItemToUserFromCharacterResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeMoveItemToUserFromCharacterResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeMoveItemToUserFromCharacterResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeMoveItemToUserFromCharacterResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeMoveItemToUserFromCharacterResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeMoveItemToUserFromCharacterResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeMoveItemToUserFromCharacterResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeMoveItemToUserFromCharacterResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRedeemCouponResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeRedeemCouponResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRedeemCouponResult              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeRedeemCouponResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeRedeemCouponResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeRedeemCouponResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeRedeemCouponResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRedeemCouponResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeRedeemCouponResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRedeemCouponResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeRedeemCouponResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRemovePlayerTagResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeRemovePlayerTagResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRemovePlayerTagResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeRemovePlayerTagResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeRemovePlayerTagResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeRemovePlayerTagResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeRemovePlayerTagResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRemovePlayerTagResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeRemovePlayerTagResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRemovePlayerTagResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeRemovePlayerTagResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRemoveSharedGroupMembersResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeRemoveSharedGroupMembersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRemoveSharedGroupMembersResult  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeRemoveSharedGroupMembersResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeRemoveSharedGroupMembersResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeRemoveSharedGroupMembersResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeRemoveSharedGroupMembersResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRemoveSharedGroupMembersResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeRemoveSharedGroupMembersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRemoveSharedGroupMembersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeRemoveSharedGroupMembersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeReportPlayerServerResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_decodeReportPlayerServerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerReportPlayerServerResult        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeReportPlayerServerResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeReportPlayerServerResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeReportPlayerServerResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_decodeReportPlayerServerResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeReportPlayerServerResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeReportPlayerServerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeReportPlayerServerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeReportPlayerServerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRevokeAllBansForUserResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeRevokeAllBansForUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRevokeAllBansForUserResult      ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeRevokeAllBansForUserResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeRevokeAllBansForUserResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeRevokeAllBansForUserResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeRevokeAllBansForUserResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRevokeAllBansForUserResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeRevokeAllBansForUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRevokeAllBansForUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeRevokeAllBansForUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRevokeBansResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeRevokeBansResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRevokeBansResult                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeRevokeBansResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeRevokeBansResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeRevokeBansResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeRevokeBansResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRevokeBansResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeRevokeBansResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRevokeBansResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeRevokeBansResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRevokeInventoryItemsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeRevokeInventoryItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRevokeInventoryItemsResult      ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeRevokeInventoryItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeRevokeInventoryItemsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeRevokeInventoryItemsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeRevokeInventoryItemsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRevokeInventoryItemsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeRevokeInventoryItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRevokeInventoryItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeRevokeInventoryItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRevokeInventoryResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeRevokeInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRevokeInventoryResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeRevokeInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeRevokeInventoryResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeRevokeInventoryResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeRevokeInventoryResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRevokeInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeRevokeInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeRevokeInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeRevokeInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSavePushNotificationTemplateResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeSavePushNotificationTemplateResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSavePushNotificationTemplateResult ReturnValue;                                    // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeSavePushNotificationTemplateResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeSavePushNotificationTemplateResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeSavePushNotificationTemplateResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeSavePushNotificationTemplateResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSavePushNotificationTemplateResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeSavePushNotificationTemplateResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSavePushNotificationTemplateResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeSavePushNotificationTemplateResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSendCustomAccountRecoveryEmailResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeSendCustomAccountRecoveryEmailResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSendCustomAccountRecoveryEmailResult ReturnValue;                                  // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeSendCustomAccountRecoveryEmailResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeSendCustomAccountRecoveryEmailResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeSendCustomAccountRecoveryEmailResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeSendCustomAccountRecoveryEmailResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSendCustomAccountRecoveryEmailResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeSendCustomAccountRecoveryEmailResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSendCustomAccountRecoveryEmailResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeSendCustomAccountRecoveryEmailResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSendEmailFromTemplateResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeSendEmailFromTemplateResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSendEmailFromTemplateResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeSendEmailFromTemplateResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeSendEmailFromTemplateResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeSendEmailFromTemplateResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeSendEmailFromTemplateResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSendEmailFromTemplateResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeSendEmailFromTemplateResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSendEmailFromTemplateResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeSendEmailFromTemplateResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSendPushNotificationResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeSendPushNotificationResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSendPushNotificationResult      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeSendPushNotificationResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeSendPushNotificationResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeSendPushNotificationResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeSendPushNotificationResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSendPushNotificationResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeSendPushNotificationResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSendPushNotificationResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeSendPushNotificationResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeServerLoginResultResponse
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerModelDecoder_decodeServerLoginResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerServerLoginResult               ReturnValue;                                       // 0x0008(0x0068)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeServerLoginResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeServerLoginResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeServerLoginResultResponse) == 0x000070, "Wrong size on PlayFabServerModelDecoder_decodeServerLoginResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeServerLoginResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeServerLoginResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeServerLoginResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeServerLoginResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSetPlayerSecretResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeSetPlayerSecretResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSetPlayerSecretResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeSetPlayerSecretResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeSetPlayerSecretResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeSetPlayerSecretResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeSetPlayerSecretResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSetPlayerSecretResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeSetPlayerSecretResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSetPlayerSecretResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeSetPlayerSecretResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSetPublisherDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeSetPublisherDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSetPublisherDataResult          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeSetPublisherDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeSetPublisherDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeSetPublisherDataResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeSetPublisherDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSetPublisherDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeSetPublisherDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSetPublisherDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeSetPublisherDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSetTitleDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeSetTitleDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSetTitleDataResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeSetTitleDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeSetTitleDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeSetTitleDataResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeSetTitleDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSetTitleDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeSetTitleDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeSetTitleDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeSetTitleDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUnlinkNintendoSwitchDeviceIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUnlinkNintendoSwitchDeviceIdResult ReturnValue;                                    // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUnlinkPSNAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeUnlinkPSNAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUnlinkPSNAccountResult          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeUnlinkPSNAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeUnlinkPSNAccountResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeUnlinkPSNAccountResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeUnlinkPSNAccountResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUnlinkPSNAccountResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeUnlinkPSNAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUnlinkPSNAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeUnlinkPSNAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUnlinkServerCustomIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeUnlinkServerCustomIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUnlinkServerCustomIdResult      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeUnlinkServerCustomIdResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeUnlinkServerCustomIdResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeUnlinkServerCustomIdResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeUnlinkServerCustomIdResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUnlinkServerCustomIdResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeUnlinkServerCustomIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUnlinkServerCustomIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeUnlinkServerCustomIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUnlinkSteamIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeUnlinkSteamIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUnlinkSteamIdResult             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeUnlinkSteamIdResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeUnlinkSteamIdResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeUnlinkSteamIdResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeUnlinkSteamIdResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUnlinkSteamIdResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeUnlinkSteamIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUnlinkSteamIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeUnlinkSteamIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUnlinkXboxAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeUnlinkXboxAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUnlinkXboxAccountResult         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeUnlinkXboxAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeUnlinkXboxAccountResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeUnlinkXboxAccountResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeUnlinkXboxAccountResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUnlinkXboxAccountResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeUnlinkXboxAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUnlinkXboxAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeUnlinkXboxAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUnlockContainerItemResultResponse
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerModelDecoder_decodeUnlockContainerItemResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUnlockContainerItemResult       ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeUnlockContainerItemResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeUnlockContainerItemResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeUnlockContainerItemResultResponse) == 0x000048, "Wrong size on PlayFabServerModelDecoder_decodeUnlockContainerItemResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUnlockContainerItemResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeUnlockContainerItemResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUnlockContainerItemResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeUnlockContainerItemResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateBansResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeUpdateBansResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUpdateBansResult                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeUpdateBansResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeUpdateBansResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeUpdateBansResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeUpdateBansResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUpdateBansResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeUpdateBansResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUpdateBansResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeUpdateBansResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateCharacterDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_decodeUpdateCharacterDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUpdateCharacterDataResult       ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeUpdateCharacterDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeUpdateCharacterDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeUpdateCharacterDataResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_decodeUpdateCharacterDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUpdateCharacterDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeUpdateCharacterDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUpdateCharacterDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeUpdateCharacterDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateCharacterStatisticsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeUpdateCharacterStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUpdateCharacterStatisticsResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeUpdateCharacterStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeUpdateCharacterStatisticsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeUpdateCharacterStatisticsResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeUpdateCharacterStatisticsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUpdateCharacterStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeUpdateCharacterStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUpdateCharacterStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeUpdateCharacterStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUpdatePlayerStatisticsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeUpdatePlayerStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUpdatePlayerStatisticsResult    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeUpdatePlayerStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeUpdatePlayerStatisticsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeUpdatePlayerStatisticsResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeUpdatePlayerStatisticsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUpdatePlayerStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeUpdatePlayerStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUpdatePlayerStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeUpdatePlayerStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateSharedGroupDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_decodeUpdateSharedGroupDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUpdateSharedGroupDataResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeUpdateSharedGroupDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeUpdateSharedGroupDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeUpdateSharedGroupDataResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_decodeUpdateSharedGroupDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUpdateSharedGroupDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeUpdateSharedGroupDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUpdateSharedGroupDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeUpdateSharedGroupDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateUserDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_decodeUpdateUserDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUpdateUserDataResult            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeUpdateUserDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeUpdateUserDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeUpdateUserDataResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_decodeUpdateUserDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUpdateUserDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeUpdateUserDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeUpdateUserDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeUpdateUserDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeWriteEventResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_decodeWriteEventResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerWriteEventResponse              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_decodeWriteEventResponseResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_decodeWriteEventResponseResponse");
static_assert(sizeof(PlayFabServerModelDecoder_decodeWriteEventResponseResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_decodeWriteEventResponseResponse");
static_assert(offsetof(PlayFabServerModelDecoder_decodeWriteEventResponseResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_decodeWriteEventResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_decodeWriteEventResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_decodeWriteEventResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabUtilities.getErrorText
// 0x0018 (0x0018 - 0x0000)
struct PlayFabUtilities_getErrorText final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabUtilities_getErrorText) == 0x000008, "Wrong alignment on PlayFabUtilities_getErrorText");
static_assert(sizeof(PlayFabUtilities_getErrorText) == 0x000018, "Wrong size on PlayFabUtilities_getErrorText");
static_assert(offsetof(PlayFabUtilities_getErrorText, Code) == 0x000000, "Member 'PlayFabUtilities_getErrorText::Code' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_getErrorText, ReturnValue) == 0x000008, "Member 'PlayFabUtilities_getErrorText::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabUtilities.getPhotonAppId
// 0x0018 (0x0018 - 0x0000)
struct PlayFabUtilities_getPhotonAppId final
{
public:
	bool                                          Realtime;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Chat;                                              // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Turnbased;                                         // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabUtilities_getPhotonAppId) == 0x000008, "Wrong alignment on PlayFabUtilities_getPhotonAppId");
static_assert(sizeof(PlayFabUtilities_getPhotonAppId) == 0x000018, "Wrong size on PlayFabUtilities_getPhotonAppId");
static_assert(offsetof(PlayFabUtilities_getPhotonAppId, Realtime) == 0x000000, "Member 'PlayFabUtilities_getPhotonAppId::Realtime' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_getPhotonAppId, Chat) == 0x000001, "Member 'PlayFabUtilities_getPhotonAppId::Chat' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_getPhotonAppId, Turnbased) == 0x000002, "Member 'PlayFabUtilities_getPhotonAppId::Turnbased' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_getPhotonAppId, ReturnValue) == 0x000008, "Member 'PlayFabUtilities_getPhotonAppId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabUtilities.setPlayFabSettings
// 0x0060 (0x0060 - 0x0000)
struct PlayFabUtilities_setPlayFabSettings final
{
public:
	class FString                                 GameTitleId;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlayFabSecretApiKey;                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProductionUrl;                                     // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhotonRealtimeAppId;                               // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhotonTurnbasedAppId;                              // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhotonChatAppId;                                   // 0x0050(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabUtilities_setPlayFabSettings) == 0x000008, "Wrong alignment on PlayFabUtilities_setPlayFabSettings");
static_assert(sizeof(PlayFabUtilities_setPlayFabSettings) == 0x000060, "Wrong size on PlayFabUtilities_setPlayFabSettings");
static_assert(offsetof(PlayFabUtilities_setPlayFabSettings, GameTitleId) == 0x000000, "Member 'PlayFabUtilities_setPlayFabSettings::GameTitleId' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_setPlayFabSettings, PlayFabSecretApiKey) == 0x000010, "Member 'PlayFabUtilities_setPlayFabSettings::PlayFabSecretApiKey' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_setPlayFabSettings, ProductionUrl) == 0x000020, "Member 'PlayFabUtilities_setPlayFabSettings::ProductionUrl' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_setPlayFabSettings, PhotonRealtimeAppId) == 0x000030, "Member 'PlayFabUtilities_setPlayFabSettings::PhotonRealtimeAppId' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_setPlayFabSettings, PhotonTurnbasedAppId) == 0x000040, "Member 'PlayFabUtilities_setPlayFabSettings::PhotonTurnbasedAppId' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_setPlayFabSettings, PhotonChatAppId) == 0x000050, "Member 'PlayFabUtilities_setPlayFabSettings::PhotonChatAppId' has a wrong offset!");

}

