#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_ChallengeComplete_HUD

#include "Basic.hpp"

#include "Widget_ChallengeComplete_HUD_classes.hpp"
#include "Widget_ChallengeComplete_HUD_parameters.hpp"


namespace SDK
{

// Function Widget_ChallengeComplete_HUD.Widget_ChallengeComplete_HUD_C.AddChallengeToQueue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRChallenge&               Challenge                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWidget_ChallengeComplete_HUD_C::AddChallengeToQueue(const struct FRChallenge& Challenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChallengeComplete_HUD_C", "AddChallengeToQueue");

	Params::Widget_ChallengeComplete_HUD_C_AddChallengeToQueue Parms{};

	Parms.Challenge = std::move(Challenge);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChallengeComplete_HUD.Widget_ChallengeComplete_HUD_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWidget_ChallengeComplete_HUD_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChallengeComplete_HUD_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_ChallengeComplete_HUD.Widget_ChallengeComplete_HUD_C.ExecuteUbergraph_Widget_ChallengeComplete_HUD
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_ChallengeComplete_HUD_C::ExecuteUbergraph_Widget_ChallengeComplete_HUD(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChallengeComplete_HUD_C", "ExecuteUbergraph_Widget_ChallengeComplete_HUD");

	Params::Widget_ChallengeComplete_HUD_C_ExecuteUbergraph_Widget_ChallengeComplete_HUD Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChallengeComplete_HUD.Widget_ChallengeComplete_HUD_C.OnChallengeCompletedEvent_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRChallenge&               Challenge                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UWidget_ChallengeComplete_HUD_C::OnChallengeCompletedEvent_Event_0(const struct FRChallenge& Challenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChallengeComplete_HUD_C", "OnChallengeCompletedEvent_Event_0");

	Params::Widget_ChallengeComplete_HUD_C_OnChallengeCompletedEvent_Event_0 Parms{};

	Parms.Challenge = std::move(Challenge);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChallengeComplete_HUD.Widget_ChallengeComplete_HUD_C.OnOwnerDeath
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class URHealthComponent*                Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FDamageCombatEvent&        DamageEventData                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UWidget_ChallengeComplete_HUD_C::OnOwnerDeath(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChallengeComplete_HUD_C", "OnOwnerDeath");

	Params::Widget_ChallengeComplete_HUD_C_OnOwnerDeath Parms{};

	Parms.Component = Component;
	Parms.DamageEventData = std::move(DamageEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChallengeComplete_HUD.Widget_ChallengeComplete_HUD_C.OnRunEnded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RunFailed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_ChallengeComplete_HUD_C::OnRunEnded(bool RunFailed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChallengeComplete_HUD_C", "OnRunEnded");

	Params::Widget_ChallengeComplete_HUD_C_OnRunEnded Parms{};

	Parms.RunFailed = RunFailed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChallengeComplete_HUD.Widget_ChallengeComplete_HUD_C.SetChallengeInfo
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRChallenge&               RChallenge                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UWidget_ChallengeComplete_HUD_C::SetChallengeInfo(const struct FRChallenge& RChallenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChallengeComplete_HUD_C", "SetChallengeInfo");

	Params::Widget_ChallengeComplete_HUD_C_SetChallengeInfo Parms{};

	Parms.RChallenge = std::move(RChallenge);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChallengeComplete_HUD.Widget_ChallengeComplete_HUD_C.TryCelebration
// (BlueprintCallable, BlueprintEvent)

void UWidget_ChallengeComplete_HUD_C::TryCelebration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChallengeComplete_HUD_C", "TryCelebration");

	UObject::ProcessEvent(Func, nullptr);
}

}

