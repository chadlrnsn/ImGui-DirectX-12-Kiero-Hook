#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_SpiritGauge

#include "Basic.hpp"

#include "Widget_SpiritGauge_classes.hpp"
#include "Widget_SpiritGauge_parameters.hpp"


namespace SDK
{

// Function Widget_SpiritGauge.Widget_SpiritGauge_C.ExecuteUbergraph_Widget_SpiritGauge
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_SpiritGauge_C::ExecuteUbergraph_Widget_SpiritGauge(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_SpiritGauge_C", "ExecuteUbergraph_Widget_SpiritGauge");

	Params::Widget_SpiritGauge_C_ExecuteUbergraph_Widget_SpiritGauge Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_SpiritGauge.Widget_SpiritGauge_C.GaugeReset
// (Public, BlueprintCallable, BlueprintEvent)

void UWidget_SpiritGauge_C::GaugeReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_SpiritGauge_C", "GaugeReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_SpiritGauge.Widget_SpiritGauge_C.SetGaugePercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_SpiritGauge_C::SetGaugePercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_SpiritGauge_C", "SetGaugePercent");

	Params::Widget_SpiritGauge_C_SetGaugePercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_SpiritGauge.Widget_SpiritGauge_C.SetGaugeVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Visibility_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_SpiritGauge_C::SetGaugeVisibility(ESlateVisibility Visibility_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_SpiritGauge_C", "SetGaugeVisibility");

	Params::Widget_SpiritGauge_C_SetGaugeVisibility Parms{};

	Parms.Visibility_0 = Visibility_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_SpiritGauge.Widget_SpiritGauge_C.ThresholdReached
// (Public, BlueprintCallable, BlueprintEvent)

void UWidget_SpiritGauge_C::ThresholdReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_SpiritGauge_C", "ThresholdReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_SpiritGauge.Widget_SpiritGauge_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_SpiritGauge_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_SpiritGauge_C", "Tick");

	Params::Widget_SpiritGauge_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

