#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChaosVDBlueprint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ChaosVDBlueprint.ChaosVDRuntimeBlueprintLibrary.RecordDebugDrawBox
// 0x0058 (0x0058 - 0x0000)
struct ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox final
{
public:
	const class UObject*                          WorldContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                   InBox;                                             // 0x0008(0x0038)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0048(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox) == 0x000008, "Wrong alignment on ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox");
static_assert(sizeof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox) == 0x000058, "Wrong size on ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox, WorldContext) == 0x000000, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox::WorldContext' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox, InBox) == 0x000008, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox::InBox' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox, Tag) == 0x000040, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox::Tag' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox, Color) == 0x000048, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawBox::Color' has a wrong offset!");

// Function ChaosVDBlueprint.ChaosVDRuntimeBlueprintLibrary.RecordDebugDrawLine
// 0x0050 (0x0050 - 0x0000)
struct ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine final
{
public:
	const class UObject*                          WorldContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InStartLocation;                                   // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InEndLocation;                                     // 0x0020(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0040(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine) == 0x000008, "Wrong alignment on ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine");
static_assert(sizeof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine) == 0x000050, "Wrong size on ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine, WorldContext) == 0x000000, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine::WorldContext' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine, InStartLocation) == 0x000008, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine::InStartLocation' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine, InEndLocation) == 0x000020, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine::InEndLocation' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine, Tag) == 0x000038, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine::Tag' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine, Color) == 0x000040, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawLine::Color' has a wrong offset!");

// Function ChaosVDBlueprint.ChaosVDRuntimeBlueprintLibrary.RecordDebugDrawSphere
// 0x0040 (0x0040 - 0x0000)
struct ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere final
{
public:
	const class UObject*                          WorldContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InCenter;                                          // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x0024(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x002C(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere) == 0x000008, "Wrong alignment on ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere");
static_assert(sizeof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere) == 0x000040, "Wrong size on ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere, WorldContext) == 0x000000, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere::WorldContext' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere, InCenter) == 0x000008, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere::InCenter' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere, Radius) == 0x000020, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere::Radius' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere, Tag) == 0x000024, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere::Tag' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere, Color) == 0x00002C, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawSphere::Color' has a wrong offset!");

// Function ChaosVDBlueprint.ChaosVDRuntimeBlueprintLibrary.RecordDebugDrawVector
// 0x0050 (0x0050 - 0x0000)
struct ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector final
{
public:
	const class UObject*                          WorldContext;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InStartLocation;                                   // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InVector;                                          // 0x0020(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0040(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector) == 0x000008, "Wrong alignment on ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector");
static_assert(sizeof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector) == 0x000050, "Wrong size on ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector, WorldContext) == 0x000000, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector::WorldContext' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector, InStartLocation) == 0x000008, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector::InStartLocation' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector, InVector) == 0x000020, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector::InVector' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector, Tag) == 0x000038, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector::Tag' has a wrong offset!");
static_assert(offsetof(ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector, Color) == 0x000040, "Member 'ChaosVDRuntimeBlueprintLibrary_RecordDebugDrawVector::Color' has a wrong offset!");

}

