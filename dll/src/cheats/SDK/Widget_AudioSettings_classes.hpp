#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_AudioSettings

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Widget_SettingTabBase_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_AudioSettings.Widget_AudioSettings_C
// 0x0058 (0x0330 - 0x02D8)
class UWidget_AudioSettings_C final : public UWidget_SettingTabBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Widget_AudioSettings_C;             // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidget_SettingsSlider_C*               Effects;                                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SettingsCheckbox_C*             EnableBinauralAudio;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SettingsSlider_C*               Master;                                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SettingsSlider_C*               Music;                                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SettingsCheckbox_C*             MuteOutOfFocus;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_0;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SettingsCheckbox_C*             ShowSubtitles;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_SettingsSlider_C*               Voice;                                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class USoundWave*>                     Sound;                                             // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void SetWidgetCurrentValues();
	void ResetSettings();
	void PreviousWidgetSettingsValue(class UUserWidget* Widget);
	void NextWidgetSettingsValue(class UUserWidget* Widget);
	void ExecuteUbergraph_Widget_AudioSettings(int32 EntryPoint);
	void Construct();
	void BP_GetScrollBoxWidget(class UScrollBox** Result);
	void BndEvt__Widget_AudioSettings_Voice_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature(double Value, double Percent);
	void BndEvt__Widget_AudioSettings_ShowSubtitles_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature(bool State);
	void BndEvt__Widget_AudioSettings_MuteOutOfFocus_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature(bool State);
	void BndEvt__Widget_AudioSettings_Music_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature(double Value, double Percent);
	void BndEvt__Widget_AudioSettings_Master_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature(double Value, double Percent);
	void BndEvt__Widget_AudioSettings_EnableBinauralAudio_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature(bool State);
	void BndEvt__Widget_AudioSettings_Effects_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature(double Value, double Percent);
	void ApplySettings();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_AudioSettings_C">();
	}
	static class UWidget_AudioSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_AudioSettings_C>();
	}
};
static_assert(alignof(UWidget_AudioSettings_C) == 0x000008, "Wrong alignment on UWidget_AudioSettings_C");
static_assert(sizeof(UWidget_AudioSettings_C) == 0x000330, "Wrong size on UWidget_AudioSettings_C");
static_assert(offsetof(UWidget_AudioSettings_C, UberGraphFrame_Widget_AudioSettings_C) == 0x0002D8, "Member 'UWidget_AudioSettings_C::UberGraphFrame_Widget_AudioSettings_C' has a wrong offset!");
static_assert(offsetof(UWidget_AudioSettings_C, Effects) == 0x0002E0, "Member 'UWidget_AudioSettings_C::Effects' has a wrong offset!");
static_assert(offsetof(UWidget_AudioSettings_C, EnableBinauralAudio) == 0x0002E8, "Member 'UWidget_AudioSettings_C::EnableBinauralAudio' has a wrong offset!");
static_assert(offsetof(UWidget_AudioSettings_C, Master) == 0x0002F0, "Member 'UWidget_AudioSettings_C::Master' has a wrong offset!");
static_assert(offsetof(UWidget_AudioSettings_C, Music) == 0x0002F8, "Member 'UWidget_AudioSettings_C::Music' has a wrong offset!");
static_assert(offsetof(UWidget_AudioSettings_C, MuteOutOfFocus) == 0x000300, "Member 'UWidget_AudioSettings_C::MuteOutOfFocus' has a wrong offset!");
static_assert(offsetof(UWidget_AudioSettings_C, ScrollBox_0) == 0x000308, "Member 'UWidget_AudioSettings_C::ScrollBox_0' has a wrong offset!");
static_assert(offsetof(UWidget_AudioSettings_C, ShowSubtitles) == 0x000310, "Member 'UWidget_AudioSettings_C::ShowSubtitles' has a wrong offset!");
static_assert(offsetof(UWidget_AudioSettings_C, Voice) == 0x000318, "Member 'UWidget_AudioSettings_C::Voice' has a wrong offset!");
static_assert(offsetof(UWidget_AudioSettings_C, Sound) == 0x000320, "Member 'UWidget_AudioSettings_C::Sound' has a wrong offset!");

}

