#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPNotify_PlayCameraShake

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPNotify_PlayCameraShake.BPNotify_PlayCameraShake_C.Received_Notify
// 0x0070 (0x0070 - 0x0000)
struct BPNotify_PlayCameraShake_C_Received_Notify final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAnimNotifyEventReference              EventReference;                                    // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_TryGetPlayerController_PlayerController;  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_StartCameraShake_Scale_ImplicitCast;      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPNotify_PlayCameraShake_C_Received_Notify) == 0x000008, "Wrong alignment on BPNotify_PlayCameraShake_C_Received_Notify");
static_assert(sizeof(BPNotify_PlayCameraShake_C_Received_Notify) == 0x000070, "Wrong size on BPNotify_PlayCameraShake_C_Received_Notify");
static_assert(offsetof(BPNotify_PlayCameraShake_C_Received_Notify, MeshComp) == 0x000000, "Member 'BPNotify_PlayCameraShake_C_Received_Notify::MeshComp' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_Received_Notify, Animation) == 0x000008, "Member 'BPNotify_PlayCameraShake_C_Received_Notify::Animation' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_Received_Notify, EventReference) == 0x000010, "Member 'BPNotify_PlayCameraShake_C_Received_Notify::EventReference' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_Received_Notify, ReturnValue) == 0x000040, "Member 'BPNotify_PlayCameraShake_C_Received_Notify::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_Received_Notify, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BPNotify_PlayCameraShake_C_Received_Notify::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_Received_Notify, CallFunc_TryGetPlayerController_PlayerController) == 0x000050, "Member 'BPNotify_PlayCameraShake_C_Received_Notify::CallFunc_TryGetPlayerController_PlayerController' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_Received_Notify, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BPNotify_PlayCameraShake_C_Received_Notify::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_Received_Notify, CallFunc_IsValidClass_ReturnValue) == 0x000059, "Member 'BPNotify_PlayCameraShake_C_Received_Notify::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_Received_Notify, CallFunc_StartCameraShake_ReturnValue) == 0x000060, "Member 'BPNotify_PlayCameraShake_C_Received_Notify::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_Received_Notify, CallFunc_StartCameraShake_Scale_ImplicitCast) == 0x000068, "Member 'BPNotify_PlayCameraShake_C_Received_Notify::CallFunc_StartCameraShake_Scale_ImplicitCast' has a wrong offset!");

// Function BPNotify_PlayCameraShake.BPNotify_PlayCameraShake_C.TryGetPlayerController
// 0x0078 (0x0078 - 0x0000)
struct BPNotify_PlayCameraShake_C_TryGetPlayerController final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARWeapon*                               K2Node_DynamicCast_AsRWeapon;                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPawnBase*                             K2Node_DynamicCast_AsRPawn_Base;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPawnBase*                             K2Node_DynamicCast_AsRPawn_Base_1;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_1;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPNotify_PlayCameraShake_C_TryGetPlayerController) == 0x000008, "Wrong alignment on BPNotify_PlayCameraShake_C_TryGetPlayerController");
static_assert(sizeof(BPNotify_PlayCameraShake_C_TryGetPlayerController) == 0x000078, "Wrong size on BPNotify_PlayCameraShake_C_TryGetPlayerController");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, OwnerActor) == 0x000000, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::OwnerActor' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, PlayerController) == 0x000008, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::PlayerController' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, K2Node_DynamicCast_AsRWeapon) == 0x000010, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::K2Node_DynamicCast_AsRWeapon' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, K2Node_DynamicCast_AsRPawn_Base) == 0x000020, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::K2Node_DynamicCast_AsRPawn_Base' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, K2Node_DynamicCast_AsRPawn_Base_1) == 0x000040, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::K2Node_DynamicCast_AsRPawn_Base_1' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, K2Node_DynamicCast_AsPlayer_Controller) == 0x000050, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, CallFunc_GetController_ReturnValue_1) == 0x000060, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, K2Node_DynamicCast_AsPlayer_Controller_1) == 0x000068, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::K2Node_DynamicCast_AsPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(BPNotify_PlayCameraShake_C_TryGetPlayerController, K2Node_DynamicCast_bSuccess_4) == 0x000070, "Member 'BPNotify_PlayCameraShake_C_TryGetPlayerController::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

}

