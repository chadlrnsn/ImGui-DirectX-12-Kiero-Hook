#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_Settings_KeybindInput

#include "Basic.hpp"

#include "Widget_Settings_KeybindInput_classes.hpp"
#include "Widget_Settings_KeybindInput_parameters.hpp"


namespace SDK
{

// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.BndEvt__Widget_Settings_KeybindInput_InputKeySelector_151_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const struct FInputChord&               SelectedKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWidget_Settings_KeybindInput_C::BndEvt__Widget_Settings_KeybindInput_InputKeySelector_151_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "BndEvt__Widget_Settings_KeybindInput_InputKeySelector_151_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature");

	Params::Widget_Settings_KeybindInput_C_BndEvt__Widget_Settings_KeybindInput_InputKeySelector_151_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.BndEvt__Widget_Settings_KeybindInput_InputKeySelector_1_K2Node_ComponentBoundEvent_1_OnIsSelectingKeyChanged__DelegateSignature
// (BlueprintEvent)

void UWidget_Settings_KeybindInput_C::BndEvt__Widget_Settings_KeybindInput_InputKeySelector_1_K2Node_ComponentBoundEvent_1_OnIsSelectingKeyChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "BndEvt__Widget_Settings_KeybindInput_InputKeySelector_1_K2Node_ComponentBoundEvent_1_OnIsSelectingKeyChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWidget_Settings_KeybindInput_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.DesimulateLeftMouseClickForGamepad
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FInputChord&               InputChord                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FInputChord*                     OutInputChord                                          (Parm, OutParm, HasGetValueTypeHash)

void UWidget_Settings_KeybindInput_C::DesimulateLeftMouseClickForGamepad(const struct FInputChord& InputChord, struct FInputChord* OutInputChord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "DesimulateLeftMouseClickForGamepad");

	Params::Widget_Settings_KeybindInput_C_DesimulateLeftMouseClickForGamepad Parms{};

	Parms.InputChord = std::move(InputChord);

	UObject::ProcessEvent(Func, &Parms);

	if (OutInputChord != nullptr)
		*OutInputChord = std::move(Parms.OutInputChord);
}


// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.ExecuteUbergraph_Widget_Settings_KeybindInput
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_Settings_KeybindInput_C::ExecuteUbergraph_Widget_Settings_KeybindInput(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "ExecuteUbergraph_Widget_Settings_KeybindInput");

	Params::Widget_Settings_KeybindInput_C_ExecuteUbergraph_Widget_Settings_KeybindInput Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.GetInputKeySelector
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UInputKeySelector**               OutSelector                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWidget_Settings_KeybindInput_C::GetInputKeySelector(class UInputKeySelector** OutSelector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "GetInputKeySelector");

	Params::Widget_Settings_KeybindInput_C_GetInputKeySelector Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSelector != nullptr)
		*OutSelector = Parms.OutSelector;
}


// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.IsSelectingKeyChanged
// (Protected, BlueprintCallable, BlueprintEvent)

void UWidget_Settings_KeybindInput_C::IsSelectingKeyChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "IsSelectingKeyChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWidget_Settings_KeybindInput_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "OnAddedToFocusPath");

	Params::Widget_Settings_KeybindInput_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.OnGamepadIconSchemeChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGamepadIconScheme                      NewIconScheme                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_Settings_KeybindInput_C::OnGamepadIconSchemeChanged_Event(EGamepadIconScheme NewIconScheme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "OnGamepadIconSchemeChanged_Event");

	Params::Widget_Settings_KeybindInput_C_OnGamepadIconSchemeChanged_Event Parms{};

	Parms.NewIconScheme = NewIconScheme;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWidget_Settings_KeybindInput_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWidget_Settings_KeybindInput_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "OnRemovedFromFocusPath");

	Params::Widget_Settings_KeybindInput_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.SetIsGamepadInput
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsGamepadInput                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_Settings_KeybindInput_C::SetIsGamepadInput(bool bIsGamepadInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "SetIsGamepadInput");

	Params::Widget_Settings_KeybindInput_C_SetIsGamepadInput Parms{};

	Parms.bIsGamepadInput = bIsGamepadInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Settings_KeybindInput.Widget_Settings_KeybindInput_C.UpdateGamepadHelperIcon
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputChord&               InputChord                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UWidget_Settings_KeybindInput_C::UpdateGamepadHelperIcon(const struct FInputChord& InputChord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Settings_KeybindInput_C", "UpdateGamepadHelperIcon");

	Params::Widget_Settings_KeybindInput_C_UpdateGamepadHelperIcon Parms{};

	Parms.InputChord = std::move(InputChord);

	UObject::ProcessEvent(Func, &Parms);
}

}

