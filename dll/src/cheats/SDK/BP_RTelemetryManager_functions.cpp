#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RTelemetryManager

#include "Basic.hpp"

#include "BP_RTelemetryManager_classes.hpp"
#include "BP_RTelemetryManager_parameters.hpp"


namespace SDK
{

// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupRunEndEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupRunEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupRunEndEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupRoomEvents
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupRoomEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupRoomEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupReviveUseEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupReviveUseEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupReviveUseEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupPurchaseItemEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupPurchaseItemEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupPurchaseItemEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupPickupGodMutatorEvents
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupPickupGodMutatorEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupPickupGodMutatorEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupMeleeUsageEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupMeleeUsageEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupMeleeUsageEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupLogBookEvents
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupLogBookEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupLogBookEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupInteractEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupInteractEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupInteractEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupHealUseEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupHealUseEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupHealUseEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupFightEndEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupFightEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupFightEndEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupExitWorkbenchEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupExitWorkbenchEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupExitWorkbenchEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupDeathEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupDeathEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupDeathEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupDamageTakenEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupDamageTakenEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupDamageTakenEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupDamageDealtEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupDamageDealtEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupDamageDealtEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.SetupChallengeCompletedEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::SetupChallengeCompletedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "SetupChallengeCompletedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_RTelemetryManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnSegmentStarted_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AREnemySpawnAreaSegment*          EnemySpawnAreaSegment                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::OnSegmentStarted_Event(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnSegmentStarted_Event");

	Params::BP_RTelemetryManager_C_OnSegmentStarted_Event Parms{};

	Parms.EnemySpawnAreaSegment = EnemySpawnAreaSegment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnSegmentCompleted_Event_Multicast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AREnemySpawnAreaSegment*          EnemySpawnAreaSegment                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::OnSegmentCompleted_Event_Multicast(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnSegmentCompleted_Event_Multicast");

	Params::BP_RTelemetryManager_C_OnSegmentCompleted_Event_Multicast Parms{};

	Parms.EnemySpawnAreaSegment = EnemySpawnAreaSegment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnSegmentCompleted_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AREnemySpawnAreaSegment*          EnemySpawnAreaSegment                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::OnSegmentCompleted_Event(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnSegmentCompleted_Event");

	Params::BP_RTelemetryManager_C_OnSegmentCompleted_Event Parms{};

	Parms.EnemySpawnAreaSegment = EnemySpawnAreaSegment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnPreLevelChanged_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::OnPreLevelChanged_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnPreLevelChanged_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnPlayerPurchaseItem_Event_0
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    PurchasedItemName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   PurchasedItemCost                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<class AActor*>&            NotPurchasedItems                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_RTelemetryManager_C::OnPlayerPurchaseItem_Event_0(const class FString& PurchasedItemName, int32 PurchasedItemCost, const TArray<class AActor*>& NotPurchasedItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnPlayerPurchaseItem_Event_0");

	Params::BP_RTelemetryManager_C_OnPlayerPurchaseItem_Event_0 Parms{};

	Parms.PurchasedItemName = std::move(PurchasedItemName);
	Parms.PurchasedItemCost = PurchasedItemCost;
	Parms.NotPurchasedItems = std::move(NotPurchasedItems);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnPlayerPawnRevived_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPlayerPawn*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::OnPlayerPawnRevived_Event(class ARPlayerPawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnPlayerPawnRevived_Event");

	Params::BP_RTelemetryManager_C_OnPlayerPawnRevived_Event Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnPlayerPawnKilled_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPlayerPawn*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::OnPlayerPawnKilled_Event(class ARPlayerPawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnPlayerPawnKilled_Event");

	Params::BP_RTelemetryManager_C_OnPlayerPawnKilled_Event Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnPlayerInteract_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorInteractedWith                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::OnPlayerInteract_Event(class AActor* ActorInteractedWith)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnPlayerInteract_Event");

	Params::BP_RTelemetryManager_C_OnPlayerInteract_Event Parms{};

	Parms.ActorInteractedWith = ActorInteractedWith;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnPlayerEnterSpawnAreaSegment_Event_Multicast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AREnemySpawnAreaSegment*          Segment                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ARPlayerPawn*                     EnteringPlayerPawn                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::OnPlayerEnterSpawnAreaSegment_Event_Multicast(class AREnemySpawnAreaSegment* Segment, class ARPlayerPawn* EnteringPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnPlayerEnterSpawnAreaSegment_Event_Multicast");

	Params::BP_RTelemetryManager_C_OnPlayerEnterSpawnAreaSegment_Event_Multicast Parms{};

	Parms.Segment = Segment;
	Parms.EnteringPlayerPawn = EnteringPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnPlayerEnterSpawnAreaSegment_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AREnemySpawnAreaSegment*          EnemySpawnAreaSegment                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ARPlayerPawn*                     EnteringPlayerPawn                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::OnPlayerEnterSpawnAreaSegment_Event(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment, class ARPlayerPawn* EnteringPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnPlayerEnterSpawnAreaSegment_Event");

	Params::BP_RTelemetryManager_C_OnPlayerEnterSpawnAreaSegment_Event Parms{};

	Parms.EnemySpawnAreaSegment = EnemySpawnAreaSegment;
	Parms.EnteringPlayerPawn = EnteringPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnPlayerChoseGodCategoryMutator_Event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ChosenGodCategoryName                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const TArray<class FString>&            DiscardedGodCategoryNames                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    ChosenGodMutatorName                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const TArray<class FString>&            DiscardedGodMutatorNames                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_RTelemetryManager_C::OnPlayerChoseGodCategoryMutator_Event(const class FString& ChosenGodCategoryName, const TArray<class FString>& DiscardedGodCategoryNames, const class FString& ChosenGodMutatorName, const TArray<class FString>& DiscardedGodMutatorNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnPlayerChoseGodCategoryMutator_Event");

	Params::BP_RTelemetryManager_C_OnPlayerChoseGodCategoryMutator_Event Parms{};

	Parms.ChosenGodCategoryName = std::move(ChosenGodCategoryName);
	Parms.DiscardedGodCategoryNames = std::move(DiscardedGodCategoryNames);
	Parms.ChosenGodMutatorName = std::move(ChosenGodMutatorName);
	Parms.DiscardedGodMutatorNames = std::move(DiscardedGodMutatorNames);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnOpenLogBook_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::OnOpenLogBook_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnOpenLogBook_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnLevelChanged_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::OnLevelChanged_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnLevelChanged_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnHealUsed_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::OnHealUsed_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnHealUsed_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnHealthDepleted_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class URHealthComponent*                Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FDamageCombatEvent&        DamageEventData                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_RTelemetryManager_C::OnHealthDepleted_Event(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnHealthDepleted_Event");

	Params::BP_RTelemetryManager_C_OnHealthDepleted_Event Parms{};

	Parms.Component = Component;
	Parms.DamageEventData = std::move(DamageEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnExitWorkbench_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::OnExitWorkbench_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnExitWorkbench_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnDealtDamage_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPawnBase*                       Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FDamageCombatEvent&        DamageEventData                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_RTelemetryManager_C::OnDealtDamage_Event(class ARPawnBase* Pawn, const struct FDamageCombatEvent& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnDealtDamage_Event");

	Params::BP_RTelemetryManager_C_OnDealtDamage_Event Parms{};

	Parms.Pawn = Pawn;
	Parms.DamageEventData = std::move(DamageEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnDamageTaken_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class URHealthComponent*                Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FDamageCombatEvent&        DamageEvent                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_RTelemetryManager_C::OnDamageTaken_Event(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnDamageTaken_Event");

	Params::BP_RTelemetryManager_C_OnDamageTaken_Event Parms{};

	Parms.Component = Component;
	Parms.DamageEvent = std::move(DamageEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnCloseLogBook_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::OnCloseLogBook_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnCloseLogBook_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.OnChallengeCompletedEvent_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRChallenge&               Challenge                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_RTelemetryManager_C::OnChallengeCompletedEvent_Event(const struct FRChallenge& Challenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "OnChallengeCompletedEvent_Event");

	Params::BP_RTelemetryManager_C_OnChallengeCompletedEvent_Event Parms{};

	Parms.Challenge = std::move(Challenge);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.ExecuteUbergraph_BP_RTelemetryManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::ExecuteUbergraph_BP_RTelemetryManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "ExecuteUbergraph_BP_RTelemetryManager");

	Params::BP_RTelemetryManager_C_ExecuteUbergraph_BP_RTelemetryManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.BPWriteRunEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CurrentRunSuccess                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::BPWriteRunEnd(bool CurrentRunSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "BPWriteRunEnd");

	Params::BP_RTelemetryManager_C_BPWriteRunEnd Parms{};

	Parms.CurrentRunSuccess = CurrentRunSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.BPSetLobbyStartTime
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_RTelemetryManager_C::BPSetLobbyStartTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "BPSetLobbyStartTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.BPIsEndBoss
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AREnemySpawnAreaSegment*          Segment                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::BPIsEndBoss(class AREnemySpawnAreaSegment* Segment, bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "BPIsEndBoss");

	Params::BP_RTelemetryManager_C_BPIsEndBoss Parms{};

	Parms.Segment = Segment;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.BPGetMeleeUsages
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  Usages                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::BPGetMeleeUsages(int32* Usages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "BPGetMeleeUsages");

	Params::BP_RTelemetryManager_C_BPGetMeleeUsages Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Usages != nullptr)
		*Usages = Parms.Usages;
}


// Function BP_RTelemetryManager.BP_RTelemetryManager_C.BPGetMeleeCharacterMutator
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_Melee_CharacterMutator_C**    MeleeCharacterMutatorScript                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RTelemetryManager_C::BPGetMeleeCharacterMutator(class UBP_Melee_CharacterMutator_C** MeleeCharacterMutatorScript)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RTelemetryManager_C", "BPGetMeleeCharacterMutator");

	Params::BP_RTelemetryManager_C_BPGetMeleeCharacterMutator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeleeCharacterMutatorScript != nullptr)
		*MeleeCharacterMutatorScript = Parms.MeleeCharacterMutatorScript;
}

}

