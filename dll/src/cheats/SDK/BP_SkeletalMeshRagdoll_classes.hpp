#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkeletalMeshRagdoll

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SkeletalMeshRagdoll.BP_SkeletalMeshRagdoll_C
// 0x0040 (0x02E8 - 0x02A8)
class ABP_SkeletalMeshRagdoll_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impulse;                                           // 0x02C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USkeletalMesh*                          New_Mesh;                                          // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UClass*                                 AnimClass;                                         // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SkeletalMeshRagdoll(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkeletalMeshRagdoll_C">();
	}
	static class ABP_SkeletalMeshRagdoll_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SkeletalMeshRagdoll_C>();
	}
};
static_assert(alignof(ABP_SkeletalMeshRagdoll_C) == 0x000008, "Wrong alignment on ABP_SkeletalMeshRagdoll_C");
static_assert(sizeof(ABP_SkeletalMeshRagdoll_C) == 0x0002E8, "Wrong size on ABP_SkeletalMeshRagdoll_C");
static_assert(offsetof(ABP_SkeletalMeshRagdoll_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_SkeletalMeshRagdoll_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SkeletalMeshRagdoll_C, SkeletalMesh) == 0x0002B0, "Member 'ABP_SkeletalMeshRagdoll_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_SkeletalMeshRagdoll_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_SkeletalMeshRagdoll_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SkeletalMeshRagdoll_C, Impulse) == 0x0002C0, "Member 'ABP_SkeletalMeshRagdoll_C::Impulse' has a wrong offset!");
static_assert(offsetof(ABP_SkeletalMeshRagdoll_C, New_Mesh) == 0x0002D8, "Member 'ABP_SkeletalMeshRagdoll_C::New_Mesh' has a wrong offset!");
static_assert(offsetof(ABP_SkeletalMeshRagdoll_C, AnimClass) == 0x0002E0, "Member 'ABP_SkeletalMeshRagdoll_C::AnimClass' has a wrong offset!");

}

