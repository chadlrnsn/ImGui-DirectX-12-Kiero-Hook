#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BasePlayer_Arms

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "RGame_classes.hpp"
#include "ABP_BasePlayer_Arms_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_BasePlayer_Arms.ABP_BasePlayer_Arms_C
// 0x4290 (0x48E0 - 0x0650)
class UABP_BasePlayer_Arms_C : public URArmsAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0650(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_BasePlayer_Arms::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;          // 0x0658(0x0040)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0698(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x06A0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x06A8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_6;                   // 0x06C8(0x00B8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0780(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x07A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x07D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x07F8(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x0820(0x0128)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x0948(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0x0970(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0x0990(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x09B0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x09D0(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x09F8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x0B20(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x0C48(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x0C68(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0C88(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x0CA8(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0CD0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0DF8(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x0F20(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x0F40(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0F60(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0F80(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x1048(0x0080)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x10C8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x10E8(0x00B8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x11A0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x11C0(0x0020)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_1;              // 0x11E0(0x0128)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController;                // 0x1308(0x0128)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x1430(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x1450(0x00B8)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x1508(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x15D8(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x1620(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x1640(0x00E8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x1728(0x00E8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x1810(0x0028)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x1838(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x18F0(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x19A8(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x1A28(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x1A50(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x1A70(0x00B8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x1B28(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x1B70(0x00E8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x1C58(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x1CD8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x1D00(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x1D28(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x1D50(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1D98(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x1E18(0x00E8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x1F00(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x1F28(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x1F50(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x1F78(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x1FC0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1FE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x2008(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x2030(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x2078(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x2098(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x20C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x20E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x2110(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x2138(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x2160(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x2188(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x21B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x21D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2200(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2228(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2250(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x2278(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x22C0(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x2308(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x23D0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0x2418(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x24E0(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_6;                 // 0x2500(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x2540(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_5;                 // 0x2560(0x0040)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x25A0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x25E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x2630(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x2678(0x00C8)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_4;                 // 0x2740(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x2780(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x27A0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x27E8(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x2830(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x28F8(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x2940(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x2A08(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2A28(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x2A70(0x00C8)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x2B38(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x2B78(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x2B98(0x0040)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x2BD8(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x2C20(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2CE8(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x2D30(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2D70(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x2D90(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2DD0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x2DF0(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2EB8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2ED8(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x2FA0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x2FC0(0x0020)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x2FE0(0x0280)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x3260(0x0128)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x3388(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x3440(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x34C0(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x34E8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x3508(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x3530(0x00E8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x3618(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x3638(0x00E8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x3720(0x0020)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x3740(0x0280)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x39C0(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x39E8(0x0020)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_5;                   // 0x3A08(0x00C8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0x3AD0(0x0120)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_4;                   // 0x3BF0(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_3;                   // 0x3CB8(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x3D80(0x00C8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x3E48(0x0120)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x3F68(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x4030(0x00C8)()
	uint8                                         Pad_40F8[0x8];                                     // 0x40F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x4100(0x0550)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x4650(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x4698(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x46E0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x4728(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x47A8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x47D0(0x0028)()
	double                                        Run_Blend;                                         // 0x47F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fired;                                             // 0x4800(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4801[0x7];                                     // 0x4801(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Fire_Blend;                                        // 0x4808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Recoil_Rotation;                                   // 0x4810(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Recoil_Position;                                   // 0x4828(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lean_Current;                                      // 0x4840(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lean_Target;                                       // 0x4858(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time_X;                                      // 0x4870(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4874[0x4];                                     // 0x4874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerPawn*                           As_RPlayer_Pawn;                                   // 0x4878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Alternate_Weapon_Basepose;                     // 0x4880(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Downed;                                            // 0x4881(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4882[0x6];                                     // 0x4882(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Fire_Blend_0;                                      // 0x4888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Recoil_Interp_Speed_Position;                      // 0x4890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Recoil_Interp_Speed_Rotation;                      // 0x4898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Target_Recoil_Rotation;                            // 0x48A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Target_Recoil_Position;                            // 0x48B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocallyControlled;                               // 0x48D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D1[0x3];                                     // 0x48D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         fWristRotation;                                    // 0x48D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BasePose(struct FPoseLink* BasePose_0);
	void BlueprintBeginPlay();
	void BlueprintInitializeAnimation();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void DetailAdditive(const struct FPoseLink& In, struct FPoseLink* DetailAdditive_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_ApplyMeshSpaceAdditive_6C68A73A49F20CE64CA044B6779C1B3F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_LayeredBoneBlend_1C0999A2410BB6C661A1D3946B4696EC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_LayeredBoneBlend_1F963356441D5C83698271AA50FF3C3F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_LayeredBoneBlend_3F851E9243BDDADFE69CD4B2CF83EB07();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_LayeredBoneBlend_B3E55BE0480B7CFEEFA56CAAA7EA46D8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_ModifyBone_4D41BE424B8C29C5F1840C9D1F00114F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_ModifyBone_86F879CE453DF03F64F3DA8653A540CC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_ModifyBone_B8506A3045BEC369B19782AAC1EBA774();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_ModifyBone_FB3815664720C631C04CE585500F563B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_SequencePlayer_3BA2A3134AB85D8BAEC2FCBA763FD55B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_SequencePlayer_46880ECF4EBA3F22342B9FA4570EB43E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_SequencePlayer_7952BFA7405EC22B53A736BB9BA8A277();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_SequencePlayer_8E8CC6D2469A3F6FE6371494B402A52C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_10919BD246AF95E15A5396BE524C5B50();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_131B050E443FA9949C5D6EBB08967468();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_15B6CF9C4F28EDFDE5D6BBA2F699AF68();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_1E1768F342C44619657E4786876A28A4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_2ABD6CB54BA0C3E2DFEE738C4A8ECF73();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_4FA389E54D23D15562D84AB932664C63();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_A4828E2B46D672A6B66D0D80594F3398();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_A52E4AF9448416CEF82CCE81EB8832C4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_A803E1B74E8908CAF84A11A500E22D09();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_C03C95DE4C676A1683632CBFBDD9BE54();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_C64CDE95480981866FE5789977CF49F1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_C93E832E4446C7C02BEF8CBE2015D2A6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_D1F014724D633DBC9C7E5DB63117BA3E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_E1FEEF604A29EF5A0FC4B18F6EE58878();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_E48EE9034FFC77BE35E205922E1DFDF7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TransitionResult_F7E68B7647936B6A29310C880735AE0E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TwoBoneIK_9225EB7446E6E74D62AB9E82FBC5EE5F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TwoBoneIK_F7B93D8045A967C2E538438244CCC270();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TwoWayBlend_17B6DCD143C49C9F66CF0A8C53AAEF73();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BasePlayer_Arms_AnimGraphNode_TwoWayBlend_C86431F64E6D0613D30F18BAB3E3799F();
	void ExecuteUbergraph_ABP_BasePlayer_Arms(int32 EntryPoint);
	void FingerOverrides(const struct FPoseLink& HandIKInput, const struct FPoseLink& BaseInput, struct FPoseLink* FingerOverrides_0);
	void Hand_IK(const struct FPoseLink& InPose, struct FPoseLink* Hand_IK_0);
	void Lean(const struct FPoseLink& InPose_0, struct FPoseLink* Lean_0);
	void MontageInjection(const struct FPoseLink& Input, struct FPoseLink* MontageInjection_0);
	void OnWeaponFired(class ARPlayerPawn* Player, bool bIsPrimary);
	void PawnDowned(class ARPlayerPawn* Player);
	void PawnRespawned(class ARPlayerPawn* Player);
	void PawnRevived(class ARPlayerPawn* Player);
	void UpdateCurves();
	void WristRotation(const struct FPoseLink& InPose, struct FPoseLink* WristRotation_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_BasePlayer_Arms_C">();
	}
	static class UABP_BasePlayer_Arms_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_BasePlayer_Arms_C>();
	}
};
static_assert(alignof(UABP_BasePlayer_Arms_C) == 0x000010, "Wrong alignment on UABP_BasePlayer_Arms_C");
static_assert(sizeof(UABP_BasePlayer_Arms_C) == 0x0048E0, "Wrong size on UABP_BasePlayer_Arms_C");
static_assert(offsetof(UABP_BasePlayer_Arms_C, UberGraphFrame) == 0x000650, "Member 'UABP_BasePlayer_Arms_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, __AnimBlueprintMutables) == 0x000658, "Member 'UABP_BasePlayer_Arms_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimBlueprintExtension_PropertyAccess) == 0x000698, "Member 'UABP_BasePlayer_Arms_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimBlueprintExtension_Base) == 0x0006A0, "Member 'UABP_BasePlayer_Arms_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Root_7) == 0x0006A8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedInputPose_6) == 0x0006C8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedInputPose_6' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_17) == 0x000780, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_16) == 0x0007A8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_15) == 0x0007D0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_14) == 0x0007F8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ModifyBone_5) == 0x000820, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_15) == 0x000948, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x000970, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LocalToComponentSpace_5) == 0x000990, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateResult_11) == 0x0009B0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_14) == 0x0009D0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ModifyBone_4) == 0x0009F8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ModifyBone_3) == 0x000B20, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x000C48, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LocalToComponentSpace_4) == 0x000C68, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateResult_10) == 0x000C88, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_13) == 0x000CA8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ModifyBone_2) == 0x000CD0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ModifyBone_1) == 0x000DF8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x000F20, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LocalToComponentSpace_3) == 0x000F40, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateResult_9) == 0x000F60, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateMachine_2) == 0x000F80, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SaveCachedPose_5) == 0x001048, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Root_6) == 0x0010C8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedInputPose_5) == 0x0010E8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LocalToComponentSpace_2) == 0x0011A0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x0011C0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_BoneDrivenController_1) == 0x0011E0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_BoneDrivenController_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_BoneDrivenController) == 0x001308, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_BoneDrivenController' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Root_5) == 0x001430, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedInputPose_4) == 0x001450, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x001508, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequencePlayer_10) == 0x0015D8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Root_4) == 0x001620, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LayeredBoneBlend_5) == 0x001640, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LayeredBoneBlend_4) == 0x001728, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_12) == 0x001810, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedInputPose_3) == 0x001838, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedInputPose_2) == 0x0018F0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SaveCachedPose_4) == 0x0019A8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_11) == 0x001A28, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Root_3) == 0x001A50, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedInputPose_1) == 0x001A70, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Slot_5) == 0x001B28, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LayeredBoneBlend_3) == 0x001B70, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SaveCachedPose_3) == 0x001C58, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_10) == 0x001CD8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_9) == 0x001D00, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_8) == 0x001D28, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Slot_4) == 0x001D50, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SaveCachedPose_2) == 0x001D98, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LayeredBoneBlend_2) == 0x001E18, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_7) == 0x001F00, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_6) == 0x001F28, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_5) == 0x001F50, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Slot_3) == 0x001F78, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Root_2) == 0x001FC0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_13) == 0x001FE0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_12) == 0x002008, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequencePlayer_9) == 0x002030, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateResult_8) == 0x002078, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_11) == 0x002098, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_10) == 0x0020C0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_9) == 0x0020E8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_8) == 0x002110, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_7) == 0x002138, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_6) == 0x002160, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_5) == 0x002188, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_4) == 0x0021B0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_3) == 0x0021D8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_2) == 0x002200, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult_1) == 0x002228, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TransitionResult) == 0x002250, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequencePlayer_8) == 0x002278, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequencePlayer_7) == 0x0022C0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TwoWayBlend_1) == 0x002308, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequencePlayer_6) == 0x0023D0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ApplyAdditive_4) == 0x002418, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateResult_7) == 0x0024E0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequenceEvaluator_6) == 0x002500, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequenceEvaluator_6' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateResult_6) == 0x002540, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequenceEvaluator_5) == 0x002560, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequenceEvaluator_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Slot_2) == 0x0025A0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_BlendListByBool_2) == 0x0025E8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequencePlayer_5) == 0x002630, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ApplyAdditive_3) == 0x002678, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequenceEvaluator_4) == 0x002740, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequenceEvaluator_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateResult_5) == 0x002780, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequencePlayer_4) == 0x0027A0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequencePlayer_3) == 0x0027E8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TwoWayBlend) == 0x002830, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequencePlayer_2) == 0x0028F8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ApplyAdditive_2) == 0x002940, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateResult_4) == 0x002A08, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequencePlayer_1) == 0x002A28, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ApplyAdditive_1) == 0x002A70, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequenceEvaluator_3) == 0x002B38, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateResult_3) == 0x002B78, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequenceEvaluator_2) == 0x002B98, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_BlendListByBool_1) == 0x002BD8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ApplyAdditive) == 0x002C20, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequencePlayer) == 0x002CE8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequenceEvaluator_1) == 0x002D30, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateResult_2) == 0x002D70, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SequenceEvaluator) == 0x002D90, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateResult_1) == 0x002DD0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateMachine_1) == 0x002DF0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateResult) == 0x002EB8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_StateMachine) == 0x002ED8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Root_1) == 0x002FA0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LocalToComponentSpace_1) == 0x002FC0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TwoBoneIK_1) == 0x002FE0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ModifyBone) == 0x003260, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedInputPose) == 0x003388, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SaveCachedPose_1) == 0x003440, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_4) == 0x0034C0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LocalToComponentSpace) == 0x0034E8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_3) == 0x003508, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LayeredBoneBlend_1) == 0x003530, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x003618, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LayeredBoneBlend) == 0x003638, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ComponentToLocalSpace) == 0x003720, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_TwoBoneIK) == 0x003740, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_2) == 0x0039C0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Root) == 0x0039E8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedAnimLayer_5) == 0x003A08, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedAnimLayer_5' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ModifyCurve_1) == 0x003AD0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ModifyCurve_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedAnimLayer_4) == 0x003BF0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedAnimLayer_4' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedAnimLayer_3) == 0x003CB8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedAnimLayer_3' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedAnimLayer_2) == 0x003D80, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_ModifyCurve) == 0x003E48, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedAnimLayer_1) == 0x003F68, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_LinkedAnimLayer) == 0x004030, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Inertialization) == 0x004100, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_BlendListByBool) == 0x004650, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Slot_1) == 0x004698, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_Slot) == 0x0046E0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_SaveCachedPose) == 0x004728, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose_1) == 0x0047A8, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, AnimGraphNode_UseCachedPose) == 0x0047D0, "Member 'UABP_BasePlayer_Arms_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Run_Blend) == 0x0047F8, "Member 'UABP_BasePlayer_Arms_C::Run_Blend' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Fired) == 0x004800, "Member 'UABP_BasePlayer_Arms_C::Fired' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Fire_Blend) == 0x004808, "Member 'UABP_BasePlayer_Arms_C::Fire_Blend' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Recoil_Rotation) == 0x004810, "Member 'UABP_BasePlayer_Arms_C::Recoil_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Recoil_Position) == 0x004828, "Member 'UABP_BasePlayer_Arms_C::Recoil_Position' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Lean_Current) == 0x004840, "Member 'UABP_BasePlayer_Arms_C::Lean_Current' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Lean_Target) == 0x004858, "Member 'UABP_BasePlayer_Arms_C::Lean_Target' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Delta_Time_X) == 0x004870, "Member 'UABP_BasePlayer_Arms_C::Delta_Time_X' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, As_RPlayer_Pawn) == 0x004878, "Member 'UABP_BasePlayer_Arms_C::As_RPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Use_Alternate_Weapon_Basepose) == 0x004880, "Member 'UABP_BasePlayer_Arms_C::Use_Alternate_Weapon_Basepose' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Downed) == 0x004881, "Member 'UABP_BasePlayer_Arms_C::Downed' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Fire_Blend_0) == 0x004888, "Member 'UABP_BasePlayer_Arms_C::Fire_Blend_0' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Recoil_Interp_Speed_Position) == 0x004890, "Member 'UABP_BasePlayer_Arms_C::Recoil_Interp_Speed_Position' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Recoil_Interp_Speed_Rotation) == 0x004898, "Member 'UABP_BasePlayer_Arms_C::Recoil_Interp_Speed_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Target_Recoil_Rotation) == 0x0048A0, "Member 'UABP_BasePlayer_Arms_C::Target_Recoil_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, Target_Recoil_Position) == 0x0048B8, "Member 'UABP_BasePlayer_Arms_C::Target_Recoil_Position' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, IsLocallyControlled) == 0x0048D0, "Member 'UABP_BasePlayer_Arms_C::IsLocallyControlled' has a wrong offset!");
static_assert(offsetof(UABP_BasePlayer_Arms_C, fWristRotation) == 0x0048D4, "Member 'UABP_BasePlayer_Arms_C::fWristRotation' has a wrong offset!");

}

