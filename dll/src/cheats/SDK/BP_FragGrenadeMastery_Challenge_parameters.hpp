#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FragGrenadeMastery_Challenge

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FragGrenadeMastery_Challenge.BP_FragGrenadeMastery_Challenge_C.ExecuteUbergraph_BP_FragGrenadeMastery_Challenge
// 0x00D0 (0x00D0 - 0x0000)
struct BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool RunFailed)>               K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_AbilityIndex;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 AbilityIndex)>           K2Node_CreateDelegate_OutputDelegate_2;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RunFailed;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue_1;              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 AbilityIndex)>           K2Node_CreateDelegate_OutputDelegate_3;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn_1;               // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool RunFailed)>               K2Node_CreateDelegate_OutputDelegate_4;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge) == 0x000008, "Wrong alignment on BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge");
static_assert(sizeof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge) == 0x0000D0, "Wrong size on BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, EntryPoint) == 0x000000, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, CallFunc_GetRGameState_ReturnValue) == 0x000008, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::CallFunc_GetRGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, Temp_bool_Has_Been_Initd_Variable) == 0x000030, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, CallFunc_GetChallengeManager_ReturnValue) == 0x000038, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000048, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, K2Node_CustomEvent_AbilityIndex) == 0x000054, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::K2Node_CustomEvent_AbilityIndex' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, K2Node_CreateDelegate_OutputDelegate_2) == 0x00005C, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, CallFunc_GetChallengeManager_ReturnValue_1) == 0x000078, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::CallFunc_GetChallengeManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, K2Node_CustomEvent_RunFailed) == 0x000080, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::K2Node_CustomEvent_RunFailed' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, CallFunc_GetRGameState_ReturnValue_1) == 0x000088, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::CallFunc_GetRGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, Temp_bool_IsClosed_Variable) == 0x000090, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, K2Node_CreateDelegate_OutputDelegate_3) == 0x000094, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0000A8, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, K2Node_DynamicCast_AsRPlayer_Pawn_1) == 0x0000B0, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::K2Node_DynamicCast_AsRPlayer_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000BC, "Member 'BP_FragGrenadeMastery_Challenge_C_ExecuteUbergraph_BP_FragGrenadeMastery_Challenge::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function BP_FragGrenadeMastery_Challenge.BP_FragGrenadeMastery_Challenge_C.OnAbilityUsed
// 0x0004 (0x0004 - 0x0000)
struct BP_FragGrenadeMastery_Challenge_C_OnAbilityUsed final
{
public:
	int32                                         AbilityIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FragGrenadeMastery_Challenge_C_OnAbilityUsed) == 0x000004, "Wrong alignment on BP_FragGrenadeMastery_Challenge_C_OnAbilityUsed");
static_assert(sizeof(BP_FragGrenadeMastery_Challenge_C_OnAbilityUsed) == 0x000004, "Wrong size on BP_FragGrenadeMastery_Challenge_C_OnAbilityUsed");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_OnAbilityUsed, AbilityIndex) == 0x000000, "Member 'BP_FragGrenadeMastery_Challenge_C_OnAbilityUsed::AbilityIndex' has a wrong offset!");

// Function BP_FragGrenadeMastery_Challenge.BP_FragGrenadeMastery_Challenge_C.OnFinishRun
// 0x0001 (0x0001 - 0x0000)
struct BP_FragGrenadeMastery_Challenge_C_OnFinishRun final
{
public:
	bool                                          RunFailed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FragGrenadeMastery_Challenge_C_OnFinishRun) == 0x000001, "Wrong alignment on BP_FragGrenadeMastery_Challenge_C_OnFinishRun");
static_assert(sizeof(BP_FragGrenadeMastery_Challenge_C_OnFinishRun) == 0x000001, "Wrong size on BP_FragGrenadeMastery_Challenge_C_OnFinishRun");
static_assert(offsetof(BP_FragGrenadeMastery_Challenge_C_OnFinishRun, RunFailed) == 0x000000, "Member 'BP_FragGrenadeMastery_Challenge_C_OnFinishRun::RunFailed' has a wrong offset!");

}

