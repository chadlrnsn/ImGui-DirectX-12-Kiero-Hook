#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPNotify_PlaySoundWithRate

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPNotify_PlaySoundWithRate.BPNotify_PlaySoundWithRate_C
// 0x0030 (0x0068 - 0x0038)
class UBPNotify_PlaySoundWithRate_C final : public UAnimNotify
{
public:
	class USoundBase*                             Sound;                                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreAnimPlayRate;                                // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VolumeMultiplier;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RateToPitchMultiplier;                             // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Follow;                                            // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AttachName;                                        // 0x005C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFirstPersonSound;                               // 0x0064(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAddMultiplayerSettings;                           // 0x0065(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayerSound;                                    // 0x0066(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Get_Pawn_Owner(class UActorComponent* Component, class APawn** AsPawn) const;
	void IsLocallyControlledAnim(class UActorComponent* Target, bool* bIsLocal) const;
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPNotify_PlaySoundWithRate_C">();
	}
	static class UBPNotify_PlaySoundWithRate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPNotify_PlaySoundWithRate_C>();
	}
};
static_assert(alignof(UBPNotify_PlaySoundWithRate_C) == 0x000008, "Wrong alignment on UBPNotify_PlaySoundWithRate_C");
static_assert(sizeof(UBPNotify_PlaySoundWithRate_C) == 0x000068, "Wrong size on UBPNotify_PlaySoundWithRate_C");
static_assert(offsetof(UBPNotify_PlaySoundWithRate_C, Sound) == 0x000038, "Member 'UBPNotify_PlaySoundWithRate_C::Sound' has a wrong offset!");
static_assert(offsetof(UBPNotify_PlaySoundWithRate_C, IgnoreAnimPlayRate) == 0x000040, "Member 'UBPNotify_PlaySoundWithRate_C::IgnoreAnimPlayRate' has a wrong offset!");
static_assert(offsetof(UBPNotify_PlaySoundWithRate_C, VolumeMultiplier) == 0x000048, "Member 'UBPNotify_PlaySoundWithRate_C::VolumeMultiplier' has a wrong offset!");
static_assert(offsetof(UBPNotify_PlaySoundWithRate_C, RateToPitchMultiplier) == 0x000050, "Member 'UBPNotify_PlaySoundWithRate_C::RateToPitchMultiplier' has a wrong offset!");
static_assert(offsetof(UBPNotify_PlaySoundWithRate_C, Follow) == 0x000058, "Member 'UBPNotify_PlaySoundWithRate_C::Follow' has a wrong offset!");
static_assert(offsetof(UBPNotify_PlaySoundWithRate_C, AttachName) == 0x00005C, "Member 'UBPNotify_PlaySoundWithRate_C::AttachName' has a wrong offset!");
static_assert(offsetof(UBPNotify_PlaySoundWithRate_C, bIsFirstPersonSound) == 0x000064, "Member 'UBPNotify_PlaySoundWithRate_C::bIsFirstPersonSound' has a wrong offset!");
static_assert(offsetof(UBPNotify_PlaySoundWithRate_C, bAddMultiplayerSettings) == 0x000065, "Member 'UBPNotify_PlaySoundWithRate_C::bAddMultiplayerSettings' has a wrong offset!");
static_assert(offsetof(UBPNotify_PlaySoundWithRate_C, bIsPlayerSound) == 0x000066, "Member 'UBPNotify_PlaySoundWithRate_C::bIsPlayerSound' has a wrong offset!");

}

