#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: USDClasses

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "USDClasses_structs.hpp"


namespace SDK::Params
{

// Function USDClasses.UsdAssetCache2.AddAssetReference
// 0x0018 (0x0018 - 0x0000)
struct UsdAssetCache2_AddAssetReference final
{
public:
	const class UObject*                          Asset;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          Referencer;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache2_AddAssetReference) == 0x000008, "Wrong alignment on UsdAssetCache2_AddAssetReference");
static_assert(sizeof(UsdAssetCache2_AddAssetReference) == 0x000018, "Wrong size on UsdAssetCache2_AddAssetReference");
static_assert(offsetof(UsdAssetCache2_AddAssetReference, Asset) == 0x000000, "Member 'UsdAssetCache2_AddAssetReference::Asset' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_AddAssetReference, Referencer) == 0x000008, "Member 'UsdAssetCache2_AddAssetReference::Referencer' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_AddAssetReference, ReturnValue) == 0x000010, "Member 'UsdAssetCache2_AddAssetReference::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.CacheAsset
// 0x0020 (0x0020 - 0x0000)
struct UsdAssetCache2_CacheAsset final
{
public:
	class FString                                 Hash;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Asset;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          Referencer;                                        // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache2_CacheAsset) == 0x000008, "Wrong alignment on UsdAssetCache2_CacheAsset");
static_assert(sizeof(UsdAssetCache2_CacheAsset) == 0x000020, "Wrong size on UsdAssetCache2_CacheAsset");
static_assert(offsetof(UsdAssetCache2_CacheAsset, Hash) == 0x000000, "Member 'UsdAssetCache2_CacheAsset::Hash' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_CacheAsset, Asset) == 0x000010, "Member 'UsdAssetCache2_CacheAsset::Asset' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_CacheAsset, Referencer) == 0x000018, "Member 'UsdAssetCache2_CacheAsset::Referencer' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.CanRemoveAsset
// 0x0018 (0x0018 - 0x0000)
struct UsdAssetCache2_CanRemoveAsset final
{
public:
	class FString                                 Hash;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache2_CanRemoveAsset) == 0x000008, "Wrong alignment on UsdAssetCache2_CanRemoveAsset");
static_assert(sizeof(UsdAssetCache2_CanRemoveAsset) == 0x000018, "Wrong size on UsdAssetCache2_CanRemoveAsset");
static_assert(offsetof(UsdAssetCache2_CanRemoveAsset, Hash) == 0x000000, "Member 'UsdAssetCache2_CanRemoveAsset::Hash' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_CanRemoveAsset, ReturnValue) == 0x000010, "Member 'UsdAssetCache2_CanRemoveAsset::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.GetCachedAsset
// 0x0018 (0x0018 - 0x0000)
struct UsdAssetCache2_GetCachedAsset final
{
public:
	class FString                                 Hash;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache2_GetCachedAsset) == 0x000008, "Wrong alignment on UsdAssetCache2_GetCachedAsset");
static_assert(sizeof(UsdAssetCache2_GetCachedAsset) == 0x000018, "Wrong size on UsdAssetCache2_GetCachedAsset");
static_assert(offsetof(UsdAssetCache2_GetCachedAsset, Hash) == 0x000000, "Member 'UsdAssetCache2_GetCachedAsset::Hash' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_GetCachedAsset, ReturnValue) == 0x000010, "Member 'UsdAssetCache2_GetCachedAsset::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.RemoveAllAssetReferences
// 0x0010 (0x0010 - 0x0000)
struct UsdAssetCache2_RemoveAllAssetReferences final
{
public:
	const class UObject*                          Referencer;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache2_RemoveAllAssetReferences) == 0x000008, "Wrong alignment on UsdAssetCache2_RemoveAllAssetReferences");
static_assert(sizeof(UsdAssetCache2_RemoveAllAssetReferences) == 0x000010, "Wrong size on UsdAssetCache2_RemoveAllAssetReferences");
static_assert(offsetof(UsdAssetCache2_RemoveAllAssetReferences, Referencer) == 0x000000, "Member 'UsdAssetCache2_RemoveAllAssetReferences::Referencer' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_RemoveAllAssetReferences, ReturnValue) == 0x000008, "Member 'UsdAssetCache2_RemoveAllAssetReferences::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.RemoveAsset
// 0x0018 (0x0018 - 0x0000)
struct UsdAssetCache2_RemoveAsset final
{
public:
	class FString                                 Hash;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache2_RemoveAsset) == 0x000008, "Wrong alignment on UsdAssetCache2_RemoveAsset");
static_assert(sizeof(UsdAssetCache2_RemoveAsset) == 0x000018, "Wrong size on UsdAssetCache2_RemoveAsset");
static_assert(offsetof(UsdAssetCache2_RemoveAsset, Hash) == 0x000000, "Member 'UsdAssetCache2_RemoveAsset::Hash' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_RemoveAsset, ReturnValue) == 0x000010, "Member 'UsdAssetCache2_RemoveAsset::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.RemoveAssetReference
// 0x0018 (0x0018 - 0x0000)
struct UsdAssetCache2_RemoveAssetReference final
{
public:
	const class UObject*                          Asset;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          Referencer;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache2_RemoveAssetReference) == 0x000008, "Wrong alignment on UsdAssetCache2_RemoveAssetReference");
static_assert(sizeof(UsdAssetCache2_RemoveAssetReference) == 0x000018, "Wrong size on UsdAssetCache2_RemoveAssetReference");
static_assert(offsetof(UsdAssetCache2_RemoveAssetReference, Asset) == 0x000000, "Member 'UsdAssetCache2_RemoveAssetReference::Asset' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_RemoveAssetReference, Referencer) == 0x000008, "Member 'UsdAssetCache2_RemoveAssetReference::Referencer' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_RemoveAssetReference, ReturnValue) == 0x000010, "Member 'UsdAssetCache2_RemoveAssetReference::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.TouchAsset
// 0x0018 (0x0018 - 0x0000)
struct UsdAssetCache2_TouchAsset final
{
public:
	const class UObject*                          Asset;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          Referencer;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache2_TouchAsset) == 0x000008, "Wrong alignment on UsdAssetCache2_TouchAsset");
static_assert(sizeof(UsdAssetCache2_TouchAsset) == 0x000018, "Wrong size on UsdAssetCache2_TouchAsset");
static_assert(offsetof(UsdAssetCache2_TouchAsset, Asset) == 0x000000, "Member 'UsdAssetCache2_TouchAsset::Asset' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_TouchAsset, Referencer) == 0x000008, "Member 'UsdAssetCache2_TouchAsset::Referencer' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_TouchAsset, ReturnValue) == 0x000010, "Member 'UsdAssetCache2_TouchAsset::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.GetAllAssetHashes
// 0x0010 (0x0010 - 0x0000)
struct UsdAssetCache2_GetAllAssetHashes final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache2_GetAllAssetHashes) == 0x000008, "Wrong alignment on UsdAssetCache2_GetAllAssetHashes");
static_assert(sizeof(UsdAssetCache2_GetAllAssetHashes) == 0x000010, "Wrong size on UsdAssetCache2_GetAllAssetHashes");
static_assert(offsetof(UsdAssetCache2_GetAllAssetHashes, ReturnValue) == 0x000000, "Member 'UsdAssetCache2_GetAllAssetHashes::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.GetAllCachedAssetPaths
// 0x0010 (0x0010 - 0x0000)
struct UsdAssetCache2_GetAllCachedAssetPaths final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache2_GetAllCachedAssetPaths) == 0x000008, "Wrong alignment on UsdAssetCache2_GetAllCachedAssetPaths");
static_assert(sizeof(UsdAssetCache2_GetAllCachedAssetPaths) == 0x000010, "Wrong size on UsdAssetCache2_GetAllCachedAssetPaths");
static_assert(offsetof(UsdAssetCache2_GetAllCachedAssetPaths, ReturnValue) == 0x000000, "Member 'UsdAssetCache2_GetAllCachedAssetPaths::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.GetAllLoadedAssets
// 0x0010 (0x0010 - 0x0000)
struct UsdAssetCache2_GetAllLoadedAssets final
{
public:
	TArray<class UObject*>                        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache2_GetAllLoadedAssets) == 0x000008, "Wrong alignment on UsdAssetCache2_GetAllLoadedAssets");
static_assert(sizeof(UsdAssetCache2_GetAllLoadedAssets) == 0x000010, "Wrong size on UsdAssetCache2_GetAllLoadedAssets");
static_assert(offsetof(UsdAssetCache2_GetAllLoadedAssets, ReturnValue) == 0x000000, "Member 'UsdAssetCache2_GetAllLoadedAssets::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.GetHashForAsset
// 0x0018 (0x0018 - 0x0000)
struct UsdAssetCache2_GetHashForAsset final
{
public:
	const class UObject*                          Asset;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache2_GetHashForAsset) == 0x000008, "Wrong alignment on UsdAssetCache2_GetHashForAsset");
static_assert(sizeof(UsdAssetCache2_GetHashForAsset) == 0x000018, "Wrong size on UsdAssetCache2_GetHashForAsset");
static_assert(offsetof(UsdAssetCache2_GetHashForAsset, Asset) == 0x000000, "Member 'UsdAssetCache2_GetHashForAsset::Asset' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_GetHashForAsset, ReturnValue) == 0x000008, "Member 'UsdAssetCache2_GetHashForAsset::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.GetNumAssets
// 0x0004 (0x0004 - 0x0000)
struct UsdAssetCache2_GetNumAssets final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache2_GetNumAssets) == 0x000004, "Wrong alignment on UsdAssetCache2_GetNumAssets");
static_assert(sizeof(UsdAssetCache2_GetNumAssets) == 0x000004, "Wrong size on UsdAssetCache2_GetNumAssets");
static_assert(offsetof(UsdAssetCache2_GetNumAssets, ReturnValue) == 0x000000, "Member 'UsdAssetCache2_GetNumAssets::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache2.IsAssetOwnedByCache
// 0x0018 (0x0018 - 0x0000)
struct UsdAssetCache2_IsAssetOwnedByCache final
{
public:
	class FString                                 AssetPath;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache2_IsAssetOwnedByCache) == 0x000008, "Wrong alignment on UsdAssetCache2_IsAssetOwnedByCache");
static_assert(sizeof(UsdAssetCache2_IsAssetOwnedByCache) == 0x000018, "Wrong size on UsdAssetCache2_IsAssetOwnedByCache");
static_assert(offsetof(UsdAssetCache2_IsAssetOwnedByCache, AssetPath) == 0x000000, "Member 'UsdAssetCache2_IsAssetOwnedByCache::AssetPath' has a wrong offset!");
static_assert(offsetof(UsdAssetCache2_IsAssetOwnedByCache, ReturnValue) == 0x000010, "Member 'UsdAssetCache2_IsAssetOwnedByCache::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.AddAssetReferencer
// 0x0018 (0x0018 - 0x0000)
struct UsdAssetCache3_AddAssetReferencer final
{
public:
	const class UObject*                          Asset;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          Referencer;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache3_AddAssetReferencer) == 0x000008, "Wrong alignment on UsdAssetCache3_AddAssetReferencer");
static_assert(sizeof(UsdAssetCache3_AddAssetReferencer) == 0x000018, "Wrong size on UsdAssetCache3_AddAssetReferencer");
static_assert(offsetof(UsdAssetCache3_AddAssetReferencer, Asset) == 0x000000, "Member 'UsdAssetCache3_AddAssetReferencer::Asset' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_AddAssetReferencer, Referencer) == 0x000008, "Member 'UsdAssetCache3_AddAssetReferencer::Referencer' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_AddAssetReferencer, ReturnValue) == 0x000010, "Member 'UsdAssetCache3_AddAssetReferencer::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.CacheAsset
// 0x0038 (0x0038 - 0x0000)
struct UsdAssetCache3_CacheAsset final
{
public:
	class FString                                 Hash;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        AssetPath;                                         // 0x0010(0x0020)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          Referencer;                                        // 0x0030(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache3_CacheAsset) == 0x000008, "Wrong alignment on UsdAssetCache3_CacheAsset");
static_assert(sizeof(UsdAssetCache3_CacheAsset) == 0x000038, "Wrong size on UsdAssetCache3_CacheAsset");
static_assert(offsetof(UsdAssetCache3_CacheAsset, Hash) == 0x000000, "Member 'UsdAssetCache3_CacheAsset::Hash' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_CacheAsset, AssetPath) == 0x000010, "Member 'UsdAssetCache3_CacheAsset::AssetPath' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_CacheAsset, Referencer) == 0x000030, "Member 'UsdAssetCache3_CacheAsset::Referencer' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.DeleteUnreferencedAssets
// 0x0001 (0x0001 - 0x0000)
struct UsdAssetCache3_DeleteUnreferencedAssets final
{
public:
	bool                                          bShowConfirmation;                                 // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache3_DeleteUnreferencedAssets) == 0x000001, "Wrong alignment on UsdAssetCache3_DeleteUnreferencedAssets");
static_assert(sizeof(UsdAssetCache3_DeleteUnreferencedAssets) == 0x000001, "Wrong size on UsdAssetCache3_DeleteUnreferencedAssets");
static_assert(offsetof(UsdAssetCache3_DeleteUnreferencedAssets, bShowConfirmation) == 0x000000, "Member 'UsdAssetCache3_DeleteUnreferencedAssets::bShowConfirmation' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.GetOrCreateCachedAsset
// 0x0040 (0x0040 - 0x0000)
struct UsdAssetCache3_GetOrCreateCachedAsset final
{
public:
	class FString                                 Hash;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 Class_0;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DesiredName;                                       // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DesiredFlags;                                      // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutCreatedAsset;                                  // 0x002C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UObject*                          Referencer;                                        // 0x0030(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache3_GetOrCreateCachedAsset) == 0x000008, "Wrong alignment on UsdAssetCache3_GetOrCreateCachedAsset");
static_assert(sizeof(UsdAssetCache3_GetOrCreateCachedAsset) == 0x000040, "Wrong size on UsdAssetCache3_GetOrCreateCachedAsset");
static_assert(offsetof(UsdAssetCache3_GetOrCreateCachedAsset, Hash) == 0x000000, "Member 'UsdAssetCache3_GetOrCreateCachedAsset::Hash' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_GetOrCreateCachedAsset, Class_0) == 0x000010, "Member 'UsdAssetCache3_GetOrCreateCachedAsset::Class_0' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_GetOrCreateCachedAsset, DesiredName) == 0x000018, "Member 'UsdAssetCache3_GetOrCreateCachedAsset::DesiredName' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_GetOrCreateCachedAsset, DesiredFlags) == 0x000028, "Member 'UsdAssetCache3_GetOrCreateCachedAsset::DesiredFlags' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_GetOrCreateCachedAsset, bOutCreatedAsset) == 0x00002C, "Member 'UsdAssetCache3_GetOrCreateCachedAsset::bOutCreatedAsset' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_GetOrCreateCachedAsset, Referencer) == 0x000030, "Member 'UsdAssetCache3_GetOrCreateCachedAsset::Referencer' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_GetOrCreateCachedAsset, ReturnValue) == 0x000038, "Member 'UsdAssetCache3_GetOrCreateCachedAsset::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.RemoveAllAssetReferencers
// 0x0001 (0x0001 - 0x0000)
struct UsdAssetCache3_RemoveAllAssetReferencers final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache3_RemoveAllAssetReferencers) == 0x000001, "Wrong alignment on UsdAssetCache3_RemoveAllAssetReferencers");
static_assert(sizeof(UsdAssetCache3_RemoveAllAssetReferencers) == 0x000001, "Wrong size on UsdAssetCache3_RemoveAllAssetReferencers");
static_assert(offsetof(UsdAssetCache3_RemoveAllAssetReferencers, ReturnValue) == 0x000000, "Member 'UsdAssetCache3_RemoveAllAssetReferencers::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.RemoveAllReferencerAssets
// 0x0010 (0x0010 - 0x0000)
struct UsdAssetCache3_RemoveAllReferencerAssets final
{
public:
	const class UObject*                          Referencer;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache3_RemoveAllReferencerAssets) == 0x000008, "Wrong alignment on UsdAssetCache3_RemoveAllReferencerAssets");
static_assert(sizeof(UsdAssetCache3_RemoveAllReferencerAssets) == 0x000010, "Wrong size on UsdAssetCache3_RemoveAllReferencerAssets");
static_assert(offsetof(UsdAssetCache3_RemoveAllReferencerAssets, Referencer) == 0x000000, "Member 'UsdAssetCache3_RemoveAllReferencerAssets::Referencer' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_RemoveAllReferencerAssets, ReturnValue) == 0x000008, "Member 'UsdAssetCache3_RemoveAllReferencerAssets::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.RemoveAllReferencersForAsset
// 0x0010 (0x0010 - 0x0000)
struct UsdAssetCache3_RemoveAllReferencersForAsset final
{
public:
	const class UObject*                          Asset;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache3_RemoveAllReferencersForAsset) == 0x000008, "Wrong alignment on UsdAssetCache3_RemoveAllReferencersForAsset");
static_assert(sizeof(UsdAssetCache3_RemoveAllReferencersForAsset) == 0x000010, "Wrong size on UsdAssetCache3_RemoveAllReferencersForAsset");
static_assert(offsetof(UsdAssetCache3_RemoveAllReferencersForAsset, Asset) == 0x000000, "Member 'UsdAssetCache3_RemoveAllReferencersForAsset::Asset' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_RemoveAllReferencersForAsset, ReturnValue) == 0x000008, "Member 'UsdAssetCache3_RemoveAllReferencersForAsset::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.RemoveAssetReferencer
// 0x0018 (0x0018 - 0x0000)
struct UsdAssetCache3_RemoveAssetReferencer final
{
public:
	const class UObject*                          Asset;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          Referencer;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache3_RemoveAssetReferencer) == 0x000008, "Wrong alignment on UsdAssetCache3_RemoveAssetReferencer");
static_assert(sizeof(UsdAssetCache3_RemoveAssetReferencer) == 0x000018, "Wrong size on UsdAssetCache3_RemoveAssetReferencer");
static_assert(offsetof(UsdAssetCache3_RemoveAssetReferencer, Asset) == 0x000000, "Member 'UsdAssetCache3_RemoveAssetReferencer::Asset' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_RemoveAssetReferencer, Referencer) == 0x000008, "Member 'UsdAssetCache3_RemoveAssetReferencer::Referencer' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_RemoveAssetReferencer, ReturnValue) == 0x000010, "Member 'UsdAssetCache3_RemoveAssetReferencer::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.SetAssetDeletable
// 0x0010 (0x0010 - 0x0000)
struct UsdAssetCache3_SetAssetDeletable final
{
public:
	const class UObject*                          Asset;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDeletable;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache3_SetAssetDeletable) == 0x000008, "Wrong alignment on UsdAssetCache3_SetAssetDeletable");
static_assert(sizeof(UsdAssetCache3_SetAssetDeletable) == 0x000010, "Wrong size on UsdAssetCache3_SetAssetDeletable");
static_assert(offsetof(UsdAssetCache3_SetAssetDeletable, Asset) == 0x000000, "Member 'UsdAssetCache3_SetAssetDeletable::Asset' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_SetAssetDeletable, bIsDeletable) == 0x000008, "Member 'UsdAssetCache3_SetAssetDeletable::bIsDeletable' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.StopTrackingAsset
// 0x0030 (0x0030 - 0x0000)
struct UsdAssetCache3_StopTrackingAsset final
{
public:
	class FString                                 Hash;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache3_StopTrackingAsset) == 0x000008, "Wrong alignment on UsdAssetCache3_StopTrackingAsset");
static_assert(sizeof(UsdAssetCache3_StopTrackingAsset) == 0x000030, "Wrong size on UsdAssetCache3_StopTrackingAsset");
static_assert(offsetof(UsdAssetCache3_StopTrackingAsset, Hash) == 0x000000, "Member 'UsdAssetCache3_StopTrackingAsset::Hash' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_StopTrackingAsset, ReturnValue) == 0x000010, "Member 'UsdAssetCache3_StopTrackingAsset::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.GetAllTrackedAssets
// 0x0050 (0x0050 - 0x0000)
struct UsdAssetCache3_GetAllTrackedAssets final
{
public:
	TMap<class FString, struct FSoftObjectPath>   ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache3_GetAllTrackedAssets) == 0x000008, "Wrong alignment on UsdAssetCache3_GetAllTrackedAssets");
static_assert(sizeof(UsdAssetCache3_GetAllTrackedAssets) == 0x000050, "Wrong size on UsdAssetCache3_GetAllTrackedAssets");
static_assert(offsetof(UsdAssetCache3_GetAllTrackedAssets, ReturnValue) == 0x000000, "Member 'UsdAssetCache3_GetAllTrackedAssets::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.GetCachedAsset
// 0x0018 (0x0018 - 0x0000)
struct UsdAssetCache3_GetCachedAsset final
{
public:
	class FString                                 Hash;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache3_GetCachedAsset) == 0x000008, "Wrong alignment on UsdAssetCache3_GetCachedAsset");
static_assert(sizeof(UsdAssetCache3_GetCachedAsset) == 0x000018, "Wrong size on UsdAssetCache3_GetCachedAsset");
static_assert(offsetof(UsdAssetCache3_GetCachedAsset, Hash) == 0x000000, "Member 'UsdAssetCache3_GetCachedAsset::Hash' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_GetCachedAsset, ReturnValue) == 0x000010, "Member 'UsdAssetCache3_GetCachedAsset::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.GetCachedAssetPath
// 0x0030 (0x0030 - 0x0000)
struct UsdAssetCache3_GetCachedAssetPath final
{
public:
	class FString                                 Hash;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache3_GetCachedAssetPath) == 0x000008, "Wrong alignment on UsdAssetCache3_GetCachedAssetPath");
static_assert(sizeof(UsdAssetCache3_GetCachedAssetPath) == 0x000030, "Wrong size on UsdAssetCache3_GetCachedAssetPath");
static_assert(offsetof(UsdAssetCache3_GetCachedAssetPath, Hash) == 0x000000, "Member 'UsdAssetCache3_GetCachedAssetPath::Hash' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_GetCachedAssetPath, ReturnValue) == 0x000010, "Member 'UsdAssetCache3_GetCachedAssetPath::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.GetHashForAsset
// 0x0030 (0x0030 - 0x0000)
struct UsdAssetCache3_GetHashForAsset final
{
public:
	struct FSoftObjectPath                        AssetPath;                                         // 0x0000(0x0020)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache3_GetHashForAsset) == 0x000008, "Wrong alignment on UsdAssetCache3_GetHashForAsset");
static_assert(sizeof(UsdAssetCache3_GetHashForAsset) == 0x000030, "Wrong size on UsdAssetCache3_GetHashForAsset");
static_assert(offsetof(UsdAssetCache3_GetHashForAsset, AssetPath) == 0x000000, "Member 'UsdAssetCache3_GetHashForAsset::AssetPath' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_GetHashForAsset, ReturnValue) == 0x000020, "Member 'UsdAssetCache3_GetHashForAsset::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.GetNumAssets
// 0x0004 (0x0004 - 0x0000)
struct UsdAssetCache3_GetNumAssets final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache3_GetNumAssets) == 0x000004, "Wrong alignment on UsdAssetCache3_GetNumAssets");
static_assert(sizeof(UsdAssetCache3_GetNumAssets) == 0x000004, "Wrong size on UsdAssetCache3_GetNumAssets");
static_assert(offsetof(UsdAssetCache3_GetNumAssets, ReturnValue) == 0x000000, "Member 'UsdAssetCache3_GetNumAssets::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.IsAssetDeletable
// 0x0010 (0x0010 - 0x0000)
struct UsdAssetCache3_IsAssetDeletable final
{
public:
	const class UObject*                          Asset;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache3_IsAssetDeletable) == 0x000008, "Wrong alignment on UsdAssetCache3_IsAssetDeletable");
static_assert(sizeof(UsdAssetCache3_IsAssetDeletable) == 0x000010, "Wrong size on UsdAssetCache3_IsAssetDeletable");
static_assert(offsetof(UsdAssetCache3_IsAssetDeletable, Asset) == 0x000000, "Member 'UsdAssetCache3_IsAssetDeletable::Asset' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_IsAssetDeletable, ReturnValue) == 0x000008, "Member 'UsdAssetCache3_IsAssetDeletable::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.IsAssetTrackedByCache
// 0x0028 (0x0028 - 0x0000)
struct UsdAssetCache3_IsAssetTrackedByCache final
{
public:
	struct FSoftObjectPath                        AssetPath;                                         // 0x0000(0x0020)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UsdAssetCache3_IsAssetTrackedByCache) == 0x000008, "Wrong alignment on UsdAssetCache3_IsAssetTrackedByCache");
static_assert(sizeof(UsdAssetCache3_IsAssetTrackedByCache) == 0x000028, "Wrong size on UsdAssetCache3_IsAssetTrackedByCache");
static_assert(offsetof(UsdAssetCache3_IsAssetTrackedByCache, AssetPath) == 0x000000, "Member 'UsdAssetCache3_IsAssetTrackedByCache::AssetPath' has a wrong offset!");
static_assert(offsetof(UsdAssetCache3_IsAssetTrackedByCache, ReturnValue) == 0x000020, "Member 'UsdAssetCache3_IsAssetTrackedByCache::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdAssetCache3.LoadAndGetAllTrackedAssets
// 0x0050 (0x0050 - 0x0000)
struct UsdAssetCache3_LoadAndGetAllTrackedAssets final
{
public:
	TMap<class FString, class UObject*>           ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdAssetCache3_LoadAndGetAllTrackedAssets) == 0x000008, "Wrong alignment on UsdAssetCache3_LoadAndGetAllTrackedAssets");
static_assert(sizeof(UsdAssetCache3_LoadAndGetAllTrackedAssets) == 0x000050, "Wrong size on UsdAssetCache3_LoadAndGetAllTrackedAssets");
static_assert(offsetof(UsdAssetCache3_LoadAndGetAllTrackedAssets, ReturnValue) == 0x000000, "Member 'UsdAssetCache3_LoadAndGetAllTrackedAssets::ReturnValue' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.SetBoundsColor
// 0x0010 (0x0010 - 0x0000)
struct UsdDrawModeComponent_SetBoundsColor final
{
public:
	struct FLinearColor                           NewColor;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_SetBoundsColor) == 0x000004, "Wrong alignment on UsdDrawModeComponent_SetBoundsColor");
static_assert(sizeof(UsdDrawModeComponent_SetBoundsColor) == 0x000010, "Wrong size on UsdDrawModeComponent_SetBoundsColor");
static_assert(offsetof(UsdDrawModeComponent_SetBoundsColor, NewColor) == 0x000000, "Member 'UsdDrawModeComponent_SetBoundsColor::NewColor' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.SetBoundsMax
// 0x0018 (0x0018 - 0x0000)
struct UsdDrawModeComponent_SetBoundsMax final
{
public:
	struct FVector                                NewMax;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_SetBoundsMax) == 0x000008, "Wrong alignment on UsdDrawModeComponent_SetBoundsMax");
static_assert(sizeof(UsdDrawModeComponent_SetBoundsMax) == 0x000018, "Wrong size on UsdDrawModeComponent_SetBoundsMax");
static_assert(offsetof(UsdDrawModeComponent_SetBoundsMax, NewMax) == 0x000000, "Member 'UsdDrawModeComponent_SetBoundsMax::NewMax' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.SetBoundsMin
// 0x0018 (0x0018 - 0x0000)
struct UsdDrawModeComponent_SetBoundsMin final
{
public:
	struct FVector                                NewMin;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_SetBoundsMin) == 0x000008, "Wrong alignment on UsdDrawModeComponent_SetBoundsMin");
static_assert(sizeof(UsdDrawModeComponent_SetBoundsMin) == 0x000018, "Wrong size on UsdDrawModeComponent_SetBoundsMin");
static_assert(offsetof(UsdDrawModeComponent_SetBoundsMin, NewMin) == 0x000000, "Member 'UsdDrawModeComponent_SetBoundsMin::NewMin' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.SetCardGeometry
// 0x0004 (0x0004 - 0x0000)
struct UsdDrawModeComponent_SetCardGeometry final
{
public:
	EUsdModelCardGeometry                         NewGeometry;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_SetCardGeometry) == 0x000004, "Wrong alignment on UsdDrawModeComponent_SetCardGeometry");
static_assert(sizeof(UsdDrawModeComponent_SetCardGeometry) == 0x000004, "Wrong size on UsdDrawModeComponent_SetCardGeometry");
static_assert(offsetof(UsdDrawModeComponent_SetCardGeometry, NewGeometry) == 0x000000, "Member 'UsdDrawModeComponent_SetCardGeometry::NewGeometry' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.SetCardTextureXNeg
// 0x0008 (0x0008 - 0x0000)
struct UsdDrawModeComponent_SetCardTextureXNeg final
{
public:
	class UTexture2D*                             NewTexture;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_SetCardTextureXNeg) == 0x000008, "Wrong alignment on UsdDrawModeComponent_SetCardTextureXNeg");
static_assert(sizeof(UsdDrawModeComponent_SetCardTextureXNeg) == 0x000008, "Wrong size on UsdDrawModeComponent_SetCardTextureXNeg");
static_assert(offsetof(UsdDrawModeComponent_SetCardTextureXNeg, NewTexture) == 0x000000, "Member 'UsdDrawModeComponent_SetCardTextureXNeg::NewTexture' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.SetCardTextureXPos
// 0x0008 (0x0008 - 0x0000)
struct UsdDrawModeComponent_SetCardTextureXPos final
{
public:
	class UTexture2D*                             NewTexture;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_SetCardTextureXPos) == 0x000008, "Wrong alignment on UsdDrawModeComponent_SetCardTextureXPos");
static_assert(sizeof(UsdDrawModeComponent_SetCardTextureXPos) == 0x000008, "Wrong size on UsdDrawModeComponent_SetCardTextureXPos");
static_assert(offsetof(UsdDrawModeComponent_SetCardTextureXPos, NewTexture) == 0x000000, "Member 'UsdDrawModeComponent_SetCardTextureXPos::NewTexture' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.SetCardTextureYNeg
// 0x0008 (0x0008 - 0x0000)
struct UsdDrawModeComponent_SetCardTextureYNeg final
{
public:
	class UTexture2D*                             NewTexture;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_SetCardTextureYNeg) == 0x000008, "Wrong alignment on UsdDrawModeComponent_SetCardTextureYNeg");
static_assert(sizeof(UsdDrawModeComponent_SetCardTextureYNeg) == 0x000008, "Wrong size on UsdDrawModeComponent_SetCardTextureYNeg");
static_assert(offsetof(UsdDrawModeComponent_SetCardTextureYNeg, NewTexture) == 0x000000, "Member 'UsdDrawModeComponent_SetCardTextureYNeg::NewTexture' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.SetCardTextureYPos
// 0x0008 (0x0008 - 0x0000)
struct UsdDrawModeComponent_SetCardTextureYPos final
{
public:
	class UTexture2D*                             NewTexture;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_SetCardTextureYPos) == 0x000008, "Wrong alignment on UsdDrawModeComponent_SetCardTextureYPos");
static_assert(sizeof(UsdDrawModeComponent_SetCardTextureYPos) == 0x000008, "Wrong size on UsdDrawModeComponent_SetCardTextureYPos");
static_assert(offsetof(UsdDrawModeComponent_SetCardTextureYPos, NewTexture) == 0x000000, "Member 'UsdDrawModeComponent_SetCardTextureYPos::NewTexture' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.SetCardTextureZNeg
// 0x0008 (0x0008 - 0x0000)
struct UsdDrawModeComponent_SetCardTextureZNeg final
{
public:
	class UTexture2D*                             NewTexture;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_SetCardTextureZNeg) == 0x000008, "Wrong alignment on UsdDrawModeComponent_SetCardTextureZNeg");
static_assert(sizeof(UsdDrawModeComponent_SetCardTextureZNeg) == 0x000008, "Wrong size on UsdDrawModeComponent_SetCardTextureZNeg");
static_assert(offsetof(UsdDrawModeComponent_SetCardTextureZNeg, NewTexture) == 0x000000, "Member 'UsdDrawModeComponent_SetCardTextureZNeg::NewTexture' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.SetCardTextureZPos
// 0x0008 (0x0008 - 0x0000)
struct UsdDrawModeComponent_SetCardTextureZPos final
{
public:
	class UTexture2D*                             NewTexture;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_SetCardTextureZPos) == 0x000008, "Wrong alignment on UsdDrawModeComponent_SetCardTextureZPos");
static_assert(sizeof(UsdDrawModeComponent_SetCardTextureZPos) == 0x000008, "Wrong size on UsdDrawModeComponent_SetCardTextureZPos");
static_assert(offsetof(UsdDrawModeComponent_SetCardTextureZPos, NewTexture) == 0x000000, "Member 'UsdDrawModeComponent_SetCardTextureZPos::NewTexture' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.SetDrawMode
// 0x0004 (0x0004 - 0x0000)
struct UsdDrawModeComponent_SetDrawMode final
{
public:
	EUsdDrawMode                                  NewDrawMode;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_SetDrawMode) == 0x000004, "Wrong alignment on UsdDrawModeComponent_SetDrawMode");
static_assert(sizeof(UsdDrawModeComponent_SetDrawMode) == 0x000004, "Wrong size on UsdDrawModeComponent_SetDrawMode");
static_assert(offsetof(UsdDrawModeComponent_SetDrawMode, NewDrawMode) == 0x000000, "Member 'UsdDrawModeComponent_SetDrawMode::NewDrawMode' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.SetTextureForFace
// 0x0010 (0x0010 - 0x0000)
struct UsdDrawModeComponent_SetTextureForFace final
{
public:
	EUsdModelCardFace                             Face;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_SetTextureForFace) == 0x000008, "Wrong alignment on UsdDrawModeComponent_SetTextureForFace");
static_assert(sizeof(UsdDrawModeComponent_SetTextureForFace) == 0x000010, "Wrong size on UsdDrawModeComponent_SetTextureForFace");
static_assert(offsetof(UsdDrawModeComponent_SetTextureForFace, Face) == 0x000000, "Member 'UsdDrawModeComponent_SetTextureForFace::Face' has a wrong offset!");
static_assert(offsetof(UsdDrawModeComponent_SetTextureForFace, Texture) == 0x000008, "Member 'UsdDrawModeComponent_SetTextureForFace::Texture' has a wrong offset!");

// Function USDClasses.UsdDrawModeComponent.GetTextureForFace
// 0x0010 (0x0010 - 0x0000)
struct UsdDrawModeComponent_GetTextureForFace final
{
public:
	EUsdModelCardFace                             Face;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UsdDrawModeComponent_GetTextureForFace) == 0x000008, "Wrong alignment on UsdDrawModeComponent_GetTextureForFace");
static_assert(sizeof(UsdDrawModeComponent_GetTextureForFace) == 0x000010, "Wrong size on UsdDrawModeComponent_GetTextureForFace");
static_assert(offsetof(UsdDrawModeComponent_GetTextureForFace, Face) == 0x000000, "Member 'UsdDrawModeComponent_GetTextureForFace::Face' has a wrong offset!");
static_assert(offsetof(UsdDrawModeComponent_GetTextureForFace, ReturnValue) == 0x000008, "Member 'UsdDrawModeComponent_GetTextureForFace::ReturnValue' has a wrong offset!");

}

