#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShootingRange_Cable

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ShootingRange_Cable.BP_ShootingRange_Cable_C
// 0x0020 (0x02C8 - 0x02A8)
class ABP_ShootingRange_Cable_C final : public AActor
{
public:
	class USplineComponent*                       Spline;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    Meshes;                                            // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ShootingRange_Cable_C">();
	}
	static class ABP_ShootingRange_Cable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ShootingRange_Cable_C>();
	}
};
static_assert(alignof(ABP_ShootingRange_Cable_C) == 0x000008, "Wrong alignment on ABP_ShootingRange_Cable_C");
static_assert(sizeof(ABP_ShootingRange_Cable_C) == 0x0002C8, "Wrong size on ABP_ShootingRange_Cable_C");
static_assert(offsetof(ABP_ShootingRange_Cable_C, Spline) == 0x0002A8, "Member 'ABP_ShootingRange_Cable_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_ShootingRange_Cable_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_ShootingRange_Cable_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ShootingRange_Cable_C, Meshes) == 0x0002B8, "Member 'ABP_ShootingRange_Cable_C::Meshes' has a wrong offset!");

}

