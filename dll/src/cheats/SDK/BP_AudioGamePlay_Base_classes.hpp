#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioGamePlay_Base

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AudioGamePlay_Base.BP_AudioGamePlay_Base_C
// 0x0020 (0x02C8 - 0x02A8)
class ABP_AudioGamePlay_Base_C final : public AActor
{
public:
	class USubmixOverrideVolumeComponent*         SubmixOverrideVolume;                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USubmixSendVolumeComponent*             SubmixSendVolume;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioGameplayVolumeComponent*          ProxyVolume;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	bool ConditionMet() const;
	bool ConditionMet_Position(const struct FVector& Position) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AudioGamePlay_Base_C">();
	}
	static class ABP_AudioGamePlay_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AudioGamePlay_Base_C>();
	}
};
static_assert(alignof(ABP_AudioGamePlay_Base_C) == 0x000008, "Wrong alignment on ABP_AudioGamePlay_Base_C");
static_assert(sizeof(ABP_AudioGamePlay_Base_C) == 0x0002C8, "Wrong size on ABP_AudioGamePlay_Base_C");
static_assert(offsetof(ABP_AudioGamePlay_Base_C, SubmixOverrideVolume) == 0x0002A8, "Member 'ABP_AudioGamePlay_Base_C::SubmixOverrideVolume' has a wrong offset!");
static_assert(offsetof(ABP_AudioGamePlay_Base_C, SubmixSendVolume) == 0x0002B0, "Member 'ABP_AudioGamePlay_Base_C::SubmixSendVolume' has a wrong offset!");
static_assert(offsetof(ABP_AudioGamePlay_Base_C, ProxyVolume) == 0x0002B8, "Member 'ABP_AudioGamePlay_Base_C::ProxyVolume' has a wrong offset!");
static_assert(offsetof(ABP_AudioGamePlay_Base_C, DefaultSceneRoot) == 0x0002C0, "Member 'ABP_AudioGamePlay_Base_C::DefaultSceneRoot' has a wrong offset!");

}

