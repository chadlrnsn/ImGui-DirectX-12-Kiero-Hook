#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DMOnlinePlugin

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "DMOnlinePlugin_structs.hpp"


namespace SDK
{

// Class DMOnlinePlugin.SPDummyBlueprintProxy
// 0x0000 (0x0028 - 0x0028)
class USPDummyBlueprintProxy final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SPDummyBlueprintProxy">();
	}
	static class USPDummyBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USPDummyBlueprintProxy>();
	}
};
static_assert(alignof(USPDummyBlueprintProxy) == 0x000008, "Wrong alignment on USPDummyBlueprintProxy");
static_assert(sizeof(USPDummyBlueprintProxy) == 0x000028, "Wrong size on USPDummyBlueprintProxy");

// Class DMOnlinePlugin.SPCreateSessionBlueprintProxy
// 0x0020 (0x0048 - 0x0028)
class USPCreateSessionBlueprintProxy final : public UObject
{
public:
	TMulticastInlineDelegate<void(const class FString& Error)> Success;                              // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Error)> Fail;                                 // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SPCreateSessionBlueprintProxy">();
	}
	static class USPCreateSessionBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USPCreateSessionBlueprintProxy>();
	}
};
static_assert(alignof(USPCreateSessionBlueprintProxy) == 0x000008, "Wrong alignment on USPCreateSessionBlueprintProxy");
static_assert(sizeof(USPCreateSessionBlueprintProxy) == 0x000048, "Wrong size on USPCreateSessionBlueprintProxy");
static_assert(offsetof(USPCreateSessionBlueprintProxy, Success) == 0x000028, "Member 'USPCreateSessionBlueprintProxy::Success' has a wrong offset!");
static_assert(offsetof(USPCreateSessionBlueprintProxy, Fail) == 0x000038, "Member 'USPCreateSessionBlueprintProxy::Fail' has a wrong offset!");

// Class DMOnlinePlugin.SPDestroySessionBlueprintProxy
// 0x0020 (0x0048 - 0x0028)
class USPDestroySessionBlueprintProxy final : public UObject
{
public:
	TMulticastInlineDelegate<void(const class FString& Error)> Success;                              // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Error)> Fail;                                 // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SPDestroySessionBlueprintProxy">();
	}
	static class USPDestroySessionBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USPDestroySessionBlueprintProxy>();
	}
};
static_assert(alignof(USPDestroySessionBlueprintProxy) == 0x000008, "Wrong alignment on USPDestroySessionBlueprintProxy");
static_assert(sizeof(USPDestroySessionBlueprintProxy) == 0x000048, "Wrong size on USPDestroySessionBlueprintProxy");
static_assert(offsetof(USPDestroySessionBlueprintProxy, Success) == 0x000028, "Member 'USPDestroySessionBlueprintProxy::Success' has a wrong offset!");
static_assert(offsetof(USPDestroySessionBlueprintProxy, Fail) == 0x000038, "Member 'USPDestroySessionBlueprintProxy::Fail' has a wrong offset!");

// Class DMOnlinePlugin.SPStartSessionBlueprintProxy
// 0x0020 (0x0048 - 0x0028)
class USPStartSessionBlueprintProxy final : public UObject
{
public:
	TMulticastInlineDelegate<void(const class FString& Error)> Success;                              // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Error)> Fail;                                 // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SPStartSessionBlueprintProxy">();
	}
	static class USPStartSessionBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USPStartSessionBlueprintProxy>();
	}
};
static_assert(alignof(USPStartSessionBlueprintProxy) == 0x000008, "Wrong alignment on USPStartSessionBlueprintProxy");
static_assert(sizeof(USPStartSessionBlueprintProxy) == 0x000048, "Wrong size on USPStartSessionBlueprintProxy");
static_assert(offsetof(USPStartSessionBlueprintProxy, Success) == 0x000028, "Member 'USPStartSessionBlueprintProxy::Success' has a wrong offset!");
static_assert(offsetof(USPStartSessionBlueprintProxy, Fail) == 0x000038, "Member 'USPStartSessionBlueprintProxy::Fail' has a wrong offset!");

// Class DMOnlinePlugin.SPFindSessionBlueprintProxy
// 0x0020 (0x0048 - 0x0028)
class USPFindSessionBlueprintProxy final : public UObject
{
public:
	TMulticastInlineDelegate<void(const class FString& Error, const TArray<struct FBlueprintSessionResult>& Result)> Success; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Error, const TArray<struct FBlueprintSessionResult>& Result)> Fail; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SPFindSessionBlueprintProxy">();
	}
	static class USPFindSessionBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USPFindSessionBlueprintProxy>();
	}
};
static_assert(alignof(USPFindSessionBlueprintProxy) == 0x000008, "Wrong alignment on USPFindSessionBlueprintProxy");
static_assert(sizeof(USPFindSessionBlueprintProxy) == 0x000048, "Wrong size on USPFindSessionBlueprintProxy");
static_assert(offsetof(USPFindSessionBlueprintProxy, Success) == 0x000028, "Member 'USPFindSessionBlueprintProxy::Success' has a wrong offset!");
static_assert(offsetof(USPFindSessionBlueprintProxy, Fail) == 0x000038, "Member 'USPFindSessionBlueprintProxy::Fail' has a wrong offset!");

// Class DMOnlinePlugin.SPFindSessionByIdBlueprintProxy
// 0x0020 (0x0048 - 0x0028)
class USPFindSessionByIdBlueprintProxy final : public UObject
{
public:
	TMulticastInlineDelegate<void(const class FString& Error, const struct FBlueprintSessionResult& Result)> Success; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Error, const struct FBlueprintSessionResult& Result)> Fail; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SPFindSessionByIdBlueprintProxy">();
	}
	static class USPFindSessionByIdBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USPFindSessionByIdBlueprintProxy>();
	}
};
static_assert(alignof(USPFindSessionByIdBlueprintProxy) == 0x000008, "Wrong alignment on USPFindSessionByIdBlueprintProxy");
static_assert(sizeof(USPFindSessionByIdBlueprintProxy) == 0x000048, "Wrong size on USPFindSessionByIdBlueprintProxy");
static_assert(offsetof(USPFindSessionByIdBlueprintProxy, Success) == 0x000028, "Member 'USPFindSessionByIdBlueprintProxy::Success' has a wrong offset!");
static_assert(offsetof(USPFindSessionByIdBlueprintProxy, Fail) == 0x000038, "Member 'USPFindSessionByIdBlueprintProxy::Fail' has a wrong offset!");

// Class DMOnlinePlugin.SPJoinSessionBlueprintProxy
// 0x0020 (0x0048 - 0x0028)
class USPJoinSessionBlueprintProxy final : public UObject
{
public:
	TMulticastInlineDelegate<void(const class FString& TravelURL, const class FString& Error)> Success; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& TravelURL, const class FString& Error)> Fail; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SPJoinSessionBlueprintProxy">();
	}
	static class USPJoinSessionBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USPJoinSessionBlueprintProxy>();
	}
};
static_assert(alignof(USPJoinSessionBlueprintProxy) == 0x000008, "Wrong alignment on USPJoinSessionBlueprintProxy");
static_assert(sizeof(USPJoinSessionBlueprintProxy) == 0x000048, "Wrong size on USPJoinSessionBlueprintProxy");
static_assert(offsetof(USPJoinSessionBlueprintProxy, Success) == 0x000028, "Member 'USPJoinSessionBlueprintProxy::Success' has a wrong offset!");
static_assert(offsetof(USPJoinSessionBlueprintProxy, Fail) == 0x000038, "Member 'USPJoinSessionBlueprintProxy::Fail' has a wrong offset!");

// Class DMOnlinePlugin.SPJoinFirstAvailableSessionBlueprintProxy
// 0x0020 (0x0048 - 0x0028)
class USPJoinFirstAvailableSessionBlueprintProxy final : public UObject
{
public:
	TMulticastInlineDelegate<void(const class FString& TravelURL, const class FString& Error)> Success; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& TravelURL, const class FString& Error)> Fail; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SPJoinFirstAvailableSessionBlueprintProxy">();
	}
	static class USPJoinFirstAvailableSessionBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USPJoinFirstAvailableSessionBlueprintProxy>();
	}
};
static_assert(alignof(USPJoinFirstAvailableSessionBlueprintProxy) == 0x000008, "Wrong alignment on USPJoinFirstAvailableSessionBlueprintProxy");
static_assert(sizeof(USPJoinFirstAvailableSessionBlueprintProxy) == 0x000048, "Wrong size on USPJoinFirstAvailableSessionBlueprintProxy");
static_assert(offsetof(USPJoinFirstAvailableSessionBlueprintProxy, Success) == 0x000028, "Member 'USPJoinFirstAvailableSessionBlueprintProxy::Success' has a wrong offset!");
static_assert(offsetof(USPJoinFirstAvailableSessionBlueprintProxy, Fail) == 0x000038, "Member 'USPJoinFirstAvailableSessionBlueprintProxy::Fail' has a wrong offset!");

// Class DMOnlinePlugin.SPStartMatchmakingProxy
// 0x0030 (0x0058 - 0x0028)
class USPStartMatchmakingProxy final : public UObject
{
public:
	TMulticastInlineDelegate<void(const class FString& TravelURL, const class FString& Error)> JoinedSession; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& TravelURL, const class FString& Error)> CreatedSession; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& TravelURL, const class FString& Error)> Fail; // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SPStartMatchmakingProxy">();
	}
	static class USPStartMatchmakingProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USPStartMatchmakingProxy>();
	}
};
static_assert(alignof(USPStartMatchmakingProxy) == 0x000008, "Wrong alignment on USPStartMatchmakingProxy");
static_assert(sizeof(USPStartMatchmakingProxy) == 0x000058, "Wrong size on USPStartMatchmakingProxy");
static_assert(offsetof(USPStartMatchmakingProxy, JoinedSession) == 0x000028, "Member 'USPStartMatchmakingProxy::JoinedSession' has a wrong offset!");
static_assert(offsetof(USPStartMatchmakingProxy, CreatedSession) == 0x000038, "Member 'USPStartMatchmakingProxy::CreatedSession' has a wrong offset!");
static_assert(offsetof(USPStartMatchmakingProxy, Fail) == 0x000048, "Member 'USPStartMatchmakingProxy::Fail' has a wrong offset!");

// Class DMOnlinePlugin.SPAutoLoginBlueprintProxy
// 0x0020 (0x0048 - 0x0028)
class USPAutoLoginBlueprintProxy final : public UObject
{
public:
	TMulticastInlineDelegate<void(const class FString& Error)> Success;                              // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Error)> Fail;                                 // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SPAutoLoginBlueprintProxy">();
	}
	static class USPAutoLoginBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USPAutoLoginBlueprintProxy>();
	}
};
static_assert(alignof(USPAutoLoginBlueprintProxy) == 0x000008, "Wrong alignment on USPAutoLoginBlueprintProxy");
static_assert(sizeof(USPAutoLoginBlueprintProxy) == 0x000048, "Wrong size on USPAutoLoginBlueprintProxy");
static_assert(offsetof(USPAutoLoginBlueprintProxy, Success) == 0x000028, "Member 'USPAutoLoginBlueprintProxy::Success' has a wrong offset!");
static_assert(offsetof(USPAutoLoginBlueprintProxy, Fail) == 0x000038, "Member 'USPAutoLoginBlueprintProxy::Fail' has a wrong offset!");

// Class DMOnlinePlugin.DMOnlineAsyncProxies
// 0x0000 (0x0028 - 0x0028)
class UDMOnlineAsyncProxies final : public UBlueprintFunctionLibrary
{
public:
	static class USPAutoLoginBlueprintProxy* CreateAutoLoginProxyObject(class UObject* WorldContextObject, const class FName SubsystemName);
	static class USPCreateSessionBlueprintProxy* CreateCreateSessionProxyObject(class UObject* WorldContextObject, bool bLAN, int32 MaxNrOfPlayers, const TMap<class FName, struct FDMSessionSetting>& CustomSessionSettings, class FName SubsystemName);
	static class USPDestroySessionBlueprintProxy* CreateDestroySessionProxyObject(class UObject* WorldContextObject, class FName SubsystemName);
	static class USPDummyBlueprintProxy* CreateDummyProxyObject(class UObject* WorldContextObject);
	static class USPFindSessionByIdBlueprintProxy* CreateFindSessionByIdProxyObject(class UObject* WorldContextObject, const class FString& SessionId, class FName SubsystemName);
	static class USPFindSessionBlueprintProxy* CreateFindSessionProxyObject(class UObject* WorldContextObject, bool bLAN, const TMap<class FName, struct FDMSearchSetting>& CustomSearchSettings, class FName SubsystemName, int32 MaxResults);
	static class USPJoinFirstAvailableSessionBlueprintProxy* CreateJoinFirstAvailableSessionProxyObject(class UObject* WorldContextObject, bool bLAN, class FName SubsystemName);
	static class USPJoinSessionBlueprintProxy* CreateJoinSessionProxyObject(class UObject* WorldContextObject, const struct FBlueprintSessionResult& Session, class FName SubsystemName);
	static class USPStartMatchmakingProxy* CreateStartMatchmakingProxyObject(class UObject* WorldContextObject, const TMap<class FName, struct FDMSearchSetting>& CustomSearchSettings, const TMap<class FName, struct FDMSessionSetting>& CustomSessionSettings, class FName SubsystemName);
	static class USPStartSessionBlueprintProxy* CreateStartSessionProxyObject(class UObject* WorldContextObject, class FName SubsystemName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMOnlineAsyncProxies">();
	}
	static class UDMOnlineAsyncProxies* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMOnlineAsyncProxies>();
	}
};
static_assert(alignof(UDMOnlineAsyncProxies) == 0x000008, "Wrong alignment on UDMOnlineAsyncProxies");
static_assert(sizeof(UDMOnlineAsyncProxies) == 0x000028, "Wrong size on UDMOnlineAsyncProxies");

// Class DMOnlinePlugin.DMOnlineFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UDMOnlineFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BranchByNativeOSS(ENativeOSSBranches* Branches);
	static TMap<class FName, class FString> GetActiveSessionCustomSettings(const class UObject* WorldContextObject);
	static void GetPlayerAvatar(const class UObject* WorldContextObject, const class APlayerState* PlayerState, const TDelegate<void(bool bSuccess, class UTexture2D* Texture)>& Callback);
	static TMap<class FName, class FString> GetSessionCustomSettings(const struct FBlueprintSessionResult& SessionSearchResult);
	static bool IsCurrentlyActiveSession(const class UObject* WorldContextObject, const struct FBlueprintSessionResult& SessionSearchResult);
	static bool IsLoggedIn(const class UObject* WorldContextObject, const class FName& SubsystemName);
	static bool IsSessionHost(const class UObject* WorldContextObject);
	static bool IsSessionSingleplayer(const class UObject* WorldContextObject);
	static void OpenSteamBrowser(const class UObject* WorldContextObject, const class FString& URL);
	static void PerformClientTravel(class UObject* WorldContextObject, const class FString& Adress);
	static void PerformServerTravel(class UObject* WorldContextObject, const class FName WorldPath, const class FName GameMode, bool bAbsolute, bool bSeamlessTravel, bool bStartSession, const class FName& SubsystemName);
	static bool RegisterPlayer(class APlayerController* PlayerController, const class FName& SubsystemName);
	static void ShowFriendsUI(const class UObject* WorldContextObject);
	static bool UnregisterPlayer(class APlayerController* PlayerController, const class FName& SubsystemName);
	static bool UpdateCustomSessionSettings(const TMap<class FName, struct FDMSessionSetting>& CustomSettings, class FName SubsystemName, const TDelegate<void(bool bWasSuccessful)>& Callback);
	static bool UpdateSessionSettings(const TMap<class FName, class FString>& CustomSettings, const class FName& SubsystemName, const TDelegate<void(bool bWasSuccessful)>& Callback);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DMOnlineFunctionLibrary">();
	}
	static class UDMOnlineFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDMOnlineFunctionLibrary>();
	}
};
static_assert(alignof(UDMOnlineFunctionLibrary) == 0x000008, "Wrong alignment on UDMOnlineFunctionLibrary");
static_assert(sizeof(UDMOnlineFunctionLibrary) == 0x000028, "Wrong size on UDMOnlineFunctionLibrary");

}

