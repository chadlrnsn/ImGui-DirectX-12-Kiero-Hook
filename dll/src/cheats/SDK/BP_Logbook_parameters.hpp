#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Logbook

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Logbook.BP_Logbook_C.BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature) == 0x000008, "Wrong alignment on BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature");
static_assert(sizeof(BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature) == 0x000008, "Wrong size on BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature");
static_assert(offsetof(BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature, Actor) == 0x000000, "Member 'BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature::Actor' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature) == 0x000008, "Wrong alignment on BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature");
static_assert(sizeof(BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature) == 0x000008, "Wrong size on BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature");
static_assert(offsetof(BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature, Actor) == 0x000000, "Member 'BP_Logbook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature::Actor' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.CanInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_Logbook_C_CanInteract final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_CanInteract) == 0x000008, "Wrong alignment on BP_Logbook_C_CanInteract");
static_assert(sizeof(BP_Logbook_C_CanInteract) == 0x000010, "Wrong size on BP_Logbook_C_CanInteract");
static_assert(offsetof(BP_Logbook_C_CanInteract, Controller) == 0x000000, "Member 'BP_Logbook_C_CanInteract::Controller' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_CanInteract, ReturnValue) == 0x000008, "Member 'BP_Logbook_C_CanInteract::ReturnValue' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.ExecuteUbergraph_BP_Logbook
// 0x0090 (0x0090 - 0x0000)
struct BP_Logbook_C_ExecuteUbergraph_BP_Logbook final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_controller;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URSaveGame*                             CallFunc_GetCurrentSaveGame_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_controller_1;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget_CommonLogbook_C*                CallFunc_PushWidget_OutWidget;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewVisible;                           // 0x0038(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       CallFunc_GetInteractionIndicatorWidget_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue_1;    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Actor_1;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Actor;                  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARRadarManager*                         CallFunc_GetRadarManager_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_controller_2;                         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook) == 0x000008, "Wrong alignment on BP_Logbook_C_ExecuteUbergraph_BP_Logbook");
static_assert(sizeof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook) == 0x000090, "Wrong size on BP_Logbook_C_ExecuteUbergraph_BP_Logbook");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, EntryPoint) == 0x000000, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, K2Node_Event_controller) == 0x000008, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::K2Node_Event_controller' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, CallFunc_GetCurrentSaveGame_ReturnValue) == 0x000010, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::CallFunc_GetCurrentSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, K2Node_Event_controller_1) == 0x000018, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::K2Node_Event_controller_1' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, CallFunc_PushWidget_OutWidget) == 0x000020, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::CallFunc_PushWidget_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000029, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, K2Node_Event_InteractingActor) == 0x000030, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, K2Node_Event_NewVisible) == 0x000038, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::K2Node_Event_NewVisible' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, CallFunc_GetInteractionIndicatorWidget_ReturnValue) == 0x000040, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::CallFunc_GetInteractionIndicatorWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, K2Node_DynamicCast_AsPawn) == 0x000048, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, CallFunc_GetController_ReturnValue) == 0x000058, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, K2Node_DynamicCast_AsPlayer_Controller) == 0x000060, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, CallFunc_IsLocalPlayerController_ReturnValue_1) == 0x000069, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::CallFunc_IsLocalPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, K2Node_ComponentBoundEvent_Actor_1) == 0x000070, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::K2Node_ComponentBoundEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, K2Node_ComponentBoundEvent_Actor) == 0x000078, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::K2Node_ComponentBoundEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, CallFunc_GetRadarManager_ReturnValue) == 0x000080, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::CallFunc_GetRadarManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ExecuteUbergraph_BP_Logbook, K2Node_Event_controller_2) == 0x000088, "Member 'BP_Logbook_C_ExecuteUbergraph_BP_Logbook::K2Node_Event_controller_2' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.HideHighlight
// 0x0040 (0x0040 - 0x0000)
struct BP_Logbook_C_HideHighlight final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_HideHighlight) == 0x000008, "Wrong alignment on BP_Logbook_C_HideHighlight");
static_assert(sizeof(BP_Logbook_C_HideHighlight) == 0x000040, "Wrong size on BP_Logbook_C_HideHighlight");
static_assert(offsetof(BP_Logbook_C_HideHighlight, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Logbook_C_HideHighlight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_HideHighlight, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Logbook_C_HideHighlight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_HideHighlight, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Logbook_C_HideHighlight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_HideHighlight, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_Logbook_C_HideHighlight::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_HideHighlight, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Logbook_C_HideHighlight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_HideHighlight, CallFunc_GetWidget_ReturnValue) == 0x000028, "Member 'BP_Logbook_C_HideHighlight::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_HideHighlight, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Logbook_C_HideHighlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_HideHighlight, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_Logbook_C_HideHighlight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_HideHighlight, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_Logbook_C_HideHighlight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.OnFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_Logbook_C_OnFocus final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_OnFocus) == 0x000008, "Wrong alignment on BP_Logbook_C_OnFocus");
static_assert(sizeof(BP_Logbook_C_OnFocus) == 0x000008, "Wrong size on BP_Logbook_C_OnFocus");
static_assert(offsetof(BP_Logbook_C_OnFocus, Controller) == 0x000000, "Member 'BP_Logbook_C_OnFocus::Controller' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.OnFocusGone
// 0x0008 (0x0008 - 0x0000)
struct BP_Logbook_C_OnFocusGone final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_OnFocusGone) == 0x000008, "Wrong alignment on BP_Logbook_C_OnFocusGone");
static_assert(sizeof(BP_Logbook_C_OnFocusGone) == 0x000008, "Wrong size on BP_Logbook_C_OnFocusGone");
static_assert(offsetof(BP_Logbook_C_OnFocusGone, Controller) == 0x000000, "Member 'BP_Logbook_C_OnFocusGone::Controller' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_Logbook_C_OnInteract final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_OnInteract) == 0x000008, "Wrong alignment on BP_Logbook_C_OnInteract");
static_assert(sizeof(BP_Logbook_C_OnInteract) == 0x000008, "Wrong size on BP_Logbook_C_OnInteract");
static_assert(offsetof(BP_Logbook_C_OnInteract, Controller) == 0x000000, "Member 'BP_Logbook_C_OnInteract::Controller' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.SetupHighlight
// 0x0070 (0x0070 - 0x0000)
struct BP_Logbook_C_SetupHighlight final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URObjectHighlightWidget*                K2Node_DynamicCast_AsRObject_Highlight_Widget;     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0050(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0060(0x0010)()
};
static_assert(alignof(BP_Logbook_C_SetupHighlight) == 0x000008, "Wrong alignment on BP_Logbook_C_SetupHighlight");
static_assert(sizeof(BP_Logbook_C_SetupHighlight) == 0x000070, "Wrong size on BP_Logbook_C_SetupHighlight");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Logbook_C_SetupHighlight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Logbook_C_SetupHighlight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Logbook_C_SetupHighlight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_Logbook_C_SetupHighlight::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Logbook_C_SetupHighlight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Logbook_C_SetupHighlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_Logbook_C_SetupHighlight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_Logbook_C_SetupHighlight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, CallFunc_GetWidget_ReturnValue) == 0x000038, "Member 'BP_Logbook_C_SetupHighlight::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, K2Node_DynamicCast_AsRObject_Highlight_Widget) == 0x000040, "Member 'BP_Logbook_C_SetupHighlight::K2Node_DynamicCast_AsRObject_Highlight_Widget' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Logbook_C_SetupHighlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, CallFunc_MakeLiteralText_ReturnValue) == 0x000050, "Member 'BP_Logbook_C_SetupHighlight::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_SetupHighlight, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000060, "Member 'BP_Logbook_C_SetupHighlight::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.ToggleInteractionIndicatorVisibility
// 0x0010 (0x0010 - 0x0000)
struct BP_Logbook_C_ToggleInteractionIndicatorVisibility final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVisible;                                        // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_ToggleInteractionIndicatorVisibility) == 0x000008, "Wrong alignment on BP_Logbook_C_ToggleInteractionIndicatorVisibility");
static_assert(sizeof(BP_Logbook_C_ToggleInteractionIndicatorVisibility) == 0x000010, "Wrong size on BP_Logbook_C_ToggleInteractionIndicatorVisibility");
static_assert(offsetof(BP_Logbook_C_ToggleInteractionIndicatorVisibility, InteractingActor) == 0x000000, "Member 'BP_Logbook_C_ToggleInteractionIndicatorVisibility::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Logbook_C_ToggleInteractionIndicatorVisibility, NewVisible) == 0x000008, "Member 'BP_Logbook_C_ToggleInteractionIndicatorVisibility::NewVisible' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.GetInteractableAlternativeDescription
// 0x0010 (0x0010 - 0x0000)
struct BP_Logbook_C_GetInteractableAlternativeDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_Logbook_C_GetInteractableAlternativeDescription) == 0x000008, "Wrong alignment on BP_Logbook_C_GetInteractableAlternativeDescription");
static_assert(sizeof(BP_Logbook_C_GetInteractableAlternativeDescription) == 0x000010, "Wrong size on BP_Logbook_C_GetInteractableAlternativeDescription");
static_assert(offsetof(BP_Logbook_C_GetInteractableAlternativeDescription, ReturnValue) == 0x000000, "Member 'BP_Logbook_C_GetInteractableAlternativeDescription::ReturnValue' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.GetInteractableCost
// 0x0004 (0x0004 - 0x0000)
struct BP_Logbook_C_GetInteractableCost final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_GetInteractableCost) == 0x000004, "Wrong alignment on BP_Logbook_C_GetInteractableCost");
static_assert(sizeof(BP_Logbook_C_GetInteractableCost) == 0x000004, "Wrong size on BP_Logbook_C_GetInteractableCost");
static_assert(offsetof(BP_Logbook_C_GetInteractableCost, ReturnValue) == 0x000000, "Member 'BP_Logbook_C_GetInteractableCost::ReturnValue' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.GetInteractableCostCurrencyType
// 0x0010 (0x0010 - 0x0000)
struct BP_Logbook_C_GetInteractableCostCurrencyType final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_Logbook_C_GetInteractableCostCurrencyType) == 0x000008, "Wrong alignment on BP_Logbook_C_GetInteractableCostCurrencyType");
static_assert(sizeof(BP_Logbook_C_GetInteractableCostCurrencyType) == 0x000010, "Wrong size on BP_Logbook_C_GetInteractableCostCurrencyType");
static_assert(offsetof(BP_Logbook_C_GetInteractableCostCurrencyType, ReturnValue) == 0x000000, "Member 'BP_Logbook_C_GetInteractableCostCurrencyType::ReturnValue' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.GetInteractableDescription
// 0x0010 (0x0010 - 0x0000)
struct BP_Logbook_C_GetInteractableDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_Logbook_C_GetInteractableDescription) == 0x000008, "Wrong alignment on BP_Logbook_C_GetInteractableDescription");
static_assert(sizeof(BP_Logbook_C_GetInteractableDescription) == 0x000010, "Wrong size on BP_Logbook_C_GetInteractableDescription");
static_assert(offsetof(BP_Logbook_C_GetInteractableDescription, ReturnValue) == 0x000000, "Member 'BP_Logbook_C_GetInteractableDescription::ReturnValue' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.GetInteractableName
// 0x0010 (0x0010 - 0x0000)
struct BP_Logbook_C_GetInteractableName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_Logbook_C_GetInteractableName) == 0x000008, "Wrong alignment on BP_Logbook_C_GetInteractableName");
static_assert(sizeof(BP_Logbook_C_GetInteractableName) == 0x000010, "Wrong size on BP_Logbook_C_GetInteractableName");
static_assert(offsetof(BP_Logbook_C_GetInteractableName, ReturnValue) == 0x000000, "Member 'BP_Logbook_C_GetInteractableName::ReturnValue' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.GetInteractableSubHeader
// 0x0010 (0x0010 - 0x0000)
struct BP_Logbook_C_GetInteractableSubHeader final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_Logbook_C_GetInteractableSubHeader) == 0x000008, "Wrong alignment on BP_Logbook_C_GetInteractableSubHeader");
static_assert(sizeof(BP_Logbook_C_GetInteractableSubHeader) == 0x000010, "Wrong size on BP_Logbook_C_GetInteractableSubHeader");
static_assert(offsetof(BP_Logbook_C_GetInteractableSubHeader, ReturnValue) == 0x000000, "Member 'BP_Logbook_C_GetInteractableSubHeader::ReturnValue' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.GetInteractionIndicatorWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_Logbook_C_GetInteractionIndicatorWidget final
{
public:
	class UWidgetComponent*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_GetInteractionIndicatorWidget) == 0x000008, "Wrong alignment on BP_Logbook_C_GetInteractionIndicatorWidget");
static_assert(sizeof(BP_Logbook_C_GetInteractionIndicatorWidget) == 0x000008, "Wrong size on BP_Logbook_C_GetInteractionIndicatorWidget");
static_assert(offsetof(BP_Logbook_C_GetInteractionIndicatorWidget, ReturnValue) == 0x000000, "Member 'BP_Logbook_C_GetInteractionIndicatorWidget::ReturnValue' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.GetRadarIconColor
// 0x0010 (0x0010 - 0x0000)
struct BP_Logbook_C_GetRadarIconColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_GetRadarIconColor) == 0x000004, "Wrong alignment on BP_Logbook_C_GetRadarIconColor");
static_assert(sizeof(BP_Logbook_C_GetRadarIconColor) == 0x000010, "Wrong size on BP_Logbook_C_GetRadarIconColor");
static_assert(offsetof(BP_Logbook_C_GetRadarIconColor, ReturnValue) == 0x000000, "Member 'BP_Logbook_C_GetRadarIconColor::ReturnValue' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.GetRadarIconSize
// 0x0010 (0x0010 - 0x0000)
struct BP_Logbook_C_GetRadarIconSize final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_GetRadarIconSize) == 0x000008, "Wrong alignment on BP_Logbook_C_GetRadarIconSize");
static_assert(sizeof(BP_Logbook_C_GetRadarIconSize) == 0x000010, "Wrong size on BP_Logbook_C_GetRadarIconSize");
static_assert(offsetof(BP_Logbook_C_GetRadarIconSize, ReturnValue) == 0x000000, "Member 'BP_Logbook_C_GetRadarIconSize::ReturnValue' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.GetRadarObjectIcon
// 0x0008 (0x0008 - 0x0000)
struct BP_Logbook_C_GetRadarObjectIcon final
{
public:
	class USlateBrushAsset*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_GetRadarObjectIcon) == 0x000008, "Wrong alignment on BP_Logbook_C_GetRadarObjectIcon");
static_assert(sizeof(BP_Logbook_C_GetRadarObjectIcon) == 0x000008, "Wrong size on BP_Logbook_C_GetRadarObjectIcon");
static_assert(offsetof(BP_Logbook_C_GetRadarObjectIcon, ReturnValue) == 0x000000, "Member 'BP_Logbook_C_GetRadarObjectIcon::ReturnValue' has a wrong offset!");

// Function BP_Logbook.BP_Logbook_C.ShouldShowOnRadar
// 0x0001 (0x0001 - 0x0000)
struct BP_Logbook_C_ShouldShowOnRadar final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logbook_C_ShouldShowOnRadar) == 0x000001, "Wrong alignment on BP_Logbook_C_ShouldShowOnRadar");
static_assert(sizeof(BP_Logbook_C_ShouldShowOnRadar) == 0x000001, "Wrong size on BP_Logbook_C_ShouldShowOnRadar");
static_assert(offsetof(BP_Logbook_C_ShouldShowOnRadar, ReturnValue) == 0x000000, "Member 'BP_Logbook_C_ShouldShowOnRadar::ReturnValue' has a wrong offset!");

}

