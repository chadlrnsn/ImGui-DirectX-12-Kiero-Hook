#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NNERuntimeORT

#include "Basic.hpp"

#include "NNERuntimeORT_structs.hpp"
#include "DeveloperSettings_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class NNERuntimeORT.NNERuntimeORTSettings
// 0x0020 (0x0058 - 0x0038)
class UNNERuntimeORTSettings final : public UDeveloperSettings
{
public:
	struct FThreadingOptions                      EditorThreadingOptions;                            // 0x0038(0x0010)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FThreadingOptions                      GameThreadingOptions;                              // 0x0048(0x0010)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NNERuntimeORTSettings">();
	}
	static class UNNERuntimeORTSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNNERuntimeORTSettings>();
	}
};
static_assert(alignof(UNNERuntimeORTSettings) == 0x000008, "Wrong alignment on UNNERuntimeORTSettings");
static_assert(sizeof(UNNERuntimeORTSettings) == 0x000058, "Wrong size on UNNERuntimeORTSettings");
static_assert(offsetof(UNNERuntimeORTSettings, EditorThreadingOptions) == 0x000038, "Member 'UNNERuntimeORTSettings::EditorThreadingOptions' has a wrong offset!");
static_assert(offsetof(UNNERuntimeORTSettings, GameThreadingOptions) == 0x000048, "Member 'UNNERuntimeORTSettings::GameThreadingOptions' has a wrong offset!");

// Class NNERuntimeORT.NNERuntimeORTCpu
// 0x0020 (0x0048 - 0x0028)
class UNNERuntimeORTCpu final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NNERuntimeORTCpu">();
	}
	static class UNNERuntimeORTCpu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNNERuntimeORTCpu>();
	}
};
static_assert(alignof(UNNERuntimeORTCpu) == 0x000008, "Wrong alignment on UNNERuntimeORTCpu");
static_assert(sizeof(UNNERuntimeORTCpu) == 0x000048, "Wrong size on UNNERuntimeORTCpu");

// Class NNERuntimeORT.NNERuntimeORTDml
// 0x0038 (0x0060 - 0x0028)
class UNNERuntimeORTDml final : public UObject
{
public:
	uint8                                         Pad_28[0x38];                                      // 0x0028(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NNERuntimeORTDml">();
	}
	static class UNNERuntimeORTDml* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNNERuntimeORTDml>();
	}
};
static_assert(alignof(UNNERuntimeORTDml) == 0x000008, "Wrong alignment on UNNERuntimeORTDml");
static_assert(sizeof(UNNERuntimeORTDml) == 0x000060, "Wrong size on UNNERuntimeORTDml");

}

