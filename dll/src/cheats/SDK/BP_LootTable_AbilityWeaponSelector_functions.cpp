#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootTable_AbilityWeaponSelector

#include "Basic.hpp"

#include "BP_LootTable_AbilityWeaponSelector_classes.hpp"
#include "BP_LootTable_AbilityWeaponSelector_parameters.hpp"


namespace SDK
{

// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.AddGeneratedLootOptionForController
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FRLootSelectionOption>&LootOption                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bHasChosenLoot                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::AddGeneratedLootOptionForController(const TArray<struct FRLootSelectionOption>& LootOption, class APlayerController* PlayerController, bool bHasChosenLoot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "AddGeneratedLootOptionForController");

	Params::BP_LootTable_AbilityWeaponSelector_C_AddGeneratedLootOptionForController Parms{};

	Parms.LootOption = std::move(LootOption);
	Parms.PlayerController = PlayerController;
	Parms.bHasChosenLoot = bHasChosenLoot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentExit__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentExit__DelegateSignature(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentExit__DelegateSignature");

	Params::BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentExit__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentEnter__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentEnter__DelegateSignature(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentEnter__DelegateSignature");

	Params::BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentEnter__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature");

	Params::BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature");

	Params::BP_LootTable_AbilityWeaponSelector_C_BndEvt__BP_LootTable_AbilityWeaponSelector_ActorProximityBoxComp_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.CanInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_LootTable_AbilityWeaponSelector_C::CanInteract(class APlayerController* Controller_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "CanInteract");

	Params::BP_LootTable_AbilityWeaponSelector_C_CanInteract Parms{};

	Parms.Controller_0 = Controller_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.CheckAndUpdateLootOptions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::CheckAndUpdateLootOptions(class AController* Controller_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "CheckAndUpdateLootOptions");

	Params::BP_LootTable_AbilityWeaponSelector_C_CheckAndUpdateLootOptions Parms{};

	Parms.Controller_0 = Controller_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector");

	Params::BP_LootTable_AbilityWeaponSelector_C_ExecuteUbergraph_BP_LootTable_AbilityWeaponSelector Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.GenerateLootOptions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::GenerateLootOptions(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "GenerateLootOptions");

	Params::BP_LootTable_AbilityWeaponSelector_C_GenerateLootOptions Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.Get Reward Spawn Pos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::Get_Reward_Spawn_Pos(struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "Get Reward Spawn Pos");

	Params::BP_LootTable_AbilityWeaponSelector_C_Get_Reward_Spawn_Pos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.GetGeneratedLootOptionsForController
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    NetIDString                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<struct FRLootSelectionOption>*   Loot_Selection_Options                                 (Parm, OutParm)

void ABP_LootTable_AbilityWeaponSelector_C::GetGeneratedLootOptionsForController(const class FString& NetIDString, TArray<struct FRLootSelectionOption>* Loot_Selection_Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "GetGeneratedLootOptionsForController");

	Params::BP_LootTable_AbilityWeaponSelector_C_GetGeneratedLootOptionsForController Parms{};

	Parms.NetIDString = std::move(NetIDString);

	UObject::ProcessEvent(Func, &Parms);

	if (Loot_Selection_Options != nullptr)
		*Loot_Selection_Options = std::move(Parms.Loot_Selection_Options);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.GetNumEquippedMutatorsOfCategory
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class URMutatorRewardCategoryDataAsset* CategoryDA                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                Controller_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::GetNumEquippedMutatorsOfCategory(class URMutatorRewardCategoryDataAsset* CategoryDA, class APlayerController* Controller_0, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "GetNumEquippedMutatorsOfCategory");

	Params::BP_LootTable_AbilityWeaponSelector_C_GetNumEquippedMutatorsOfCategory Parms{};

	Parms.CategoryDA = CategoryDA;
	Parms.Controller_0 = Controller_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.HideHighlight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LootTable_AbilityWeaponSelector_C::HideHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "HideHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.OnInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::OnInteract(class APlayerController* Controller_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "OnInteract");

	Params::BP_LootTable_AbilityWeaponSelector_C_OnInteract Parms{};

	Parms.Controller_0 = Controller_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.OnInvoke_A4237351430B9226D441F19F02FEEC31
// (BlueprintCallable, BlueprintEvent)

void ABP_LootTable_AbilityWeaponSelector_C::OnInvoke_A4237351430B9226D441F19F02FEEC31()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "OnInvoke_A4237351430B9226D441F19F02FEEC31");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.OnLootOptionsChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FRLootSelectionOption>&NewLootOptions                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_LootTable_AbilityWeaponSelector_C::OnLootOptionsChanged(const TArray<struct FRLootSelectionOption>& NewLootOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "OnLootOptionsChanged");

	Params::BP_LootTable_AbilityWeaponSelector_C_OnLootOptionsChanged Parms{};

	Parms.NewLootOptions = std::move(NewLootOptions);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.OnLootOptionSelected_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRLootSelectionOption&     LootSelectionOption                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_LootTable_AbilityWeaponSelector_C::OnLootOptionSelected_Event(const struct FRLootSelectionOption& LootSelectionOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "OnLootOptionSelected_Event");

	Params::BP_LootTable_AbilityWeaponSelector_C_OnLootOptionSelected_Event Parms{};

	Parms.LootSelectionOption = std::move(LootSelectionOption);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.OnRep_SegmentCompleted
// (BlueprintCallable, BlueprintEvent)

void ABP_LootTable_AbilityWeaponSelector_C::OnRep_SegmentCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "OnRep_SegmentCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.OnSegmentCompleted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AREnemySpawnAreaSegment*          EnemySpawnAreaSegment                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::OnSegmentCompleted(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "OnSegmentCompleted");

	Params::BP_LootTable_AbilityWeaponSelector_C_OnSegmentCompleted Parms{};

	Parms.EnemySpawnAreaSegment = EnemySpawnAreaSegment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.PlayerStateIsValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::PlayerStateIsValid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "PlayerStateIsValid");

	Params::BP_LootTable_AbilityWeaponSelector_C_PlayerStateIsValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.PresenceAnimationTick
// (BlueprintCallable, BlueprintEvent)

void ABP_LootTable_AbilityWeaponSelector_C::PresenceAnimationTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "PresenceAnimationTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_LootTable_AbilityWeaponSelector_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.RemoveCappedCategories
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::RemoveCappedCategories(class APlayerController* Controller_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "RemoveCappedCategories");

	Params::BP_LootTable_AbilityWeaponSelector_C_RemoveCappedCategories Parms{};

	Parms.Controller_0 = Controller_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.RunRoutedObjectBehaviour
// (Event, Public, BlueprintEvent)

void ABP_LootTable_AbilityWeaponSelector_C::RunRoutedObjectBehaviour()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "RunRoutedObjectBehaviour");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.RunRoutedObjectBehaviourByName
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             BehaviourName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LootTable_AbilityWeaponSelector_C::RunRoutedObjectBehaviourByName(class FName BehaviourName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "RunRoutedObjectBehaviourByName");

	Params::BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourByName Parms{};

	Parms.BehaviourName = BehaviourName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.RunRoutedObjectBehaviourWithData
// (Event, Public, BlueprintEvent)
// Parameters:
// const struct FRoutedObjectData&         RoutedData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_LootTable_AbilityWeaponSelector_C::RunRoutedObjectBehaviourWithData(const struct FRoutedObjectData& RoutedData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "RunRoutedObjectBehaviourWithData");

	Params::BP_LootTable_AbilityWeaponSelector_C_RunRoutedObjectBehaviourWithData Parms{};

	Parms.RoutedData = std::move(RoutedData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.ShowHighlight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LootTable_AbilityWeaponSelector_C::ShowHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "ShowHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.ShowHighlightMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_LootTable_AbilityWeaponSelector_C::ShowHighlightMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "ShowHighlightMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.ShowHighlightServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_LootTable_AbilityWeaponSelector_C::ShowHighlightServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "ShowHighlightServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_LootTable_AbilityWeaponSelector_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.GetInteractionIndicatorWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidgetComponent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidgetComponent* ABP_LootTable_AbilityWeaponSelector_C::GetInteractionIndicatorWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "GetInteractionIndicatorWidget");

	Params::BP_LootTable_AbilityWeaponSelector_C_GetInteractionIndicatorWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LootTable_AbilityWeaponSelector.BP_LootTable_AbilityWeaponSelector_C.ShouldShowOnRadar
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_LootTable_AbilityWeaponSelector_C::ShouldShowOnRadar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LootTable_AbilityWeaponSelector_C", "ShouldShowOnRadar");

	Params::BP_LootTable_AbilityWeaponSelector_C_ShouldShowOnRadar Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

