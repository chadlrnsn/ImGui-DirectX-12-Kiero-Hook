#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_DamageIndicator_Container

#include "Basic.hpp"

#include "Widget_DamageIndicator_Container_classes.hpp"
#include "Widget_DamageIndicator_Container_parameters.hpp"


namespace SDK
{

// Function Widget_DamageIndicator_Container.Widget_DamageIndicator_Container_C.ExecuteUbergraph_Widget_DamageIndicator_Container
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_DamageIndicator_Container_C::ExecuteUbergraph_Widget_DamageIndicator_Container(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_DamageIndicator_Container_C", "ExecuteUbergraph_Widget_DamageIndicator_Container");

	Params::Widget_DamageIndicator_Container_C_ExecuteUbergraph_Widget_DamageIndicator_Container Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_DamageIndicator_Container.Widget_DamageIndicator_Container_C.OnBecomeAvailable
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget_DamageIndicator_C*        Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWidget_DamageIndicator_Container_C::OnBecomeAvailable(class UWidget_DamageIndicator_C* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_DamageIndicator_Container_C", "OnBecomeAvailable");

	Params::Widget_DamageIndicator_Container_C_OnBecomeAvailable Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_DamageIndicator_Container.Widget_DamageIndicator_Container_C.OnDamageTaken
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URHealthComponent*                Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FDamageCombatEvent&        DamageEvent                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UWidget_DamageIndicator_Container_C::OnDamageTaken(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_DamageIndicator_Container_C", "OnDamageTaken");

	Params::Widget_DamageIndicator_Container_C_OnDamageTaken Parms{};

	Parms.Component = Component;
	Parms.DamageEvent = std::move(DamageEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_DamageIndicator_Container.Widget_DamageIndicator_Container_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWidget_DamageIndicator_Container_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_DamageIndicator_Container_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}

}

