#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PingIndicator

#include "Basic.hpp"

#include "BP_PingIndicator_classes.hpp"
#include "BP_PingIndicator_parameters.hpp"


namespace SDK
{

// Function BP_PingIndicator.BP_PingIndicator_C.DestroyVFX
// (BlueprintCallable, BlueprintEvent)

void ABP_PingIndicator_C::DestroyVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "DestroyVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PingIndicator.BP_PingIndicator_C.ExecuteUbergraph_BP_PingIndicator
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PingIndicator_C::ExecuteUbergraph_BP_PingIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "ExecuteUbergraph_BP_PingIndicator");

	Params::BP_PingIndicator_C_ExecuteUbergraph_BP_PingIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PingIndicator.BP_PingIndicator_C.PlayVFX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PingIndicator_C::PlayVFX(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "PlayVFX");

	Params::BP_PingIndicator_C_PlayVFX Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PingIndicator.BP_PingIndicator_C.PlayVFXMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PingIndicator_C::PlayVFXMulticast(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "PlayVFXMulticast");

	Params::BP_PingIndicator_C_PlayVFXMulticast Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PingIndicator.BP_PingIndicator_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PingIndicator_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PingIndicator.BP_PingIndicator_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_PingIndicator_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PingIndicator.BP_PingIndicator_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PingIndicator_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "ReceiveEndPlay");

	Params::BP_PingIndicator_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PingIndicator.BP_PingIndicator_C.SetIndicatorIcon
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UTexture2D*                 IconTexture                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PingIndicator_C::SetIndicatorIcon(const class UTexture2D* IconTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "SetIndicatorIcon");

	Params::BP_PingIndicator_C_SetIndicatorIcon Parms{};

	Parms.IconTexture = IconTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PingIndicator.BP_PingIndicator_C.SetIndicatorIconMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       IconTexture                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PingIndicator_C::SetIndicatorIconMulticast(class UTexture2D* IconTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "SetIndicatorIconMulticast");

	Params::BP_PingIndicator_C_SetIndicatorIconMulticast Parms{};

	Parms.IconTexture = IconTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PingIndicator.BP_PingIndicator_C.SetIndicatorIconServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       IconTexture                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PingIndicator_C::SetIndicatorIconServer(class UTexture2D* IconTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "SetIndicatorIconServer");

	Params::BP_PingIndicator_C_SetIndicatorIconServer Parms{};

	Parms.IconTexture = IconTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PingIndicator.BP_PingIndicator_C.UpdateColorMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PingIndicator_C*              BP_PingIndicatorRef                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              LinearColor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PingIndicator_C::UpdateColorMulticast(class ABP_PingIndicator_C* BP_PingIndicatorRef, const struct FLinearColor& LinearColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "UpdateColorMulticast");

	Params::BP_PingIndicator_C_UpdateColorMulticast Parms{};

	Parms.BP_PingIndicatorRef = BP_PingIndicatorRef;
	Parms.LinearColor = std::move(LinearColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PingIndicator.BP_PingIndicator_C.GetRadarIconColor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor ABP_PingIndicator_C::GetRadarIconColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "GetRadarIconColor");

	Params::BP_PingIndicator_C_GetRadarIconColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PingIndicator.BP_PingIndicator_C.GetRadarIconSize
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D ABP_PingIndicator_C::GetRadarIconSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "GetRadarIconSize");

	Params::BP_PingIndicator_C_GetRadarIconSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PingIndicator.BP_PingIndicator_C.GetRadarObjectIcon
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USlateBrushAsset*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class USlateBrushAsset* ABP_PingIndicator_C::GetRadarObjectIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "GetRadarObjectIcon");

	Params::BP_PingIndicator_C_GetRadarObjectIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PingIndicator.BP_PingIndicator_C.ShouldShowOnRadar
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_PingIndicator_C::ShouldShowOnRadar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PingIndicator_C", "ShouldShowOnRadar");

	Params::BP_PingIndicator_C_ShouldShowOnRadar Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

