#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GainHealth_Challenge

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_GainHealth_Challenge.BP_GainHealth_Challenge_C.ExecuteUbergraph_BP_GainHealth_Challenge
// 0x0060 (0x0060 - 0x0000)
struct BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class URHealthComponent* Component, float MaximumHealth)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHealthComponent*                      CallFunc_GetHealthComponent_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URHealthComponent*                      K2Node_CustomEvent_Component;                      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaximumHealth;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge) == 0x000008, "Wrong alignment on BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge");
static_assert(sizeof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge) == 0x000060, "Wrong size on BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge");
static_assert(offsetof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge, EntryPoint) == 0x000000, "Member 'BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge, CallFunc_GetChallengeManager_ReturnValue) == 0x000020, "Member 'BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000028, "Member 'BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge, CallFunc_GetHealthComponent_ReturnValue) == 0x000038, "Member 'BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge::CallFunc_GetHealthComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge, K2Node_CustomEvent_Component) == 0x000040, "Member 'BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge::K2Node_CustomEvent_Component' has a wrong offset!");
static_assert(offsetof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge, K2Node_CustomEvent_MaximumHealth) == 0x000048, "Member 'BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge::K2Node_CustomEvent_MaximumHealth' has a wrong offset!");
static_assert(offsetof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge, CallFunc_GetMaxHealth_ReturnValue) == 0x00004C, "Member 'BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'BP_GainHealth_Challenge_C_ExecuteUbergraph_BP_GainHealth_Challenge::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_GainHealth_Challenge.BP_GainHealth_Challenge_C.OnMaximumHealthChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_GainHealth_Challenge_C_OnMaximumHealthChanged final
{
public:
	class URHealthComponent*                      Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         MaximumHealth;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GainHealth_Challenge_C_OnMaximumHealthChanged) == 0x000008, "Wrong alignment on BP_GainHealth_Challenge_C_OnMaximumHealthChanged");
static_assert(sizeof(BP_GainHealth_Challenge_C_OnMaximumHealthChanged) == 0x000010, "Wrong size on BP_GainHealth_Challenge_C_OnMaximumHealthChanged");
static_assert(offsetof(BP_GainHealth_Challenge_C_OnMaximumHealthChanged, Component) == 0x000000, "Member 'BP_GainHealth_Challenge_C_OnMaximumHealthChanged::Component' has a wrong offset!");
static_assert(offsetof(BP_GainHealth_Challenge_C_OnMaximumHealthChanged, MaximumHealth) == 0x000008, "Member 'BP_GainHealth_Challenge_C_OnMaximumHealthChanged::MaximumHealth' has a wrong offset!");

}

