#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_ChatLog

#include "Basic.hpp"

#include "Widget_ChatLog_classes.hpp"
#include "Widget_ChatLog_parameters.hpp"


namespace SDK
{

// Function Widget_ChatLog.Widget_ChatLog_C.AddChatLogEntry
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRChatLogMessage&          IncomingMessage                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UWidget_ChatLog_C::AddChatLogEntry(const struct FRChatLogMessage& IncomingMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChatLog_C", "AddChatLogEntry");

	Params::Widget_ChatLog_C_AddChatLogEntry Parms{};

	Parms.IncomingMessage = std::move(IncomingMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChatLog.Widget_ChatLog_C.BndEvt__Widget_ChatLog_EditableTextBox_136_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_ChatLog_C::BndEvt__Widget_ChatLog_EditableTextBox_136_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChatLog_C", "BndEvt__Widget_ChatLog_EditableTextBox_136_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::Widget_ChatLog_C_BndEvt__Widget_ChatLog_EditableTextBox_136_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChatLog.Widget_ChatLog_C.BndEvt__Widget_ChatLog_InputMessageField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWidget_ChatLog_C::BndEvt__Widget_ChatLog_InputMessageField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChatLog_C", "BndEvt__Widget_ChatLog_InputMessageField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature");

	Params::Widget_ChatLog_C_BndEvt__Widget_ChatLog_InputMessageField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChatLog.Widget_ChatLog_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWidget_ChatLog_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChatLog_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_ChatLog.Widget_ChatLog_C.ExecuteUbergraph_Widget_ChatLog
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_ChatLog_C::ExecuteUbergraph_Widget_ChatLog(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChatLog_C", "ExecuteUbergraph_Widget_ChatLog");

	Params::Widget_ChatLog_C_ExecuteUbergraph_Widget_ChatLog Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChatLog.Widget_ChatLog_C.FindRecentNotificationFromPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      PlayerDisplayName                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UWidget_ChatLog_Notification_C**  AsWidget_Chat_Log_Notification                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWidget_ChatLog_C::FindRecentNotificationFromPlayer(const class FText& PlayerDisplayName, class UWidget_ChatLog_Notification_C** AsWidget_Chat_Log_Notification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChatLog_C", "FindRecentNotificationFromPlayer");

	Params::Widget_ChatLog_C_FindRecentNotificationFromPlayer Parms{};

	Parms.PlayerDisplayName = std::move(PlayerDisplayName);

	UObject::ProcessEvent(Func, &Parms);

	if (AsWidget_Chat_Log_Notification != nullptr)
		*AsWidget_Chat_Log_Notification = Parms.AsWidget_Chat_Log_Notification;
}


// Function Widget_ChatLog.Widget_ChatLog_C.HandleGamepadFocus
// (Public, BlueprintCallable, BlueprintEvent)

void UWidget_ChatLog_C::HandleGamepadFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChatLog_C", "HandleGamepadFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_ChatLog.Widget_ChatLog_C.MoveNotificationToLastIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          NotificationToMove                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWidget_ChatLog_C::MoveNotificationToLastIndex(class UWidget* NotificationToMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChatLog_C", "MoveNotificationToLastIndex");

	Params::Widget_ChatLog_C_MoveNotificationToLastIndex Parms{};

	Parms.NotificationToMove = NotificationToMove;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChatLog.Widget_ChatLog_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWidget_ChatLog_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChatLog_C", "OnRemovedFromFocusPath");

	Params::Widget_ChatLog_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChatLog.Widget_ChatLog_C.SetIsFocused
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFocused                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_ChatLog_C::SetIsFocused(bool IsFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChatLog_C", "SetIsFocused");

	Params::Widget_ChatLog_C_SetIsFocused Parms{};

	Parms.IsFocused = IsFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_ChatLog.Widget_ChatLog_C.SetVisibilityTimer
// (BlueprintCallable, BlueprintEvent)

void UWidget_ChatLog_C::SetVisibilityTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_ChatLog_C", "SetVisibilityTimer");

	UObject::ProcessEvent(Func, nullptr);
}

}

