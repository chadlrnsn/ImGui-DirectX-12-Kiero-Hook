#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseChest

#include "Basic.hpp"

#include "BP_BaseChest_classes.hpp"
#include "BP_BaseChest_parameters.hpp"


namespace SDK
{

// Function BP_BaseChest.BP_BaseChest_C.BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature");

	Params::BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_2_OnOverlapProximityBoxComponentEnter__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature");

	Params::BP_BaseChest_C_BndEvt__BP_BaseChest_Proximity_InteractableIndicator_K2Node_ComponentBoundEvent_3_OnOverlapProximityBoxComponentExit__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.BPOpenChestAndSpawnRewards
// (BlueprintCallable, BlueprintEvent)

void ABP_BaseChest_C::BPOpenChestAndSpawnRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "BPOpenChestAndSpawnRewards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.BuildupTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_BaseChest_C::BuildupTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "BuildupTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.BuildupTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_BaseChest_C::BuildupTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "BuildupTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.CanInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_BaseChest_C::CanInteract(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "CanInteract");

	Params::BP_BaseChest_C_CanInteract Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BaseChest.BP_BaseChest_C.CheckAndUpdateChestState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::CheckAndUpdateChestState(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "CheckAndUpdateChestState");

	Params::BP_BaseChest_C_CheckAndUpdateChestState Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.ChestOpen
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::ChestOpen(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "ChestOpen");

	Params::BP_BaseChest_C_ChestOpen Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.ExecuteUbergraph_BP_BaseChest
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::ExecuteUbergraph_BP_BaseChest(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "ExecuteUbergraph_BP_BaseChest");

	Params::BP_BaseChest_C_ExecuteUbergraph_BP_BaseChest Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.Get Reward Spawn Pos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::Get_Reward_Spawn_Pos(struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "Get Reward Spawn Pos");

	Params::BP_BaseChest_C_Get_Reward_Spawn_Pos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_BaseChest.BP_BaseChest_C.HandleInteraction
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::HandleInteraction(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "HandleInteraction");

	Params::BP_BaseChest_C_HandleInteraction Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.IdleFadeoutTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_BaseChest_C::IdleFadeoutTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "IdleFadeoutTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.IdleFadeoutTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_BaseChest_C::IdleFadeoutTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "IdleFadeoutTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.InitializeVisuals
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BaseChest_C::InitializeVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "InitializeVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.IsLocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::IsLocked(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "IsLocked");

	Params::BP_BaseChest_C_IsLocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_BaseChest.BP_BaseChest_C.IsLooted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::IsLooted(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "IsLooted");

	Params::BP_BaseChest_C_IsLooted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_BaseChest.BP_BaseChest_C.LootPickedUpUpdate
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::LootPickedUpUpdate(double Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "LootPickedUpUpdate");

	Params::BP_BaseChest_C_LootPickedUpUpdate Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.OnInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::OnInteract(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "OnInteract");

	Params::BP_BaseChest_C_OnInteract Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.OnInvoke_351379BC43035E6EB31590AE23A8820B
// (BlueprintCallable, BlueprintEvent)

void ABP_BaseChest_C::OnInvoke_351379BC43035E6EB31590AE23A8820B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "OnInvoke_351379BC43035E6EB31590AE23A8820B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.OnItemPickedUp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPickupableItem*                 PickedUpItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   PickupCost                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::OnItemPickedUp(class ARPickupableItem* PickedUpItem, int32 PickupCost, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "OnItemPickedUp");

	Params::BP_BaseChest_C_OnItemPickedUp Parms{};

	Parms.PickedUpItem = PickedUpItem;
	Parms.PickupCost = PickupCost;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.OnKeyUsed_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorUsedOn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::OnKeyUsed_Event(class AActor* ActorUsedOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "OnKeyUsed_Event");

	Params::BP_BaseChest_C_OnKeyUsed_Event Parms{};

	Parms.ActorUsedOn = ActorUsedOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.OnObjectiveEnded_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              ObjectiveTag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bCompleted                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::OnObjectiveEnded_Event(const struct FGameplayTag& ObjectiveTag, bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "OnObjectiveEnded_Event");

	Params::BP_BaseChest_C_OnObjectiveEnded_Event Parms{};

	Parms.ObjectiveTag = std::move(ObjectiveTag);
	Parms.bCompleted = bCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.PickedupTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_BaseChest_C::PickedupTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "PickedupTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.PickedupTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_BaseChest_C::PickedupTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "PickedupTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.PlayBuildupTimeline
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  From                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::PlayBuildupTimeline(double Duration, double From, double To)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "PlayBuildupTimeline");

	Params::BP_BaseChest_C_PlayBuildupTimeline Parms{};

	Parms.Duration = Duration;
	Parms.From = From;
	Parms.To = To;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.PlayerStateIsValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::PlayerStateIsValid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "PlayerStateIsValid");

	Params::BP_BaseChest_C_PlayerStateIsValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_BaseChest.BP_BaseChest_C.PlayIdleFadeoutTimeline
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::PlayIdleFadeoutTimeline(double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "PlayIdleFadeoutTimeline");

	Params::BP_BaseChest_C_PlayIdleFadeoutTimeline Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.PlayPickedupTimeline
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::PlayPickedupTimeline(double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "PlayPickedupTimeline");

	Params::BP_BaseChest_C_PlayPickedupTimeline Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BaseChest_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.RunRoutedObjectBehaviour
// (Event, Public, BlueprintEvent)

void ABP_BaseChest_C::RunRoutedObjectBehaviour()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "RunRoutedObjectBehaviour");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.RunRoutedObjectBehaviourByName
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             BehaviourName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::RunRoutedObjectBehaviourByName(class FName BehaviourName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "RunRoutedObjectBehaviourByName");

	Params::BP_BaseChest_C_RunRoutedObjectBehaviourByName Parms{};

	Parms.BehaviourName = BehaviourName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.RunRoutedObjectBehaviourWithData
// (Event, Public, BlueprintEvent)
// Parameters:
// const struct FRoutedObjectData&         RoutedData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BaseChest_C::RunRoutedObjectBehaviourWithData(const struct FRoutedObjectData& RoutedData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "RunRoutedObjectBehaviourWithData");

	Params::BP_BaseChest_C_RunRoutedObjectBehaviourWithData Parms{};

	Parms.RoutedData = std::move(RoutedData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.SetChestStateForController
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EChestState                             NewChestState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BaseChest_C::SetChestStateForController(EChestState NewChestState, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "SetChestStateForController");

	Params::BP_BaseChest_C_SetChestStateForController Parms{};

	Parms.NewChestState = NewChestState;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseChest.BP_BaseChest_C.SetupEventLogic
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_BaseChest_C::SetupEventLogic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "SetupEventLogic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.SpawnChestOpenSFX
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_BaseChest_C::SpawnChestOpenSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "SpawnChestOpenSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.Unlock
// (BlueprintCallable, BlueprintEvent)

void ABP_BaseChest_C::Unlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "Unlock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.UpdateChainsVisibility
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_BaseChest_C::UpdateChainsVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "UpdateChainsVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_BaseChest_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseChest.BP_BaseChest_C.GetInteractionIndicatorWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidgetComponent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidgetComponent* ABP_BaseChest_C::GetInteractionIndicatorWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "GetInteractionIndicatorWidget");

	Params::BP_BaseChest_C_GetInteractionIndicatorWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BaseChest.BP_BaseChest_C.GetPingableIconTexture
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UTexture2D* ABP_BaseChest_C::GetPingableIconTexture() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "GetPingableIconTexture");

	Params::BP_BaseChest_C_GetPingableIconTexture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BaseChest.BP_BaseChest_C.GetPingableName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_BaseChest_C::GetPingableName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "GetPingableName");

	Params::BP_BaseChest_C_GetPingableName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BaseChest.BP_BaseChest_C.IsCurrentlyPinged
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_BaseChest_C::IsCurrentlyPinged() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseChest_C", "IsCurrentlyPinged");

	Params::BP_BaseChest_C_IsCurrentlyPinged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

