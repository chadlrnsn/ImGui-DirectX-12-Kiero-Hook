#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Totem_Defensive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Totem_Defensive.BP_Totem_Defensive_C
// 0x0020 (0x02E8 - 0x02C8)
class ABP_Totem_Defensive_C final : public ARDummyTotem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_Shaman_Staff_Attached_01;                       // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereCollision;                                   // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_Elite_Golem_Sentry_OrbDummy_HealthComponent_K2Node_ComponentBoundEvent_0_OnHealthDepleted__DelegateSignature(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEventData);
	void ExecuteUbergraph_BP_Totem_Defensive(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Totem_Defensive_C">();
	}
	static class ABP_Totem_Defensive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Totem_Defensive_C>();
	}
};
static_assert(alignof(ABP_Totem_Defensive_C) == 0x000008, "Wrong alignment on ABP_Totem_Defensive_C");
static_assert(sizeof(ABP_Totem_Defensive_C) == 0x0002E8, "Wrong size on ABP_Totem_Defensive_C");
static_assert(offsetof(ABP_Totem_Defensive_C, UberGraphFrame) == 0x0002C8, "Member 'ABP_Totem_Defensive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Totem_Defensive_C, NS_Shaman_Staff_Attached_01) == 0x0002D0, "Member 'ABP_Totem_Defensive_C::NS_Shaman_Staff_Attached_01' has a wrong offset!");
static_assert(offsetof(ABP_Totem_Defensive_C, SphereCollision) == 0x0002D8, "Member 'ABP_Totem_Defensive_C::SphereCollision' has a wrong offset!");
static_assert(offsetof(ABP_Totem_Defensive_C, Sphere) == 0x0002E0, "Member 'ABP_Totem_Defensive_C::Sphere' has a wrong offset!");

}

