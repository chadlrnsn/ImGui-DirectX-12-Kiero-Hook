#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ObjectiveManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ObjectiveManager.BP_ObjectiveManager_C
// 0x0020 (0x0360 - 0x0340)
class ABP_ObjectiveManager_C final : public ARObjectiveManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URObjectivePrimaryDataAsset*            RandomizedObjectivePA_BP;                          // 0x0350(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	class AREnemySpawnAreaSegment*                LatestEnemySpawnAreaSegment;                       // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void PushRoomObjectiveNotificationMessge(const class FText& Message);
	void OnSpawnAreaSegmentStarted(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment);
	void OnRep_RandomizedObjectivePA_BP();
	void OnObjectiveStarted_Event(class URGObjectiveScript* ObjectiveScript);
	void OnObjectiveEnded_Event(const struct FGameplayTag& ObjectiveTag, bool bCompleted);
	void OnLevelChanged();
	void OnCorruptedEffectApplied(const TArray<class URNodeChoicePrimaryAsset*>& NodeChoicePAs, TArray<class URGScript*>& NodeChoiceScripts);
	void ExecuteUbergraph_BP_ObjectiveManager(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ObjectiveManager_C">();
	}
	static class ABP_ObjectiveManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ObjectiveManager_C>();
	}
};
static_assert(alignof(ABP_ObjectiveManager_C) == 0x000008, "Wrong alignment on ABP_ObjectiveManager_C");
static_assert(sizeof(ABP_ObjectiveManager_C) == 0x000360, "Wrong size on ABP_ObjectiveManager_C");
static_assert(offsetof(ABP_ObjectiveManager_C, UberGraphFrame) == 0x000340, "Member 'ABP_ObjectiveManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ObjectiveManager_C, DefaultSceneRoot) == 0x000348, "Member 'ABP_ObjectiveManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ObjectiveManager_C, RandomizedObjectivePA_BP) == 0x000350, "Member 'ABP_ObjectiveManager_C::RandomizedObjectivePA_BP' has a wrong offset!");
static_assert(offsetof(ABP_ObjectiveManager_C, LatestEnemySpawnAreaSegment) == 0x000358, "Member 'ABP_ObjectiveManager_C::LatestEnemySpawnAreaSegment' has a wrong offset!");

}

