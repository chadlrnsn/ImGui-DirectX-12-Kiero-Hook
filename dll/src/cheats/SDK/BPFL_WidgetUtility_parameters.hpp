#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_WidgetUtility

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BPFL_WidgetUtility.BPFL_WidgetUtility_C.PlayAnimation
// 0x0050 (0x0050 - 0x0000)
struct BPFL_WidgetUtility_C_PlayAnimation final
{
public:
	class UUserWidget*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Reverse;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Animation;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         PlaybackSpeed;                                     // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRestoreState;                                     // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StartLocation;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_WidgetUtility_C_PlayAnimation) == 0x000008, "Wrong alignment on BPFL_WidgetUtility_C_PlayAnimation");
static_assert(sizeof(BPFL_WidgetUtility_C_PlayAnimation) == 0x000050, "Wrong size on BPFL_WidgetUtility_C_PlayAnimation");
static_assert(offsetof(BPFL_WidgetUtility_C_PlayAnimation, Target) == 0x000000, "Member 'BPFL_WidgetUtility_C_PlayAnimation::Target' has a wrong offset!");
static_assert(offsetof(BPFL_WidgetUtility_C_PlayAnimation, Reverse) == 0x000008, "Member 'BPFL_WidgetUtility_C_PlayAnimation::Reverse' has a wrong offset!");
static_assert(offsetof(BPFL_WidgetUtility_C_PlayAnimation, Animation) == 0x000010, "Member 'BPFL_WidgetUtility_C_PlayAnimation::Animation' has a wrong offset!");
static_assert(offsetof(BPFL_WidgetUtility_C_PlayAnimation, PlaybackSpeed) == 0x000018, "Member 'BPFL_WidgetUtility_C_PlayAnimation::PlaybackSpeed' has a wrong offset!");
static_assert(offsetof(BPFL_WidgetUtility_C_PlayAnimation, bRestoreState) == 0x00001C, "Member 'BPFL_WidgetUtility_C_PlayAnimation::bRestoreState' has a wrong offset!");
static_assert(offsetof(BPFL_WidgetUtility_C_PlayAnimation, __WorldContext) == 0x000020, "Member 'BPFL_WidgetUtility_C_PlayAnimation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_WidgetUtility_C_PlayAnimation, PlayMode) == 0x000028, "Member 'BPFL_WidgetUtility_C_PlayAnimation::PlayMode' has a wrong offset!");
static_assert(offsetof(BPFL_WidgetUtility_C_PlayAnimation, StartLocation) == 0x000030, "Member 'BPFL_WidgetUtility_C_PlayAnimation::StartLocation' has a wrong offset!");
static_assert(offsetof(BPFL_WidgetUtility_C_PlayAnimation, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BPFL_WidgetUtility_C_PlayAnimation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_WidgetUtility_C_PlayAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000040, "Member 'BPFL_WidgetUtility_C_PlayAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_WidgetUtility_C_PlayAnimation, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000048, "Member 'BPFL_WidgetUtility_C_PlayAnimation::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

}

