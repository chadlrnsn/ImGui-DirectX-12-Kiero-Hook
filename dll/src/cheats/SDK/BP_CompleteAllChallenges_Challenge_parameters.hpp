#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CompleteAllChallenges_Challenge

#include "Basic.hpp"

#include "RGame_structs.hpp"


namespace SDK::Params
{

// Function BP_CompleteAllChallenges_Challenge.BP_CompleteAllChallenges_Challenge_C.ExecuteUbergraph_BP_CompleteAllChallenges_Challenge
// 0x0028 (0x0028 - 0x0000)
struct BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FRChallenge& Challenge)> K2Node_CreateDelegate_OutputDelegate;       // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge) == 0x000008, "Wrong alignment on BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge");
static_assert(sizeof(BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge) == 0x000028, "Wrong size on BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge, EntryPoint) == 0x000000, "Member 'BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge, CallFunc_GetChallengeManager_ReturnValue) == 0x000020, "Member 'BP_CompleteAllChallenges_Challenge_C_ExecuteUbergraph_BP_CompleteAllChallenges_Challenge::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");

// Function BP_CompleteAllChallenges_Challenge.BP_CompleteAllChallenges_Challenge_C.HandleChallengeCompleted
// 0x0368 (0x0368 - 0x0000)
struct BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted final
{
public:
	struct FRChallenge                            Challenge;                                         // 0x0000(0x0178)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         NumCompleted;                                      // 0x0178(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChallengeCompleted_ReturnValue;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue_1;        // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChallengeCompleted_ReturnValue_1;       // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue_2;        // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRChallenge>                    CallFunc_GetAllChallenges_ReturnValue;             // 0x01D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRChallenge                            CallFunc_Array_Get_Item;                           // 0x01E8(0x0178)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChallengeCompleted_ReturnValue_2;       // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted) == 0x000008, "Wrong alignment on BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted");
static_assert(sizeof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted) == 0x000368, "Wrong size on BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, Challenge) == 0x000000, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::Challenge' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, NumCompleted) == 0x000178, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::NumCompleted' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, Temp_int_Variable) == 0x00017C, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, Temp_bool_IsClosed_Variable) == 0x000180, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, Temp_int_Loop_Counter_Variable) == 0x000184, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, Temp_int_Array_Index_Variable) == 0x00018C, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, Temp_bool_Has_Been_Initd_Variable) == 0x000190, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_GetChallengeManager_ReturnValue) == 0x000198, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_IsChallengeCompleted_ReturnValue) == 0x0001A0, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_IsChallengeCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_GetChallengeManager_ReturnValue_1) == 0x0001A8, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_GetChallengeManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_Not_PreBool_ReturnValue) == 0x0001B0, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_IsChallengeCompleted_ReturnValue_1) == 0x0001B1, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_IsChallengeCompleted_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_K2_GetPawn_ReturnValue) == 0x0001B8, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001C0, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_GetChallengeManager_ReturnValue_2) == 0x0001C8, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_GetChallengeManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_GetAllChallenges_ReturnValue) == 0x0001D0, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_GetAllChallenges_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_Array_Length_ReturnValue) == 0x0001E0, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_Array_Get_Item) == 0x0001E8, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_Less_IntInt_ReturnValue) == 0x000360, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_NotEqual_NameName_ReturnValue) == 0x000361, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted, CallFunc_IsChallengeCompleted_ReturnValue_2) == 0x000362, "Member 'BP_CompleteAllChallenges_Challenge_C_HandleChallengeCompleted::CallFunc_IsChallengeCompleted_ReturnValue_2' has a wrong offset!");

}

