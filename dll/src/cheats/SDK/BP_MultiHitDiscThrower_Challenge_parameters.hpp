#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MultiHitDiscThrower_Challenge

#include "Basic.hpp"

#include "RGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MultiHitDiscThrower_Challenge.BP_MultiHitDiscThrower_Challenge_C.ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge
// 0x0190 (0x0190 - 0x0000)
struct BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChallengeCompleted_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool RunFailed)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RunFailed;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn_1;               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool RunFailed)>               K2Node_CreateDelegate_OutputDelegate_1;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue_1;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ARPawnBase*                             K2Node_CustomEvent_Pawn;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     K2Node_CustomEvent_DamageEventData;                // 0x00A8(0x00C0)()
	TDelegate<void(class ARPawnBase* Pawn, const struct FDamageCombatEvent& DamageEventData)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DamageSourceMaskHasFlag_ReturnValue;      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectASoftClass_ReturnValue;           // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectChildOfSoftClass_ReturnValue;     // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ARPawnBase* Pawn, const struct FDamageCombatEvent& DamageEventData)> K2Node_CreateDelegate_OutputDelegate_4; // 0x017C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge) == 0x000008, "Wrong alignment on BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge");
static_assert(sizeof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge) == 0x000190, "Wrong size on BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, EntryPoint) == 0x000000, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, CallFunc_GetChallengeManager_ReturnValue) == 0x000008, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, CallFunc_IsChallengeCompleted_ReturnValue) == 0x000010, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::CallFunc_IsChallengeCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, CallFunc_GetChallengeManager_ReturnValue_1) == 0x000028, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::CallFunc_GetChallengeManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, Temp_bool_IsClosed_Variable) == 0x000030, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, Temp_bool_Has_Been_Initd_Variable) == 0x000031, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, CallFunc_K2_GetPawn_ReturnValue) == 0x000038, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000040, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, K2Node_CustomEvent_RunFailed) == 0x000049, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::K2Node_CustomEvent_RunFailed' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, CallFunc_GetRGameState_ReturnValue) == 0x000050, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::CallFunc_GetRGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000058, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, K2Node_DynamicCast_AsRPlayer_Pawn_1) == 0x000060, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::K2Node_DynamicCast_AsRPlayer_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, K2Node_CreateDelegate_OutputDelegate_1) == 0x00006C, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, CallFunc_GetRGameState_ReturnValue_1) == 0x000080, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::CallFunc_GetRGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, K2Node_CreateDelegate_OutputDelegate_2) == 0x000088, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000098, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, K2Node_CustomEvent_Pawn) == 0x0000A0, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, K2Node_CustomEvent_DamageEventData) == 0x0000A8, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::K2Node_CustomEvent_DamageEventData' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, K2Node_CreateDelegate_OutputDelegate_3) == 0x000168, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, CallFunc_DamageSourceMaskHasFlag_ReturnValue) == 0x000178, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::CallFunc_DamageSourceMaskHasFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, CallFunc_IsObjectASoftClass_ReturnValue) == 0x000179, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::CallFunc_IsObjectASoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, CallFunc_IsObjectChildOfSoftClass_ReturnValue) == 0x00017A, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::CallFunc_IsObjectChildOfSoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, K2Node_CreateDelegate_OutputDelegate_4) == 0x00017C, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge, CallFunc_BooleanOR_ReturnValue) == 0x00018C, "Member 'BP_MultiHitDiscThrower_Challenge_C_ExecuteUbergraph_BP_MultiHitDiscThrower_Challenge::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_MultiHitDiscThrower_Challenge.BP_MultiHitDiscThrower_Challenge_C.OnDealtDamage_Event
// 0x00C8 (0x00C8 - 0x0000)
struct BP_MultiHitDiscThrower_Challenge_C_OnDealtDamage_Event final
{
public:
	class ARPawnBase*                             Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     DamageEventData;                                   // 0x0008(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MultiHitDiscThrower_Challenge_C_OnDealtDamage_Event) == 0x000008, "Wrong alignment on BP_MultiHitDiscThrower_Challenge_C_OnDealtDamage_Event");
static_assert(sizeof(BP_MultiHitDiscThrower_Challenge_C_OnDealtDamage_Event) == 0x0000C8, "Wrong size on BP_MultiHitDiscThrower_Challenge_C_OnDealtDamage_Event");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_OnDealtDamage_Event, Pawn) == 0x000000, "Member 'BP_MultiHitDiscThrower_Challenge_C_OnDealtDamage_Event::Pawn' has a wrong offset!");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_OnDealtDamage_Event, DamageEventData) == 0x000008, "Member 'BP_MultiHitDiscThrower_Challenge_C_OnDealtDamage_Event::DamageEventData' has a wrong offset!");

// Function BP_MultiHitDiscThrower_Challenge.BP_MultiHitDiscThrower_Challenge_C.OnFinishRun
// 0x0001 (0x0001 - 0x0000)
struct BP_MultiHitDiscThrower_Challenge_C_OnFinishRun final
{
public:
	bool                                          RunFailed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MultiHitDiscThrower_Challenge_C_OnFinishRun) == 0x000001, "Wrong alignment on BP_MultiHitDiscThrower_Challenge_C_OnFinishRun");
static_assert(sizeof(BP_MultiHitDiscThrower_Challenge_C_OnFinishRun) == 0x000001, "Wrong size on BP_MultiHitDiscThrower_Challenge_C_OnFinishRun");
static_assert(offsetof(BP_MultiHitDiscThrower_Challenge_C_OnFinishRun, RunFailed) == 0x000000, "Member 'BP_MultiHitDiscThrower_Challenge_C_OnFinishRun::RunFailed' has a wrong offset!");

}

