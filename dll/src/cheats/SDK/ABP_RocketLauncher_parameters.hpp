#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_RocketLauncher

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_RocketLauncher.ABP_RocketLauncher_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_RocketLauncher_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_RocketLauncher_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_RocketLauncher_C_AnimGraph");
static_assert(sizeof(ABP_RocketLauncher_C_AnimGraph) == 0x000010, "Wrong size on ABP_RocketLauncher_C_AnimGraph");
static_assert(offsetof(ABP_RocketLauncher_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_RocketLauncher_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_RocketLauncher.ABP_RocketLauncher_C.BlueprintThreadSafeUpdateAnimation
// 0x0010 (0x0010 - 0x0000)
struct ABP_RocketLauncher_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateFloats_DeltaTime_ImplicitCast;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_RocketLauncher_C_BlueprintThreadSafeUpdateAnimation) == 0x000008, "Wrong alignment on ABP_RocketLauncher_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(ABP_RocketLauncher_C_BlueprintThreadSafeUpdateAnimation) == 0x000010, "Wrong size on ABP_RocketLauncher_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(ABP_RocketLauncher_C_BlueprintThreadSafeUpdateAnimation, DeltaTime) == 0x000000, "Member 'ABP_RocketLauncher_C_BlueprintThreadSafeUpdateAnimation::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_BlueprintThreadSafeUpdateAnimation, CallFunc_UpdateFloats_DeltaTime_ImplicitCast) == 0x000008, "Member 'ABP_RocketLauncher_C_BlueprintThreadSafeUpdateAnimation::CallFunc_UpdateFloats_DeltaTime_ImplicitCast' has a wrong offset!");

// Function ABP_RocketLauncher.ABP_RocketLauncher_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_RocketLauncher_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_RocketLauncher_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_RocketLauncher_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_RocketLauncher_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_RocketLauncher_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_RocketLauncher_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_RocketLauncher_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_RocketLauncher.ABP_RocketLauncher_C.ExecuteUbergraph_ABP_RocketLauncher
// 0x0110 (0x0110 - 0x0000)
struct ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Socket;                               // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Bool;                                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpToShortestPath_ReturnValue;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RInterpToShortestPath_InterpSpeed_ImplicitCast; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher) == 0x000008, "Wrong alignment on ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher");
static_assert(sizeof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher) == 0x000110, "Wrong size on ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, EntryPoint) == 0x000000, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_Conv_IntToBool_ReturnValue) == 0x000004, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_BreakTransform_Location) == 0x000010, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_BreakTransform_Rotation) == 0x000028, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_BreakTransform_Scale) == 0x000040, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_BreakTransform_Location_1) == 0x000058, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_BreakTransform_Rotation_1) == 0x000070, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_BreakTransform_Scale_1) == 0x000088, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, K2Node_Event_DeltaTimeX) == 0x0000A0, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, K2Node_Event_Socket) == 0x0000A4, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::K2Node_Event_Socket' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, K2Node_Event_Bool) == 0x0000AC, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::K2Node_Event_Bool' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000AD, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_BreakRotator_Roll) == 0x0000B0, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_BreakRotator_Pitch) == 0x0000B4, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_BreakRotator_Yaw) == 0x0000B8, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_MakeRotator_ReturnValue) == 0x0000C8, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_RInterpToShortestPath_ReturnValue) == 0x0000E0, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_RInterpToShortestPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_RInterpToShortestPath_InterpSpeed_ImplicitCast) == 0x0000F8, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_RInterpToShortestPath_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000100, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000108, "Member 'ABP_RocketLauncher_C_ExecuteUbergraph_ABP_RocketLauncher::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function ABP_RocketLauncher.ABP_RocketLauncher_C.OnToggleEvent
// 0x000C (0x000C - 0x0000)
struct ABP_RocketLauncher_C_OnToggleEvent final
{
public:
	class FName                                   Socket;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bool;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_RocketLauncher_C_OnToggleEvent) == 0x000004, "Wrong alignment on ABP_RocketLauncher_C_OnToggleEvent");
static_assert(sizeof(ABP_RocketLauncher_C_OnToggleEvent) == 0x00000C, "Wrong size on ABP_RocketLauncher_C_OnToggleEvent");
static_assert(offsetof(ABP_RocketLauncher_C_OnToggleEvent, Socket) == 0x000000, "Member 'ABP_RocketLauncher_C_OnToggleEvent::Socket' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_OnToggleEvent, Bool) == 0x000008, "Member 'ABP_RocketLauncher_C_OnToggleEvent::Bool' has a wrong offset!");

// Function ABP_RocketLauncher.ABP_RocketLauncher_C.UpdateFloats
// 0x0010 (0x0010 - 0x0000)
struct ABP_RocketLauncher_C_UpdateFloats final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_RocketLauncher_C_UpdateFloats) == 0x000008, "Wrong alignment on ABP_RocketLauncher_C_UpdateFloats");
static_assert(sizeof(ABP_RocketLauncher_C_UpdateFloats) == 0x000010, "Wrong size on ABP_RocketLauncher_C_UpdateFloats");
static_assert(offsetof(ABP_RocketLauncher_C_UpdateFloats, DeltaTime) == 0x000000, "Member 'ABP_RocketLauncher_C_UpdateFloats::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_RocketLauncher_C_UpdateFloats, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'ABP_RocketLauncher_C_UpdateFloats::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");

}

