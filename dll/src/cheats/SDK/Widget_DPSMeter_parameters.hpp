#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_DPSMeter

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "RGame_structs.hpp"


namespace SDK::Params
{

// Function Widget_DPSMeter.Widget_DPSMeter_C.ExecuteUbergraph_Widget_DPSMeter
// 0x0220 (0x0220 - 0x0000)
struct Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x002C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0010)()
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0090(0x0010)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ARPawnBase* Pawn, const struct FDamageCombatEvent& DamageEventData)> K2Node_CreateDelegate_OutputDelegate_1; // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue_1;        // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn_1;               // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPawnBase*                             K2Node_CustomEvent_Pawn;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     K2Node_CustomEvent_DamageEventData;                // 0x00F0(0x00C0)()
	double                                        CallFunc_FMax_ReturnValue;                         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x01F8(0x0010)()
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter) == 0x000008, "Wrong alignment on Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter");
static_assert(sizeof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter) == 0x000220, "Wrong size on Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, EntryPoint) == 0x000000, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000018, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000020, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, K2Node_Event_MyGeometry) == 0x00002C, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, K2Node_Event_InDeltaTime) == 0x000064, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, Temp_real_Variable) == 0x000068, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_Round_ReturnValue) == 0x000070, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_Round_ReturnValue_1) == 0x000088, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000090, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000A0, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_IsInputKeyDown_ReturnValue) == 0x0000A8, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, Temp_real_Variable_1) == 0x0000B0, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B8, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_GetOwningPlayerPawn_ReturnValue_1) == 0x0000C8, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_GetOwningPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_GetTimeSeconds_ReturnValue) == 0x0000D0, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, K2Node_DynamicCast_AsRPlayer_Pawn_1) == 0x0000D8, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::K2Node_DynamicCast_AsRPlayer_Pawn_1' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, K2Node_CustomEvent_Pawn) == 0x0000E8, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, K2Node_CustomEvent_DamageEventData) == 0x0000F0, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::K2Node_CustomEvent_DamageEventData' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_FMax_ReturnValue) == 0x0001B0, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001C8, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_SafeDivide_ReturnValue) == 0x0001D0, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0001D8, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x0001E0, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0001E8, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001F0, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_Conv_DoubleToText_ReturnValue) == 0x0001F8, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_FMax_A_ImplicitCast) == 0x000208, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000210, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000218, "Member 'Widget_DPSMeter_C_ExecuteUbergraph_Widget_DPSMeter::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Widget_DPSMeter.Widget_DPSMeter_C.OnDamageDealt
// 0x00C8 (0x00C8 - 0x0000)
struct Widget_DPSMeter_C_OnDamageDealt final
{
public:
	class ARPawnBase*                             Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     DamageEventData;                                   // 0x0008(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Widget_DPSMeter_C_OnDamageDealt) == 0x000008, "Wrong alignment on Widget_DPSMeter_C_OnDamageDealt");
static_assert(sizeof(Widget_DPSMeter_C_OnDamageDealt) == 0x0000C8, "Wrong size on Widget_DPSMeter_C_OnDamageDealt");
static_assert(offsetof(Widget_DPSMeter_C_OnDamageDealt, Pawn) == 0x000000, "Member 'Widget_DPSMeter_C_OnDamageDealt::Pawn' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_OnDamageDealt, DamageEventData) == 0x000008, "Member 'Widget_DPSMeter_C_OnDamageDealt::DamageEventData' has a wrong offset!");

// Function Widget_DPSMeter.Widget_DPSMeter_C.Tick
// 0x003C (0x003C - 0x0000)
struct Widget_DPSMeter_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_DPSMeter_C_Tick) == 0x000004, "Wrong alignment on Widget_DPSMeter_C_Tick");
static_assert(sizeof(Widget_DPSMeter_C_Tick) == 0x00003C, "Wrong size on Widget_DPSMeter_C_Tick");
static_assert(offsetof(Widget_DPSMeter_C_Tick, MyGeometry) == 0x000000, "Member 'Widget_DPSMeter_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Widget_DPSMeter_C_Tick, InDeltaTime) == 0x000038, "Member 'Widget_DPSMeter_C_Tick::InDeltaTime' has a wrong offset!");

}

