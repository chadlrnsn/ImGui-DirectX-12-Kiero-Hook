#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PingIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PingIndicator.BP_PingIndicator_C
// 0x0048 (0x02F8 - 0x02B0)
class ABP_PingIndicator_C final : public ARPingIndicator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Widget;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CachedPlayerColor;                                 // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      SpawnedVFX;                                        // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Icon_Texture;                                      // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void DestroyVFX();
	void ExecuteUbergraph_BP_PingIndicator(int32 EntryPoint);
	void PlayVFX(const struct FVector& Location);
	void PlayVFXMulticast(const struct FVector& Location);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void SetIndicatorIcon(const class UTexture2D* IconTexture);
	void SetIndicatorIconMulticast(class UTexture2D* IconTexture);
	void SetIndicatorIconServer(class UTexture2D* IconTexture);
	void UpdateColorMulticast(class ABP_PingIndicator_C* BP_PingIndicatorRef, const struct FLinearColor& LinearColor);

	struct FLinearColor GetRadarIconColor() const;
	struct FVector2D GetRadarIconSize() const;
	class USlateBrushAsset* GetRadarObjectIcon() const;
	bool ShouldShowOnRadar() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PingIndicator_C">();
	}
	static class ABP_PingIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PingIndicator_C>();
	}
};
static_assert(alignof(ABP_PingIndicator_C) == 0x000008, "Wrong alignment on ABP_PingIndicator_C");
static_assert(sizeof(ABP_PingIndicator_C) == 0x0002F8, "Wrong size on ABP_PingIndicator_C");
static_assert(offsetof(ABP_PingIndicator_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_PingIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PingIndicator_C, Widget) == 0x0002B8, "Member 'ABP_PingIndicator_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_PingIndicator_C, PointLight) == 0x0002C0, "Member 'ABP_PingIndicator_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_PingIndicator_C, Sphere) == 0x0002C8, "Member 'ABP_PingIndicator_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_PingIndicator_C, DefaultSceneRoot) == 0x0002D0, "Member 'ABP_PingIndicator_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PingIndicator_C, CachedPlayerColor) == 0x0002D8, "Member 'ABP_PingIndicator_C::CachedPlayerColor' has a wrong offset!");
static_assert(offsetof(ABP_PingIndicator_C, SpawnedVFX) == 0x0002E8, "Member 'ABP_PingIndicator_C::SpawnedVFX' has a wrong offset!");
static_assert(offsetof(ABP_PingIndicator_C, Icon_Texture) == 0x0002F0, "Member 'ABP_PingIndicator_C::Icon_Texture' has a wrong offset!");

}

