#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RPlayerPawn

#include "Basic.hpp"

#include "BP_RPlayerPawn_classes.hpp"
#include "BP_RPlayerPawn_parameters.hpp"


namespace SDK
{

// Function BP_RPlayerPawn.BP_RPlayerPawn_C.Add Assigned Skill Tree Mutators
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URPlayerGScriptComponent*         Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::Add_Assigned_Skill_Tree_Mutators(class URPlayerGScriptComponent* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "Add Assigned Skill Tree Mutators");

	Params::BP_RPlayerPawn_C_Add_Assigned_Skill_Tree_Mutators Parms{};

	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.AlignArmsWithCrosshair
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECrosshairAlignmentOption               NewOption                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::AlignArmsWithCrosshair(ECrosshairAlignmentOption NewOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "AlignArmsWithCrosshair");

	Params::BP_RPlayerPawn_C_AlignArmsWithCrosshair Parms{};

	Parms.NewOption = NewOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.BPEmoteCameraOrbitH
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::BPEmoteCameraOrbitH(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "BPEmoteCameraOrbitH");

	Params::BP_RPlayerPawn_C_BPEmoteCameraOrbitH Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.BPEmoteCameraOrbitV
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Val                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::BPEmoteCameraOrbitV(double Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "BPEmoteCameraOrbitV");

	Params::BP_RPlayerPawn_C_BPEmoteCameraOrbitV Parms{};

	Parms.Val = Val;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.BPEmoteCameraZoomOut
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::BPEmoteCameraZoomOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "BPEmoteCameraZoomOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.BPEmoteEnd
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::BPEmoteEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "BPEmoteEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.CheckGamepadMoveThreshold
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   OutsideThreshold                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::CheckGamepadMoveThreshold(double Value, bool* OutsideThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "CheckGamepadMoveThreshold");

	Params::BP_RPlayerPawn_C_CheckGamepadMoveThreshold Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (OutsideThreshold != nullptr)
		*OutsideThreshold = Parms.OutsideThreshold;
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.Create Ping Outline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           CachedPingObject_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::Create_Ping_Outline(class AActor* CachedPingObject_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "Create Ping Outline");

	Params::BP_RPlayerPawn_C_Create_Ping_Outline Parms{};

	Parms.CachedPingObject_0 = CachedPingObject_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::CustomEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "CustomEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.DamageTakenPostProcessEvt
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDamageCombatEvent&        DamageCombatEvt                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_RPlayerPawn_C::DamageTakenPostProcessEvt(const struct FDamageCombatEvent& DamageCombatEvt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "DamageTakenPostProcessEvt");

	Params::BP_RPlayerPawn_C_DamageTakenPostProcessEvt Parms{};

	Parms.DamageCombatEvt = std::move(DamageCombatEvt);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.DamageTakenTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_RPlayerPawn_C::DamageTakenTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "DamageTakenTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.DamageTakenTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_RPlayerPawn_C::DamageTakenTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "DamageTakenTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.Debug
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::Debug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "Debug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.Downed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPlayerPawn*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::Downed(class ARPlayerPawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "Downed");

	Params::BP_RPlayerPawn_C_Downed Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.DrawPingOutline_Multicast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PingedObject                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::DrawPingOutline_Multicast(class AActor* PingedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "DrawPingOutline_Multicast");

	Params::BP_RPlayerPawn_C_DrawPingOutline_Multicast Parms{};

	Parms.PingedObject = PingedObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.DrawPingOutline_Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PingedObject                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::DrawPingOutline_Server(class AActor* PingedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "DrawPingOutline_Server");

	Params::BP_RPlayerPawn_C_DrawPingOutline_Server Parms{};

	Parms.PingedObject = PingedObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.EmoteCameraZoomOutImplementation
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::EmoteCameraZoomOutImplementation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "EmoteCameraZoomOutImplementation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.EmoteMontageEnded
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::EmoteMontageEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "EmoteMontageEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ExecuteUbergraph_BP_RPlayerPawn
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::ExecuteUbergraph_BP_RPlayerPawn(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ExecuteUbergraph_BP_RPlayerPawn");

	Params::BP_RPlayerPawn_C_ExecuteUbergraph_BP_RPlayerPawn Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.FlushDebugLines
// (BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::FlushDebugLines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "FlushDebugLines");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.Get Object Pingable Name
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            PingableName                                           (Parm, OutParm)

void ABP_RPlayerPawn_C::Get_Object_Pingable_Name(class AActor* Object, class FText* PingableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "Get Object Pingable Name");

	Params::BP_RPlayerPawn_C_Get_Object_Pingable_Name Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (PingableName != nullptr)
		*PingableName = std::move(Parms.PingableName);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.GetPingStartLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         StartLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::GetPingStartLocation(struct FVector* StartLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "GetPingStartLocation");

	Params::BP_RPlayerPawn_C_GetPingStartLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StartLocation != nullptr)
		*StartLocation = std::move(Parms.StartLocation);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.GetPingTargetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         TargetLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::GetPingTargetLocation(struct FVector* TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "GetPingTargetLocation");

	Params::BP_RPlayerPawn_C_GetPingTargetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetLocation != nullptr)
		*TargetLocation = std::move(Parms.TargetLocation);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.GetPingVoicelineEvent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           PingedActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName*                            Event                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::GetPingVoicelineEvent(class AActor* PingedActor, class FName* Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "GetPingVoicelineEvent");

	Params::BP_RPlayerPawn_C_GetPingVoicelineEvent Parms{};

	Parms.PingedActor = PingedActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Event != nullptr)
		*Event = Parms.Event;
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_LookRight_K2Node_EnhancedInputActionEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_LookRight_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_LookRight_K2Node_EnhancedInputActionEvent_3");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_LookRight_K2Node_EnhancedInputActionEvent_3 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_LookRightGamepad_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_LookRightGamepad_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_LookRightGamepad_K2Node_EnhancedInputActionEvent_1");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_LookRightGamepad_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_LookUp_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_LookUp_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_LookUp_K2Node_EnhancedInputActionEvent_2");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_LookUp_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_LookUpGamepad_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_LookUpGamepad_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_LookUpGamepad_K2Node_EnhancedInputActionEvent_0");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_LookUpGamepad_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_MoveBack_K2Node_EnhancedInputActionEvent_14
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_MoveBack_K2Node_EnhancedInputActionEvent_14(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_MoveBack_K2Node_EnhancedInputActionEvent_14");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_MoveBack_K2Node_EnhancedInputActionEvent_14 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_MoveBack_K2Node_EnhancedInputActionEvent_15
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_MoveBack_K2Node_EnhancedInputActionEvent_15(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_MoveBack_K2Node_EnhancedInputActionEvent_15");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_MoveBack_K2Node_EnhancedInputActionEvent_15 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_12
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_12(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_12");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_12 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_13
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_13(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_13");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_13 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_MoveForwardGamepad_K2Node_EnhancedInputActionEvent_10
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_MoveForwardGamepad_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_MoveForwardGamepad_K2Node_EnhancedInputActionEvent_10");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_MoveForwardGamepad_K2Node_EnhancedInputActionEvent_10 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_MoveForwardGamepad_K2Node_EnhancedInputActionEvent_11
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_MoveForwardGamepad_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_MoveForwardGamepad_K2Node_EnhancedInputActionEvent_11");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_MoveForwardGamepad_K2Node_EnhancedInputActionEvent_11 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_MoveLeft_K2Node_EnhancedInputActionEvent_8
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_MoveLeft_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_MoveLeft_K2Node_EnhancedInputActionEvent_8");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_MoveLeft_K2Node_EnhancedInputActionEvent_8 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_MoveLeft_K2Node_EnhancedInputActionEvent_9
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_MoveLeft_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_MoveLeft_K2Node_EnhancedInputActionEvent_9");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_MoveLeft_K2Node_EnhancedInputActionEvent_9 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_6
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_6");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_6 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_7
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_7");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_7 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_MoveRightGamepad_K2Node_EnhancedInputActionEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_MoveRightGamepad_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_MoveRightGamepad_K2Node_EnhancedInputActionEvent_4");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_MoveRightGamepad_K2Node_EnhancedInputActionEvent_4 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_MoveRightGamepad_K2Node_EnhancedInputActionEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_MoveRightGamepad_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_MoveRightGamepad_K2Node_EnhancedInputActionEvent_5");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_MoveRightGamepad_K2Node_EnhancedInputActionEvent_5 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_16
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_16(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_16");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_16 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_17
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_17(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_17");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_Ping_K2Node_EnhancedInputActionEvent_17 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InpActEvt_IA_UnlockContent_K2Node_EnhancedInputActionEvent_18
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::InpActEvt_IA_UnlockContent_K2Node_EnhancedInputActionEvent_18(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InpActEvt_IA_UnlockContent_K2Node_EnhancedInputActionEvent_18");

	Params::BP_RPlayerPawn_C_InpActEvt_IA_UnlockContent_K2Node_EnhancedInputActionEvent_18 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.InterruptEmote
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::InterruptEmote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "InterruptEmote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.IsInEmoteState
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_RPlayerPawn_C::IsInEmoteState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "IsInEmoteState");

	Params::BP_RPlayerPawn_C_IsInEmoteState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.MontageInterruped_Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::MontageInterruped_Multicast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "MontageInterruped_Multicast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.MontageInterrupted_Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::MontageInterrupted_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "MontageInterrupted_Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.OnAbilitiyVisibilitiesToggled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Anchor_Visibility                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DropShield_Visibility                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AtlanteanCube_Visibility                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::OnAbilitiyVisibilitiesToggled(bool Anchor_Visibility, bool DropShield_Visibility, bool AtlanteanCube_Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "OnAbilitiyVisibilitiesToggled");

	Params::BP_RPlayerPawn_C_OnAbilitiyVisibilitiesToggled Parms{};

	Parms.Anchor_Visibility = Anchor_Visibility;
	Parms.DropShield_Visibility = DropShield_Visibility;
	Parms.AtlanteanCube_Visibility = AtlanteanCube_Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.OnBlendOut_AC53E0D24995860F498B499655AC06DE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::OnBlendOut_AC53E0D24995860F498B499655AC06DE(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "OnBlendOut_AC53E0D24995860F498B499655AC06DE");

	Params::BP_RPlayerPawn_C_OnBlendOut_AC53E0D24995860F498B499655AC06DE Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.OnCompleted_AC53E0D24995860F498B499655AC06DE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::OnCompleted_AC53E0D24995860F498B499655AC06DE(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "OnCompleted_AC53E0D24995860F498B499655AC06DE");

	Params::BP_RPlayerPawn_C_OnCompleted_AC53E0D24995860F498B499655AC06DE Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.OnInterrupted_AC53E0D24995860F498B499655AC06DE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::OnInterrupted_AC53E0D24995860F498B499655AC06DE(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "OnInterrupted_AC53E0D24995860F498B499655AC06DE");

	Params::BP_RPlayerPawn_C_OnInterrupted_AC53E0D24995860F498B499655AC06DE Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.OnInvoke_51E65E3F4376537D07388787BB65EAE7
// (BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::OnInvoke_51E65E3F4376537D07388787BB65EAE7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "OnInvoke_51E65E3F4376537D07388787BB65EAE7");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.OnLandedOnGround
// (BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::OnLandedOnGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "OnLandedOnGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.OnNotifyBegin_AC53E0D24995860F498B499655AC06DE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::OnNotifyBegin_AC53E0D24995860F498B499655AC06DE(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "OnNotifyBegin_AC53E0D24995860F498B499655AC06DE");

	Params::BP_RPlayerPawn_C_OnNotifyBegin_AC53E0D24995860F498B499655AC06DE Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.OnNotifyEnd_AC53E0D24995860F498B499655AC06DE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::OnNotifyEnd_AC53E0D24995860F498B499655AC06DE(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "OnNotifyEnd_AC53E0D24995860F498B499655AC06DE");

	Params::BP_RPlayerPawn_C_OnNotifyEnd_AC53E0D24995860F498B499655AC06DE Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.OnPlayerFellOutOfWorld_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::OnPlayerFellOutOfWorld_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "OnPlayerFellOutOfWorld_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.OnPlayerStateValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::OnPlayerStateValid(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "OnPlayerStateValid");

	Params::BP_RPlayerPawn_C_OnPlayerStateValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.OnPostProcessVolumeAssigned
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APostProcessVolume*               Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::OnPostProcessVolumeAssigned(class APostProcessVolume* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "OnPostProcessVolumeAssigned");

	Params::BP_RPlayerPawn_C_OnPostProcessVolumeAssigned Parms{};

	Parms.Volume = Volume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.OnWeaponVisibilitiesToggled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Melee___NewVisibility                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Primary__NewVisibility                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HideOnServer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::OnWeaponVisibilitiesToggled(bool Melee___NewVisibility, bool Primary__NewVisibility, class FName Key, bool HideOnServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "OnWeaponVisibilitiesToggled");

	Params::BP_RPlayerPawn_C_OnWeaponVisibilitiesToggled Parms{};

	Parms.Melee___NewVisibility = Melee___NewVisibility;
	Parms.Primary__NewVisibility = Primary__NewVisibility;
	Parms.Key = Key;
	Parms.HideOnServer = HideOnServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.PingInputPressed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::PingInputPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "PingInputPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.PingInputReleased
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::PingInputReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "PingInputReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.PingOutlinedWithIndicator
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PingedActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::PingOutlinedWithIndicator(class AActor* PingedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "PingOutlinedWithIndicator");

	Params::BP_RPlayerPawn_C_PingOutlinedWithIndicator Parms{};

	Parms.PingedActor = PingedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.PingTickEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::PingTickEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "PingTickEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.PlayDoorTeleportTimeline
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::PlayDoorTeleportTimeline(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "PlayDoorTeleportTimeline");

	Params::BP_RPlayerPawn_C_PlayDoorTeleportTimeline Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.PlayEmoteMontage
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FName                       EmoteName                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::PlayEmoteMontage(const class FName EmoteName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "PlayEmoteMontage");

	Params::BP_RPlayerPawn_C_PlayEmoteMontage Parms{};

	Parms.EmoteName = EmoteName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.PlayPostProcessDamageTaken
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDamageCombatEvent&        DamageCombatEvent                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_RPlayerPawn_C::PlayPostProcessDamageTaken(const struct FDamageCombatEvent& DamageCombatEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "PlayPostProcessDamageTaken");

	Params::BP_RPlayerPawn_C_PlayPostProcessDamageTaken Parms{};

	Parms.DamageCombatEvent = std::move(DamageCombatEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.PlayVignetteTimeline
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const float                             Duration                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const float                             IntensityMultiplier                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::PlayVignetteTimeline(const float Duration, const float IntensityMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "PlayVignetteTimeline");

	Params::BP_RPlayerPawn_C_PlayVignetteTimeline Parms{};

	Parms.Duration = Duration;
	Parms.IntensityMultiplier = IntensityMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.PrintSet
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TSet<class FName>&                A                                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_RPlayerPawn_C::PrintSet(const TSet<class FName>& A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "PrintSet");

	Params::BP_RPlayerPawn_C_PrintSet Parms{};

	Parms.A = std::move(A);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_RPlayerPawn_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_RPlayerPawn_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ReceiveEndPlay");

	Params::BP_RPlayerPawn_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ReceivePossessed");

	Params::BP_RPlayerPawn_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ReceiveTick");

	Params::BP_RPlayerPawn_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ResetPingOutline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PingedObject                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::ResetPingOutline(class AActor* PingedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ResetPingOutline");

	Params::BP_RPlayerPawn_C_ResetPingOutline Parms{};

	Parms.PingedObject = PingedObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.Revived
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPlayerPawn*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::Revived(class ARPlayerPawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "Revived");

	Params::BP_RPlayerPawn_C_Revived Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.RunRoutedObjectBehaviour
// (Event, Public, BlueprintEvent)

void ABP_RPlayerPawn_C::RunRoutedObjectBehaviour()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "RunRoutedObjectBehaviour");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.RunRoutedObjectBehaviourByName
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             BehaviourName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::RunRoutedObjectBehaviourByName(class FName BehaviourName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "RunRoutedObjectBehaviourByName");

	Params::BP_RPlayerPawn_C_RunRoutedObjectBehaviourByName Parms{};

	Parms.BehaviourName = BehaviourName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.RunRoutedObjectBehaviourWithData
// (Event, Public, BlueprintEvent)
// Parameters:
// const struct FRoutedObjectData&         RoutedData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_RPlayerPawn_C::RunRoutedObjectBehaviourWithData(const struct FRoutedObjectData& RoutedData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "RunRoutedObjectBehaviourWithData");

	Params::BP_RPlayerPawn_C_RunRoutedObjectBehaviourWithData Parms{};

	Parms.RoutedData = std::move(RoutedData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.SetCachedPingLocation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::SetCachedPingLocation(const struct FVector& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "SetCachedPingLocation");

	Params::BP_RPlayerPawn_C_SetCachedPingLocation Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.SetCrosshairVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::SetCrosshairVisibility(ESlateVisibility Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "SetCrosshairVisibility");

	Params::BP_RPlayerPawn_C_SetCrosshairVisibility Parms{};

	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.SetPlayerLocalVisibility
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldHidePlayer                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::SetPlayerLocalVisibility(bool ShouldHidePlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "SetPlayerLocalVisibility");

	Params::BP_RPlayerPawn_C_SetPlayerLocalVisibility Parms{};

	Parms.ShouldHidePlayer = ShouldHidePlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.SetShouldShowPlayerNameServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPingIndicator*                  RPingIndicatorRef                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::SetShouldShowPlayerNameServer(class ARPingIndicator* RPingIndicatorRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "SetShouldShowPlayerNameServer");

	Params::BP_RPlayerPawn_C_SetShouldShowPlayerNameServer Parms{};

	Parms.RPingIndicatorRef = RPingIndicatorRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.SetShowPlayerNameServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::SetShowPlayerNameServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "SetShowPlayerNameServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ShouldDrawPingOutline
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           CachedPingObject_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::ShouldDrawPingOutline(class AActor* CachedPingObject_0, bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ShouldDrawPingOutline");

	Params::BP_RPlayerPawn_C_ShouldDrawPingOutline Parms{};

	Parms.CachedPingObject_0 = CachedPingObject_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ShowDownedHighlighting
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              bNewShow                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::ShowDownedHighlighting(const bool bNewShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ShowDownedHighlighting");

	Params::BP_RPlayerPawn_C_ShowDownedHighlighting Parms{};

	Parms.bNewShow = bNewShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.SkipToTorakaSecretPhase
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::SkipToTorakaSecretPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "SkipToTorakaSecretPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.SpawnPlayerName
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::SpawnPlayerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "SpawnPlayerName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.SpawnVoiceLine
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVoiceData&                VoiceOverData                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// const float                             Priority                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::SpawnVoiceLine(const struct FVoiceData& VoiceOverData, const float Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "SpawnVoiceLine");

	Params::BP_RPlayerPawn_C_SpawnVoiceLine Parms{};

	Parms.VoiceOverData = std::move(VoiceOverData);
	Parms.Priority = Priority;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.Sway Tick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delta_Time                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::Sway_Tick(double Delta_Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "Sway Tick");

	Params::BP_RPlayerPawn_C_Sway_Tick Parms{};

	Parms.Delta_Time = Delta_Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.TeleportTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_RPlayerPawn_C::TeleportTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "TeleportTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.TeleportTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_RPlayerPawn_C::TeleportTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "TeleportTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ToggleAbilityVisibility
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AnchorVisibility                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DropShieldVisibility                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AtlanteanCubeVisibility                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::ToggleAbilityVisibility(bool AnchorVisibility, bool DropShieldVisibility, bool AtlanteanCubeVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ToggleAbilityVisibility");

	Params::BP_RPlayerPawn_C_ToggleAbilityVisibility Parms{};

	Parms.AnchorVisibility = AnchorVisibility;
	Parms.DropShieldVisibility = DropShieldVisibility;
	Parms.AtlanteanCubeVisibility = AtlanteanCubeVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ToggleHUD
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::ToggleHUD(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ToggleHUD");

	Params::BP_RPlayerPawn_C_ToggleHUD Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ToggleWeaponVisibilities
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewMeleeVisibility                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNewWeaponVisibility                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHideOnServer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::ToggleWeaponVisibilities(bool bNewMeleeVisibility, bool bNewWeaponVisibility, class FName Key, bool bHideOnServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ToggleWeaponVisibilities");

	Params::BP_RPlayerPawn_C_ToggleWeaponVisibilities Parms{};

	Parms.bNewMeleeVisibility = bNewMeleeVisibility;
	Parms.bNewWeaponVisibility = bNewWeaponVisibility;
	Parms.Key = Key;
	Parms.bHideOnServer = bHideOnServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.TraceTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::TraceTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "TraceTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.TryRemoveBlackScreen
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::TryRemoveBlackScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "TryRemoveBlackScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.UndrawPingOnSelf
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::UndrawPingOnSelf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "UndrawPingOnSelf");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.UndrawPingOnSelfBP
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::UndrawPingOnSelfBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "UndrawPingOnSelfBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.UndrawPingOutline_Multicast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PingedObject                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::UndrawPingOutline_Multicast(class AActor* PingedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "UndrawPingOutline_Multicast");

	Params::BP_RPlayerPawn_C_UndrawPingOutline_Multicast Parms{};

	Parms.PingedObject = PingedObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.UndrawPingOutline_Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PingedObject                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::UndrawPingOutline_Server(class AActor* PingedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "UndrawPingOutline_Server");

	Params::BP_RPlayerPawn_C_UndrawPingOutline_Server Parms{};

	Parms.PingedObject = PingedObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.UpdateWeaponAndAbilityVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARWeapon*                         Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RPlayerPawn_C::UpdateWeaponAndAbilityVisibility(class ARWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "UpdateWeaponAndAbilityVisibility");

	Params::BP_RPlayerPawn_C_UpdateWeaponAndAbilityVisibility Parms{};

	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.VignettePostProcessTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_RPlayerPawn_C::VignettePostProcessTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "VignettePostProcessTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.VignettePostProcessTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_RPlayerPawn_C::VignettePostProcessTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "VignettePostProcessTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.WahooTesting
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RPlayerPawn_C::WahooTesting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "WahooTesting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.GetPingableIconTexture
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UTexture2D* ABP_RPlayerPawn_C::GetPingableIconTexture() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "GetPingableIconTexture");

	Params::BP_RPlayerPawn_C_GetPingableIconTexture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.GetPingableName
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_RPlayerPawn_C::GetPingableName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "GetPingableName");

	Params::BP_RPlayerPawn_C_GetPingableName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.GetRadarIconColor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor ABP_RPlayerPawn_C::GetRadarIconColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "GetRadarIconColor");

	Params::BP_RPlayerPawn_C_GetRadarIconColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.GetRadarIconSize
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D ABP_RPlayerPawn_C::GetRadarIconSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "GetRadarIconSize");

	Params::BP_RPlayerPawn_C_GetRadarIconSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.GetRadarObjectIcon
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USlateBrushAsset*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class USlateBrushAsset* ABP_RPlayerPawn_C::GetRadarObjectIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "GetRadarObjectIcon");

	Params::BP_RPlayerPawn_C_GetRadarObjectIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.IsCurrentlyPinged
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_RPlayerPawn_C::IsCurrentlyPinged() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "IsCurrentlyPinged");

	Params::BP_RPlayerPawn_C_IsCurrentlyPinged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RPlayerPawn.BP_RPlayerPawn_C.ShouldShowOnRadar
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_RPlayerPawn_C::ShouldShowOnRadar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RPlayerPawn_C", "ShouldShowOnRadar");

	Params::BP_RPlayerPawn_C_ShouldShowOnRadar Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

