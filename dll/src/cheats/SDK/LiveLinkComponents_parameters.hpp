#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LiveLinkComponents

#include "Basic.hpp"

#include "LiveLinkInterface_structs.hpp"


namespace SDK::Params
{

// Function LiveLinkComponents.LiveLinkComponentController.SetControlledComponent
// 0x0010 (0x0010 - 0x0000)
struct LiveLinkComponentController_SetControlledComponent final
{
public:
	TSubclassOf<class ULiveLinkRole>              InRoleClass;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActorComponent*                        InComponent;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LiveLinkComponentController_SetControlledComponent) == 0x000008, "Wrong alignment on LiveLinkComponentController_SetControlledComponent");
static_assert(sizeof(LiveLinkComponentController_SetControlledComponent) == 0x000010, "Wrong size on LiveLinkComponentController_SetControlledComponent");
static_assert(offsetof(LiveLinkComponentController_SetControlledComponent, InRoleClass) == 0x000000, "Member 'LiveLinkComponentController_SetControlledComponent::InRoleClass' has a wrong offset!");
static_assert(offsetof(LiveLinkComponentController_SetControlledComponent, InComponent) == 0x000008, "Member 'LiveLinkComponentController_SetControlledComponent::InComponent' has a wrong offset!");

// Function LiveLinkComponents.LiveLinkComponentController.SetSubjectRepresentation
// 0x0010 (0x0010 - 0x0000)
struct LiveLinkComponentController_SetSubjectRepresentation final
{
public:
	struct FLiveLinkSubjectRepresentation         InSubjectRepresentation;                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LiveLinkComponentController_SetSubjectRepresentation) == 0x000008, "Wrong alignment on LiveLinkComponentController_SetSubjectRepresentation");
static_assert(sizeof(LiveLinkComponentController_SetSubjectRepresentation) == 0x000010, "Wrong size on LiveLinkComponentController_SetSubjectRepresentation");
static_assert(offsetof(LiveLinkComponentController_SetSubjectRepresentation, InSubjectRepresentation) == 0x000000, "Member 'LiveLinkComponentController_SetSubjectRepresentation::InSubjectRepresentation' has a wrong offset!");

// Function LiveLinkComponents.LiveLinkComponentController.GetControlledComponent
// 0x0010 (0x0010 - 0x0000)
struct LiveLinkComponentController_GetControlledComponent final
{
public:
	TSubclassOf<class ULiveLinkRole>              InRoleClass;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActorComponent*                        ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LiveLinkComponentController_GetControlledComponent) == 0x000008, "Wrong alignment on LiveLinkComponentController_GetControlledComponent");
static_assert(sizeof(LiveLinkComponentController_GetControlledComponent) == 0x000010, "Wrong size on LiveLinkComponentController_GetControlledComponent");
static_assert(offsetof(LiveLinkComponentController_GetControlledComponent, InRoleClass) == 0x000000, "Member 'LiveLinkComponentController_GetControlledComponent::InRoleClass' has a wrong offset!");
static_assert(offsetof(LiveLinkComponentController_GetControlledComponent, ReturnValue) == 0x000008, "Member 'LiveLinkComponentController_GetControlledComponent::ReturnValue' has a wrong offset!");

// Function LiveLinkComponents.LiveLinkComponentController.GetSubjectRepresentation
// 0x0010 (0x0010 - 0x0000)
struct LiveLinkComponentController_GetSubjectRepresentation final
{
public:
	struct FLiveLinkSubjectRepresentation         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LiveLinkComponentController_GetSubjectRepresentation) == 0x000008, "Wrong alignment on LiveLinkComponentController_GetSubjectRepresentation");
static_assert(sizeof(LiveLinkComponentController_GetSubjectRepresentation) == 0x000010, "Wrong size on LiveLinkComponentController_GetSubjectRepresentation");
static_assert(offsetof(LiveLinkComponentController_GetSubjectRepresentation, ReturnValue) == 0x000000, "Member 'LiveLinkComponentController_GetSubjectRepresentation::ReturnValue' has a wrong offset!");

}

