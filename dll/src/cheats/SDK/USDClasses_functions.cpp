#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: USDClasses

#include "Basic.hpp"

#include "USDClasses_classes.hpp"
#include "USDClasses_parameters.hpp"


namespace SDK
{

// Function USDClasses.UsdAssetCache2.AddAssetReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    Asset                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    Referencer                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache2::AddAssetReference(const class UObject* Asset, const class UObject* Referencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "AddAssetReference");

	Params::UsdAssetCache2_AddAssetReference Parms{};

	Parms.Asset = Asset;
	Parms.Referencer = Referencer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache2.CacheAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Hash                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Asset                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    Referencer                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdAssetCache2::CacheAsset(const class FString& Hash, class UObject* Asset, const class UObject* Referencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "CacheAsset");

	Params::UsdAssetCache2_CacheAsset Parms{};

	Parms.Hash = std::move(Hash);
	Parms.Asset = Asset;
	Parms.Referencer = Referencer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdAssetCache2.CanRemoveAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Hash                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache2::CanRemoveAsset(const class FString& Hash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "CanRemoveAsset");

	Params::UsdAssetCache2_CanRemoveAsset Parms{};

	Parms.Hash = std::move(Hash);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache2.GetCachedAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Hash                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUsdAssetCache2::GetCachedAsset(const class FString& Hash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "GetCachedAsset");

	Params::UsdAssetCache2_GetCachedAsset Parms{};

	Parms.Hash = std::move(Hash);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache2.RefreshStorage
// (Final, Native, Public, BlueprintCallable)

void UUsdAssetCache2::RefreshStorage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "RefreshStorage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdAssetCache2.RemoveAllAssetReferences
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    Referencer                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache2::RemoveAllAssetReferences(const class UObject* Referencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "RemoveAllAssetReferences");

	Params::UsdAssetCache2_RemoveAllAssetReferences Parms{};

	Parms.Referencer = Referencer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache2.RemoveAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Hash                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUsdAssetCache2::RemoveAsset(const class FString& Hash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "RemoveAsset");

	Params::UsdAssetCache2_RemoveAsset Parms{};

	Parms.Hash = std::move(Hash);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache2.RemoveAssetReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    Asset                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    Referencer                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache2::RemoveAssetReference(const class UObject* Asset, const class UObject* Referencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "RemoveAssetReference");

	Params::UsdAssetCache2_RemoveAssetReference Parms{};

	Parms.Asset = Asset;
	Parms.Referencer = Referencer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache2.Reset
// (Final, Native, Public, BlueprintCallable)

void UUsdAssetCache2::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdAssetCache2.TouchAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    Asset                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    Referencer                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache2::TouchAsset(const class UObject* Asset, const class UObject* Referencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "TouchAsset");

	Params::UsdAssetCache2_TouchAsset Parms{};

	Parms.Asset = Asset;
	Parms.Referencer = Referencer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache2.GetAllAssetHashes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUsdAssetCache2::GetAllAssetHashes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "GetAllAssetHashes");

	Params::UsdAssetCache2_GetAllAssetHashes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache2.GetAllCachedAssetPaths
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUsdAssetCache2::GetAllCachedAssetPaths() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "GetAllCachedAssetPaths");

	Params::UsdAssetCache2_GetAllCachedAssetPaths Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache2.GetAllLoadedAssets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> UUsdAssetCache2::GetAllLoadedAssets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "GetAllLoadedAssets");

	Params::UsdAssetCache2_GetAllLoadedAssets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache2.GetHashForAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    Asset                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdAssetCache2::GetHashForAsset(const class UObject* Asset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "GetHashForAsset");

	Params::UsdAssetCache2_GetHashForAsset Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache2.GetNumAssets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUsdAssetCache2::GetNumAssets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "GetNumAssets");

	Params::UsdAssetCache2_GetNumAssets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache2.IsAssetOwnedByCache
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    AssetPath                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache2::IsAssetOwnedByCache(const class FString& AssetPath) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache2", "IsAssetOwnedByCache");

	Params::UsdAssetCache2_IsAssetOwnedByCache Parms{};

	Parms.AssetPath = std::move(AssetPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.AddAssetReferencer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    Asset                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    Referencer                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache3::AddAssetReferencer(const class UObject* Asset, const class UObject* Referencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "AddAssetReferencer");

	Params::UsdAssetCache3_AddAssetReferencer Parms{};

	Parms.Asset = Asset;
	Parms.Referencer = Referencer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.CacheAsset
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class FString&                    Hash                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftObjectPath&           AssetPath                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    Referencer                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdAssetCache3::CacheAsset(const class FString& Hash, const struct FSoftObjectPath& AssetPath, const class UObject* Referencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "CacheAsset");

	Params::UsdAssetCache3_CacheAsset Parms{};

	Parms.Hash = std::move(Hash);
	Parms.AssetPath = std::move(AssetPath);
	Parms.Referencer = Referencer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdAssetCache3.DeleteUnreferencedAssets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bShowConfirmation                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdAssetCache3::DeleteUnreferencedAssets(const bool bShowConfirmation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "DeleteUnreferencedAssets");

	Params::UsdAssetCache3_DeleteUnreferencedAssets Parms{};

	Parms.bShowConfirmation = bShowConfirmation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdAssetCache3.DeleteUnreferencedAssetsWithConfirmation
// (Final, Native, Public, BlueprintCallable)

void UUsdAssetCache3::DeleteUnreferencedAssetsWithConfirmation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "DeleteUnreferencedAssetsWithConfirmation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdAssetCache3.GetOrCreateCachedAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    Hash                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           Class_0                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DesiredName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DesiredFlags                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutCreatedAsset                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    Referencer                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUsdAssetCache3::GetOrCreateCachedAsset(const class FString& Hash, class UClass* Class_0, const class FString& DesiredName, int32 DesiredFlags, bool* bOutCreatedAsset, const class UObject* Referencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "GetOrCreateCachedAsset");

	Params::UsdAssetCache3_GetOrCreateCachedAsset Parms{};

	Parms.Hash = std::move(Hash);
	Parms.Class_0 = Class_0;
	Parms.DesiredName = std::move(DesiredName);
	Parms.DesiredFlags = DesiredFlags;
	Parms.Referencer = Referencer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutCreatedAsset != nullptr)
		*bOutCreatedAsset = Parms.bOutCreatedAsset;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.RemoveAllAssetReferencers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache3::RemoveAllAssetReferencers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "RemoveAllAssetReferencers");

	Params::UsdAssetCache3_RemoveAllAssetReferencers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.RemoveAllReferencerAssets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    Referencer                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache3::RemoveAllReferencerAssets(const class UObject* Referencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "RemoveAllReferencerAssets");

	Params::UsdAssetCache3_RemoveAllReferencerAssets Parms{};

	Parms.Referencer = Referencer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.RemoveAllReferencersForAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    Asset                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache3::RemoveAllReferencersForAsset(const class UObject* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "RemoveAllReferencersForAsset");

	Params::UsdAssetCache3_RemoveAllReferencersForAsset Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.RemoveAssetReferencer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    Asset                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    Referencer                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache3::RemoveAssetReferencer(const class UObject* Asset, const class UObject* Referencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "RemoveAssetReferencer");

	Params::UsdAssetCache3_RemoveAssetReferencer Parms{};

	Parms.Asset = Asset;
	Parms.Referencer = Referencer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.RescanAssetDirectory
// (Final, Native, Public, BlueprintCallable)

void UUsdAssetCache3::RescanAssetDirectory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "RescanAssetDirectory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdAssetCache3.SetAssetDeletable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    Asset                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDeletable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdAssetCache3::SetAssetDeletable(const class UObject* Asset, bool bIsDeletable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "SetAssetDeletable");

	Params::UsdAssetCache3_SetAssetDeletable Parms{};

	Parms.Asset = Asset;
	Parms.bIsDeletable = bIsDeletable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdAssetCache3.StopTrackingAsset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class FString&                    Hash                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSoftObjectPath UUsdAssetCache3::StopTrackingAsset(const class FString& Hash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "StopTrackingAsset");

	Params::UsdAssetCache3_StopTrackingAsset Parms{};

	Parms.Hash = std::move(Hash);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.GetAllTrackedAssets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class FString, struct FSoftObjectPath>ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FString, struct FSoftObjectPath> UUsdAssetCache3::GetAllTrackedAssets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "GetAllTrackedAssets");

	Params::UsdAssetCache3_GetAllTrackedAssets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.GetCachedAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    Hash                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUsdAssetCache3::GetCachedAsset(const class FString& Hash) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "GetCachedAsset");

	Params::UsdAssetCache3_GetCachedAsset Parms{};

	Parms.Hash = std::move(Hash);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.GetCachedAssetPath
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    Hash                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSoftObjectPath UUsdAssetCache3::GetCachedAssetPath(const class FString& Hash) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "GetCachedAssetPath");

	Params::UsdAssetCache3_GetCachedAssetPath Parms{};

	Parms.Hash = std::move(Hash);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.GetHashForAsset
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FSoftObjectPath&           AssetPath                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUsdAssetCache3::GetHashForAsset(const struct FSoftObjectPath& AssetPath) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "GetHashForAsset");

	Params::UsdAssetCache3_GetHashForAsset Parms{};

	Parms.AssetPath = std::move(AssetPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.GetNumAssets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUsdAssetCache3::GetNumAssets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "GetNumAssets");

	Params::UsdAssetCache3_GetNumAssets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.IsAssetDeletable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UObject*                    Asset                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache3::IsAssetDeletable(const class UObject* Asset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "IsAssetDeletable");

	Params::UsdAssetCache3_IsAssetDeletable Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.IsAssetTrackedByCache
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FSoftObjectPath&           AssetPath                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUsdAssetCache3::IsAssetTrackedByCache(const struct FSoftObjectPath& AssetPath) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "IsAssetTrackedByCache");

	Params::UsdAssetCache3_IsAssetTrackedByCache Parms{};

	Parms.AssetPath = std::move(AssetPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdAssetCache3.LoadAndGetAllTrackedAssets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class FString, class UObject*>     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FString, class UObject*> UUsdAssetCache3::LoadAndGetAllTrackedAssets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdAssetCache3", "LoadAndGetAllTrackedAssets");

	Params::UsdAssetCache3_LoadAndGetAllTrackedAssets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function USDClasses.UsdDrawModeComponent.SetBoundsColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColor&              NewColor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdDrawModeComponent::SetBoundsColor(const struct FLinearColor& NewColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "SetBoundsColor");

	Params::UsdDrawModeComponent_SetBoundsColor Parms{};

	Parms.NewColor = std::move(NewColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdDrawModeComponent.SetBoundsMax
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   NewMax                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdDrawModeComponent::SetBoundsMax(const struct FVector& NewMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "SetBoundsMax");

	Params::UsdDrawModeComponent_SetBoundsMax Parms{};

	Parms.NewMax = std::move(NewMax);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdDrawModeComponent.SetBoundsMin
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   NewMin                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdDrawModeComponent::SetBoundsMin(const struct FVector& NewMin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "SetBoundsMin");

	Params::UsdDrawModeComponent_SetBoundsMin Parms{};

	Parms.NewMin = std::move(NewMin);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdDrawModeComponent.SetCardGeometry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUsdModelCardGeometry                   NewGeometry                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdDrawModeComponent::SetCardGeometry(EUsdModelCardGeometry NewGeometry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "SetCardGeometry");

	Params::UsdDrawModeComponent_SetCardGeometry Parms{};

	Parms.NewGeometry = NewGeometry;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdDrawModeComponent.SetCardTextureXNeg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       NewTexture                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdDrawModeComponent::SetCardTextureXNeg(class UTexture2D* NewTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "SetCardTextureXNeg");

	Params::UsdDrawModeComponent_SetCardTextureXNeg Parms{};

	Parms.NewTexture = NewTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdDrawModeComponent.SetCardTextureXPos
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       NewTexture                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdDrawModeComponent::SetCardTextureXPos(class UTexture2D* NewTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "SetCardTextureXPos");

	Params::UsdDrawModeComponent_SetCardTextureXPos Parms{};

	Parms.NewTexture = NewTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdDrawModeComponent.SetCardTextureYNeg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       NewTexture                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdDrawModeComponent::SetCardTextureYNeg(class UTexture2D* NewTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "SetCardTextureYNeg");

	Params::UsdDrawModeComponent_SetCardTextureYNeg Parms{};

	Parms.NewTexture = NewTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdDrawModeComponent.SetCardTextureYPos
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       NewTexture                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdDrawModeComponent::SetCardTextureYPos(class UTexture2D* NewTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "SetCardTextureYPos");

	Params::UsdDrawModeComponent_SetCardTextureYPos Parms{};

	Parms.NewTexture = NewTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdDrawModeComponent.SetCardTextureZNeg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       NewTexture                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdDrawModeComponent::SetCardTextureZNeg(class UTexture2D* NewTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "SetCardTextureZNeg");

	Params::UsdDrawModeComponent_SetCardTextureZNeg Parms{};

	Parms.NewTexture = NewTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdDrawModeComponent.SetCardTextureZPos
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       NewTexture                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdDrawModeComponent::SetCardTextureZPos(class UTexture2D* NewTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "SetCardTextureZPos");

	Params::UsdDrawModeComponent_SetCardTextureZPos Parms{};

	Parms.NewTexture = NewTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdDrawModeComponent.SetDrawMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUsdDrawMode                            NewDrawMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdDrawModeComponent::SetDrawMode(EUsdDrawMode NewDrawMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "SetDrawMode");

	Params::UsdDrawModeComponent_SetDrawMode Parms{};

	Parms.NewDrawMode = NewDrawMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdDrawModeComponent.SetTextureForFace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUsdModelCardFace                       Face                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUsdDrawModeComponent::SetTextureForFace(EUsdModelCardFace Face, class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "SetTextureForFace");

	Params::UsdDrawModeComponent_SetTextureForFace Parms{};

	Parms.Face = Face;
	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function USDClasses.UsdDrawModeComponent.GetTextureForFace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUsdModelCardFace                       Face                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UUsdDrawModeComponent::GetTextureForFace(EUsdModelCardFace Face) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UsdDrawModeComponent", "GetTextureForFace");

	Params::UsdDrawModeComponent_GetTextureForFace Parms{};

	Parms.Face = Face;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

