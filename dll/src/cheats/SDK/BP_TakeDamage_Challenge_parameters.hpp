#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TakeDamage_Challenge

#include "Basic.hpp"

#include "RGame_structs.hpp"


namespace SDK::Params
{

// Function BP_TakeDamage_Challenge.BP_TakeDamage_Challenge_C.ExecuteUbergraph_BP_TakeDamage_Challenge
// 0x0118 (0x0118 - 0x0000)
struct BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHealthComponent*                      K2Node_CustomEvent_Component;                      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     K2Node_CustomEvent_DamageEvent;                    // 0x0030(0x00C0)()
	class URHealthComponent*                      CallFunc_GetHealthComponent_ReturnValue;           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEvent)> K2Node_CreateDelegate_OutputDelegate; // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge) == 0x000008, "Wrong alignment on BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge");
static_assert(sizeof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge) == 0x000118, "Wrong size on BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge");
static_assert(offsetof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge, EntryPoint) == 0x000000, "Member 'BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge, CallFunc_GetChallengeManager_ReturnValue) == 0x000010, "Member 'BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000018, "Member 'BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge, K2Node_CustomEvent_Component) == 0x000028, "Member 'BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge::K2Node_CustomEvent_Component' has a wrong offset!");
static_assert(offsetof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge, K2Node_CustomEvent_DamageEvent) == 0x000030, "Member 'BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge::K2Node_CustomEvent_DamageEvent' has a wrong offset!");
static_assert(offsetof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge, CallFunc_GetHealthComponent_ReturnValue) == 0x0000F0, "Member 'BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge::CallFunc_GetHealthComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge, K2Node_CreateDelegate_OutputDelegate) == 0x0000F8, "Member 'BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge, CallFunc_FTrunc_ReturnValue) == 0x000108, "Member 'BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge, CallFunc_FTrunc_A_ImplicitCast) == 0x000110, "Member 'BP_TakeDamage_Challenge_C_ExecuteUbergraph_BP_TakeDamage_Challenge::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function BP_TakeDamage_Challenge.BP_TakeDamage_Challenge_C.OnDamageTakes
// 0x00C8 (0x00C8 - 0x0000)
struct BP_TakeDamage_Challenge_C_OnDamageTakes final
{
public:
	class URHealthComponent*                      Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     DamageEvent;                                       // 0x0008(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_TakeDamage_Challenge_C_OnDamageTakes) == 0x000008, "Wrong alignment on BP_TakeDamage_Challenge_C_OnDamageTakes");
static_assert(sizeof(BP_TakeDamage_Challenge_C_OnDamageTakes) == 0x0000C8, "Wrong size on BP_TakeDamage_Challenge_C_OnDamageTakes");
static_assert(offsetof(BP_TakeDamage_Challenge_C_OnDamageTakes, Component) == 0x000000, "Member 'BP_TakeDamage_Challenge_C_OnDamageTakes::Component' has a wrong offset!");
static_assert(offsetof(BP_TakeDamage_Challenge_C_OnDamageTakes, DamageEvent) == 0x000008, "Member 'BP_TakeDamage_Challenge_C_OnDamageTakes::DamageEvent' has a wrong offset!");

}

