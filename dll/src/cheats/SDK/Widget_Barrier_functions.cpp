#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_Barrier

#include "Basic.hpp"

#include "Widget_Barrier_classes.hpp"
#include "Widget_Barrier_parameters.hpp"


namespace SDK
{

// Function Widget_Barrier.Widget_Barrier_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWidget_Barrier_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Barrier_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_Barrier.Widget_Barrier_C.ExecuteUbergraph_Widget_Barrier
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_Barrier_C::ExecuteUbergraph_Widget_Barrier(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Barrier_C", "ExecuteUbergraph_Widget_Barrier");

	Params::Widget_Barrier_C_ExecuteUbergraph_Widget_Barrier Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Barrier.Widget_Barrier_C.OnBarrierChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class URHealthComponent*                Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentBarrier_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   barrierDelta                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHealCombatEvent&          HealEvent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UWidget_Barrier_C::OnBarrierChanged(class URHealthComponent* Component, float CurrentBarrier_0, float barrierDelta, const struct FHealCombatEvent& HealEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Barrier_C", "OnBarrierChanged");

	Params::Widget_Barrier_C_OnBarrierChanged Parms{};

	Parms.Component = Component;
	Parms.CurrentBarrier_0 = CurrentBarrier_0;
	Parms.barrierDelta = barrierDelta;
	Parms.HealEvent = std::move(HealEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Barrier.Widget_Barrier_C.OnBarrierDepleted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class URHealthComponent*                Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FDamageCombatEvent&        DamageEventData                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UWidget_Barrier_C::OnBarrierDepleted(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Barrier_C", "OnBarrierDepleted");

	Params::Widget_Barrier_C_OnBarrierDepleted Parms{};

	Parms.Component = Component;
	Parms.DamageEventData = std::move(DamageEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Barrier.Widget_Barrier_C.OnDamageTaken
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class URHealthComponent*                Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FDamageCombatEvent&        DamageEvent                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UWidget_Barrier_C::OnDamageTaken(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Barrier_C", "OnDamageTaken");

	Params::Widget_Barrier_C_OnDamageTaken Parms{};

	Parms.Component = Component;
	Parms.DamageEvent = std::move(DamageEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Barrier.Widget_Barrier_C.OnMaximumBarrierChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class URHealthComponent*                Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// float                                   MaximumBarrier_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_Barrier_C::OnMaximumBarrierChanged(class URHealthComponent* Component, float MaximumBarrier_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Barrier_C", "OnMaximumBarrierChanged");

	Params::Widget_Barrier_C_OnMaximumBarrierChanged Parms{};

	Parms.Component = Component;
	Parms.MaximumBarrier_0 = MaximumBarrier_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Barrier.Widget_Barrier_C.OnMaximumHealthChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class URHealthComponent*                Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// float                                   MaximumHealth_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_Barrier_C::OnMaximumHealthChanged(class URHealthComponent* Component, float MaximumHealth_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Barrier_C", "OnMaximumHealthChanged");

	Params::Widget_Barrier_C_OnMaximumHealthChanged Parms{};

	Parms.Component = Component;
	Parms.MaximumHealth_0 = MaximumHealth_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Barrier.Widget_Barrier_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_Barrier_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Barrier_C", "Tick");

	Params::Widget_Barrier_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_Barrier.Widget_Barrier_C.UpdateRetainer
// (BlueprintCallable, BlueprintEvent)

void UWidget_Barrier_C::UpdateRetainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_Barrier_C", "UpdateRetainer");

	UObject::ProcessEvent(Func, nullptr);
}

}

