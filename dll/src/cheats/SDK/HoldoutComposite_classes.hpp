#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HoldoutComposite

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class HoldoutComposite.HoldoutCompositeComponent
// 0x0010 (0x0240 - 0x0230)
class UHoldoutCompositeComponent final : public USceneComponent
{
public:
	bool                                          bIsEnabled;                                        // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_231[0xF];                                      // 0x0231(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetEnabled(bool bInEnabled);

	bool IsEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoldoutCompositeComponent">();
	}
	static class UHoldoutCompositeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoldoutCompositeComponent>();
	}
};
static_assert(alignof(UHoldoutCompositeComponent) == 0x000010, "Wrong alignment on UHoldoutCompositeComponent");
static_assert(sizeof(UHoldoutCompositeComponent) == 0x000240, "Wrong size on UHoldoutCompositeComponent");
static_assert(offsetof(UHoldoutCompositeComponent, bIsEnabled) == 0x000230, "Member 'UHoldoutCompositeComponent::bIsEnabled' has a wrong offset!");

// Class HoldoutComposite.HoldoutCompositeSubsystem
// 0x0010 (0x0040 - 0x0030)
class UHoldoutCompositeSubsystem final : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RegisterPrimitive(TSoftObjectPtr<class UPrimitiveComponent> InPrimitiveComponent, bool bInHoldoutState);
	void UnregisterPrimitive(TSoftObjectPtr<class UPrimitiveComponent> InPrimitiveComponent, bool bInHoldoutState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoldoutCompositeSubsystem">();
	}
	static class UHoldoutCompositeSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoldoutCompositeSubsystem>();
	}
};
static_assert(alignof(UHoldoutCompositeSubsystem) == 0x000008, "Wrong alignment on UHoldoutCompositeSubsystem");
static_assert(sizeof(UHoldoutCompositeSubsystem) == 0x000040, "Wrong size on UHoldoutCompositeSubsystem");

// Class HoldoutComposite.HoldoutCompositeSettings
// 0x0018 (0x0050 - 0x0038)
class UHoldoutCompositeSettings final : public UDeveloperSettings
{
public:
	bool                                          bCompositeFollowsSceneExposure;                    // 0x0038(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCompositeSupportsSSR;                             // 0x0039(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SceneViewExtensionPriority;                        // 0x003C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftClassPath>                 DisabledPrimitiveClasses;                          // 0x0040(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HoldoutCompositeSettings">();
	}
	static class UHoldoutCompositeSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoldoutCompositeSettings>();
	}
};
static_assert(alignof(UHoldoutCompositeSettings) == 0x000008, "Wrong alignment on UHoldoutCompositeSettings");
static_assert(sizeof(UHoldoutCompositeSettings) == 0x000050, "Wrong size on UHoldoutCompositeSettings");
static_assert(offsetof(UHoldoutCompositeSettings, bCompositeFollowsSceneExposure) == 0x000038, "Member 'UHoldoutCompositeSettings::bCompositeFollowsSceneExposure' has a wrong offset!");
static_assert(offsetof(UHoldoutCompositeSettings, bCompositeSupportsSSR) == 0x000039, "Member 'UHoldoutCompositeSettings::bCompositeSupportsSSR' has a wrong offset!");
static_assert(offsetof(UHoldoutCompositeSettings, SceneViewExtensionPriority) == 0x00003C, "Member 'UHoldoutCompositeSettings::SceneViewExtensionPriority' has a wrong offset!");
static_assert(offsetof(UHoldoutCompositeSettings, DisabledPrimitiveClasses) == 0x000040, "Member 'UHoldoutCompositeSettings::DisabledPrimitiveClasses' has a wrong offset!");

}

