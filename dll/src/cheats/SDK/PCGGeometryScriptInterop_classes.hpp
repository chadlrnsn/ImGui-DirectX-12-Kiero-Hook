#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PCGGeometryScriptInterop

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PCG_structs.hpp"
#include "PCG_classes.hpp"
#include "PCGGeometryScriptInterop_structs.hpp"
#include "GeometryScriptingCore_structs.hpp"


namespace SDK
{

// Class PCGGeometryScriptInterop.PCGDynamicMeshBaseSettings
// 0x0000 (0x00B8 - 0x00B8)
class UPCGDynamicMeshBaseSettings : public UPCGSettings
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGDynamicMeshBaseSettings">();
	}
	static class UPCGDynamicMeshBaseSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGDynamicMeshBaseSettings>();
	}
};
static_assert(alignof(UPCGDynamicMeshBaseSettings) == 0x000008, "Wrong alignment on UPCGDynamicMeshBaseSettings");
static_assert(sizeof(UPCGDynamicMeshBaseSettings) == 0x0000B8, "Wrong size on UPCGDynamicMeshBaseSettings");

// Class PCGGeometryScriptInterop.PCGAppendMeshesFromPointsSettings
// 0x0068 (0x0120 - 0x00B8)
class UPCGAppendMeshesFromPointsSettings final : public UPCGDynamicMeshBaseSettings
{
public:
	EPCGAppendMeshesFromPointsMode                Mode;                                              // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             StaticMesh;                                        // 0x00C0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPCGAttributePropertyInputSelector     MeshAttribute;                                     // 0x00E8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExtractMaterials;                                 // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGeometryScriptLODType                        RequestedLODType;                                  // 0x0111(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequestedLODIndex;                                 // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSynchronousLoad;                                  // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGAppendMeshesFromPointsSettings">();
	}
	static class UPCGAppendMeshesFromPointsSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGAppendMeshesFromPointsSettings>();
	}
};
static_assert(alignof(UPCGAppendMeshesFromPointsSettings) == 0x000008, "Wrong alignment on UPCGAppendMeshesFromPointsSettings");
static_assert(sizeof(UPCGAppendMeshesFromPointsSettings) == 0x000120, "Wrong size on UPCGAppendMeshesFromPointsSettings");
static_assert(offsetof(UPCGAppendMeshesFromPointsSettings, Mode) == 0x0000B8, "Member 'UPCGAppendMeshesFromPointsSettings::Mode' has a wrong offset!");
static_assert(offsetof(UPCGAppendMeshesFromPointsSettings, StaticMesh) == 0x0000C0, "Member 'UPCGAppendMeshesFromPointsSettings::StaticMesh' has a wrong offset!");
static_assert(offsetof(UPCGAppendMeshesFromPointsSettings, MeshAttribute) == 0x0000E8, "Member 'UPCGAppendMeshesFromPointsSettings::MeshAttribute' has a wrong offset!");
static_assert(offsetof(UPCGAppendMeshesFromPointsSettings, bExtractMaterials) == 0x000110, "Member 'UPCGAppendMeshesFromPointsSettings::bExtractMaterials' has a wrong offset!");
static_assert(offsetof(UPCGAppendMeshesFromPointsSettings, RequestedLODType) == 0x000111, "Member 'UPCGAppendMeshesFromPointsSettings::RequestedLODType' has a wrong offset!");
static_assert(offsetof(UPCGAppendMeshesFromPointsSettings, RequestedLODIndex) == 0x000114, "Member 'UPCGAppendMeshesFromPointsSettings::RequestedLODIndex' has a wrong offset!");
static_assert(offsetof(UPCGAppendMeshesFromPointsSettings, bSynchronousLoad) == 0x000118, "Member 'UPCGAppendMeshesFromPointsSettings::bSynchronousLoad' has a wrong offset!");

// Class PCGGeometryScriptInterop.PCGBooleanOperationSettings
// 0x0018 (0x00D0 - 0x00B8)
class UPCGBooleanOperationSettings final : public UPCGDynamicMeshBaseSettings
{
public:
	EGeometryScriptBooleanOperation               BooleanOperation;                                  // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometryScriptMeshBooleanOptions      BooleanOperationOptions;                           // 0x00BC(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EPCGBooleanOperationTagInheritanceMode        TagInheritanceMode;                                // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPCGBooleanOperationMode                      Mode;                                              // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGBooleanOperationSettings">();
	}
	static class UPCGBooleanOperationSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGBooleanOperationSettings>();
	}
};
static_assert(alignof(UPCGBooleanOperationSettings) == 0x000008, "Wrong alignment on UPCGBooleanOperationSettings");
static_assert(sizeof(UPCGBooleanOperationSettings) == 0x0000D0, "Wrong size on UPCGBooleanOperationSettings");
static_assert(offsetof(UPCGBooleanOperationSettings, BooleanOperation) == 0x0000B8, "Member 'UPCGBooleanOperationSettings::BooleanOperation' has a wrong offset!");
static_assert(offsetof(UPCGBooleanOperationSettings, BooleanOperationOptions) == 0x0000BC, "Member 'UPCGBooleanOperationSettings::BooleanOperationOptions' has a wrong offset!");
static_assert(offsetof(UPCGBooleanOperationSettings, TagInheritanceMode) == 0x0000C8, "Member 'UPCGBooleanOperationSettings::TagInheritanceMode' has a wrong offset!");
static_assert(offsetof(UPCGBooleanOperationSettings, Mode) == 0x0000C9, "Member 'UPCGBooleanOperationSettings::Mode' has a wrong offset!");

// Class PCGGeometryScriptInterop.PCGCreateEmptyDynamicMeshSettings
// 0x0000 (0x00B8 - 0x00B8)
class UPCGCreateEmptyDynamicMeshSettings final : public UPCGDynamicMeshBaseSettings
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGCreateEmptyDynamicMeshSettings">();
	}
	static class UPCGCreateEmptyDynamicMeshSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGCreateEmptyDynamicMeshSettings>();
	}
};
static_assert(alignof(UPCGCreateEmptyDynamicMeshSettings) == 0x000008, "Wrong alignment on UPCGCreateEmptyDynamicMeshSettings");
static_assert(sizeof(UPCGCreateEmptyDynamicMeshSettings) == 0x0000B8, "Wrong size on UPCGCreateEmptyDynamicMeshSettings");

// Class PCGGeometryScriptInterop.PCGDynamicMeshData
// 0x0290 (0x0310 - 0x0080)
class UPCGDynamicMeshData final : public UPCGSpatialData
{
public:
	class UDynamicMesh*                           DynamicMesh;                                       // 0x0080(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>             Materials;                                         // 0x0088(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_98[0x278];                                     // 0x0098(0x0278)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void K2_Initialize(class UDynamicMesh* InMesh, const TArray<class UMaterialInterface*>& InMaterials, bool bCanTakeOwnership);
	void SetMaterials(const TArray<class UMaterialInterface*>& InMaterials);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGDynamicMeshData">();
	}
	static class UPCGDynamicMeshData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGDynamicMeshData>();
	}
};
static_assert(alignof(UPCGDynamicMeshData) == 0x000008, "Wrong alignment on UPCGDynamicMeshData");
static_assert(sizeof(UPCGDynamicMeshData) == 0x000310, "Wrong size on UPCGDynamicMeshData");
static_assert(offsetof(UPCGDynamicMeshData, DynamicMesh) == 0x000080, "Member 'UPCGDynamicMeshData::DynamicMesh' has a wrong offset!");
static_assert(offsetof(UPCGDynamicMeshData, Materials) == 0x000088, "Member 'UPCGDynamicMeshData::Materials' has a wrong offset!");

// Class PCGGeometryScriptInterop.PCGDynamicMeshManagedComponent
// 0x0010 (0x0070 - 0x0060)
class UPCGDynamicMeshManagedComponent final : public UPCGManagedComponent
{
public:
	uint64                                        DataUID;                                           // 0x0060(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGDynamicMeshManagedComponent">();
	}
	static class UPCGDynamicMeshManagedComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGDynamicMeshManagedComponent>();
	}
};
static_assert(alignof(UPCGDynamicMeshManagedComponent) == 0x000008, "Wrong alignment on UPCGDynamicMeshManagedComponent");
static_assert(sizeof(UPCGDynamicMeshManagedComponent) == 0x000070, "Wrong size on UPCGDynamicMeshManagedComponent");
static_assert(offsetof(UPCGDynamicMeshManagedComponent, DataUID) == 0x000060, "Member 'UPCGDynamicMeshManagedComponent::DataUID' has a wrong offset!");

// Class PCGGeometryScriptInterop.PCGDynamicMeshTransformSettings
// 0x0068 (0x0120 - 0x00B8)
class UPCGDynamicMeshTransformSettings final : public UPCGDynamicMeshBaseSettings
{
public:
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x00C0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGDynamicMeshTransformSettings">();
	}
	static class UPCGDynamicMeshTransformSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGDynamicMeshTransformSettings>();
	}
};
static_assert(alignof(UPCGDynamicMeshTransformSettings) == 0x000010, "Wrong alignment on UPCGDynamicMeshTransformSettings");
static_assert(sizeof(UPCGDynamicMeshTransformSettings) == 0x000120, "Wrong size on UPCGDynamicMeshTransformSettings");
static_assert(offsetof(UPCGDynamicMeshTransformSettings, Transform) == 0x0000C0, "Member 'UPCGDynamicMeshTransformSettings::Transform' has a wrong offset!");

// Class PCGGeometryScriptInterop.PCGGeometryBlueprintElement
// 0x0000 (0x0068 - 0x0068)
class UPCGGeometryBlueprintElement final : public UPCGBlueprintElement
{
public:
	void ProcessDynamicMesh(class UDynamicMesh* InDynMesh, TArray<class FString>* OutTags);

	class UPCGDynamicMeshData* CopyOrStealInputData(const struct FPCGTaggedData& InTaggedData) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGGeometryBlueprintElement">();
	}
	static class UPCGGeometryBlueprintElement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGGeometryBlueprintElement>();
	}
};
static_assert(alignof(UPCGGeometryBlueprintElement) == 0x000008, "Wrong alignment on UPCGGeometryBlueprintElement");
static_assert(sizeof(UPCGGeometryBlueprintElement) == 0x000068, "Wrong size on UPCGGeometryBlueprintElement");

// Class PCGGeometryScriptInterop.PCGGetDynamicMeshDataSettings
// 0x0010 (0x0170 - 0x0160)
class UPCGGetDynamicMeshDataSettings final : public UPCGDataFromActorSettings
{
public:
	struct FGeometryScriptCopyMeshFromComponentOptions Options;                                      // 0x0160(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGGetDynamicMeshDataSettings">();
	}
	static class UPCGGetDynamicMeshDataSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGGetDynamicMeshDataSettings>();
	}
};
static_assert(alignof(UPCGGetDynamicMeshDataSettings) == 0x000008, "Wrong alignment on UPCGGetDynamicMeshDataSettings");
static_assert(sizeof(UPCGGetDynamicMeshDataSettings) == 0x000170, "Wrong size on UPCGGetDynamicMeshDataSettings");
static_assert(offsetof(UPCGGetDynamicMeshDataSettings, Options) == 0x000160, "Member 'UPCGGetDynamicMeshDataSettings::Options' has a wrong offset!");

// Class PCGGeometryScriptInterop.PCGMergeDynamicMeshesSettings
// 0x0000 (0x00B8 - 0x00B8)
class UPCGMergeDynamicMeshesSettings final : public UPCGDynamicMeshBaseSettings
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGMergeDynamicMeshesSettings">();
	}
	static class UPCGMergeDynamicMeshesSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGMergeDynamicMeshesSettings>();
	}
};
static_assert(alignof(UPCGMergeDynamicMeshesSettings) == 0x000008, "Wrong alignment on UPCGMergeDynamicMeshesSettings");
static_assert(sizeof(UPCGMergeDynamicMeshesSettings) == 0x0000B8, "Wrong size on UPCGMergeDynamicMeshesSettings");

// Class PCGGeometryScriptInterop.PCGMeshSamplerSettings
// 0x00D8 (0x0190 - 0x00B8)
class UPCGMeshSamplerSettings final : public UPCGSettings
{
public:
	bool                                          bExtractMeshFromInput;                             // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             StaticMesh;                                        // 0x00C0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPCGAttributePropertyInputSelector     InputSource;                                       // 0x00E8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPCGMeshSamplingMethod                        SamplingMethod;                                    // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseColorChannelAsDensity;                         // 0x0111(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	EPCGColorChannel                              ColorChannelAsDensity;                             // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVoxelize;                                         // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VoxelSize;                                         // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemoveHiddenTriangles;                            // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGeometryScriptLODType                        RequestedLODType;                                  // 0x0121(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequestedLODIndex;                                 // 0x0124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGeometryScriptMeshPointSamplingOptions SamplingOptions;                                  // 0x0128(0x0018)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FGeometryScriptNonUniformPointSamplingOptions NonUniformSamplingOptions;                  // 0x0140(0x0018)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bExtractUVAsAttribute;                             // 0x0158(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   UVAttributeName;                                   // 0x015C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UVChannel;                                         // 0x0164(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutputTriangleIds;                                // 0x0168(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TriangleIdAttributeName;                           // 0x016C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutputMaterialInfo;                               // 0x0174(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MaterialIdAttributeName;                           // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MaterialAttributeName;                             // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PointSteepness;                                    // 0x0188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSynchronousLoad;                                  // 0x018C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGMeshSamplerSettings">();
	}
	static class UPCGMeshSamplerSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGMeshSamplerSettings>();
	}
};
static_assert(alignof(UPCGMeshSamplerSettings) == 0x000008, "Wrong alignment on UPCGMeshSamplerSettings");
static_assert(sizeof(UPCGMeshSamplerSettings) == 0x000190, "Wrong size on UPCGMeshSamplerSettings");
static_assert(offsetof(UPCGMeshSamplerSettings, bExtractMeshFromInput) == 0x0000B8, "Member 'UPCGMeshSamplerSettings::bExtractMeshFromInput' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, StaticMesh) == 0x0000C0, "Member 'UPCGMeshSamplerSettings::StaticMesh' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, InputSource) == 0x0000E8, "Member 'UPCGMeshSamplerSettings::InputSource' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, SamplingMethod) == 0x000110, "Member 'UPCGMeshSamplerSettings::SamplingMethod' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, bUseColorChannelAsDensity) == 0x000111, "Member 'UPCGMeshSamplerSettings::bUseColorChannelAsDensity' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, ColorChannelAsDensity) == 0x000114, "Member 'UPCGMeshSamplerSettings::ColorChannelAsDensity' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, bVoxelize) == 0x000118, "Member 'UPCGMeshSamplerSettings::bVoxelize' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, VoxelSize) == 0x00011C, "Member 'UPCGMeshSamplerSettings::VoxelSize' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, bRemoveHiddenTriangles) == 0x000120, "Member 'UPCGMeshSamplerSettings::bRemoveHiddenTriangles' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, RequestedLODType) == 0x000121, "Member 'UPCGMeshSamplerSettings::RequestedLODType' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, RequestedLODIndex) == 0x000124, "Member 'UPCGMeshSamplerSettings::RequestedLODIndex' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, SamplingOptions) == 0x000128, "Member 'UPCGMeshSamplerSettings::SamplingOptions' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, NonUniformSamplingOptions) == 0x000140, "Member 'UPCGMeshSamplerSettings::NonUniformSamplingOptions' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, bExtractUVAsAttribute) == 0x000158, "Member 'UPCGMeshSamplerSettings::bExtractUVAsAttribute' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, UVAttributeName) == 0x00015C, "Member 'UPCGMeshSamplerSettings::UVAttributeName' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, UVChannel) == 0x000164, "Member 'UPCGMeshSamplerSettings::UVChannel' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, bOutputTriangleIds) == 0x000168, "Member 'UPCGMeshSamplerSettings::bOutputTriangleIds' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, TriangleIdAttributeName) == 0x00016C, "Member 'UPCGMeshSamplerSettings::TriangleIdAttributeName' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, bOutputMaterialInfo) == 0x000174, "Member 'UPCGMeshSamplerSettings::bOutputMaterialInfo' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, MaterialIdAttributeName) == 0x000178, "Member 'UPCGMeshSamplerSettings::MaterialIdAttributeName' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, MaterialAttributeName) == 0x000180, "Member 'UPCGMeshSamplerSettings::MaterialAttributeName' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, PointSteepness) == 0x000188, "Member 'UPCGMeshSamplerSettings::PointSteepness' has a wrong offset!");
static_assert(offsetof(UPCGMeshSamplerSettings, bSynchronousLoad) == 0x00018C, "Member 'UPCGMeshSamplerSettings::bSynchronousLoad' has a wrong offset!");

// Class PCGGeometryScriptInterop.PCGPrimitiveCrossSectionSettings
// 0x0070 (0x0128 - 0x00B8)
class UPCGPrimitiveCrossSectionSettings final : public UPCGSettings
{
public:
	struct FVector                                SliceDirection;                                    // 0x00B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPCGAttributePropertyOutputSelector    ExtrusionVectorAttribute;                          // 0x00D0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinimumCoplanarVertices;                           // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxMeshVertexCount;                                // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableTierMerging;                                // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TierMergingThreshold;                              // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableMinAreaCulling;                             // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MinAreaCullingThreshold;                           // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemoveRedundantSections;                          // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGPrimitiveCrossSectionSettings">();
	}
	static class UPCGPrimitiveCrossSectionSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGPrimitiveCrossSectionSettings>();
	}
};
static_assert(alignof(UPCGPrimitiveCrossSectionSettings) == 0x000008, "Wrong alignment on UPCGPrimitiveCrossSectionSettings");
static_assert(sizeof(UPCGPrimitiveCrossSectionSettings) == 0x000128, "Wrong size on UPCGPrimitiveCrossSectionSettings");
static_assert(offsetof(UPCGPrimitiveCrossSectionSettings, SliceDirection) == 0x0000B8, "Member 'UPCGPrimitiveCrossSectionSettings::SliceDirection' has a wrong offset!");
static_assert(offsetof(UPCGPrimitiveCrossSectionSettings, ExtrusionVectorAttribute) == 0x0000D0, "Member 'UPCGPrimitiveCrossSectionSettings::ExtrusionVectorAttribute' has a wrong offset!");
static_assert(offsetof(UPCGPrimitiveCrossSectionSettings, MinimumCoplanarVertices) == 0x0000F8, "Member 'UPCGPrimitiveCrossSectionSettings::MinimumCoplanarVertices' has a wrong offset!");
static_assert(offsetof(UPCGPrimitiveCrossSectionSettings, MaxMeshVertexCount) == 0x0000FC, "Member 'UPCGPrimitiveCrossSectionSettings::MaxMeshVertexCount' has a wrong offset!");
static_assert(offsetof(UPCGPrimitiveCrossSectionSettings, bEnableTierMerging) == 0x000100, "Member 'UPCGPrimitiveCrossSectionSettings::bEnableTierMerging' has a wrong offset!");
static_assert(offsetof(UPCGPrimitiveCrossSectionSettings, TierMergingThreshold) == 0x000108, "Member 'UPCGPrimitiveCrossSectionSettings::TierMergingThreshold' has a wrong offset!");
static_assert(offsetof(UPCGPrimitiveCrossSectionSettings, bEnableMinAreaCulling) == 0x000110, "Member 'UPCGPrimitiveCrossSectionSettings::bEnableMinAreaCulling' has a wrong offset!");
static_assert(offsetof(UPCGPrimitiveCrossSectionSettings, MinAreaCullingThreshold) == 0x000118, "Member 'UPCGPrimitiveCrossSectionSettings::MinAreaCullingThreshold' has a wrong offset!");
static_assert(offsetof(UPCGPrimitiveCrossSectionSettings, bRemoveRedundantSections) == 0x000120, "Member 'UPCGPrimitiveCrossSectionSettings::bRemoveRedundantSections' has a wrong offset!");

// Class PCGGeometryScriptInterop.PCGSaveDynamicMeshToAssetSettings
// 0x00C0 (0x0178 - 0x00B8)
class UPCGSaveDynamicMeshToAssetSettings final : public UPCGDynamicMeshBaseSettings
{
public:
	struct FPCGAssetExporterParameters            ExportParams;                                      // 0x00B8(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bExportMaterialsFromDynamicMesh;                   // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometryScriptCopyMeshToAssetOptions  CopyMeshToAssetOptions;                            // 0x00F0(0x0080)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGeometryScriptMeshWriteLOD            MeshWriteLOD;                                      // 0x0170(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGSaveDynamicMeshToAssetSettings">();
	}
	static class UPCGSaveDynamicMeshToAssetSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGSaveDynamicMeshToAssetSettings>();
	}
};
static_assert(alignof(UPCGSaveDynamicMeshToAssetSettings) == 0x000008, "Wrong alignment on UPCGSaveDynamicMeshToAssetSettings");
static_assert(sizeof(UPCGSaveDynamicMeshToAssetSettings) == 0x000178, "Wrong size on UPCGSaveDynamicMeshToAssetSettings");
static_assert(offsetof(UPCGSaveDynamicMeshToAssetSettings, ExportParams) == 0x0000B8, "Member 'UPCGSaveDynamicMeshToAssetSettings::ExportParams' has a wrong offset!");
static_assert(offsetof(UPCGSaveDynamicMeshToAssetSettings, bExportMaterialsFromDynamicMesh) == 0x0000E8, "Member 'UPCGSaveDynamicMeshToAssetSettings::bExportMaterialsFromDynamicMesh' has a wrong offset!");
static_assert(offsetof(UPCGSaveDynamicMeshToAssetSettings, CopyMeshToAssetOptions) == 0x0000F0, "Member 'UPCGSaveDynamicMeshToAssetSettings::CopyMeshToAssetOptions' has a wrong offset!");
static_assert(offsetof(UPCGSaveDynamicMeshToAssetSettings, MeshWriteLOD) == 0x000170, "Member 'UPCGSaveDynamicMeshToAssetSettings::MeshWriteLOD' has a wrong offset!");

// Class PCGGeometryScriptInterop.PCGSpawnDynamicMeshSettings
// 0x0038 (0x00F0 - 0x00B8)
class UPCGSpawnDynamicMeshSettings final : public UPCGDynamicMeshBaseSettings
{
public:
	TSoftObjectPtr<class AActor>                  TargetActor;                                       // 0x00B8(0x0028)(BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           PostProcessFunctionNames;                          // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGSpawnDynamicMeshSettings">();
	}
	static class UPCGSpawnDynamicMeshSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGSpawnDynamicMeshSettings>();
	}
};
static_assert(alignof(UPCGSpawnDynamicMeshSettings) == 0x000008, "Wrong alignment on UPCGSpawnDynamicMeshSettings");
static_assert(sizeof(UPCGSpawnDynamicMeshSettings) == 0x0000F0, "Wrong size on UPCGSpawnDynamicMeshSettings");
static_assert(offsetof(UPCGSpawnDynamicMeshSettings, TargetActor) == 0x0000B8, "Member 'UPCGSpawnDynamicMeshSettings::TargetActor' has a wrong offset!");
static_assert(offsetof(UPCGSpawnDynamicMeshSettings, PostProcessFunctionNames) == 0x0000E0, "Member 'UPCGSpawnDynamicMeshSettings::PostProcessFunctionNames' has a wrong offset!");

// Class PCGGeometryScriptInterop.PCGStaticMeshToDynamicMeshSettings
// 0x0050 (0x0108 - 0x00B8)
class UPCGStaticMeshToDynamicMeshSettings final : public UPCGDynamicMeshBaseSettings
{
public:
	TSoftObjectPtr<class UStaticMesh>             StaticMesh;                                        // 0x00B8(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExtractMaterials;                                 // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UMaterialInterface>> OverrideMaterials;                              // 0x00E8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	EGeometryScriptLODType                        RequestedLODType;                                  // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequestedLODIndex;                                 // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSynchronousLoad;                                  // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PCGStaticMeshToDynamicMeshSettings">();
	}
	static class UPCGStaticMeshToDynamicMeshSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPCGStaticMeshToDynamicMeshSettings>();
	}
};
static_assert(alignof(UPCGStaticMeshToDynamicMeshSettings) == 0x000008, "Wrong alignment on UPCGStaticMeshToDynamicMeshSettings");
static_assert(sizeof(UPCGStaticMeshToDynamicMeshSettings) == 0x000108, "Wrong size on UPCGStaticMeshToDynamicMeshSettings");
static_assert(offsetof(UPCGStaticMeshToDynamicMeshSettings, StaticMesh) == 0x0000B8, "Member 'UPCGStaticMeshToDynamicMeshSettings::StaticMesh' has a wrong offset!");
static_assert(offsetof(UPCGStaticMeshToDynamicMeshSettings, bExtractMaterials) == 0x0000E0, "Member 'UPCGStaticMeshToDynamicMeshSettings::bExtractMaterials' has a wrong offset!");
static_assert(offsetof(UPCGStaticMeshToDynamicMeshSettings, OverrideMaterials) == 0x0000E8, "Member 'UPCGStaticMeshToDynamicMeshSettings::OverrideMaterials' has a wrong offset!");
static_assert(offsetof(UPCGStaticMeshToDynamicMeshSettings, RequestedLODType) == 0x0000F8, "Member 'UPCGStaticMeshToDynamicMeshSettings::RequestedLODType' has a wrong offset!");
static_assert(offsetof(UPCGStaticMeshToDynamicMeshSettings, RequestedLODIndex) == 0x0000FC, "Member 'UPCGStaticMeshToDynamicMeshSettings::RequestedLODIndex' has a wrong offset!");
static_assert(offsetof(UPCGStaticMeshToDynamicMeshSettings, bSynchronousLoad) == 0x000100, "Member 'UPCGStaticMeshToDynamicMeshSettings::bSynchronousLoad' has a wrong offset!");

}

