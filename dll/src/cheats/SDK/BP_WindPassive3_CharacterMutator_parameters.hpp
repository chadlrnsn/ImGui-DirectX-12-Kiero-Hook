#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WindPassive3_CharacterMutator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "RGame_structs.hpp"


namespace SDK::Params
{

// Function BP_WindPassive3_CharacterMutator.BP_WindPassive3_CharacterMutator_C.ExecuteUbergraph_BP_WindPassive3_CharacterMutator
// 0x0420 (0x0420 - 0x0000)
struct BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGScriptActorInfo                      CallFunc_K2_GetCurrentActorInfo_ReturnValue;       // 0x0008(0x0030)(ContainsInstancedReference)
	class URPlayerGScriptComponent*               K2Node_DynamicCast_AsRPlayer_GScript_Component;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMutatorRank_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMutatorValueByVariableName_ReturnValue; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGScriptActorInfo                      CallFunc_K2_GetCurrentActorInfo_ReturnValue_1;     // 0x0050(0x0030)(ContainsInstancedReference)
	float                                         CallFunc_RollProcChance_OutProcChance;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RollProcChance_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FVector& Location, double Radius, TArray<struct FHitResult>& Hits)> K2Node_CreateDelegate_OutputDelegate; // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URGCharacterMutatorScript*              CallFunc_GetCharacterMutator_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URGCharacterMutatorScript*              CallFunc_GetCharacterMutator_ReturnValue_1;        // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_Windburst_Behavior_Mutator_C*       K2Node_DynamicCast_AsBP_Windburst_Behavior_Mutator; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Windburst_Behavior_Mutator_C*       K2Node_DynamicCast_AsBP_Windburst_Behavior_Mutator_1; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Radius;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     K2Node_CustomEvent_Hits;                           // 0x00F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class URGCharacterMutatorScript*              CallFunc_GetCharacterMutator_ReturnValue_2;        // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Windburst_Behavior_Mutator_C*       K2Node_DynamicCast_AsBP_Windburst_Behavior_Mutator_2; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGScriptActorInfo                      CallFunc_K2_GetCurrentActorInfo_ReturnValue_2;     // 0x0128(0x0030)(ContainsInstancedReference)
	TDelegate<void(const struct FVector& Location, double Radius, TArray<struct FHitResult>& Hits)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0158(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URPlayerGScriptComponent*               K2Node_DynamicCast_AsRPlayer_GScript_Component_1;  // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URPlayerGScriptComponent*               K2Node_CustomEvent_Owner;                          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URMutatorPrimaryAsset*                  K2Node_CustomEvent_MutatorPrimaryAsset;            // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URCharacterMutatorPrimaryAsset*         K2Node_DynamicCast_AsRCharacter_Mutator_Primary_Asset; // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGCharacterMutatorScript*              CallFunc_GetCharacterMutator_ReturnValue_3;        // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Windburst_Behavior_Mutator_C*       K2Node_DynamicCast_AsBP_Windburst_Behavior_Mutator_3; // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class URPlayerGScriptComponent* Owner, class URMutatorPrimaryAsset* MutatorPrimaryAsset)> K2Node_CreateDelegate_OutputDelegate_2; // 0x01BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x01D0(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x2];                                      // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARNPCPawnBase*                          K2Node_DynamicCast_AsRNPCPawn_Base;                // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URPawnMovementComponent*                CallFunc_GetRPawnMovementComponent_ReturnValue;    // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ERDamageFlag                                  CallFunc_GetDamageFlag_ReturnValue;                // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator) == 0x000008, "Wrong alignment on BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator");
static_assert(sizeof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator) == 0x000420, "Wrong size on BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, EntryPoint) == 0x000000, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_K2_GetCurrentActorInfo_ReturnValue) == 0x000008, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_K2_GetCurrentActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_AsRPlayer_GScript_Component) == 0x000038, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_AsRPlayer_GScript_Component' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_GetMutatorRank_ReturnValue) == 0x000044, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_GetMutatorRank_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_GetMutatorValueByVariableName_ReturnValue) == 0x000048, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_GetMutatorValueByVariableName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_FTrunc_ReturnValue) == 0x00004C, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_K2_GetCurrentActorInfo_ReturnValue_1) == 0x000050, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_K2_GetCurrentActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_RollProcChance_OutProcChance) == 0x000080, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_RollProcChance_OutProcChance' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_RollProcChance_ReturnValue) == 0x000084, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_RollProcChance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000088, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_CreateDelegate_OutputDelegate) == 0x000094, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_GetCharacterMutator_ReturnValue) == 0x0000A8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_GetCharacterMutator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_GetCharacterMutator_ReturnValue_1) == 0x0000B0, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_GetCharacterMutator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_AsBP_Windburst_Behavior_Mutator) == 0x0000B8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_AsBP_Windburst_Behavior_Mutator' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_bSuccess_2) == 0x0000C0, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_AsBP_Windburst_Behavior_Mutator_1) == 0x0000C8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_AsBP_Windburst_Behavior_Mutator_1' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_CustomEvent_Location) == 0x0000D8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_CustomEvent_Radius) == 0x0000F0, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_CustomEvent_Radius' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_CustomEvent_Hits) == 0x0000F8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_CustomEvent_Hits' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_GetCharacterMutator_ReturnValue_2) == 0x000108, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_GetCharacterMutator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_AsBP_Windburst_Behavior_Mutator_2) == 0x000118, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_AsBP_Windburst_Behavior_Mutator_2' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_bSuccess_4) == 0x000120, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_K2_GetCurrentActorInfo_ReturnValue_2) == 0x000128, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_K2_GetCurrentActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000158, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_AsRPlayer_GScript_Component_1) == 0x000168, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_AsRPlayer_GScript_Component_1' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_bSuccess_5) == 0x000170, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, Temp_int_Loop_Counter_Variable) == 0x000174, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_CustomEvent_Owner) == 0x000178, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_CustomEvent_MutatorPrimaryAsset) == 0x000180, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_CustomEvent_MutatorPrimaryAsset' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_Less_IntInt_ReturnValue) == 0x000188, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_AsRCharacter_Mutator_Primary_Asset) == 0x000190, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_AsRCharacter_Mutator_Primary_Asset' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_bSuccess_6) == 0x000198, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_GetCharacterMutator_ReturnValue_3) == 0x0001A0, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_GetCharacterMutator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_Add_IntInt_ReturnValue) == 0x0001A8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_AsBP_Windburst_Behavior_Mutator_3) == 0x0001B0, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_AsBP_Windburst_Behavior_Mutator_3' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_bSuccess_7) == 0x0001B8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001BC, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, Temp_int_Array_Index_Variable) == 0x0001CC, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_Array_Get_Item) == 0x0001D0, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_bBlockingHit) == 0x0002D0, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002D1, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_Time) == 0x0002D4, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_Distance) == 0x0002D8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_Location) == 0x0002E0, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_ImpactPoint) == 0x0002F8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_Normal) == 0x000310, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_ImpactNormal) == 0x000328, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_PhysMat) == 0x000340, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_HitActor) == 0x000348, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_HitComponent) == 0x000350, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_HitBoneName) == 0x000358, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_BoneName) == 0x000360, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_HitItem) == 0x000368, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_ElementIndex) == 0x00036C, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_FaceIndex) == 0x000370, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_TraceStart) == 0x000378, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_BreakHitResult_TraceEnd) == 0x000390, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0003A8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_AsRNPCPawn_Base) == 0x0003C0, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_AsRNPCPawn_Base' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, K2Node_DynamicCast_bSuccess_8) == 0x0003C8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003D0, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_GetRPawnMovementComponent_ReturnValue) == 0x0003E8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_GetRPawnMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_GetDamageFlag_ReturnValue) == 0x0003F0, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_GetDamageFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0003F8, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000410, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator, CallFunc_FTrunc_A_ImplicitCast) == 0x000418, "Member 'BP_WindPassive3_CharacterMutator_C_ExecuteUbergraph_BP_WindPassive3_CharacterMutator::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function BP_WindPassive3_CharacterMutator.BP_WindPassive3_CharacterMutator_C.OnMutatorAdded
// 0x0010 (0x0010 - 0x0000)
struct BP_WindPassive3_CharacterMutator_C_OnMutatorAdded final
{
public:
	class URPlayerGScriptComponent*               Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URMutatorPrimaryAsset*                  MutatorPrimaryAsset;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WindPassive3_CharacterMutator_C_OnMutatorAdded) == 0x000008, "Wrong alignment on BP_WindPassive3_CharacterMutator_C_OnMutatorAdded");
static_assert(sizeof(BP_WindPassive3_CharacterMutator_C_OnMutatorAdded) == 0x000010, "Wrong size on BP_WindPassive3_CharacterMutator_C_OnMutatorAdded");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_OnMutatorAdded, Owner) == 0x000000, "Member 'BP_WindPassive3_CharacterMutator_C_OnMutatorAdded::Owner' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_OnMutatorAdded, MutatorPrimaryAsset) == 0x000008, "Member 'BP_WindPassive3_CharacterMutator_C_OnMutatorAdded::MutatorPrimaryAsset' has a wrong offset!");

// Function BP_WindPassive3_CharacterMutator.BP_WindPassive3_CharacterMutator_C.OnWindburst
// 0x0030 (0x0030 - 0x0000)
struct BP_WindPassive3_CharacterMutator_C_OnWindburst final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     Hits;                                              // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_WindPassive3_CharacterMutator_C_OnWindburst) == 0x000008, "Wrong alignment on BP_WindPassive3_CharacterMutator_C_OnWindburst");
static_assert(sizeof(BP_WindPassive3_CharacterMutator_C_OnWindburst) == 0x000030, "Wrong size on BP_WindPassive3_CharacterMutator_C_OnWindburst");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_OnWindburst, Location) == 0x000000, "Member 'BP_WindPassive3_CharacterMutator_C_OnWindburst::Location' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_OnWindburst, Radius) == 0x000018, "Member 'BP_WindPassive3_CharacterMutator_C_OnWindburst::Radius' has a wrong offset!");
static_assert(offsetof(BP_WindPassive3_CharacterMutator_C_OnWindburst, Hits) == 0x000020, "Member 'BP_WindPassive3_CharacterMutator_C_OnWindburst::Hits' has a wrong offset!");

}

