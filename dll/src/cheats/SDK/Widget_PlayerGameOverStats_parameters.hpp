#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_PlayerGameOverStats

#include "Basic.hpp"

#include "RGame_structs.hpp"


namespace SDK::Params
{

// Function Widget_PlayerGameOverStats.Widget_PlayerGameOverStats_C.Setup
// 0x00C0 (0x00C0 - 0x0000)
struct Widget_PlayerGameOverStats_C_Setup final
{
public:
	struct FRPlayerStats                          PlayerStats;                                       // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Widget_PlayerGameOverStats_C_Setup) == 0x000008, "Wrong alignment on Widget_PlayerGameOverStats_C_Setup");
static_assert(sizeof(Widget_PlayerGameOverStats_C_Setup) == 0x0000C0, "Wrong size on Widget_PlayerGameOverStats_C_Setup");
static_assert(offsetof(Widget_PlayerGameOverStats_C_Setup, PlayerStats) == 0x000000, "Member 'Widget_PlayerGameOverStats_C_Setup::PlayerStats' has a wrong offset!");

// Function Widget_PlayerGameOverStats.Widget_PlayerGameOverStats_C.BuildChallengeWidgets
// 0x0020 (0x0020 - 0x0000)
struct Widget_PlayerGameOverStats_C_BuildChallengeWidgets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URChallengeGridItem*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_PlayerGameOverStats_C_BuildChallengeWidgets) == 0x000008, "Wrong alignment on Widget_PlayerGameOverStats_C_BuildChallengeWidgets");
static_assert(sizeof(Widget_PlayerGameOverStats_C_BuildChallengeWidgets) == 0x000020, "Wrong size on Widget_PlayerGameOverStats_C_BuildChallengeWidgets");
static_assert(offsetof(Widget_PlayerGameOverStats_C_BuildChallengeWidgets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Widget_PlayerGameOverStats_C_BuildChallengeWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverStats_C_BuildChallengeWidgets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Widget_PlayerGameOverStats_C_BuildChallengeWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverStats_C_BuildChallengeWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Widget_PlayerGameOverStats_C_BuildChallengeWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverStats_C_BuildChallengeWidgets, CallFunc_Array_Get_Item) == 0x000010, "Member 'Widget_PlayerGameOverStats_C_BuildChallengeWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverStats_C_BuildChallengeWidgets, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Widget_PlayerGameOverStats_C_BuildChallengeWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_PlayerGameOverStats_C_BuildChallengeWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'Widget_PlayerGameOverStats_C_BuildChallengeWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

