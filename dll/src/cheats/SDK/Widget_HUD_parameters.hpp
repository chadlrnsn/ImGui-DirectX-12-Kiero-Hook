#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_HUD

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Slate_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "RGame_structs.hpp"


namespace SDK::Params
{

// Function Widget_HUD.Widget_HUD_C.CalculateOffsetFromAspectRatio
// 0x0040 (0x0040 - 0x0000)
struct Widget_HUD_C_CalculateOffsetFromAspectRatio final
{
public:
	double                                        Offset;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetScreenResolution_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_CalculateOffsetFromAspectRatio) == 0x000008, "Wrong alignment on Widget_HUD_C_CalculateOffsetFromAspectRatio");
static_assert(sizeof(Widget_HUD_C_CalculateOffsetFromAspectRatio) == 0x000040, "Wrong size on Widget_HUD_C_CalculateOffsetFromAspectRatio");
static_assert(offsetof(Widget_HUD_C_CalculateOffsetFromAspectRatio, Offset) == 0x000000, "Member 'Widget_HUD_C_CalculateOffsetFromAspectRatio::Offset' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_CalculateOffsetFromAspectRatio, CallFunc_GetRGameUserSettings_ReturnValue) == 0x000008, "Member 'Widget_HUD_C_CalculateOffsetFromAspectRatio::CallFunc_GetRGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_CalculateOffsetFromAspectRatio, CallFunc_GetScreenResolution_ReturnValue) == 0x000010, "Member 'Widget_HUD_C_CalculateOffsetFromAspectRatio::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_CalculateOffsetFromAspectRatio, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'Widget_HUD_C_CalculateOffsetFromAspectRatio::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_CalculateOffsetFromAspectRatio, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'Widget_HUD_C_CalculateOffsetFromAspectRatio::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_CalculateOffsetFromAspectRatio, CallFunc_SafeDivide_ReturnValue) == 0x000028, "Member 'Widget_HUD_C_CalculateOffsetFromAspectRatio::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_CalculateOffsetFromAspectRatio, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'Widget_HUD_C_CalculateOffsetFromAspectRatio::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_CalculateOffsetFromAspectRatio, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Widget_HUD_C_CalculateOffsetFromAspectRatio::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.ExecuteUbergraph_Widget_HUD
// 0x0250 (0x0250 - 0x0000)
struct Widget_HUD_C_ExecuteUbergraph_Widget_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHealthComponent*                      K2Node_CustomEvent_Component;                      // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     K2Node_CustomEvent_DamageEventData;                // 0x0058(0x00C0)()
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_OverheatBarVilibility;                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBossPawnBase*                         K2Node_Event_BossPawn_1;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_BossHealthVisibility;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 CurrentNodeId)>          K2Node_CreateDelegate_OutputDelegate_4;            // 0x0134(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue;                // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentNodeId;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_ChargeUpBarVilibility;                // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Threshold_2;                          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue;         // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_InVisibility_1;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_1;       // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowPlayerHUD_ReturnValue;             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isConsumed;                           // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_InVisibility;                         // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_PercentageLeft;                       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_BarrierGaugeVisibility;               // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_186[0x2];                                      // 0x0186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Threshold_1;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEventData)> K2Node_CreateDelegate_OutputDelegate_5; // 0x018C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_SpiritGaugeVisibility;                // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Threshold;                            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ARPlayerPawn* Player)>   K2Node_CreateDelegate_OutputDelegate_6;            // 0x01A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DownedActor)>    K2Node_CreateDelegate_OutputDelegate_7;            // 0x01B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DownedActor)>    K2Node_CreateDelegate_OutputDelegate_8;            // 0x01C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x01D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBossPawnBase*                         K2Node_Event_BossPawn;                             // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShouldPrevent;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AREnemySpawnManager*                    CallFunc_GetSpawnManager_ReturnValue;              // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AREnemySpawnAreaSegment*                K2Node_CustomEvent_EnemySpawnAreaSegment_1;        // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AREnemySpawnAreaSegment*                K2Node_CustomEvent_EnemySpawnAreaSegment;          // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0228(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARLevelGenerator*                       CallFunc_GetLevelManager_ReturnValue;              // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD) == 0x000008, "Wrong alignment on Widget_HUD_C_ExecuteUbergraph_Widget_HUD");
static_assert(sizeof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD) == 0x000250, "Wrong size on Widget_HUD_C_ExecuteUbergraph_Widget_HUD");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, EntryPoint) == 0x000000, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000048, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CustomEvent_Component) == 0x000050, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CustomEvent_Component' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CustomEvent_DamageEventData) == 0x000058, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CustomEvent_DamageEventData' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000118, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_OverheatBarVilibility) == 0x000121, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_OverheatBarVilibility' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_BossPawn_1) == 0x000128, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_BossPawn_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_BossHealthVisibility) == 0x000130, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_BossHealthVisibility' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_IsValid_ReturnValue) == 0x000131, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CreateDelegate_OutputDelegate_4) == 0x000134, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_GetRGameState_ReturnValue) == 0x000148, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_GetRGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CustomEvent_CurrentNodeId) == 0x000150, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CustomEvent_CurrentNodeId' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_IsValid_ReturnValue_1) == 0x000154, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_Greater_IntInt_ReturnValue) == 0x000155, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CustomEvent_NewValue) == 0x000156, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_ChargeUpBarVilibility) == 0x000157, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_ChargeUpBarVilibility' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_Threshold_2) == 0x000158, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_Threshold_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_GetRGameUserSettings_ReturnValue) == 0x000160, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_GetRGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_InVisibility_1) == 0x000168, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_InVisibility_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_GetRGameUserSettings_ReturnValue_1) == 0x000170, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_GetRGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, Temp_byte_Variable) == 0x000178, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_GetShowPlayerHUD_ReturnValue) == 0x000179, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_GetShowPlayerHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_isConsumed) == 0x00017A, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_isConsumed' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, Temp_bool_Variable) == 0x00017B, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_InVisibility) == 0x00017C, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_InVisibility' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_PercentageLeft) == 0x000180, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_PercentageLeft' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_BarrierGaugeVisibility) == 0x000184, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_BarrierGaugeVisibility' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_IsValid_ReturnValue_2) == 0x000185, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_Threshold_1) == 0x000188, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_Threshold_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CreateDelegate_OutputDelegate_5) == 0x00018C, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_SpiritGaugeVisibility) == 0x00019C, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_SpiritGaugeVisibility' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_Threshold) == 0x0001A0, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_Threshold' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001A4, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001B4, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001C4, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CreateDelegate_OutputDelegate_9) == 0x0001D4, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001E8, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x0001F0, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_BossPawn) == 0x0001F8, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_BossPawn' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Event_bShouldPrevent) == 0x000200, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Event_bShouldPrevent' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, Temp_byte_Variable_1) == 0x000201, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_GetSpawnManager_ReturnValue) == 0x000208, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_GetSpawnManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_Select_Default) == 0x000210, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_IsValid_ReturnValue_3) == 0x000211, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CustomEvent_EnemySpawnAreaSegment_1) == 0x000218, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CustomEvent_EnemySpawnAreaSegment_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CustomEvent_EnemySpawnAreaSegment) == 0x000220, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CustomEvent_EnemySpawnAreaSegment' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, K2Node_CreateDelegate_OutputDelegate_10) == 0x000228, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_Array_AddUnique_ReturnValue) == 0x000238, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_GetLevelManager_ReturnValue) == 0x000240, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_GetLevelManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_Array_RemoveItem_ReturnValue) == 0x000248, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_IsValid_ReturnValue_4) == 0x000249, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_ExecuteUbergraph_Widget_HUD, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00024A, "Member 'Widget_HUD_C_ExecuteUbergraph_Widget_HUD::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.Get_GradientBackground_3_Visibility_0
// 0x0001 (0x0001 - 0x0000)
struct Widget_HUD_C_Get_GradientBackground_3_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_Get_GradientBackground_3_Visibility_0) == 0x000001, "Wrong alignment on Widget_HUD_C_Get_GradientBackground_3_Visibility_0");
static_assert(sizeof(Widget_HUD_C_Get_GradientBackground_3_Visibility_0) == 0x000001, "Wrong size on Widget_HUD_C_Get_GradientBackground_3_Visibility_0");
static_assert(offsetof(Widget_HUD_C_Get_GradientBackground_3_Visibility_0, ReturnValue) == 0x000000, "Member 'Widget_HUD_C_Get_GradientBackground_3_Visibility_0::ReturnValue' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.GetWaitingForPlayersWidget
// 0x0008 (0x0008 - 0x0000)
struct Widget_HUD_C_GetWaitingForPlayersWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_GetWaitingForPlayersWidget) == 0x000008, "Wrong alignment on Widget_HUD_C_GetWaitingForPlayersWidget");
static_assert(sizeof(Widget_HUD_C_GetWaitingForPlayersWidget) == 0x000008, "Wrong size on Widget_HUD_C_GetWaitingForPlayersWidget");
static_assert(offsetof(Widget_HUD_C_GetWaitingForPlayersWidget, ReturnValue) == 0x000000, "Member 'Widget_HUD_C_GetWaitingForPlayersWidget::ReturnValue' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.GetWidgetsToHideOnReturnToLobby
// 0x0020 (0x0020 - 0x0000)
struct Widget_HUD_C_GetWidgetsToHideOnReturnToLobby final
{
public:
	TArray<class UUserWidget*>                    Widgets;                                           // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UUserWidget*>                    K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Widget_HUD_C_GetWidgetsToHideOnReturnToLobby) == 0x000008, "Wrong alignment on Widget_HUD_C_GetWidgetsToHideOnReturnToLobby");
static_assert(sizeof(Widget_HUD_C_GetWidgetsToHideOnReturnToLobby) == 0x000020, "Wrong size on Widget_HUD_C_GetWidgetsToHideOnReturnToLobby");
static_assert(offsetof(Widget_HUD_C_GetWidgetsToHideOnReturnToLobby, Widgets) == 0x000000, "Member 'Widget_HUD_C_GetWidgetsToHideOnReturnToLobby::Widgets' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_GetWidgetsToHideOnReturnToLobby, K2Node_MakeArray_Array) == 0x000010, "Member 'Widget_HUD_C_GetWidgetsToHideOnReturnToLobby::K2Node_MakeArray_Array' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.Is:10
// 0x0038 (0x0038 - 0x0000)
struct Widget_HUD_C_Is_10 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetScreenResolution_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_Is_10) == 0x000008, "Wrong alignment on Widget_HUD_C_Is_10");
static_assert(sizeof(Widget_HUD_C_Is_10) == 0x000038, "Wrong size on Widget_HUD_C_Is_10");
static_assert(offsetof(Widget_HUD_C_Is_10, ReturnValue) == 0x000000, "Member 'Widget_HUD_C_Is_10::ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_10, CallFunc_GetRGameUserSettings_ReturnValue) == 0x000008, "Member 'Widget_HUD_C_Is_10::CallFunc_GetRGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_10, CallFunc_GetScreenResolution_ReturnValue) == 0x000010, "Member 'Widget_HUD_C_Is_10::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_10, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'Widget_HUD_C_Is_10::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_10, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'Widget_HUD_C_Is_10::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_10, CallFunc_SafeDivide_ReturnValue) == 0x000028, "Member 'Widget_HUD_C_Is_10::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_10, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'Widget_HUD_C_Is_10::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_10, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000031, "Member 'Widget_HUD_C_Is_10::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_10, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x000032, "Member 'Widget_HUD_C_Is_10::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_10, CallFunc_BooleanOR_ReturnValue) == 0x000033, "Member 'Widget_HUD_C_Is_10::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_10, CallFunc_BooleanOR_ReturnValue_1) == 0x000034, "Member 'Widget_HUD_C_Is_10::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.Is:9
// 0x0038 (0x0038 - 0x0000)
struct Widget_HUD_C_Is_9 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetScreenResolution_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_3;     // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_Is_9) == 0x000008, "Wrong alignment on Widget_HUD_C_Is_9");
static_assert(sizeof(Widget_HUD_C_Is_9) == 0x000038, "Wrong size on Widget_HUD_C_Is_9");
static_assert(offsetof(Widget_HUD_C_Is_9, ReturnValue) == 0x000000, "Member 'Widget_HUD_C_Is_9::ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_9, CallFunc_GetRGameUserSettings_ReturnValue) == 0x000008, "Member 'Widget_HUD_C_Is_9::CallFunc_GetRGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_9, CallFunc_GetScreenResolution_ReturnValue) == 0x000010, "Member 'Widget_HUD_C_Is_9::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_9, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'Widget_HUD_C_Is_9::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_9, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'Widget_HUD_C_Is_9::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_9, CallFunc_SafeDivide_ReturnValue) == 0x000028, "Member 'Widget_HUD_C_Is_9::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_9, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'Widget_HUD_C_Is_9::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_9, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000031, "Member 'Widget_HUD_C_Is_9::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_9, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x000032, "Member 'Widget_HUD_C_Is_9::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_9, CallFunc_NearlyEqual_FloatFloat_ReturnValue_3) == 0x000033, "Member 'Widget_HUD_C_Is_9::CallFunc_NearlyEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_9, CallFunc_BooleanOR_ReturnValue) == 0x000034, "Member 'Widget_HUD_C_Is_9::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_9, CallFunc_BooleanOR_ReturnValue_1) == 0x000035, "Member 'Widget_HUD_C_Is_9::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_Is_9, CallFunc_BooleanOR_ReturnValue_2) == 0x000036, "Member 'Widget_HUD_C_Is_9::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.IsWaitingForPlayersWidgetVisible
// 0x0002 (0x0002 - 0x0000)
struct Widget_HUD_C_IsWaitingForPlayersWidgetVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_IsWaitingForPlayersWidgetVisible) == 0x000001, "Wrong alignment on Widget_HUD_C_IsWaitingForPlayersWidgetVisible");
static_assert(sizeof(Widget_HUD_C_IsWaitingForPlayersWidgetVisible) == 0x000002, "Wrong size on Widget_HUD_C_IsWaitingForPlayersWidgetVisible");
static_assert(offsetof(Widget_HUD_C_IsWaitingForPlayersWidgetVisible, ReturnValue) == 0x000000, "Member 'Widget_HUD_C_IsWaitingForPlayersWidgetVisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_IsWaitingForPlayersWidgetVisible, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'Widget_HUD_C_IsWaitingForPlayersWidgetVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.OnHealthDepleted_Event
// 0x00C8 (0x00C8 - 0x0000)
struct Widget_HUD_C_OnHealthDepleted_Event final
{
public:
	class URHealthComponent*                      Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     DamageEventData;                                   // 0x0008(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Widget_HUD_C_OnHealthDepleted_Event) == 0x000008, "Wrong alignment on Widget_HUD_C_OnHealthDepleted_Event");
static_assert(sizeof(Widget_HUD_C_OnHealthDepleted_Event) == 0x0000C8, "Wrong size on Widget_HUD_C_OnHealthDepleted_Event");
static_assert(offsetof(Widget_HUD_C_OnHealthDepleted_Event, Component) == 0x000000, "Member 'Widget_HUD_C_OnHealthDepleted_Event::Component' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnHealthDepleted_Event, DamageEventData) == 0x000008, "Member 'Widget_HUD_C_OnHealthDepleted_Event::DamageEventData' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.OnMidRunLoadingScreenPopped_Event
// 0x0004 (0x0004 - 0x0000)
struct Widget_HUD_C_OnMidRunLoadingScreenPopped_Event final
{
public:
	int32                                         CurrentNodeId;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_OnMidRunLoadingScreenPopped_Event) == 0x000004, "Wrong alignment on Widget_HUD_C_OnMidRunLoadingScreenPopped_Event");
static_assert(sizeof(Widget_HUD_C_OnMidRunLoadingScreenPopped_Event) == 0x000004, "Wrong size on Widget_HUD_C_OnMidRunLoadingScreenPopped_Event");
static_assert(offsetof(Widget_HUD_C_OnMidRunLoadingScreenPopped_Event, CurrentNodeId) == 0x000000, "Member 'Widget_HUD_C_OnMidRunLoadingScreenPopped_Event::CurrentNodeId' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.OnPlayerDowned
// 0x0068 (0x0068 - 0x0000)
struct Widget_HUD_C_OnPlayerDowned final
{
public:
	class AActor*                                 DownedActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadObjectFromSoftObjectPtr_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0030(0x0020)(NoDestructor)
	class UWidget_OffScreenIndication_PlayerDowned_C* CallFunc_Create_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_OnPlayerDowned) == 0x000008, "Wrong alignment on Widget_HUD_C_OnPlayerDowned");
static_assert(sizeof(Widget_HUD_C_OnPlayerDowned) == 0x000068, "Wrong size on Widget_HUD_C_OnPlayerDowned");
static_assert(offsetof(Widget_HUD_C_OnPlayerDowned, DownedActor) == 0x000000, "Member 'Widget_HUD_C_OnPlayerDowned::DownedActor' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDowned, CallFunc_LoadObjectFromSoftObjectPtr_ReturnValue) == 0x000008, "Member 'Widget_HUD_C_OnPlayerDowned::CallFunc_LoadObjectFromSoftObjectPtr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDowned, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000010, "Member 'Widget_HUD_C_OnPlayerDowned::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDowned, K2Node_DynamicCast_AsSound_Base) == 0x000018, "Member 'Widget_HUD_C_OnPlayerDowned::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDowned, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Widget_HUD_C_OnPlayerDowned::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDowned, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'Widget_HUD_C_OnPlayerDowned::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDowned, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'Widget_HUD_C_OnPlayerDowned::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDowned, K2Node_MakeStruct_Anchors) == 0x000030, "Member 'Widget_HUD_C_OnPlayerDowned::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDowned, CallFunc_Create_ReturnValue) == 0x000050, "Member 'Widget_HUD_C_OnPlayerDowned::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDowned, CallFunc_Array_AddUnique_ReturnValue) == 0x000058, "Member 'Widget_HUD_C_OnPlayerDowned::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDowned, CallFunc_AddChildToCanvas_ReturnValue) == 0x000060, "Member 'Widget_HUD_C_OnPlayerDowned::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.OnPlayerDownedEnd
// 0x0040 (0x0040 - 0x0000)
struct Widget_HUD_C_OnPlayerDownedEnd final
{
public:
	class AActor*                                 DownedActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget_OffScreenIndication_PlayerDowned_C* K2Node_DynamicCast_AsWidget_Off_Screen_Indication_Player_Downed; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_OnPlayerDownedEnd) == 0x000008, "Wrong alignment on Widget_HUD_C_OnPlayerDownedEnd");
static_assert(sizeof(Widget_HUD_C_OnPlayerDownedEnd) == 0x000040, "Wrong size on Widget_HUD_C_OnPlayerDownedEnd");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, DownedActor) == 0x000000, "Member 'Widget_HUD_C_OnPlayerDownedEnd::DownedActor' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Widget_HUD_C_OnPlayerDownedEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Widget_HUD_C_OnPlayerDownedEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Widget_HUD_C_OnPlayerDownedEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, CallFunc_Array_IsEmpty_ReturnValue) == 0x000014, "Member 'Widget_HUD_C_OnPlayerDownedEnd::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Widget_HUD_C_OnPlayerDownedEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, CallFunc_Array_Get_Item) == 0x000020, "Member 'Widget_HUD_C_OnPlayerDownedEnd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'Widget_HUD_C_OnPlayerDownedEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, K2Node_DynamicCast_AsWidget_Off_Screen_Indication_Player_Downed) == 0x000030, "Member 'Widget_HUD_C_OnPlayerDownedEnd::K2Node_DynamicCast_AsWidget_Off_Screen_Indication_Player_Downed' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Widget_HUD_C_OnPlayerDownedEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'Widget_HUD_C_OnPlayerDownedEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00003A, "Member 'Widget_HUD_C_OnPlayerDownedEnd::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerDownedEnd, CallFunc_Array_RemoveItem_ReturnValue) == 0x00003B, "Member 'Widget_HUD_C_OnPlayerDownedEnd::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.OnPlayerPawnRespawned
// 0x0040 (0x0040 - 0x0000)
struct Widget_HUD_C_OnPlayerPawnRespawned final
{
public:
	class ARPlayerPawn*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetWidgetsToHideOnReturnToLobby_Widgets;  // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_OnPlayerPawnRespawned) == 0x000008, "Wrong alignment on Widget_HUD_C_OnPlayerPawnRespawned");
static_assert(sizeof(Widget_HUD_C_OnPlayerPawnRespawned) == 0x000040, "Wrong size on Widget_HUD_C_OnPlayerPawnRespawned");
static_assert(offsetof(Widget_HUD_C_OnPlayerPawnRespawned, Player) == 0x000000, "Member 'Widget_HUD_C_OnPlayerPawnRespawned::Player' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerPawnRespawned, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Widget_HUD_C_OnPlayerPawnRespawned::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerPawnRespawned, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Widget_HUD_C_OnPlayerPawnRespawned::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerPawnRespawned, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Widget_HUD_C_OnPlayerPawnRespawned::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerPawnRespawned, CallFunc_GetWidgetsToHideOnReturnToLobby_Widgets) == 0x000018, "Member 'Widget_HUD_C_OnPlayerPawnRespawned::CallFunc_GetWidgetsToHideOnReturnToLobby_Widgets' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerPawnRespawned, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Widget_HUD_C_OnPlayerPawnRespawned::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerPawnRespawned, CallFunc_Array_Get_Item) == 0x000030, "Member 'Widget_HUD_C_OnPlayerPawnRespawned::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OnPlayerPawnRespawned, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Widget_HUD_C_OnPlayerPawnRespawned::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.OnSegmentCompleted_Event
// 0x0008 (0x0008 - 0x0000)
struct Widget_HUD_C_OnSegmentCompleted_Event final
{
public:
	class AREnemySpawnAreaSegment*                EnemySpawnAreaSegment;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_OnSegmentCompleted_Event) == 0x000008, "Wrong alignment on Widget_HUD_C_OnSegmentCompleted_Event");
static_assert(sizeof(Widget_HUD_C_OnSegmentCompleted_Event) == 0x000008, "Wrong size on Widget_HUD_C_OnSegmentCompleted_Event");
static_assert(offsetof(Widget_HUD_C_OnSegmentCompleted_Event, EnemySpawnAreaSegment) == 0x000000, "Member 'Widget_HUD_C_OnSegmentCompleted_Event::EnemySpawnAreaSegment' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.OnSegmentStarted_Event
// 0x0008 (0x0008 - 0x0000)
struct Widget_HUD_C_OnSegmentStarted_Event final
{
public:
	class AREnemySpawnAreaSegment*                EnemySpawnAreaSegment;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_OnSegmentStarted_Event) == 0x000008, "Wrong alignment on Widget_HUD_C_OnSegmentStarted_Event");
static_assert(sizeof(Widget_HUD_C_OnSegmentStarted_Event) == 0x000008, "Wrong size on Widget_HUD_C_OnSegmentStarted_Event");
static_assert(offsetof(Widget_HUD_C_OnSegmentStarted_Event, EnemySpawnAreaSegment) == 0x000000, "Member 'Widget_HUD_C_OnSegmentStarted_Event::EnemySpawnAreaSegment' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.OnShowHUDUpdated_Event
// 0x0001 (0x0001 - 0x0000)
struct Widget_HUD_C_OnShowHUDUpdated_Event final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_OnShowHUDUpdated_Event) == 0x000001, "Wrong alignment on Widget_HUD_C_OnShowHUDUpdated_Event");
static_assert(sizeof(Widget_HUD_C_OnShowHUDUpdated_Event) == 0x000001, "Wrong size on Widget_HUD_C_OnShowHUDUpdated_Event");
static_assert(offsetof(Widget_HUD_C_OnShowHUDUpdated_Event, NewValue) == 0x000000, "Member 'Widget_HUD_C_OnShowHUDUpdated_Event::NewValue' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.OSITick
// 0x0340 (0x0340 - 0x0000)
struct Widget_HUD_C_OSITick final
{
public:
	bool                                          FoundValidDoor;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CurrentLevelSettingsTag;                           // 0x0004(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLevelGenerationSettings>       CurrentLevelSettings;                              // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLevelGenerationSettings               CallFunc_Array_Get_Item;                           // 0x0060(0x01B0)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_216[0x2];                                      // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARLevelGenerator*                       CallFunc_GetLevelManager_ReturnValue;              // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Door_C*                             K2Node_DynamicCast_AsBP_Door;                      // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOSIOverrideActor_OverrideActor;        // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectInSameRoomAsPlayer_ReturnValue;   // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARLevelGenerator*                       CallFunc_GetLevelManager_ReturnValue_1;            // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBox_ReturnValue;                 // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA[0x6];                                      // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLevelGenerationSettings>       CallFunc_GetCurrentLevelSettings_ReturnValue;      // 0x0300(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item_2;                         // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget_OffScreenIndication_PlayerDowned_C* K2Node_DynamicCast_AsWidget_Off_Screen_Indication_Player_Downed; // 0x0320(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_OSITick) == 0x000010, "Wrong alignment on Widget_HUD_C_OSITick");
static_assert(sizeof(Widget_HUD_C_OSITick) == 0x000340, "Wrong size on Widget_HUD_C_OSITick");
static_assert(offsetof(Widget_HUD_C_OSITick, FoundValidDoor) == 0x000000, "Member 'Widget_HUD_C_OSITick::FoundValidDoor' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CurrentLevelSettingsTag) == 0x000004, "Member 'Widget_HUD_C_OSITick::CurrentLevelSettingsTag' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CurrentLevelSettings) == 0x000010, "Member 'Widget_HUD_C_OSITick::CurrentLevelSettings' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, Temp_int_Array_Index_Variable) == 0x000020, "Member 'Widget_HUD_C_OSITick::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'Widget_HUD_C_OSITick::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Widget_HUD_C_OSITick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'Widget_HUD_C_OSITick::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000030, "Member 'Widget_HUD_C_OSITick::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, Temp_bool_True_if_break_was_hit_Variable) == 0x000048, "Member 'Widget_HUD_C_OSITick::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'Widget_HUD_C_OSITick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'Widget_HUD_C_OSITick::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'Widget_HUD_C_OSITick::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, Temp_int_Array_Index_Variable_2) == 0x000054, "Member 'Widget_HUD_C_OSITick::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, Temp_int_Loop_Counter_Variable_2) == 0x000058, "Member 'Widget_HUD_C_OSITick::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'Widget_HUD_C_OSITick::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Array_Get_Item) == 0x000060, "Member 'Widget_HUD_C_OSITick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Array_Length_ReturnValue) == 0x000210, "Member 'Widget_HUD_C_OSITick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Less_IntInt_ReturnValue) == 0x000214, "Member 'Widget_HUD_C_OSITick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_BooleanAND_ReturnValue) == 0x000215, "Member 'Widget_HUD_C_OSITick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Add_VectorVector_ReturnValue) == 0x000218, "Member 'Widget_HUD_C_OSITick::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000230, "Member 'Widget_HUD_C_OSITick::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000248, "Member 'Widget_HUD_C_OSITick::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_GetOwningPlayer_ReturnValue) == 0x000260, "Member 'Widget_HUD_C_OSITick::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_GetLevelManager_ReturnValue) == 0x000268, "Member 'Widget_HUD_C_OSITick::CallFunc_GetLevelManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000270, "Member 'Widget_HUD_C_OSITick::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000278, "Member 'Widget_HUD_C_OSITick::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Array_Get_Item_1) == 0x000290, "Member 'Widget_HUD_C_OSITick::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Array_Length_ReturnValue_1) == 0x000298, "Member 'Widget_HUD_C_OSITick::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, K2Node_DynamicCast_AsBP_Door) == 0x0002A0, "Member 'Widget_HUD_C_OSITick::K2Node_DynamicCast_AsBP_Door' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, K2Node_DynamicCast_bSuccess) == 0x0002A8, "Member 'Widget_HUD_C_OSITick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002A9, "Member 'Widget_HUD_C_OSITick::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_GetOSIOverrideActor_OverrideActor) == 0x0002B0, "Member 'Widget_HUD_C_OSITick::CallFunc_GetOSIOverrideActor_OverrideActor' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_IsValid_ReturnValue) == 0x0002B8, "Member 'Widget_HUD_C_OSITick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_IsObjectInSameRoomAsPlayer_ReturnValue) == 0x0002B9, "Member 'Widget_HUD_C_OSITick::CallFunc_IsObjectInSameRoomAsPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0002C0, "Member 'Widget_HUD_C_OSITick::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0002D8, "Member 'Widget_HUD_C_OSITick::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_GetLevelManager_ReturnValue_1) == 0x0002F0, "Member 'Widget_HUD_C_OSITick::CallFunc_GetLevelManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_IsPointInBox_ReturnValue) == 0x0002F8, "Member 'Widget_HUD_C_OSITick::CallFunc_IsPointInBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_IsValid_ReturnValue_1) == 0x0002F9, "Member 'Widget_HUD_C_OSITick::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_GetCurrentLevelSettings_ReturnValue) == 0x000300, "Member 'Widget_HUD_C_OSITick::CallFunc_GetCurrentLevelSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_IsVisible_ReturnValue) == 0x000310, "Member 'Widget_HUD_C_OSITick::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Array_Get_Item_2) == 0x000318, "Member 'Widget_HUD_C_OSITick::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, K2Node_DynamicCast_AsWidget_Off_Screen_Indication_Player_Downed) == 0x000320, "Member 'Widget_HUD_C_OSITick::K2Node_DynamicCast_AsWidget_Off_Screen_Indication_Player_Downed' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, K2Node_DynamicCast_bSuccess_1) == 0x000328, "Member 'Widget_HUD_C_OSITick::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Array_Length_ReturnValue_2) == 0x00032C, "Member 'Widget_HUD_C_OSITick::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Less_IntInt_ReturnValue_2) == 0x000330, "Member 'Widget_HUD_C_OSITick::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_OSITick, CallFunc_Array_IsEmpty_ReturnValue) == 0x000331, "Member 'Widget_HUD_C_OSITick::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.ReinitBossHealthWidget
// 0x0008 (0x0008 - 0x0000)
struct Widget_HUD_C_ReinitBossHealthWidget final
{
public:
	class ARBossPawnBase*                         BossPawn;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_ReinitBossHealthWidget) == 0x000008, "Wrong alignment on Widget_HUD_C_ReinitBossHealthWidget");
static_assert(sizeof(Widget_HUD_C_ReinitBossHealthWidget) == 0x000008, "Wrong size on Widget_HUD_C_ReinitBossHealthWidget");
static_assert(offsetof(Widget_HUD_C_ReinitBossHealthWidget, BossPawn) == 0x000000, "Member 'Widget_HUD_C_ReinitBossHealthWidget::BossPawn' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.SetBarrierGaugeVisibility
// 0x0001 (0x0001 - 0x0000)
struct Widget_HUD_C_SetBarrierGaugeVisibility final
{
public:
	ESlateVisibility                              BarrierGaugeVisibility;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_SetBarrierGaugeVisibility) == 0x000001, "Wrong alignment on Widget_HUD_C_SetBarrierGaugeVisibility");
static_assert(sizeof(Widget_HUD_C_SetBarrierGaugeVisibility) == 0x000001, "Wrong size on Widget_HUD_C_SetBarrierGaugeVisibility");
static_assert(offsetof(Widget_HUD_C_SetBarrierGaugeVisibility, BarrierGaugeVisibility) == 0x000000, "Member 'Widget_HUD_C_SetBarrierGaugeVisibility::BarrierGaugeVisibility' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.SetChargeUpBarVisibility
// 0x0001 (0x0001 - 0x0000)
struct Widget_HUD_C_SetChargeUpBarVisibility final
{
public:
	ESlateVisibility                              ChargeUpBarVilibility;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_SetChargeUpBarVisibility) == 0x000001, "Wrong alignment on Widget_HUD_C_SetChargeUpBarVisibility");
static_assert(sizeof(Widget_HUD_C_SetChargeUpBarVisibility) == 0x000001, "Wrong size on Widget_HUD_C_SetChargeUpBarVisibility");
static_assert(offsetof(Widget_HUD_C_SetChargeUpBarVisibility, ChargeUpBarVilibility) == 0x000000, "Member 'Widget_HUD_C_SetChargeUpBarVisibility::ChargeUpBarVilibility' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.SetInteractTooltipVisibility
// 0x0038 (0x0038 - 0x0000)
struct Widget_HUD_C_SetInteractTooltipVisibility final
{
public:
	ESlateVisibility                              Visibility_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_SetInteractTooltipVisibility) == 0x000008, "Wrong alignment on Widget_HUD_C_SetInteractTooltipVisibility");
static_assert(sizeof(Widget_HUD_C_SetInteractTooltipVisibility) == 0x000038, "Wrong size on Widget_HUD_C_SetInteractTooltipVisibility");
static_assert(offsetof(Widget_HUD_C_SetInteractTooltipVisibility, Visibility_0) == 0x000000, "Member 'Widget_HUD_C_SetInteractTooltipVisibility::Visibility_0' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetInteractTooltipVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Widget_HUD_C_SetInteractTooltipVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetInteractTooltipVisibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Widget_HUD_C_SetInteractTooltipVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetInteractTooltipVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Widget_HUD_C_SetInteractTooltipVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetInteractTooltipVisibility, K2Node_MakeArray_Array) == 0x000010, "Member 'Widget_HUD_C_SetInteractTooltipVisibility::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetInteractTooltipVisibility, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Widget_HUD_C_SetInteractTooltipVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetInteractTooltipVisibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'Widget_HUD_C_SetInteractTooltipVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetInteractTooltipVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'Widget_HUD_C_SetInteractTooltipVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.SetOverheatBarVisibility
// 0x0001 (0x0001 - 0x0000)
struct Widget_HUD_C_SetOverheatBarVisibility final
{
public:
	ESlateVisibility                              OverheatBarVilibility;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_SetOverheatBarVisibility) == 0x000001, "Wrong alignment on Widget_HUD_C_SetOverheatBarVisibility");
static_assert(sizeof(Widget_HUD_C_SetOverheatBarVisibility) == 0x000001, "Wrong size on Widget_HUD_C_SetOverheatBarVisibility");
static_assert(offsetof(Widget_HUD_C_SetOverheatBarVisibility, OverheatBarVilibility) == 0x000000, "Member 'Widget_HUD_C_SetOverheatBarVisibility::OverheatBarVilibility' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.SetPreventBossHealthbarRemovalOnDeath
// 0x0001 (0x0001 - 0x0000)
struct Widget_HUD_C_SetPreventBossHealthbarRemovalOnDeath final
{
public:
	bool                                          bShouldPrevent;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_SetPreventBossHealthbarRemovalOnDeath) == 0x000001, "Wrong alignment on Widget_HUD_C_SetPreventBossHealthbarRemovalOnDeath");
static_assert(sizeof(Widget_HUD_C_SetPreventBossHealthbarRemovalOnDeath) == 0x000001, "Wrong size on Widget_HUD_C_SetPreventBossHealthbarRemovalOnDeath");
static_assert(offsetof(Widget_HUD_C_SetPreventBossHealthbarRemovalOnDeath, bShouldPrevent) == 0x000000, "Member 'Widget_HUD_C_SetPreventBossHealthbarRemovalOnDeath::bShouldPrevent' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.SetReviveAvailabilityVisibility
// 0x0001 (0x0001 - 0x0000)
struct Widget_HUD_C_SetReviveAvailabilityVisibility final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_SetReviveAvailabilityVisibility) == 0x000001, "Wrong alignment on Widget_HUD_C_SetReviveAvailabilityVisibility");
static_assert(sizeof(Widget_HUD_C_SetReviveAvailabilityVisibility) == 0x000001, "Wrong size on Widget_HUD_C_SetReviveAvailabilityVisibility");
static_assert(offsetof(Widget_HUD_C_SetReviveAvailabilityVisibility, InVisibility) == 0x000000, "Member 'Widget_HUD_C_SetReviveAvailabilityVisibility::InVisibility' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.SetSpiritGaugeVisibility
// 0x0001 (0x0001 - 0x0000)
struct Widget_HUD_C_SetSpiritGaugeVisibility final
{
public:
	ESlateVisibility                              SpiritGaugeVisibility;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_SetSpiritGaugeVisibility) == 0x000001, "Wrong alignment on Widget_HUD_C_SetSpiritGaugeVisibility");
static_assert(sizeof(Widget_HUD_C_SetSpiritGaugeVisibility) == 0x000001, "Wrong size on Widget_HUD_C_SetSpiritGaugeVisibility");
static_assert(offsetof(Widget_HUD_C_SetSpiritGaugeVisibility, SpiritGaugeVisibility) == 0x000000, "Member 'Widget_HUD_C_SetSpiritGaugeVisibility::SpiritGaugeVisibility' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.SetTimerBarVisibility
// 0x0001 (0x0001 - 0x0000)
struct Widget_HUD_C_SetTimerBarVisibility final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_SetTimerBarVisibility) == 0x000001, "Wrong alignment on Widget_HUD_C_SetTimerBarVisibility");
static_assert(sizeof(Widget_HUD_C_SetTimerBarVisibility) == 0x000001, "Wrong size on Widget_HUD_C_SetTimerBarVisibility");
static_assert(offsetof(Widget_HUD_C_SetTimerBarVisibility, InVisibility) == 0x000000, "Member 'Widget_HUD_C_SetTimerBarVisibility::InVisibility' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.SetupAspectRatioOffsets
// 0x0088 (0x0088 - 0x0000)
struct Widget_HUD_C_SetupAspectRatioOffsets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URChatLog*                              CallFunc_GetChatLogWidget_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_SetupAspectRatioOffsets) == 0x000008, "Wrong alignment on Widget_HUD_C_SetupAspectRatioOffsets");
static_assert(sizeof(Widget_HUD_C_SetupAspectRatioOffsets) == 0x000088, "Wrong size on Widget_HUD_C_SetupAspectRatioOffsets");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_Array_Get_Item) == 0x000010, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_GetPosition_ReturnValue) == 0x000030, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_BreakVector2D_X) == 0x000040, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_GetChatLogWidget_ReturnValue) == 0x000050, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_GetChatLogWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, K2Node_MakeArray_Array) == 0x000060, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_SetupAspectRatioOffsets, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'Widget_HUD_C_SetupAspectRatioOffsets::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.UpdateBarrierGaugePercent
// 0x0004 (0x0004 - 0x0000)
struct Widget_HUD_C_UpdateBarrierGaugePercent final
{
public:
	float                                         Threshold;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_UpdateBarrierGaugePercent) == 0x000004, "Wrong alignment on Widget_HUD_C_UpdateBarrierGaugePercent");
static_assert(sizeof(Widget_HUD_C_UpdateBarrierGaugePercent) == 0x000004, "Wrong size on Widget_HUD_C_UpdateBarrierGaugePercent");
static_assert(offsetof(Widget_HUD_C_UpdateBarrierGaugePercent, Threshold) == 0x000000, "Member 'Widget_HUD_C_UpdateBarrierGaugePercent::Threshold' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.UpdateBossHealthWidget
// 0x0010 (0x0010 - 0x0000)
struct Widget_HUD_C_UpdateBossHealthWidget final
{
public:
	class ARBossPawnBase*                         BossPawn;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              BossHealthVisibility;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_UpdateBossHealthWidget) == 0x000008, "Wrong alignment on Widget_HUD_C_UpdateBossHealthWidget");
static_assert(sizeof(Widget_HUD_C_UpdateBossHealthWidget) == 0x000010, "Wrong size on Widget_HUD_C_UpdateBossHealthWidget");
static_assert(offsetof(Widget_HUD_C_UpdateBossHealthWidget, BossPawn) == 0x000000, "Member 'Widget_HUD_C_UpdateBossHealthWidget::BossPawn' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateBossHealthWidget, BossHealthVisibility) == 0x000008, "Member 'Widget_HUD_C_UpdateBossHealthWidget::BossHealthVisibility' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.UpdateChargeUpProgressBarPercent
// 0x0004 (0x0004 - 0x0000)
struct Widget_HUD_C_UpdateChargeUpProgressBarPercent final
{
public:
	float                                         Threshold;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_UpdateChargeUpProgressBarPercent) == 0x000004, "Wrong alignment on Widget_HUD_C_UpdateChargeUpProgressBarPercent");
static_assert(sizeof(Widget_HUD_C_UpdateChargeUpProgressBarPercent) == 0x000004, "Wrong size on Widget_HUD_C_UpdateChargeUpProgressBarPercent");
static_assert(offsetof(Widget_HUD_C_UpdateChargeUpProgressBarPercent, Threshold) == 0x000000, "Member 'Widget_HUD_C_UpdateChargeUpProgressBarPercent::Threshold' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.UpdateEdgeWidgets
// 0x0238 (0x0238 - 0x0000)
struct Widget_HUD_C_UpdateEdgeWidgets final
{
public:
	TMap<class UWidget*, double>                  CurrentOffsets;                                    // 0x0000(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UWidget*, double>                  Temp_object_Variable;                              // 0x0058(0x0050)(ContainsInstancedReference)
	bool                                          Temp_bool_Variable_2;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateOffsetFromAspectRatio_Offset;    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsEmpty_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_10_ReturnValue;                        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_9_ReturnValue;                         // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UWidget*, double>                  K2Node_Select_Default;                             // 0x00C8(0x0050)(ContainsInstancedReference)
	TMap<class UWidget*, double>                  K2Node_Select_Default_1;                           // 0x0118(0x0050)(ContainsInstancedReference)
	bool                                          CallFunc_Map_IsEmpty_ReturnValue_1;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UWidget*, double>                  K2Node_Select_Default_2;                           // 0x0170(0x0050)(ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB[0x5];                                      // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_UpdateEdgeWidgets) == 0x000008, "Wrong alignment on Widget_HUD_C_UpdateEdgeWidgets");
static_assert(sizeof(Widget_HUD_C_UpdateEdgeWidgets) == 0x000238, "Wrong size on Widget_HUD_C_UpdateEdgeWidgets");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CurrentOffsets) == 0x000000, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CurrentOffsets' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, Temp_bool_Variable) == 0x000050, "Member 'Widget_HUD_C_UpdateEdgeWidgets::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, Temp_bool_Variable_1) == 0x000051, "Member 'Widget_HUD_C_UpdateEdgeWidgets::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, Temp_object_Variable) == 0x000058, "Member 'Widget_HUD_C_UpdateEdgeWidgets::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, Temp_bool_Variable_2) == 0x0000A8, "Member 'Widget_HUD_C_UpdateEdgeWidgets::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, Temp_int_Array_Index_Variable) == 0x0000AC, "Member 'Widget_HUD_C_UpdateEdgeWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'Widget_HUD_C_UpdateEdgeWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_CalculateOffsetFromAspectRatio_Offset) == 0x0000B8, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_CalculateOffsetFromAspectRatio_Offset' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Map_IsEmpty_ReturnValue) == 0x0000C0, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Map_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Is_10_ReturnValue) == 0x0000C1, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Is_10_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Is_9_ReturnValue) == 0x0000C2, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Is_9_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, K2Node_Select_Default) == 0x0000C8, "Member 'Widget_HUD_C_UpdateEdgeWidgets::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, K2Node_Select_Default_1) == 0x000118, "Member 'Widget_HUD_C_UpdateEdgeWidgets::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Map_IsEmpty_ReturnValue_1) == 0x000168, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Map_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, K2Node_Select_Default_2) == 0x000170, "Member 'Widget_HUD_C_UpdateEdgeWidgets::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Array_Length_ReturnValue) == 0x0001C8, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Map_Find_Value) == 0x0001D0, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Map_Find_ReturnValue) == 0x0001D8, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x0001D9, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001DA, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_SelectFloat_ReturnValue) == 0x0001E0, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0001E8, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_GetPosition_ReturnValue) == 0x0001F8, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000208, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_BreakVector2D_X) == 0x000210, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_BreakVector2D_Y) == 0x000218, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_SelectFloat_ReturnValue_1) == 0x000220, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_HUD_C_UpdateEdgeWidgets, CallFunc_MakeVector2D_ReturnValue) == 0x000228, "Member 'Widget_HUD_C_UpdateEdgeWidgets::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.UpdateReviveAvailability
// 0x0001 (0x0001 - 0x0000)
struct Widget_HUD_C_UpdateReviveAvailability final
{
public:
	bool                                          isConsumed;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_UpdateReviveAvailability) == 0x000001, "Wrong alignment on Widget_HUD_C_UpdateReviveAvailability");
static_assert(sizeof(Widget_HUD_C_UpdateReviveAvailability) == 0x000001, "Wrong size on Widget_HUD_C_UpdateReviveAvailability");
static_assert(offsetof(Widget_HUD_C_UpdateReviveAvailability, isConsumed) == 0x000000, "Member 'Widget_HUD_C_UpdateReviveAvailability::isConsumed' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.UpdateSpiritGaugePercent
// 0x0004 (0x0004 - 0x0000)
struct Widget_HUD_C_UpdateSpiritGaugePercent final
{
public:
	float                                         Threshold;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_UpdateSpiritGaugePercent) == 0x000004, "Wrong alignment on Widget_HUD_C_UpdateSpiritGaugePercent");
static_assert(sizeof(Widget_HUD_C_UpdateSpiritGaugePercent) == 0x000004, "Wrong size on Widget_HUD_C_UpdateSpiritGaugePercent");
static_assert(offsetof(Widget_HUD_C_UpdateSpiritGaugePercent, Threshold) == 0x000000, "Member 'Widget_HUD_C_UpdateSpiritGaugePercent::Threshold' has a wrong offset!");

// Function Widget_HUD.Widget_HUD_C.UpdateTimerBarPercentage
// 0x0004 (0x0004 - 0x0000)
struct Widget_HUD_C_UpdateTimerBarPercentage final
{
public:
	float                                         PercentageLeft;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_HUD_C_UpdateTimerBarPercentage) == 0x000004, "Wrong alignment on Widget_HUD_C_UpdateTimerBarPercentage");
static_assert(sizeof(Widget_HUD_C_UpdateTimerBarPercentage) == 0x000004, "Wrong size on Widget_HUD_C_UpdateTimerBarPercentage");
static_assert(offsetof(Widget_HUD_C_UpdateTimerBarPercentage, PercentageLeft) == 0x000000, "Member 'Widget_HUD_C_UpdateTimerBarPercentage::PercentageLeft' has a wrong offset!");

}

