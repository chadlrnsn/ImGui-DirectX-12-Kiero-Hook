#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DMCore

#include "Basic.hpp"

#include "DMCore_classes.hpp"
#include "DMCore_parameters.hpp"


namespace SDK
{

// Function DMCore.DMComponentRefFunctions.ResolveComponentRef
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDMComponentRef&           ComponentRef                                           (Parm, NativeAccessSpecifierPublic)
// class AActor*                           OwningActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UActorComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UActorComponent* UDMComponentRefFunctions::ResolveComponentRef(const struct FDMComponentRef& ComponentRef, class AActor* OwningActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMComponentRefFunctions", "ResolveComponentRef");

	Params::DMComponentRefFunctions_ResolveComponentRef Parms{};

	Parms.ComponentRef = std::move(ComponentRef);
	Parms.OwningActor = OwningActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

