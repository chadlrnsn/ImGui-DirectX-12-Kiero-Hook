#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ComputeFramework

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "ComputeFramework_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class ComputeFramework.ComputeDataInterface
// 0x0000 (0x0028 - 0x0028)
class UComputeDataInterface : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ComputeDataInterface">();
	}
	static class UComputeDataInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComputeDataInterface>();
	}
};
static_assert(alignof(UComputeDataInterface) == 0x000008, "Wrong alignment on UComputeDataInterface");
static_assert(sizeof(UComputeDataInterface) == 0x000028, "Wrong size on UComputeDataInterface");

// Class ComputeFramework.ComputeDataProvider
// 0x0000 (0x0028 - 0x0028)
class UComputeDataProvider : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ComputeDataProvider">();
	}
	static class UComputeDataProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComputeDataProvider>();
	}
};
static_assert(alignof(UComputeDataProvider) == 0x000008, "Wrong alignment on UComputeDataProvider");
static_assert(sizeof(UComputeDataProvider) == 0x000028, "Wrong size on UComputeDataProvider");

// Class ComputeFramework.ComputeKernelSource
// 0x0070 (0x0098 - 0x0028)
class UComputeKernelSource : public UObject
{
public:
	class FString                                 EntryPoint;                                        // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntVector                             GroupSize;                                         // 0x0038(0x000C)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComputeKernelPermutationSet           PermutationSet;                                    // 0x0048(0x0010)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FComputeKernelDefinitionSet            DefinitionsSet;                                    // 0x0058(0x0010)(Edit, EditConst, NativeAccessSpecifierPublic)
	TArray<class UComputeSource*>                 AdditionalSources;                                 // 0x0068(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FShaderFunctionDefinition>      ExternalInputs;                                    // 0x0078(0x0010)(Edit, EditFixedSize, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FShaderFunctionDefinition>      ExternalOutputs;                                   // 0x0088(0x0010)(Edit, EditFixedSize, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ComputeKernelSource">();
	}
	static class UComputeKernelSource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComputeKernelSource>();
	}
};
static_assert(alignof(UComputeKernelSource) == 0x000008, "Wrong alignment on UComputeKernelSource");
static_assert(sizeof(UComputeKernelSource) == 0x000098, "Wrong size on UComputeKernelSource");
static_assert(offsetof(UComputeKernelSource, EntryPoint) == 0x000028, "Member 'UComputeKernelSource::EntryPoint' has a wrong offset!");
static_assert(offsetof(UComputeKernelSource, GroupSize) == 0x000038, "Member 'UComputeKernelSource::GroupSize' has a wrong offset!");
static_assert(offsetof(UComputeKernelSource, PermutationSet) == 0x000048, "Member 'UComputeKernelSource::PermutationSet' has a wrong offset!");
static_assert(offsetof(UComputeKernelSource, DefinitionsSet) == 0x000058, "Member 'UComputeKernelSource::DefinitionsSet' has a wrong offset!");
static_assert(offsetof(UComputeKernelSource, AdditionalSources) == 0x000068, "Member 'UComputeKernelSource::AdditionalSources' has a wrong offset!");
static_assert(offsetof(UComputeKernelSource, ExternalInputs) == 0x000078, "Member 'UComputeKernelSource::ExternalInputs' has a wrong offset!");
static_assert(offsetof(UComputeKernelSource, ExternalOutputs) == 0x000088, "Member 'UComputeKernelSource::ExternalOutputs' has a wrong offset!");

// Class ComputeFramework.ComputeSource
// 0x0010 (0x0038 - 0x0028)
class UComputeSource : public UObject
{
public:
	TArray<class UComputeSource*>                 AdditionalSources;                                 // 0x0028(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ComputeSource">();
	}
	static class UComputeSource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComputeSource>();
	}
};
static_assert(alignof(UComputeSource) == 0x000008, "Wrong alignment on UComputeSource");
static_assert(sizeof(UComputeSource) == 0x000038, "Wrong size on UComputeSource");
static_assert(offsetof(UComputeSource, AdditionalSources) == 0x000028, "Member 'UComputeSource::AdditionalSources' has a wrong offset!");

// Class ComputeFramework.ComputeGraph
// 0x00B8 (0x00E0 - 0x0028)
class UComputeGraph : public UObject
{
public:
	TArray<class UComputeKernel*>                 KernelInvocations;                                 // 0x0028(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UComputeDataInterface*>          DataInterfaces;                                    // 0x0038(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FComputeGraphEdge>              GraphEdges;                                        // 0x0048(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UObject>>            Bindings;                                          // 0x0058(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<int32>                                 DataInterfaceToBinding;                            // 0x0068(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_78[0x68];                                      // 0x0078(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ComputeGraph">();
	}
	static class UComputeGraph* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComputeGraph>();
	}
};
static_assert(alignof(UComputeGraph) == 0x000008, "Wrong alignment on UComputeGraph");
static_assert(sizeof(UComputeGraph) == 0x0000E0, "Wrong size on UComputeGraph");
static_assert(offsetof(UComputeGraph, KernelInvocations) == 0x000028, "Member 'UComputeGraph::KernelInvocations' has a wrong offset!");
static_assert(offsetof(UComputeGraph, DataInterfaces) == 0x000038, "Member 'UComputeGraph::DataInterfaces' has a wrong offset!");
static_assert(offsetof(UComputeGraph, GraphEdges) == 0x000048, "Member 'UComputeGraph::GraphEdges' has a wrong offset!");
static_assert(offsetof(UComputeGraph, Bindings) == 0x000058, "Member 'UComputeGraph::Bindings' has a wrong offset!");
static_assert(offsetof(UComputeGraph, DataInterfaceToBinding) == 0x000068, "Member 'UComputeGraph::DataInterfaceToBinding' has a wrong offset!");

// Class ComputeFramework.ComputeGraphComponent
// 0x0020 (0x00C0 - 0x00A0)
class UComputeGraphComponent final : public UActorComponent
{
public:
	class UComputeGraph*                          ComputeGraph;                                      // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FComputeGraphInstance                  ComputeGraphInstance;                              // 0x00A8(0x0018)(NativeAccessSpecifierPrivate)

public:
	void CreateDataProviders(int32 InBindingIndex, class UObject* InBindingObject);
	void DestroyDataProviders();
	void QueueExecute();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ComputeGraphComponent">();
	}
	static class UComputeGraphComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComputeGraphComponent>();
	}
};
static_assert(alignof(UComputeGraphComponent) == 0x000008, "Wrong alignment on UComputeGraphComponent");
static_assert(sizeof(UComputeGraphComponent) == 0x0000C0, "Wrong size on UComputeGraphComponent");
static_assert(offsetof(UComputeGraphComponent, ComputeGraph) == 0x0000A0, "Member 'UComputeGraphComponent::ComputeGraph' has a wrong offset!");
static_assert(offsetof(UComputeGraphComponent, ComputeGraphInstance) == 0x0000A8, "Member 'UComputeGraphComponent::ComputeGraphInstance' has a wrong offset!");

// Class ComputeFramework.ComputeKernel
// 0x0010 (0x0038 - 0x0028)
class UComputeKernel final : public UObject
{
public:
	class UComputeKernelSource*                   KernelSource;                                      // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         KernelFlags;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ComputeKernel">();
	}
	static class UComputeKernel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComputeKernel>();
	}
};
static_assert(alignof(UComputeKernel) == 0x000008, "Wrong alignment on UComputeKernel");
static_assert(sizeof(UComputeKernel) == 0x000038, "Wrong size on UComputeKernel");
static_assert(offsetof(UComputeKernel, KernelSource) == 0x000028, "Member 'UComputeKernel::KernelSource' has a wrong offset!");
static_assert(offsetof(UComputeKernel, KernelFlags) == 0x000030, "Member 'UComputeKernel::KernelFlags' has a wrong offset!");

// Class ComputeFramework.ComputeKernelFromText
// 0x0010 (0x00A8 - 0x0098)
class UComputeKernelFromText final : public UComputeKernelSource
{
public:
	struct FFilePath                              SourceFile;                                        // 0x0098(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ComputeKernelFromText">();
	}
	static class UComputeKernelFromText* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComputeKernelFromText>();
	}
};
static_assert(alignof(UComputeKernelFromText) == 0x000008, "Wrong alignment on UComputeKernelFromText");
static_assert(sizeof(UComputeKernelFromText) == 0x0000A8, "Wrong size on UComputeKernelFromText");
static_assert(offsetof(UComputeKernelFromText, SourceFile) == 0x000098, "Member 'UComputeKernelFromText::SourceFile' has a wrong offset!");

// Class ComputeFramework.ComputeSourceFromText
// 0x0010 (0x0048 - 0x0038)
class UComputeSourceFromText final : public UComputeSource
{
public:
	struct FFilePath                              SourceFile;                                        // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ComputeSourceFromText">();
	}
	static class UComputeSourceFromText* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComputeSourceFromText>();
	}
};
static_assert(alignof(UComputeSourceFromText) == 0x000008, "Wrong alignment on UComputeSourceFromText");
static_assert(sizeof(UComputeSourceFromText) == 0x000048, "Wrong size on UComputeSourceFromText");
static_assert(offsetof(UComputeSourceFromText, SourceFile) == 0x000038, "Member 'UComputeSourceFromText::SourceFile' has a wrong offset!");

}

