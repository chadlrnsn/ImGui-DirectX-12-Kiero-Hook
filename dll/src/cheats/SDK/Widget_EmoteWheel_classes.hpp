#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_EmoteWheel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_EmoteWheel.Widget_EmoteWheel_C
// 0x00F8 (0x0530 - 0x0438)
class UWidget_EmoteWheel_C final : public URCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Construct_Animation;                               // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundBlur;                                    // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    CommonActionWidget_228;                            // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_SimpleText_C*                 W_Button_SimpleText;                               // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_EmoteWheelBTN_C*                Widget_EmoteWheelBTN1;                             // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_EmoteWheelBTN_C*                Widget_EmoteWheelBTN2;                             // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_EmoteWheelBTN_C*                Widget_EmoteWheelBTN3;                             // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_EmoteWheelBTN_C*                Widget_EmoteWheelBTN4;                             // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FVector2D>                      BPCachedButtonCoords;                              // 0x0488(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UWidget_EmoteWheelBTN_C*>        BPCachedEmoteWheelBTNs;                            // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         BPCurrentHighlightedBTNIndex;                      // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          BPMouseEvent;                                      // 0x04B0(0x0078)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UInputAction*                           IA_EmoteWheel;                                     // 0x0528(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void SetupExplicitNav();
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void ExecuteUbergraph_Widget_EmoteWheel(int32 EntryPoint);
	void Construct();
	void BPUpdateHighlight();
	void BPRemoveHighlight();
	void BPProcessEmoteTag(const struct FGameplayTag& Tag);
	void BndEvt__Widget_EmoteWheel_Widget_EmoteWheelBTN4_K2Node_ComponentBoundEvent_3_OnPressed__DelegateSignature(const struct FGameplayTag& EmoteTag);
	void BndEvt__Widget_EmoteWheel_Widget_EmoteWheelBTN3_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature(const struct FGameplayTag& EmoteTag);
	void BndEvt__Widget_EmoteWheel_Widget_EmoteWheelBTN2_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature(const struct FGameplayTag& EmoteTag);
	void BndEvt__Widget_EmoteWheel_Widget_EmoteWheelBTN1_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature(const struct FGameplayTag& EmoteTag);
	void BndEvt__Widget_EmoteWheel_W_Button_SimpleText_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_EmoteWheel_C">();
	}
	static class UWidget_EmoteWheel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_EmoteWheel_C>();
	}
};
static_assert(alignof(UWidget_EmoteWheel_C) == 0x000008, "Wrong alignment on UWidget_EmoteWheel_C");
static_assert(sizeof(UWidget_EmoteWheel_C) == 0x000530, "Wrong size on UWidget_EmoteWheel_C");
static_assert(offsetof(UWidget_EmoteWheel_C, UberGraphFrame) == 0x000438, "Member 'UWidget_EmoteWheel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, Construct_Animation) == 0x000440, "Member 'UWidget_EmoteWheel_C::Construct_Animation' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, BackgroundBlur) == 0x000448, "Member 'UWidget_EmoteWheel_C::BackgroundBlur' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, CanvasPanel_0) == 0x000450, "Member 'UWidget_EmoteWheel_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, CommonActionWidget_228) == 0x000458, "Member 'UWidget_EmoteWheel_C::CommonActionWidget_228' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, W_Button_SimpleText) == 0x000460, "Member 'UWidget_EmoteWheel_C::W_Button_SimpleText' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, Widget_EmoteWheelBTN1) == 0x000468, "Member 'UWidget_EmoteWheel_C::Widget_EmoteWheelBTN1' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, Widget_EmoteWheelBTN2) == 0x000470, "Member 'UWidget_EmoteWheel_C::Widget_EmoteWheelBTN2' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, Widget_EmoteWheelBTN3) == 0x000478, "Member 'UWidget_EmoteWheel_C::Widget_EmoteWheelBTN3' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, Widget_EmoteWheelBTN4) == 0x000480, "Member 'UWidget_EmoteWheel_C::Widget_EmoteWheelBTN4' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, BPCachedButtonCoords) == 0x000488, "Member 'UWidget_EmoteWheel_C::BPCachedButtonCoords' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, BPCachedEmoteWheelBTNs) == 0x000498, "Member 'UWidget_EmoteWheel_C::BPCachedEmoteWheelBTNs' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, BPCurrentHighlightedBTNIndex) == 0x0004A8, "Member 'UWidget_EmoteWheel_C::BPCurrentHighlightedBTNIndex' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, BPMouseEvent) == 0x0004B0, "Member 'UWidget_EmoteWheel_C::BPMouseEvent' has a wrong offset!");
static_assert(offsetof(UWidget_EmoteWheel_C, IA_EmoteWheel) == 0x000528, "Member 'UWidget_EmoteWheel_C::IA_EmoteWheel' has a wrong offset!");

}

