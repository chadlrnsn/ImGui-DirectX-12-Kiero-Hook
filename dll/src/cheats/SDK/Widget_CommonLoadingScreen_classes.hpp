#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_CommonLoadingScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_CommonLoadingScreen.Widget_CommonLoadingScreen_C
// 0x00C8 (0x0500 - 0x0438)
class UWidget_CommonLoadingScreen_C final : public URCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ConstructAnimation;                                // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundImage;                                   // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_85;                                          // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Logo;                                              // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar;                                       // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressDrip;                                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Vignette;                                          // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_LoadingIndicator_Common_C*      Widget_LoadingIndicator_Common;                    // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UTexture*>                       BY_Images;                                         // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UTexture*>                       GRD_Images;                                        // 0x0490(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UTexture*>                       SAN_Images;                                        // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UTexture*>                       VOID_Images;                                       // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UTexture>>        SoftBY_Images;                                     // 0x04C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UTexture>>        SoftGRD_Images;                                    // 0x04D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UTexture>>        SoftSAN_Images;                                    // 0x04E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UTexture>>        SoftVOID_Images;                                   // 0x04F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

public:
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	TArray<class UTexture*> SelectAreaImageArray();
	void OnWidgetPopped();
	void OnInitialized();
	void ExecuteUbergraph_Widget_CommonLoadingScreen(int32 EntryPoint);
	void Construct();
	void CacheAreaImages();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_CommonLoadingScreen_C">();
	}
	static class UWidget_CommonLoadingScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_CommonLoadingScreen_C>();
	}
};
static_assert(alignof(UWidget_CommonLoadingScreen_C) == 0x000008, "Wrong alignment on UWidget_CommonLoadingScreen_C");
static_assert(sizeof(UWidget_CommonLoadingScreen_C) == 0x000500, "Wrong size on UWidget_CommonLoadingScreen_C");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, UberGraphFrame) == 0x000438, "Member 'UWidget_CommonLoadingScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, ConstructAnimation) == 0x000440, "Member 'UWidget_CommonLoadingScreen_C::ConstructAnimation' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, BackgroundImage) == 0x000448, "Member 'UWidget_CommonLoadingScreen_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, Image_85) == 0x000450, "Member 'UWidget_CommonLoadingScreen_C::Image_85' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, Logo) == 0x000458, "Member 'UWidget_CommonLoadingScreen_C::Logo' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, ProgressBar) == 0x000460, "Member 'UWidget_CommonLoadingScreen_C::ProgressBar' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, ProgressDrip) == 0x000468, "Member 'UWidget_CommonLoadingScreen_C::ProgressDrip' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, Vignette) == 0x000470, "Member 'UWidget_CommonLoadingScreen_C::Vignette' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, Widget_LoadingIndicator_Common) == 0x000478, "Member 'UWidget_CommonLoadingScreen_C::Widget_LoadingIndicator_Common' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, BY_Images) == 0x000480, "Member 'UWidget_CommonLoadingScreen_C::BY_Images' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, GRD_Images) == 0x000490, "Member 'UWidget_CommonLoadingScreen_C::GRD_Images' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, SAN_Images) == 0x0004A0, "Member 'UWidget_CommonLoadingScreen_C::SAN_Images' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, VOID_Images) == 0x0004B0, "Member 'UWidget_CommonLoadingScreen_C::VOID_Images' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, SoftBY_Images) == 0x0004C0, "Member 'UWidget_CommonLoadingScreen_C::SoftBY_Images' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, SoftGRD_Images) == 0x0004D0, "Member 'UWidget_CommonLoadingScreen_C::SoftGRD_Images' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, SoftSAN_Images) == 0x0004E0, "Member 'UWidget_CommonLoadingScreen_C::SoftSAN_Images' has a wrong offset!");
static_assert(offsetof(UWidget_CommonLoadingScreen_C, SoftVOID_Images) == 0x0004F0, "Member 'UWidget_CommonLoadingScreen_C::SoftVOID_Images' has a wrong offset!");

}

