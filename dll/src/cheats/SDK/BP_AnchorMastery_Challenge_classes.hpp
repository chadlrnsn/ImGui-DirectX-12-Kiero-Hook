#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AnchorMastery_Challenge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AnchorMastery_Challenge.BP_AnchorMastery_Challenge_C
// 0x0040 (0x0070 - 0x0030)
class UBP_AnchorMastery_Challenge_C final : public URChallengeScript
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        TimeWindow;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time_Stamp;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsHitThisFrame;                                // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         EnemiesHitThreshold;                               // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Current;                                           // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target;                                            // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DoneCheck();
	void ExecuteUbergraph_BP_AnchorMastery_Challenge(int32 EntryPoint);
	void OnApplicableRunStarted();
	void OnEnemyKilled(class ARNPCPawnBase* NPC);
	void OnFinishRun(bool RunFailed);
	void ReduceCurrent();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AnchorMastery_Challenge_C">();
	}
	static class UBP_AnchorMastery_Challenge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AnchorMastery_Challenge_C>();
	}
};
static_assert(alignof(UBP_AnchorMastery_Challenge_C) == 0x000008, "Wrong alignment on UBP_AnchorMastery_Challenge_C");
static_assert(sizeof(UBP_AnchorMastery_Challenge_C) == 0x000070, "Wrong size on UBP_AnchorMastery_Challenge_C");
static_assert(offsetof(UBP_AnchorMastery_Challenge_C, UberGraphFrame) == 0x000030, "Member 'UBP_AnchorMastery_Challenge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AnchorMastery_Challenge_C, TimeWindow) == 0x000038, "Member 'UBP_AnchorMastery_Challenge_C::TimeWindow' has a wrong offset!");
static_assert(offsetof(UBP_AnchorMastery_Challenge_C, Time_Stamp) == 0x000040, "Member 'UBP_AnchorMastery_Challenge_C::Time_Stamp' has a wrong offset!");
static_assert(offsetof(UBP_AnchorMastery_Challenge_C, ActorsHitThisFrame) == 0x000048, "Member 'UBP_AnchorMastery_Challenge_C::ActorsHitThisFrame' has a wrong offset!");
static_assert(offsetof(UBP_AnchorMastery_Challenge_C, EnemiesHitThreshold) == 0x000058, "Member 'UBP_AnchorMastery_Challenge_C::EnemiesHitThreshold' has a wrong offset!");
static_assert(offsetof(UBP_AnchorMastery_Challenge_C, Current) == 0x000060, "Member 'UBP_AnchorMastery_Challenge_C::Current' has a wrong offset!");
static_assert(offsetof(UBP_AnchorMastery_Challenge_C, Target) == 0x000068, "Member 'UBP_AnchorMastery_Challenge_C::Target' has a wrong offset!");

}

