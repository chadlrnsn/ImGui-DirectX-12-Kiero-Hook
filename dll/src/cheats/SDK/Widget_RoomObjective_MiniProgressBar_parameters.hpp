#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_RoomObjective_MiniProgressBar

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Widget_RoomObjective_MiniProgressBar.Widget_RoomObjective_MiniProgressBar_C.ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar
// 0x0100 (0x0100 - 0x0000)
struct Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AmountCompleted;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AmountRequired;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float AmountCompleted, float AmountRequired)> K2Node_CreateDelegate_OutputDelegate; // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgress_Porgress_ImplicitCast;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast;    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CurrentProgress_ImplicitCast;   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar) == 0x000008, "Wrong alignment on Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar");
static_assert(sizeof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar) == 0x000100, "Wrong size on Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, EntryPoint) == 0x000000, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, K2Node_CustomEvent_AmountCompleted) == 0x000004, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::K2Node_CustomEvent_AmountCompleted' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, K2Node_CustomEvent_AmountRequired) == 0x000008, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::K2Node_CustomEvent_AmountRequired' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_SafeDivide_ReturnValue) == 0x000010, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, K2Node_Event_MyGeometry) == 0x000018, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, K2Node_Event_InDeltaTime) == 0x000050, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_PlayAnimationForward_ReturnValue) == 0x000058, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000060, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000070, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000080, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_Lerp_ReturnValue) == 0x000088, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, K2Node_CreateDelegate_OutputDelegate) == 0x000090, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A0, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0000B0, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_IsVisible_ReturnValue) == 0x0000B9, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_SafeDivide_A_ImplicitCast) == 0x0000C0, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_SafeDivide_B_ImplicitCast) == 0x0000C8, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_SetProgress_Porgress_ImplicitCast) == 0x0000D0, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_SetProgress_Porgress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast) == 0x0000D8, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x0000E0, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_Lerp_B_ImplicitCast) == 0x0000E8, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, CallFunc_Lerp_A_ImplicitCast) == 0x0000F0, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar, K2Node_VariableSet_CurrentProgress_ImplicitCast) == 0x0000F8, "Member 'Widget_RoomObjective_MiniProgressBar_C_ExecuteUbergraph_Widget_RoomObjective_MiniProgressBar::K2Node_VariableSet_CurrentProgress_ImplicitCast' has a wrong offset!");

// Function Widget_RoomObjective_MiniProgressBar.Widget_RoomObjective_MiniProgressBar_C.OnRoomObjectiveObjectUpdated
// 0x0008 (0x0008 - 0x0000)
struct Widget_RoomObjective_MiniProgressBar_C_OnRoomObjectiveObjectUpdated final
{
public:
	float                                         AmountCompleted;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AmountRequired;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_RoomObjective_MiniProgressBar_C_OnRoomObjectiveObjectUpdated) == 0x000004, "Wrong alignment on Widget_RoomObjective_MiniProgressBar_C_OnRoomObjectiveObjectUpdated");
static_assert(sizeof(Widget_RoomObjective_MiniProgressBar_C_OnRoomObjectiveObjectUpdated) == 0x000008, "Wrong size on Widget_RoomObjective_MiniProgressBar_C_OnRoomObjectiveObjectUpdated");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_OnRoomObjectiveObjectUpdated, AmountCompleted) == 0x000000, "Member 'Widget_RoomObjective_MiniProgressBar_C_OnRoomObjectiveObjectUpdated::AmountCompleted' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_OnRoomObjectiveObjectUpdated, AmountRequired) == 0x000004, "Member 'Widget_RoomObjective_MiniProgressBar_C_OnRoomObjectiveObjectUpdated::AmountRequired' has a wrong offset!");

// Function Widget_RoomObjective_MiniProgressBar.Widget_RoomObjective_MiniProgressBar_C.SetProgress
// 0x0004 (0x0004 - 0x0000)
struct Widget_RoomObjective_MiniProgressBar_C_SetProgress final
{
public:
	float                                         Porgress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_RoomObjective_MiniProgressBar_C_SetProgress) == 0x000004, "Wrong alignment on Widget_RoomObjective_MiniProgressBar_C_SetProgress");
static_assert(sizeof(Widget_RoomObjective_MiniProgressBar_C_SetProgress) == 0x000004, "Wrong size on Widget_RoomObjective_MiniProgressBar_C_SetProgress");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_SetProgress, Porgress) == 0x000000, "Member 'Widget_RoomObjective_MiniProgressBar_C_SetProgress::Porgress' has a wrong offset!");

// Function Widget_RoomObjective_MiniProgressBar.Widget_RoomObjective_MiniProgressBar_C.SetProgressBarThreshold
// 0x0028 (0x0028 - 0x0000)
struct Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold final
{
public:
	double                                        Thershold;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget_HealthbarThreshold_C*           CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSliderValue_InValue_ImplicitCast;      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold) == 0x000008, "Wrong alignment on Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold");
static_assert(sizeof(Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold) == 0x000028, "Wrong size on Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold, Thershold) == 0x000000, "Member 'Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold::Thershold' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold, CallFunc_Create_ReturnValue) == 0x000010, "Member 'Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold, CallFunc_AddChildToOverlay_ReturnValue) == 0x000018, "Member 'Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold, CallFunc_SetSliderValue_InValue_ImplicitCast) == 0x000020, "Member 'Widget_RoomObjective_MiniProgressBar_C_SetProgressBarThreshold::CallFunc_SetSliderValue_InValue_ImplicitCast' has a wrong offset!");

// Function Widget_RoomObjective_MiniProgressBar.Widget_RoomObjective_MiniProgressBar_C.Tick
// 0x003C (0x003C - 0x0000)
struct Widget_RoomObjective_MiniProgressBar_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_RoomObjective_MiniProgressBar_C_Tick) == 0x000004, "Wrong alignment on Widget_RoomObjective_MiniProgressBar_C_Tick");
static_assert(sizeof(Widget_RoomObjective_MiniProgressBar_C_Tick) == 0x00003C, "Wrong size on Widget_RoomObjective_MiniProgressBar_C_Tick");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_Tick, MyGeometry) == 0x000000, "Member 'Widget_RoomObjective_MiniProgressBar_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Widget_RoomObjective_MiniProgressBar_C_Tick, InDeltaTime) == 0x000038, "Member 'Widget_RoomObjective_MiniProgressBar_C_Tick::InDeltaTime' has a wrong offset!");

}

