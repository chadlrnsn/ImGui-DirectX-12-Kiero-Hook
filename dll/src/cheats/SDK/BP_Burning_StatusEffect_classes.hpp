#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Burning_StatusEffect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "RGame_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Burning_StatusEffect.BP_Burning_StatusEffect_C
// 0x0040 (0x0528 - 0x04E8)
class UBP_Burning_StatusEffect_C final : public URGBurningAilment
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        TotalTickTime;                                     // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x04F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        BurningAC;                                         // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        DamageIncreasePerStack;                            // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FireTriggerDamage;                                 // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyStackVisuals();
	void CheckFirePassive1(bool* HasPassive1);
	void CheckFirePassive4();
	void CheckFirePassive6(bool* Result, double* Multiplier);
	void ClearFirePassive4();
	void ExecuteUbergraph_BP_Burning_StatusEffect(int32 EntryPoint);
	void GetStacksAndTriggerDamageOnEnemy(class ARNPCPawnBase* Enemy, int32* Stacks, double* TriggerDamage);
	void HasFireMinor(bool* HasMinor);
	void InstantlyTickOnce();
	void K2_ActivateScript();
	void K2_DeactivateScript();
	void K2_TickScript(float DeltaTime);
	void OnFail_E7AB1B0847CBC6CA2F520DA43E959574();
	void OnFlared();
	void OnFlaredFX();
	void OnProjectileSpawned_E7AB1B0847CBC6CA2F520DA43E959574(class ARProjectileBase* Projectile);
	void SetupFirePassive1();
	void TriggerFirePassive1(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEventData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Burning_StatusEffect_C">();
	}
	static class UBP_Burning_StatusEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Burning_StatusEffect_C>();
	}
};
static_assert(alignof(UBP_Burning_StatusEffect_C) == 0x000008, "Wrong alignment on UBP_Burning_StatusEffect_C");
static_assert(sizeof(UBP_Burning_StatusEffect_C) == 0x000528, "Wrong size on UBP_Burning_StatusEffect_C");
static_assert(offsetof(UBP_Burning_StatusEffect_C, UberGraphFrame) == 0x0004E8, "Member 'UBP_Burning_StatusEffect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Burning_StatusEffect_C, TotalTickTime) == 0x0004F0, "Member 'UBP_Burning_StatusEffect_C::TotalTickTime' has a wrong offset!");
static_assert(offsetof(UBP_Burning_StatusEffect_C, SpawnLocation) == 0x0004F8, "Member 'UBP_Burning_StatusEffect_C::SpawnLocation' has a wrong offset!");
static_assert(offsetof(UBP_Burning_StatusEffect_C, BurningAC) == 0x000510, "Member 'UBP_Burning_StatusEffect_C::BurningAC' has a wrong offset!");
static_assert(offsetof(UBP_Burning_StatusEffect_C, DamageIncreasePerStack) == 0x000518, "Member 'UBP_Burning_StatusEffect_C::DamageIncreasePerStack' has a wrong offset!");
static_assert(offsetof(UBP_Burning_StatusEffect_C, FireTriggerDamage) == 0x000520, "Member 'UBP_Burning_StatusEffect_C::FireTriggerDamage' has a wrong offset!");

}

