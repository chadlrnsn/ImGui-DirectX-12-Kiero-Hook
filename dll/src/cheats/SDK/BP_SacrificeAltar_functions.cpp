#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SacrificeAltar

#include "Basic.hpp"

#include "BP_SacrificeAltar_classes.hpp"
#include "BP_SacrificeAltar_parameters.hpp"


namespace SDK
{

// Function BP_SacrificeAltar.BP_SacrificeAltar_C.AddSacrificeCostForController
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewInteractionCost                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SacrificeAltar_C::AddSacrificeCostForController(int32 NewInteractionCost, class APlayerController* PlayerController_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "AddSacrificeCostForController");

	Params::BP_SacrificeAltar_C_AddSacrificeCostForController Parms{};

	Parms.NewInteractionCost = NewInteractionCost;
	Parms.PlayerController_0 = PlayerController_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.BndEvt__BP_SacrificeAltar_Proximity_WorldIndicator_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SacrificeAltar_C::BndEvt__BP_SacrificeAltar_Proximity_WorldIndicator_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "BndEvt__BP_SacrificeAltar_Proximity_WorldIndicator_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature");

	Params::BP_SacrificeAltar_C_BndEvt__BP_SacrificeAltar_Proximity_WorldIndicator_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.BndEvt__BP_SacrificeAltar_Proximity_WorldIndicator_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SacrificeAltar_C::BndEvt__BP_SacrificeAltar_Proximity_WorldIndicator_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "BndEvt__BP_SacrificeAltar_Proximity_WorldIndicator_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature");

	Params::BP_SacrificeAltar_C_BndEvt__BP_SacrificeAltar_Proximity_WorldIndicator_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.CanInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_SacrificeAltar_C::CanInteract(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "CanInteract");

	Params::BP_SacrificeAltar_C_CanInteract Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.CanInteractEx
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   CanInteract_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SacrificeAltar_C::CanInteractEx(bool* CanInteract_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "CanInteractEx");

	Params::BP_SacrificeAltar_C_CanInteractEx Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanInteract_0 != nullptr)
		*CanInteract_0 = Parms.CanInteract_0;
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.CheckAndUpdateLootOptions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SacrificeAltar_C::CheckAndUpdateLootOptions(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "CheckAndUpdateLootOptions");

	Params::BP_SacrificeAltar_C_CheckAndUpdateLootOptions Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.ExecuteUbergraph_BP_SacrificeAltar
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SacrificeAltar_C::ExecuteUbergraph_BP_SacrificeAltar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "ExecuteUbergraph_BP_SacrificeAltar");

	Params::BP_SacrificeAltar_C_ExecuteUbergraph_BP_SacrificeAltar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.Get Reward Spawn Pos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SacrificeAltar_C::Get_Reward_Spawn_Pos(struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "Get Reward Spawn Pos");

	Params::BP_SacrificeAltar_C_Get_Reward_Spawn_Pos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.GetInteractingPlayerHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double*                                 Health                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SacrificeAltar_C::GetInteractingPlayerHealth(class APlayerController* PlayerController_0, double* Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "GetInteractingPlayerHealth");

	Params::BP_SacrificeAltar_C_GetInteractingPlayerHealth Parms{};

	Parms.PlayerController_0 = PlayerController_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Health != nullptr)
		*Health = Parms.Health;
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.OnInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SacrificeAltar_C::OnInteract(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "OnInteract");

	Params::BP_SacrificeAltar_C_OnInteract Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.OnInvoke_DEDAE81D4C2F6B66E7DA3CA22FDFA7B4
// (BlueprintCallable, BlueprintEvent)

void ABP_SacrificeAltar_C::OnInvoke_DEDAE81D4C2F6B66E7DA3CA22FDFA7B4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "OnInvoke_DEDAE81D4C2F6B66E7DA3CA22FDFA7B4");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.PlayerStateIsValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SacrificeAltar_C::PlayerStateIsValid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "PlayerStateIsValid");

	Params::BP_SacrificeAltar_C_PlayerStateIsValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SacrificeAltar_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.UpdateAltarVisuals
// (BlueprintCallable, BlueprintEvent)

void ABP_SacrificeAltar_C::UpdateAltarVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "UpdateAltarVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.UpdateInteractionText
// (BlueprintCallable, BlueprintEvent)

void ABP_SacrificeAltar_C::UpdateInteractionText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "UpdateInteractionText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_SacrificeAltar_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.GetInteractableCostCurrencyType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_SacrificeAltar_C::GetInteractableCostCurrencyType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "GetInteractableCostCurrencyType");

	Params::BP_SacrificeAltar_C_GetInteractableCostCurrencyType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SacrificeAltar.BP_SacrificeAltar_C.GetInteractionIndicatorWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidgetComponent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidgetComponent* ABP_SacrificeAltar_C::GetInteractionIndicatorWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeAltar_C", "GetInteractionIndicatorWidget");

	Params::BP_SacrificeAltar_C_GetInteractionIndicatorWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

