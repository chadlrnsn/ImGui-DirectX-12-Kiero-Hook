#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HairStrandsCore

#include "Basic.hpp"

#include "HairStrandsCore_structs.hpp"


namespace SDK::Params
{

// Function HairStrandsCore.GroomAsset.GetDeformedGroupSections
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_GetDeformedGroupSections final
{
public:
	TArray<int32>                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_GetDeformedGroupSections) == 0x000008, "Wrong alignment on GroomAsset_GetDeformedGroupSections");
static_assert(sizeof(GroomAsset_GetDeformedGroupSections) == 0x000010, "Wrong size on GroomAsset_GetDeformedGroupSections");
static_assert(offsetof(GroomAsset_GetDeformedGroupSections, ReturnValue) == 0x000000, "Member 'GroomAsset_GetDeformedGroupSections::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.GetHairGroupsCards
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_GetHairGroupsCards final
{
public:
	TArray<struct FHairGroupsCardsSourceDescription> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_GetHairGroupsCards) == 0x000008, "Wrong alignment on GroomAsset_GetHairGroupsCards");
static_assert(sizeof(GroomAsset_GetHairGroupsCards) == 0x000010, "Wrong size on GroomAsset_GetHairGroupsCards");
static_assert(offsetof(GroomAsset_GetHairGroupsCards, ReturnValue) == 0x000000, "Member 'GroomAsset_GetHairGroupsCards::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.GetHairGroupsInterpolation
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_GetHairGroupsInterpolation final
{
public:
	TArray<struct FHairGroupsInterpolation>       ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_GetHairGroupsInterpolation) == 0x000008, "Wrong alignment on GroomAsset_GetHairGroupsInterpolation");
static_assert(sizeof(GroomAsset_GetHairGroupsInterpolation) == 0x000010, "Wrong size on GroomAsset_GetHairGroupsInterpolation");
static_assert(offsetof(GroomAsset_GetHairGroupsInterpolation, ReturnValue) == 0x000000, "Member 'GroomAsset_GetHairGroupsInterpolation::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.GetHairGroupsLOD
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_GetHairGroupsLOD final
{
public:
	TArray<struct FHairGroupsLOD>                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_GetHairGroupsLOD) == 0x000008, "Wrong alignment on GroomAsset_GetHairGroupsLOD");
static_assert(sizeof(GroomAsset_GetHairGroupsLOD) == 0x000010, "Wrong size on GroomAsset_GetHairGroupsLOD");
static_assert(offsetof(GroomAsset_GetHairGroupsLOD, ReturnValue) == 0x000000, "Member 'GroomAsset_GetHairGroupsLOD::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.GetHairGroupsMaterials
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_GetHairGroupsMaterials final
{
public:
	TArray<struct FHairGroupsMaterial>            ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_GetHairGroupsMaterials) == 0x000008, "Wrong alignment on GroomAsset_GetHairGroupsMaterials");
static_assert(sizeof(GroomAsset_GetHairGroupsMaterials) == 0x000010, "Wrong size on GroomAsset_GetHairGroupsMaterials");
static_assert(offsetof(GroomAsset_GetHairGroupsMaterials, ReturnValue) == 0x000000, "Member 'GroomAsset_GetHairGroupsMaterials::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.GetHairGroupsMeshes
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_GetHairGroupsMeshes final
{
public:
	TArray<struct FHairGroupsMeshesSourceDescription> ReturnValue;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_GetHairGroupsMeshes) == 0x000008, "Wrong alignment on GroomAsset_GetHairGroupsMeshes");
static_assert(sizeof(GroomAsset_GetHairGroupsMeshes) == 0x000010, "Wrong size on GroomAsset_GetHairGroupsMeshes");
static_assert(offsetof(GroomAsset_GetHairGroupsMeshes, ReturnValue) == 0x000000, "Member 'GroomAsset_GetHairGroupsMeshes::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.GetHairGroupsPhysics
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_GetHairGroupsPhysics final
{
public:
	TArray<struct FHairGroupsPhysics>             ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_GetHairGroupsPhysics) == 0x000008, "Wrong alignment on GroomAsset_GetHairGroupsPhysics");
static_assert(sizeof(GroomAsset_GetHairGroupsPhysics) == 0x000010, "Wrong size on GroomAsset_GetHairGroupsPhysics");
static_assert(offsetof(GroomAsset_GetHairGroupsPhysics, ReturnValue) == 0x000000, "Member 'GroomAsset_GetHairGroupsPhysics::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.GetHairGroupsRendering
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_GetHairGroupsRendering final
{
public:
	TArray<struct FHairGroupsRendering>           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_GetHairGroupsRendering) == 0x000008, "Wrong alignment on GroomAsset_GetHairGroupsRendering");
static_assert(sizeof(GroomAsset_GetHairGroupsRendering) == 0x000010, "Wrong size on GroomAsset_GetHairGroupsRendering");
static_assert(offsetof(GroomAsset_GetHairGroupsRendering, ReturnValue) == 0x000000, "Member 'GroomAsset_GetHairGroupsRendering::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.SetDeformedGroupSections
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_SetDeformedGroupSections final
{
public:
	TArray<int32>                                 In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_SetDeformedGroupSections) == 0x000008, "Wrong alignment on GroomAsset_SetDeformedGroupSections");
static_assert(sizeof(GroomAsset_SetDeformedGroupSections) == 0x000010, "Wrong size on GroomAsset_SetDeformedGroupSections");
static_assert(offsetof(GroomAsset_SetDeformedGroupSections, In) == 0x000000, "Member 'GroomAsset_SetDeformedGroupSections::In' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.SetEnableGlobalInterpolation
// 0x0001 (0x0001 - 0x0000)
struct GroomAsset_SetEnableGlobalInterpolation final
{
public:
	bool                                          In;                                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_SetEnableGlobalInterpolation) == 0x000001, "Wrong alignment on GroomAsset_SetEnableGlobalInterpolation");
static_assert(sizeof(GroomAsset_SetEnableGlobalInterpolation) == 0x000001, "Wrong size on GroomAsset_SetEnableGlobalInterpolation");
static_assert(offsetof(GroomAsset_SetEnableGlobalInterpolation, In) == 0x000000, "Member 'GroomAsset_SetEnableGlobalInterpolation::In' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.SetEnableSimulationCache
// 0x0001 (0x0001 - 0x0000)
struct GroomAsset_SetEnableSimulationCache final
{
public:
	bool                                          In;                                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_SetEnableSimulationCache) == 0x000001, "Wrong alignment on GroomAsset_SetEnableSimulationCache");
static_assert(sizeof(GroomAsset_SetEnableSimulationCache) == 0x000001, "Wrong size on GroomAsset_SetEnableSimulationCache");
static_assert(offsetof(GroomAsset_SetEnableSimulationCache, In) == 0x000000, "Member 'GroomAsset_SetEnableSimulationCache::In' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.SetHairGroupsCards
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_SetHairGroupsCards final
{
public:
	TArray<struct FHairGroupsCardsSourceDescription> In;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_SetHairGroupsCards) == 0x000008, "Wrong alignment on GroomAsset_SetHairGroupsCards");
static_assert(sizeof(GroomAsset_SetHairGroupsCards) == 0x000010, "Wrong size on GroomAsset_SetHairGroupsCards");
static_assert(offsetof(GroomAsset_SetHairGroupsCards, In) == 0x000000, "Member 'GroomAsset_SetHairGroupsCards::In' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.SetHairGroupsInterpolation
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_SetHairGroupsInterpolation final
{
public:
	TArray<struct FHairGroupsInterpolation>       In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_SetHairGroupsInterpolation) == 0x000008, "Wrong alignment on GroomAsset_SetHairGroupsInterpolation");
static_assert(sizeof(GroomAsset_SetHairGroupsInterpolation) == 0x000010, "Wrong size on GroomAsset_SetHairGroupsInterpolation");
static_assert(offsetof(GroomAsset_SetHairGroupsInterpolation, In) == 0x000000, "Member 'GroomAsset_SetHairGroupsInterpolation::In' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.SetHairGroupsLOD
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_SetHairGroupsLOD final
{
public:
	TArray<struct FHairGroupsLOD>                 In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_SetHairGroupsLOD) == 0x000008, "Wrong alignment on GroomAsset_SetHairGroupsLOD");
static_assert(sizeof(GroomAsset_SetHairGroupsLOD) == 0x000010, "Wrong size on GroomAsset_SetHairGroupsLOD");
static_assert(offsetof(GroomAsset_SetHairGroupsLOD, In) == 0x000000, "Member 'GroomAsset_SetHairGroupsLOD::In' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.SetHairGroupsMaterials
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_SetHairGroupsMaterials final
{
public:
	TArray<struct FHairGroupsMaterial>            In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_SetHairGroupsMaterials) == 0x000008, "Wrong alignment on GroomAsset_SetHairGroupsMaterials");
static_assert(sizeof(GroomAsset_SetHairGroupsMaterials) == 0x000010, "Wrong size on GroomAsset_SetHairGroupsMaterials");
static_assert(offsetof(GroomAsset_SetHairGroupsMaterials, In) == 0x000000, "Member 'GroomAsset_SetHairGroupsMaterials::In' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.SetHairGroupsMeshes
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_SetHairGroupsMeshes final
{
public:
	TArray<struct FHairGroupsMeshesSourceDescription> In;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_SetHairGroupsMeshes) == 0x000008, "Wrong alignment on GroomAsset_SetHairGroupsMeshes");
static_assert(sizeof(GroomAsset_SetHairGroupsMeshes) == 0x000010, "Wrong size on GroomAsset_SetHairGroupsMeshes");
static_assert(offsetof(GroomAsset_SetHairGroupsMeshes, In) == 0x000000, "Member 'GroomAsset_SetHairGroupsMeshes::In' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.SetHairGroupsPhysics
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_SetHairGroupsPhysics final
{
public:
	TArray<struct FHairGroupsPhysics>             In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_SetHairGroupsPhysics) == 0x000008, "Wrong alignment on GroomAsset_SetHairGroupsPhysics");
static_assert(sizeof(GroomAsset_SetHairGroupsPhysics) == 0x000010, "Wrong size on GroomAsset_SetHairGroupsPhysics");
static_assert(offsetof(GroomAsset_SetHairGroupsPhysics, In) == 0x000000, "Member 'GroomAsset_SetHairGroupsPhysics::In' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.SetHairGroupsRendering
// 0x0010 (0x0010 - 0x0000)
struct GroomAsset_SetHairGroupsRendering final
{
public:
	TArray<struct FHairGroupsRendering>           In;                                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_SetHairGroupsRendering) == 0x000008, "Wrong alignment on GroomAsset_SetHairGroupsRendering");
static_assert(sizeof(GroomAsset_SetHairGroupsRendering) == 0x000010, "Wrong size on GroomAsset_SetHairGroupsRendering");
static_assert(offsetof(GroomAsset_SetHairGroupsRendering, In) == 0x000000, "Member 'GroomAsset_SetHairGroupsRendering::In' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.SetHairInterpolationType
// 0x0001 (0x0001 - 0x0000)
struct GroomAsset_SetHairInterpolationType final
{
public:
	EGroomInterpolationType                       In;                                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_SetHairInterpolationType) == 0x000001, "Wrong alignment on GroomAsset_SetHairInterpolationType");
static_assert(sizeof(GroomAsset_SetHairInterpolationType) == 0x000001, "Wrong size on GroomAsset_SetHairInterpolationType");
static_assert(offsetof(GroomAsset_SetHairInterpolationType, In) == 0x000000, "Member 'GroomAsset_SetHairInterpolationType::In' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.SetRiggedSkeletalMesh
// 0x0008 (0x0008 - 0x0000)
struct GroomAsset_SetRiggedSkeletalMesh final
{
public:
	class USkeletalMesh*                          In;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_SetRiggedSkeletalMesh) == 0x000008, "Wrong alignment on GroomAsset_SetRiggedSkeletalMesh");
static_assert(sizeof(GroomAsset_SetRiggedSkeletalMesh) == 0x000008, "Wrong size on GroomAsset_SetRiggedSkeletalMesh");
static_assert(offsetof(GroomAsset_SetRiggedSkeletalMesh, In) == 0x000000, "Member 'GroomAsset_SetRiggedSkeletalMesh::In' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.GetEnableGlobalInterpolation
// 0x0001 (0x0001 - 0x0000)
struct GroomAsset_GetEnableGlobalInterpolation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_GetEnableGlobalInterpolation) == 0x000001, "Wrong alignment on GroomAsset_GetEnableGlobalInterpolation");
static_assert(sizeof(GroomAsset_GetEnableGlobalInterpolation) == 0x000001, "Wrong size on GroomAsset_GetEnableGlobalInterpolation");
static_assert(offsetof(GroomAsset_GetEnableGlobalInterpolation, ReturnValue) == 0x000000, "Member 'GroomAsset_GetEnableGlobalInterpolation::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.GetEnableSimulationCache
// 0x0001 (0x0001 - 0x0000)
struct GroomAsset_GetEnableSimulationCache final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_GetEnableSimulationCache) == 0x000001, "Wrong alignment on GroomAsset_GetEnableSimulationCache");
static_assert(sizeof(GroomAsset_GetEnableSimulationCache) == 0x000001, "Wrong size on GroomAsset_GetEnableSimulationCache");
static_assert(offsetof(GroomAsset_GetEnableSimulationCache, ReturnValue) == 0x000000, "Member 'GroomAsset_GetEnableSimulationCache::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.GetHairInterpolationType
// 0x0001 (0x0001 - 0x0000)
struct GroomAsset_GetHairInterpolationType final
{
public:
	EGroomInterpolationType                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_GetHairInterpolationType) == 0x000001, "Wrong alignment on GroomAsset_GetHairInterpolationType");
static_assert(sizeof(GroomAsset_GetHairInterpolationType) == 0x000001, "Wrong size on GroomAsset_GetHairInterpolationType");
static_assert(offsetof(GroomAsset_GetHairInterpolationType, ReturnValue) == 0x000000, "Member 'GroomAsset_GetHairInterpolationType::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomAsset.GetRiggedSkeletalMesh
// 0x0008 (0x0008 - 0x0000)
struct GroomAsset_GetRiggedSkeletalMesh final
{
public:
	class USkeletalMesh*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomAsset_GetRiggedSkeletalMesh) == 0x000008, "Wrong alignment on GroomAsset_GetRiggedSkeletalMesh");
static_assert(sizeof(GroomAsset_GetRiggedSkeletalMesh) == 0x000008, "Wrong size on GroomAsset_GetRiggedSkeletalMesh");
static_assert(offsetof(GroomAsset_GetRiggedSkeletalMesh, ReturnValue) == 0x000000, "Member 'GroomAsset_GetRiggedSkeletalMesh::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.SetGroom
// 0x0008 (0x0008 - 0x0000)
struct GroomBindingAsset_SetGroom final
{
public:
	class UGroomAsset*                            InGroom;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_SetGroom) == 0x000008, "Wrong alignment on GroomBindingAsset_SetGroom");
static_assert(sizeof(GroomBindingAsset_SetGroom) == 0x000008, "Wrong size on GroomBindingAsset_SetGroom");
static_assert(offsetof(GroomBindingAsset_SetGroom, InGroom) == 0x000000, "Member 'GroomBindingAsset_SetGroom::InGroom' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.SetGroomBindingType
// 0x0001 (0x0001 - 0x0000)
struct GroomBindingAsset_SetGroomBindingType final
{
public:
	EGroomBindingMeshType                         InGroomBindingType;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_SetGroomBindingType) == 0x000001, "Wrong alignment on GroomBindingAsset_SetGroomBindingType");
static_assert(sizeof(GroomBindingAsset_SetGroomBindingType) == 0x000001, "Wrong size on GroomBindingAsset_SetGroomBindingType");
static_assert(offsetof(GroomBindingAsset_SetGroomBindingType, InGroomBindingType) == 0x000000, "Member 'GroomBindingAsset_SetGroomBindingType::InGroomBindingType' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.SetGroupInfos
// 0x0010 (0x0010 - 0x0000)
struct GroomBindingAsset_SetGroupInfos final
{
public:
	TArray<struct FGoomBindingGroupInfo>          InGroupInfos;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_SetGroupInfos) == 0x000008, "Wrong alignment on GroomBindingAsset_SetGroupInfos");
static_assert(sizeof(GroomBindingAsset_SetGroupInfos) == 0x000010, "Wrong size on GroomBindingAsset_SetGroupInfos");
static_assert(offsetof(GroomBindingAsset_SetGroupInfos, InGroupInfos) == 0x000000, "Member 'GroomBindingAsset_SetGroupInfos::InGroupInfos' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.SetMatchingSection
// 0x0004 (0x0004 - 0x0000)
struct GroomBindingAsset_SetMatchingSection final
{
public:
	int32                                         InMatchingSection;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_SetMatchingSection) == 0x000004, "Wrong alignment on GroomBindingAsset_SetMatchingSection");
static_assert(sizeof(GroomBindingAsset_SetMatchingSection) == 0x000004, "Wrong size on GroomBindingAsset_SetMatchingSection");
static_assert(offsetof(GroomBindingAsset_SetMatchingSection, InMatchingSection) == 0x000000, "Member 'GroomBindingAsset_SetMatchingSection::InMatchingSection' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.SetNumInterpolationPoints
// 0x0004 (0x0004 - 0x0000)
struct GroomBindingAsset_SetNumInterpolationPoints final
{
public:
	int32                                         InNumInterpolationPoints;                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_SetNumInterpolationPoints) == 0x000004, "Wrong alignment on GroomBindingAsset_SetNumInterpolationPoints");
static_assert(sizeof(GroomBindingAsset_SetNumInterpolationPoints) == 0x000004, "Wrong size on GroomBindingAsset_SetNumInterpolationPoints");
static_assert(offsetof(GroomBindingAsset_SetNumInterpolationPoints, InNumInterpolationPoints) == 0x000000, "Member 'GroomBindingAsset_SetNumInterpolationPoints::InNumInterpolationPoints' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.SetSourceGeometryCache
// 0x0008 (0x0008 - 0x0000)
struct GroomBindingAsset_SetSourceGeometryCache final
{
public:
	class UGeometryCache*                         InGeometryCache;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_SetSourceGeometryCache) == 0x000008, "Wrong alignment on GroomBindingAsset_SetSourceGeometryCache");
static_assert(sizeof(GroomBindingAsset_SetSourceGeometryCache) == 0x000008, "Wrong size on GroomBindingAsset_SetSourceGeometryCache");
static_assert(offsetof(GroomBindingAsset_SetSourceGeometryCache, InGeometryCache) == 0x000000, "Member 'GroomBindingAsset_SetSourceGeometryCache::InGeometryCache' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.SetSourceSkeletalMesh
// 0x0008 (0x0008 - 0x0000)
struct GroomBindingAsset_SetSourceSkeletalMesh final
{
public:
	class USkeletalMesh*                          InSkeletalMesh;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_SetSourceSkeletalMesh) == 0x000008, "Wrong alignment on GroomBindingAsset_SetSourceSkeletalMesh");
static_assert(sizeof(GroomBindingAsset_SetSourceSkeletalMesh) == 0x000008, "Wrong size on GroomBindingAsset_SetSourceSkeletalMesh");
static_assert(offsetof(GroomBindingAsset_SetSourceSkeletalMesh, InSkeletalMesh) == 0x000000, "Member 'GroomBindingAsset_SetSourceSkeletalMesh::InSkeletalMesh' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.SetTargetGeometryCache
// 0x0008 (0x0008 - 0x0000)
struct GroomBindingAsset_SetTargetGeometryCache final
{
public:
	class UGeometryCache*                         InGeometryCache;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_SetTargetGeometryCache) == 0x000008, "Wrong alignment on GroomBindingAsset_SetTargetGeometryCache");
static_assert(sizeof(GroomBindingAsset_SetTargetGeometryCache) == 0x000008, "Wrong size on GroomBindingAsset_SetTargetGeometryCache");
static_assert(offsetof(GroomBindingAsset_SetTargetGeometryCache, InGeometryCache) == 0x000000, "Member 'GroomBindingAsset_SetTargetGeometryCache::InGeometryCache' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.SetTargetSkeletalMesh
// 0x0008 (0x0008 - 0x0000)
struct GroomBindingAsset_SetTargetSkeletalMesh final
{
public:
	class USkeletalMesh*                          InSkeletalMesh;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_SetTargetSkeletalMesh) == 0x000008, "Wrong alignment on GroomBindingAsset_SetTargetSkeletalMesh");
static_assert(sizeof(GroomBindingAsset_SetTargetSkeletalMesh) == 0x000008, "Wrong size on GroomBindingAsset_SetTargetSkeletalMesh");
static_assert(offsetof(GroomBindingAsset_SetTargetSkeletalMesh, InSkeletalMesh) == 0x000000, "Member 'GroomBindingAsset_SetTargetSkeletalMesh::InSkeletalMesh' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.GetGroom
// 0x0008 (0x0008 - 0x0000)
struct GroomBindingAsset_GetGroom final
{
public:
	class UGroomAsset*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_GetGroom) == 0x000008, "Wrong alignment on GroomBindingAsset_GetGroom");
static_assert(sizeof(GroomBindingAsset_GetGroom) == 0x000008, "Wrong size on GroomBindingAsset_GetGroom");
static_assert(offsetof(GroomBindingAsset_GetGroom, ReturnValue) == 0x000000, "Member 'GroomBindingAsset_GetGroom::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.GetGroomBindingType
// 0x0001 (0x0001 - 0x0000)
struct GroomBindingAsset_GetGroomBindingType final
{
public:
	EGroomBindingMeshType                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_GetGroomBindingType) == 0x000001, "Wrong alignment on GroomBindingAsset_GetGroomBindingType");
static_assert(sizeof(GroomBindingAsset_GetGroomBindingType) == 0x000001, "Wrong size on GroomBindingAsset_GetGroomBindingType");
static_assert(offsetof(GroomBindingAsset_GetGroomBindingType, ReturnValue) == 0x000000, "Member 'GroomBindingAsset_GetGroomBindingType::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.GetGroupInfos
// 0x0010 (0x0010 - 0x0000)
struct GroomBindingAsset_GetGroupInfos final
{
public:
	TArray<struct FGoomBindingGroupInfo>          ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_GetGroupInfos) == 0x000008, "Wrong alignment on GroomBindingAsset_GetGroupInfos");
static_assert(sizeof(GroomBindingAsset_GetGroupInfos) == 0x000010, "Wrong size on GroomBindingAsset_GetGroupInfos");
static_assert(offsetof(GroomBindingAsset_GetGroupInfos, ReturnValue) == 0x000000, "Member 'GroomBindingAsset_GetGroupInfos::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.GetMatchingSection
// 0x0004 (0x0004 - 0x0000)
struct GroomBindingAsset_GetMatchingSection final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_GetMatchingSection) == 0x000004, "Wrong alignment on GroomBindingAsset_GetMatchingSection");
static_assert(sizeof(GroomBindingAsset_GetMatchingSection) == 0x000004, "Wrong size on GroomBindingAsset_GetMatchingSection");
static_assert(offsetof(GroomBindingAsset_GetMatchingSection, ReturnValue) == 0x000000, "Member 'GroomBindingAsset_GetMatchingSection::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.GetNumInterpolationPoints
// 0x0004 (0x0004 - 0x0000)
struct GroomBindingAsset_GetNumInterpolationPoints final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_GetNumInterpolationPoints) == 0x000004, "Wrong alignment on GroomBindingAsset_GetNumInterpolationPoints");
static_assert(sizeof(GroomBindingAsset_GetNumInterpolationPoints) == 0x000004, "Wrong size on GroomBindingAsset_GetNumInterpolationPoints");
static_assert(offsetof(GroomBindingAsset_GetNumInterpolationPoints, ReturnValue) == 0x000000, "Member 'GroomBindingAsset_GetNumInterpolationPoints::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.GetSourceGeometryCache
// 0x0008 (0x0008 - 0x0000)
struct GroomBindingAsset_GetSourceGeometryCache final
{
public:
	class UGeometryCache*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_GetSourceGeometryCache) == 0x000008, "Wrong alignment on GroomBindingAsset_GetSourceGeometryCache");
static_assert(sizeof(GroomBindingAsset_GetSourceGeometryCache) == 0x000008, "Wrong size on GroomBindingAsset_GetSourceGeometryCache");
static_assert(offsetof(GroomBindingAsset_GetSourceGeometryCache, ReturnValue) == 0x000000, "Member 'GroomBindingAsset_GetSourceGeometryCache::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.GetSourceSkeletalMesh
// 0x0008 (0x0008 - 0x0000)
struct GroomBindingAsset_GetSourceSkeletalMesh final
{
public:
	class USkeletalMesh*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_GetSourceSkeletalMesh) == 0x000008, "Wrong alignment on GroomBindingAsset_GetSourceSkeletalMesh");
static_assert(sizeof(GroomBindingAsset_GetSourceSkeletalMesh) == 0x000008, "Wrong size on GroomBindingAsset_GetSourceSkeletalMesh");
static_assert(offsetof(GroomBindingAsset_GetSourceSkeletalMesh, ReturnValue) == 0x000000, "Member 'GroomBindingAsset_GetSourceSkeletalMesh::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.GetTargetGeometryCache
// 0x0008 (0x0008 - 0x0000)
struct GroomBindingAsset_GetTargetGeometryCache final
{
public:
	class UGeometryCache*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_GetTargetGeometryCache) == 0x000008, "Wrong alignment on GroomBindingAsset_GetTargetGeometryCache");
static_assert(sizeof(GroomBindingAsset_GetTargetGeometryCache) == 0x000008, "Wrong size on GroomBindingAsset_GetTargetGeometryCache");
static_assert(offsetof(GroomBindingAsset_GetTargetGeometryCache, ReturnValue) == 0x000000, "Member 'GroomBindingAsset_GetTargetGeometryCache::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBindingAsset.GetTargetSkeletalMesh
// 0x0008 (0x0008 - 0x0000)
struct GroomBindingAsset_GetTargetSkeletalMesh final
{
public:
	class USkeletalMesh*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBindingAsset_GetTargetSkeletalMesh) == 0x000008, "Wrong alignment on GroomBindingAsset_GetTargetSkeletalMesh");
static_assert(sizeof(GroomBindingAsset_GetTargetSkeletalMesh) == 0x000008, "Wrong size on GroomBindingAsset_GetTargetSkeletalMesh");
static_assert(offsetof(GroomBindingAsset_GetTargetSkeletalMesh, ReturnValue) == 0x000000, "Member 'GroomBindingAsset_GetTargetSkeletalMesh::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBlueprintLibrary.CreateNewGeometryCacheGroomBindingAsset
// 0x0030 (0x0030 - 0x0000)
struct GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset final
{
public:
	class UGroomAsset*                            GroomAsset;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGeometryCache*                         GeometryCache;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumInterpolationPoints;                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGeometryCache*                         SourceGeometryCacheForTransfer;                    // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MatchingSection;                                   // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGroomBindingAsset*                     ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset) == 0x000008, "Wrong alignment on GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset");
static_assert(sizeof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset) == 0x000030, "Wrong size on GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset, GroomAsset) == 0x000000, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset::GroomAsset' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset, GeometryCache) == 0x000008, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset::GeometryCache' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset, NumInterpolationPoints) == 0x000010, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset::NumInterpolationPoints' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset, SourceGeometryCacheForTransfer) == 0x000018, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset::SourceGeometryCacheForTransfer' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset, MatchingSection) == 0x000020, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset::MatchingSection' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset, ReturnValue) == 0x000028, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAsset::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBlueprintLibrary.CreateNewGeometryCacheGroomBindingAssetWithPath
// 0x0040 (0x0040 - 0x0000)
struct GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath final
{
public:
	class FString                                 DesiredPackagePath;                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGroomAsset*                            GroomAsset;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGeometryCache*                         GeometryCache;                                     // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumInterpolationPoints;                            // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGeometryCache*                         SourceGeometryCacheForTransfer;                    // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MatchingSection;                                   // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGroomBindingAsset*                     ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath) == 0x000008, "Wrong alignment on GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath");
static_assert(sizeof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath) == 0x000040, "Wrong size on GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath, DesiredPackagePath) == 0x000000, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath::DesiredPackagePath' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath, GroomAsset) == 0x000010, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath::GroomAsset' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath, GeometryCache) == 0x000018, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath::GeometryCache' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath, NumInterpolationPoints) == 0x000020, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath::NumInterpolationPoints' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath, SourceGeometryCacheForTransfer) == 0x000028, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath::SourceGeometryCacheForTransfer' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath, MatchingSection) == 0x000030, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath::MatchingSection' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath, ReturnValue) == 0x000038, "Member 'GroomBlueprintLibrary_CreateNewGeometryCacheGroomBindingAssetWithPath::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBlueprintLibrary.CreateNewGroomBindingAsset
// 0x0030 (0x0030 - 0x0000)
struct GroomBlueprintLibrary_CreateNewGroomBindingAsset final
{
public:
	class UGroomAsset*                            InGroomAsset;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          InSkeletalMesh;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InNumInterpolationPoints;                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          InSourceSkeletalMeshForTransfer;                   // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InMatchingSection;                                 // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGroomBindingAsset*                     ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBlueprintLibrary_CreateNewGroomBindingAsset) == 0x000008, "Wrong alignment on GroomBlueprintLibrary_CreateNewGroomBindingAsset");
static_assert(sizeof(GroomBlueprintLibrary_CreateNewGroomBindingAsset) == 0x000030, "Wrong size on GroomBlueprintLibrary_CreateNewGroomBindingAsset");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAsset, InGroomAsset) == 0x000000, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAsset::InGroomAsset' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAsset, InSkeletalMesh) == 0x000008, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAsset::InSkeletalMesh' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAsset, InNumInterpolationPoints) == 0x000010, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAsset::InNumInterpolationPoints' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAsset, InSourceSkeletalMeshForTransfer) == 0x000018, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAsset::InSourceSkeletalMeshForTransfer' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAsset, InMatchingSection) == 0x000020, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAsset::InMatchingSection' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAsset, ReturnValue) == 0x000028, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAsset::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBlueprintLibrary.CreateNewGroomBindingAssetWithPath
// 0x0040 (0x0040 - 0x0000)
struct GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath final
{
public:
	class FString                                 InDesiredPackagePath;                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGroomAsset*                            InGroomAsset;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          InSkeletalMesh;                                    // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InNumInterpolationPoints;                          // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          InSourceSkeletalMeshForTransfer;                   // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InMatchingSection;                                 // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGroomBindingAsset*                     ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath) == 0x000008, "Wrong alignment on GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath");
static_assert(sizeof(GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath) == 0x000040, "Wrong size on GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath, InDesiredPackagePath) == 0x000000, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath::InDesiredPackagePath' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath, InGroomAsset) == 0x000010, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath::InGroomAsset' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath, InSkeletalMesh) == 0x000018, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath::InSkeletalMesh' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath, InNumInterpolationPoints) == 0x000020, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath::InNumInterpolationPoints' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath, InSourceSkeletalMeshForTransfer) == 0x000028, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath::InSourceSkeletalMeshForTransfer' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath, InMatchingSection) == 0x000030, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath::InMatchingSection' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath, ReturnValue) == 0x000038, "Member 'GroomBlueprintLibrary_CreateNewGroomBindingAssetWithPath::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomBlueprintLibrary.IsHairStrandsSupportedInWorld
// 0x0010 (0x0010 - 0x0000)
struct GroomBlueprintLibrary_IsHairStrandsSupportedInWorld final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GroomBlueprintLibrary_IsHairStrandsSupportedInWorld) == 0x000008, "Wrong alignment on GroomBlueprintLibrary_IsHairStrandsSupportedInWorld");
static_assert(sizeof(GroomBlueprintLibrary_IsHairStrandsSupportedInWorld) == 0x000010, "Wrong size on GroomBlueprintLibrary_IsHairStrandsSupportedInWorld");
static_assert(offsetof(GroomBlueprintLibrary_IsHairStrandsSupportedInWorld, WorldContextObject) == 0x000000, "Member 'GroomBlueprintLibrary_IsHairStrandsSupportedInWorld::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GroomBlueprintLibrary_IsHairStrandsSupportedInWorld, ReturnValue) == 0x000008, "Member 'GroomBlueprintLibrary_IsHairStrandsSupportedInWorld::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomComponent.AddCollisionComponent
// 0x0008 (0x0008 - 0x0000)
struct GroomComponent_AddCollisionComponent final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomComponent_AddCollisionComponent) == 0x000008, "Wrong alignment on GroomComponent_AddCollisionComponent");
static_assert(sizeof(GroomComponent_AddCollisionComponent) == 0x000008, "Wrong size on GroomComponent_AddCollisionComponent");
static_assert(offsetof(GroomComponent_AddCollisionComponent, SkeletalMeshComponent) == 0x000000, "Member 'GroomComponent_AddCollisionComponent::SkeletalMeshComponent' has a wrong offset!");

// Function HairStrandsCore.GroomComponent.GetIsHairLengthScaleEnabled
// 0x0001 (0x0001 - 0x0000)
struct GroomComponent_GetIsHairLengthScaleEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomComponent_GetIsHairLengthScaleEnabled) == 0x000001, "Wrong alignment on GroomComponent_GetIsHairLengthScaleEnabled");
static_assert(sizeof(GroomComponent_GetIsHairLengthScaleEnabled) == 0x000001, "Wrong size on GroomComponent_GetIsHairLengthScaleEnabled");
static_assert(offsetof(GroomComponent_GetIsHairLengthScaleEnabled, ReturnValue) == 0x000000, "Member 'GroomComponent_GetIsHairLengthScaleEnabled::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomComponent.GetNiagaraComponent
// 0x0010 (0x0010 - 0x0000)
struct GroomComponent_GetNiagaraComponent final
{
public:
	int32                                         GroupIndex;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomComponent_GetNiagaraComponent) == 0x000008, "Wrong alignment on GroomComponent_GetNiagaraComponent");
static_assert(sizeof(GroomComponent_GetNiagaraComponent) == 0x000010, "Wrong size on GroomComponent_GetNiagaraComponent");
static_assert(offsetof(GroomComponent_GetNiagaraComponent, GroupIndex) == 0x000000, "Member 'GroomComponent_GetNiagaraComponent::GroupIndex' has a wrong offset!");
static_assert(offsetof(GroomComponent_GetNiagaraComponent, ReturnValue) == 0x000008, "Member 'GroomComponent_GetNiagaraComponent::ReturnValue' has a wrong offset!");

// Function HairStrandsCore.GroomComponent.SetBindingAsset
// 0x0008 (0x0008 - 0x0000)
struct GroomComponent_SetBindingAsset final
{
public:
	class UGroomBindingAsset*                     InBinding;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomComponent_SetBindingAsset) == 0x000008, "Wrong alignment on GroomComponent_SetBindingAsset");
static_assert(sizeof(GroomComponent_SetBindingAsset) == 0x000008, "Wrong size on GroomComponent_SetBindingAsset");
static_assert(offsetof(GroomComponent_SetBindingAsset, InBinding) == 0x000000, "Member 'GroomComponent_SetBindingAsset::InBinding' has a wrong offset!");

// Function HairStrandsCore.GroomComponent.SetEnableSimulation
// 0x0001 (0x0001 - 0x0000)
struct GroomComponent_SetEnableSimulation final
{
public:
	bool                                          bInEnableSimulation;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomComponent_SetEnableSimulation) == 0x000001, "Wrong alignment on GroomComponent_SetEnableSimulation");
static_assert(sizeof(GroomComponent_SetEnableSimulation) == 0x000001, "Wrong size on GroomComponent_SetEnableSimulation");
static_assert(offsetof(GroomComponent_SetEnableSimulation, bInEnableSimulation) == 0x000000, "Member 'GroomComponent_SetEnableSimulation::bInEnableSimulation' has a wrong offset!");

// Function HairStrandsCore.GroomComponent.SetGroomAsset
// 0x0008 (0x0008 - 0x0000)
struct GroomComponent_SetGroomAsset final
{
public:
	class UGroomAsset*                            Asset;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomComponent_SetGroomAsset) == 0x000008, "Wrong alignment on GroomComponent_SetGroomAsset");
static_assert(sizeof(GroomComponent_SetGroomAsset) == 0x000008, "Wrong size on GroomComponent_SetGroomAsset");
static_assert(offsetof(GroomComponent_SetGroomAsset, Asset) == 0x000000, "Member 'GroomComponent_SetGroomAsset::Asset' has a wrong offset!");

// Function HairStrandsCore.GroomComponent.SetGroomCache
// 0x0008 (0x0008 - 0x0000)
struct GroomComponent_SetGroomCache final
{
public:
	class UGroomCache*                            InGroomCache;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomComponent_SetGroomCache) == 0x000008, "Wrong alignment on GroomComponent_SetGroomCache");
static_assert(sizeof(GroomComponent_SetGroomCache) == 0x000008, "Wrong size on GroomComponent_SetGroomCache");
static_assert(offsetof(GroomComponent_SetGroomCache, InGroomCache) == 0x000000, "Member 'GroomComponent_SetGroomCache::InGroomCache' has a wrong offset!");

// Function HairStrandsCore.GroomComponent.SetHairLengthScale
// 0x0004 (0x0004 - 0x0000)
struct GroomComponent_SetHairLengthScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomComponent_SetHairLengthScale) == 0x000004, "Wrong alignment on GroomComponent_SetHairLengthScale");
static_assert(sizeof(GroomComponent_SetHairLengthScale) == 0x000004, "Wrong size on GroomComponent_SetHairLengthScale");
static_assert(offsetof(GroomComponent_SetHairLengthScale, Scale) == 0x000000, "Member 'GroomComponent_SetHairLengthScale::Scale' has a wrong offset!");

// Function HairStrandsCore.GroomComponent.SetHairLengthScaleEnable
// 0x0001 (0x0001 - 0x0000)
struct GroomComponent_SetHairLengthScaleEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomComponent_SetHairLengthScaleEnable) == 0x000001, "Wrong alignment on GroomComponent_SetHairLengthScaleEnable");
static_assert(sizeof(GroomComponent_SetHairLengthScaleEnable) == 0x000001, "Wrong size on GroomComponent_SetHairLengthScaleEnable");
static_assert(offsetof(GroomComponent_SetHairLengthScaleEnable, bEnable) == 0x000000, "Member 'GroomComponent_SetHairLengthScaleEnable::bEnable' has a wrong offset!");

// Function HairStrandsCore.GroomComponent.SetMeshDeformer
// 0x0008 (0x0008 - 0x0000)
struct GroomComponent_SetMeshDeformer final
{
public:
	class UMeshDeformer*                          InMeshDeformer;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomComponent_SetMeshDeformer) == 0x000008, "Wrong alignment on GroomComponent_SetMeshDeformer");
static_assert(sizeof(GroomComponent_SetMeshDeformer) == 0x000008, "Wrong size on GroomComponent_SetMeshDeformer");
static_assert(offsetof(GroomComponent_SetMeshDeformer, InMeshDeformer) == 0x000000, "Member 'GroomComponent_SetMeshDeformer::InMeshDeformer' has a wrong offset!");

// Function HairStrandsCore.GroomComponent.SetPhysicsAsset
// 0x0008 (0x0008 - 0x0000)
struct GroomComponent_SetPhysicsAsset final
{
public:
	class UPhysicsAsset*                          InPhysicsAsset;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GroomComponent_SetPhysicsAsset) == 0x000008, "Wrong alignment on GroomComponent_SetPhysicsAsset");
static_assert(sizeof(GroomComponent_SetPhysicsAsset) == 0x000008, "Wrong size on GroomComponent_SetPhysicsAsset");
static_assert(offsetof(GroomComponent_SetPhysicsAsset, InPhysicsAsset) == 0x000000, "Member 'GroomComponent_SetPhysicsAsset::InPhysicsAsset' has a wrong offset!");

}

