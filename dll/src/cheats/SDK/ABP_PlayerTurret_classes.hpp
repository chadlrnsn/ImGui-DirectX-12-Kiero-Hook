#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PlayerTurret

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_PlayerTurret.ABP_PlayerTurret_C
// 0x2240 (0x2600 - 0x03C0)
class UABP_PlayerTurret_C final : public UAnimInstance
{
public:
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03C8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x03D0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x03D8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x03F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0420(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0448(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x0490(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x04B0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_8;                      // 0x04D0(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x05C0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x05E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x0630(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x0650(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_7;                      // 0x0670(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0738(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0760(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0788(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x07D0(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x07F0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_6;                      // 0x0810(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x08D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0900(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0928(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x0970(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0990(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_5;                      // 0x09B0(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0A78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0AA0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0AC8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0B10(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0B30(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x0B50(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0C18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0C40(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0C68(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0CB0(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0CD0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x0CF0(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0DB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0DE0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0E08(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0E50(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0E70(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0E90(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0F58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0F80(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0FA8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0FF0(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1010(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1030(0x00C8)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_8;            // 0x10F8(0x00D0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_7;            // 0x11C8(0x00D0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_6;            // 0x1298(0x00D0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_5;            // 0x1368(0x00D0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_4;            // 0x1438(0x00D0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_3;            // 0x1508(0x00D0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_2;            // 0x15D8(0x00D0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_1;            // 0x16A8(0x00D0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x1778(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x17A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x17C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x17F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1818(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x1840(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x1860(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x1988(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x1AB0(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x1AD0(0x0040)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1B10(0x0048)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x1B58(0x00D0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1C28(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1C48(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x1C70(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x1D98(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1EC0(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x1FE8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x2008(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x2028(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2070(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2090(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x20D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x20F8(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x2140(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x2208(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x2330(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x2458(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x2478(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2498(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x24E0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2500(0x00C8)()
	float                                         Turret_Vertical_Rotation;                          // 0x25C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Turret_Horizontal_Rotation;                        // 0x25CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cannon_Ring_Rotation;                              // 0x25D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Cannon_Ring_Rotation;                       // 0x25D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cannon_1;                                          // 0x25E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cannon_2;                                          // 0x25E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cannon_3;                                          // 0x25E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cannon_4;                                          // 0x25E3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cannon_5;                                          // 0x25E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cannon_6;                                          // 0x25E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cannon_7;                                          // 0x25E6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cannon_8;                                          // 0x25E7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CannonSelector;                                    // 0x25E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25EC[0x4];                                     // 0x25EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TurretHeightOffset;                                // 0x25F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFlying;                                          // 0x25F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F9[0x3];                                     // 0x25F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InvertedTurretVerticalRotation;                    // 0x25FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerTurret_AnimGraphNode_TransitionResult_29AEF6914FF1A9C2AEE277A82F11464F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerTurret_AnimGraphNode_TransitionResult_414E4A914680C7EE0E24FBBC16B8FEFB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerTurret_AnimGraphNode_TransitionResult_89EF97084184C589AEB832ACB4C0FCA6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerTurret_AnimGraphNode_TransitionResult_9BBA84994DB3321D7ED765AA3FC01841();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerTurret_AnimGraphNode_TransitionResult_9C6996A0498FC867C3CCF2A39ECDCB04();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerTurret_AnimGraphNode_TransitionResult_C273C75C4557C002DA83B29DDB247A72();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerTurret_AnimGraphNode_TransitionResult_E6CD67CD43ACFBA2B53AA49D841F6201();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerTurret_AnimGraphNode_TransitionResult_EA3F701749CDB14475807FAEBB87309F();
	void ExecuteUbergraph_ABP_PlayerTurret(int32 EntryPoint);
	void OnProjectileFired_Event_0(class ARProjectile* Projectile);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_PlayerTurret_C">();
	}
	static class UABP_PlayerTurret_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_PlayerTurret_C>();
	}
};
static_assert(alignof(UABP_PlayerTurret_C) == 0x000010, "Wrong alignment on UABP_PlayerTurret_C");
static_assert(sizeof(UABP_PlayerTurret_C) == 0x002600, "Wrong size on UABP_PlayerTurret_C");
static_assert(offsetof(UABP_PlayerTurret_C, UberGraphFrame) == 0x0003C0, "Member 'UABP_PlayerTurret_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimBlueprintExtension_PropertyAccess) == 0x0003C8, "Member 'UABP_PlayerTurret_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimBlueprintExtension_Base) == 0x0003D0, "Member 'UABP_PlayerTurret_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_Root) == 0x0003D8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_21) == 0x0003F8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_20) == 0x000420, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer_12) == 0x000448, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_19) == 0x000490, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_18) == 0x0004B0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateMachine_8) == 0x0004D0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateMachine_8' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_19) == 0x000598, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_18) == 0x0005C0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer_11) == 0x0005E8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_17) == 0x000630, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_16) == 0x000650, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateMachine_7) == 0x000670, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateMachine_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_17) == 0x000738, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_16) == 0x000760, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer_10) == 0x000788, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_15) == 0x0007D0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_14) == 0x0007F0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateMachine_6) == 0x000810, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateMachine_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_15) == 0x0008D8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_14) == 0x000900, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer_9) == 0x000928, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_13) == 0x000970, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_12) == 0x000990, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateMachine_5) == 0x0009B0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateMachine_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_13) == 0x000A78, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_12) == 0x000AA0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer_8) == 0x000AC8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_11) == 0x000B10, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_10) == 0x000B30, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateMachine_4) == 0x000B50, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_11) == 0x000C18, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_10) == 0x000C40, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer_7) == 0x000C68, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_9) == 0x000CB0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_8) == 0x000CD0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateMachine_3) == 0x000CF0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_9) == 0x000DB8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_8) == 0x000DE0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer_6) == 0x000E08, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_7) == 0x000E50, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_6) == 0x000E70, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateMachine_2) == 0x000E90, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_7) == 0x000F58, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_6) == 0x000F80, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer_5) == 0x000FA8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_5) == 0x000FF0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_4) == 0x001010, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateMachine_1) == 0x001030, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ApplyMeshSpaceAdditive_8) == 0x0010F8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ApplyMeshSpaceAdditive_8' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ApplyMeshSpaceAdditive_7) == 0x0011C8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ApplyMeshSpaceAdditive_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ApplyMeshSpaceAdditive_6) == 0x001298, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ApplyMeshSpaceAdditive_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ApplyMeshSpaceAdditive_5) == 0x001368, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ApplyMeshSpaceAdditive_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ApplyMeshSpaceAdditive_4) == 0x001438, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ApplyMeshSpaceAdditive_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ApplyMeshSpaceAdditive_3) == 0x001508, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ApplyMeshSpaceAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ApplyMeshSpaceAdditive_2) == 0x0015D8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ApplyMeshSpaceAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ApplyMeshSpaceAdditive_1) == 0x0016A8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ApplyMeshSpaceAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_5) == 0x001778, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_4) == 0x0017A0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_3) == 0x0017C8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_2) == 0x0017F0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult_1) == 0x001818, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x001840, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ModifyBone_6) == 0x001860, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ModifyBone_5) == 0x001988, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_LocalToComponentSpace_2) == 0x001AB0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequenceEvaluator) == 0x001AD0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer_4) == 0x001B10, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x001B58, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_3) == 0x001C28, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_TransitionResult) == 0x001C48, "Member 'UABP_PlayerTurret_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ModifyBone_4) == 0x001C70, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ModifyBone_3) == 0x001D98, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ModifyBone_2) == 0x001EC0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x001FE8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_LocalToComponentSpace_1) == 0x002008, "Member 'UABP_PlayerTurret_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer_3) == 0x002028, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_2) == 0x002070, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer_2) == 0x002090, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult_1) == 0x0020D8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer_1) == 0x0020F8, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ApplyAdditive) == 0x002140, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ModifyBone_1) == 0x002208, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ModifyBone) == 0x002330, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_ComponentToLocalSpace) == 0x002458, "Member 'UABP_PlayerTurret_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_LocalToComponentSpace) == 0x002478, "Member 'UABP_PlayerTurret_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_SequencePlayer) == 0x002498, "Member 'UABP_PlayerTurret_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateResult) == 0x0024E0, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, AnimGraphNode_StateMachine) == 0x002500, "Member 'UABP_PlayerTurret_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, Turret_Vertical_Rotation) == 0x0025C8, "Member 'UABP_PlayerTurret_C::Turret_Vertical_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, Turret_Horizontal_Rotation) == 0x0025CC, "Member 'UABP_PlayerTurret_C::Turret_Horizontal_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, Cannon_Ring_Rotation) == 0x0025D0, "Member 'UABP_PlayerTurret_C::Cannon_Ring_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, Target_Cannon_Ring_Rotation) == 0x0025D8, "Member 'UABP_PlayerTurret_C::Target_Cannon_Ring_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, Cannon_1) == 0x0025E0, "Member 'UABP_PlayerTurret_C::Cannon_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, Cannon_2) == 0x0025E1, "Member 'UABP_PlayerTurret_C::Cannon_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, Cannon_3) == 0x0025E2, "Member 'UABP_PlayerTurret_C::Cannon_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, Cannon_4) == 0x0025E3, "Member 'UABP_PlayerTurret_C::Cannon_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, Cannon_5) == 0x0025E4, "Member 'UABP_PlayerTurret_C::Cannon_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, Cannon_6) == 0x0025E5, "Member 'UABP_PlayerTurret_C::Cannon_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, Cannon_7) == 0x0025E6, "Member 'UABP_PlayerTurret_C::Cannon_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, Cannon_8) == 0x0025E7, "Member 'UABP_PlayerTurret_C::Cannon_8' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, CannonSelector) == 0x0025E8, "Member 'UABP_PlayerTurret_C::CannonSelector' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, TurretHeightOffset) == 0x0025F0, "Member 'UABP_PlayerTurret_C::TurretHeightOffset' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, IsFlying) == 0x0025F8, "Member 'UABP_PlayerTurret_C::IsFlying' has a wrong offset!");
static_assert(offsetof(UABP_PlayerTurret_C, InvertedTurretVerticalRotation) == 0x0025FC, "Member 'UABP_PlayerTurret_C::InvertedTurretVerticalRotation' has a wrong offset!");

}

