#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_DamageIndicator_Container

#include "Basic.hpp"

#include "RGame_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_DamageIndicator_Container.Widget_DamageIndicator_Container_C
// 0x00E8 (0x03B8 - 0x02D0)
class UWidget_DamageIndicator_Container_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               OverlayContainer;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URHealthComponent*                      HealthComponent;                                   // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget_DamageIndicator_C*>      AvailableWidgetPool;                               // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FDamageCombatEvent                     Damage_Event;                                      // 0x02F8(0x00C0)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_Widget_DamageIndicator_Container(int32 EntryPoint);
	void OnBecomeAvailable(class UWidget_DamageIndicator_C* Widget);
	void OnDamageTaken(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEvent);
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_DamageIndicator_Container_C">();
	}
	static class UWidget_DamageIndicator_Container_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_DamageIndicator_Container_C>();
	}
};
static_assert(alignof(UWidget_DamageIndicator_Container_C) == 0x000008, "Wrong alignment on UWidget_DamageIndicator_Container_C");
static_assert(sizeof(UWidget_DamageIndicator_Container_C) == 0x0003B8, "Wrong size on UWidget_DamageIndicator_Container_C");
static_assert(offsetof(UWidget_DamageIndicator_Container_C, UberGraphFrame) == 0x0002D0, "Member 'UWidget_DamageIndicator_Container_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWidget_DamageIndicator_Container_C, OverlayContainer) == 0x0002D8, "Member 'UWidget_DamageIndicator_Container_C::OverlayContainer' has a wrong offset!");
static_assert(offsetof(UWidget_DamageIndicator_Container_C, HealthComponent) == 0x0002E0, "Member 'UWidget_DamageIndicator_Container_C::HealthComponent' has a wrong offset!");
static_assert(offsetof(UWidget_DamageIndicator_Container_C, AvailableWidgetPool) == 0x0002E8, "Member 'UWidget_DamageIndicator_Container_C::AvailableWidgetPool' has a wrong offset!");
static_assert(offsetof(UWidget_DamageIndicator_Container_C, Damage_Event) == 0x0002F8, "Member 'UWidget_DamageIndicator_Container_C::Damage_Event' has a wrong offset!");

}

