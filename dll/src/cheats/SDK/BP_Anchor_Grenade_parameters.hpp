#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Anchor_Grenade

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Anchor_Grenade.BP_Anchor_Grenade_C.ExecuteUbergraph_BP_Anchor_Grenade
// 0x0138 (0x0138 - 0x0000)
struct BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0038(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade) == 0x000008, "Wrong alignment on BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade");
static_assert(sizeof(BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade) == 0x000138, "Wrong size on BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade");
static_assert(offsetof(BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade, EntryPoint) == 0x000000, "Member 'BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x000008, "Member 'BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade, CallFunc_ComposeRotators_ReturnValue) == 0x000020, "Member 'BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000038, "Member 'BP_Anchor_Grenade_C_ExecuteUbergraph_BP_Anchor_Grenade::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_Anchor_Grenade.BP_Anchor_Grenade_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Anchor_Grenade_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Anchor_Grenade_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Anchor_Grenade_C_ReceiveTick");
static_assert(sizeof(BP_Anchor_Grenade_C_ReceiveTick) == 0x000004, "Wrong size on BP_Anchor_Grenade_C_ReceiveTick");
static_assert(offsetof(BP_Anchor_Grenade_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Anchor_Grenade_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

