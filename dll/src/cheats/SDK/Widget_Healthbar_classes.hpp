#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_Healthbar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_Healthbar.Widget_Healthbar_C
// 0x0088 (0x0358 - 0x02D0)
class UWidget_Healthbar_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OnDamageShakeAnimation;                            // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnDamageAnimation;                                 // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Invulnerable_Transition;                           // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 FillImage_Barrier;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FillImage_HealthLiquid;                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HealthbarFrameImage;                               // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HP_Text;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HP_Text_Divider;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_0;                                 // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             InvulnText;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxHP_Text;                                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWidget_Plating_C*>              Plating_Icons;                                     // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class URHealthComponent*                      HealthCompnent;                                    // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentInternalHealth;                             // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           HealthUpdateTimer;                                 // 0x0350(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_Widget_Healthbar(int32 EntryPoint);
	void HealthAnimationTick();
	void MaximumHealthChanged(class URHealthComponent* Component, float MaximumHealth);
	void OnBarrierChanged(class URHealthComponent* Component, float CurrentBarrier, float barrierDelta, const struct FHealCombatEvent& HealEvent);
	void OnBarrierDepleted(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEventData);
	void OnDamageTaken(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEvent);
	void OnHealthUpdated(class URHealthComponent* Component, float currentHealth, float healthDelta, const struct FHealCombatEvent& HealEvent);
	void OnInitialized();
	void OnInvulnurableChange(class URHealthComponent* Component, bool NewInvulnerability);
	void OnMaximumBarrierChanged(class URHealthComponent* Component, float MaximumBarrier);
	void OnMaximumPlatingsUpdated(class URHealthComponent* Component, int32 MaximumPlating);
	void OnPlatingRegained(class URHealthComponent* Component, int32 currentPlatings);
	void OnPlatingsUpdated(class URHealthComponent* Component, int32 currentPlatings);
	void StartHealthAnimation();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Update_Platings(int32 Plating_Stacks);
	void UpdateBarrierPercent();
	void UpdateCurrentHealthText();
	void UpdateHealthPercent();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_Healthbar_C">();
	}
	static class UWidget_Healthbar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_Healthbar_C>();
	}
};
static_assert(alignof(UWidget_Healthbar_C) == 0x000008, "Wrong alignment on UWidget_Healthbar_C");
static_assert(sizeof(UWidget_Healthbar_C) == 0x000358, "Wrong size on UWidget_Healthbar_C");
static_assert(offsetof(UWidget_Healthbar_C, UberGraphFrame) == 0x0002D0, "Member 'UWidget_Healthbar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, OnDamageShakeAnimation) == 0x0002D8, "Member 'UWidget_Healthbar_C::OnDamageShakeAnimation' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, OnDamageAnimation) == 0x0002E0, "Member 'UWidget_Healthbar_C::OnDamageAnimation' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, Invulnerable_Transition) == 0x0002E8, "Member 'UWidget_Healthbar_C::Invulnerable_Transition' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, FillImage_Barrier) == 0x0002F0, "Member 'UWidget_Healthbar_C::FillImage_Barrier' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, FillImage_HealthLiquid) == 0x0002F8, "Member 'UWidget_Healthbar_C::FillImage_HealthLiquid' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, HealthbarFrameImage) == 0x000300, "Member 'UWidget_Healthbar_C::HealthbarFrameImage' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, HP_Text) == 0x000308, "Member 'UWidget_Healthbar_C::HP_Text' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, HP_Text_Divider) == 0x000310, "Member 'UWidget_Healthbar_C::HP_Text_Divider' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, InvalidationBox_0) == 0x000318, "Member 'UWidget_Healthbar_C::InvalidationBox_0' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, InvulnText) == 0x000320, "Member 'UWidget_Healthbar_C::InvulnText' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, MaxHP_Text) == 0x000328, "Member 'UWidget_Healthbar_C::MaxHP_Text' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, Plating_Icons) == 0x000330, "Member 'UWidget_Healthbar_C::Plating_Icons' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, HealthCompnent) == 0x000340, "Member 'UWidget_Healthbar_C::HealthCompnent' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, CurrentInternalHealth) == 0x000348, "Member 'UWidget_Healthbar_C::CurrentInternalHealth' has a wrong offset!");
static_assert(offsetof(UWidget_Healthbar_C, HealthUpdateTimer) == 0x000350, "Member 'UWidget_Healthbar_C::HealthUpdateTimer' has a wrong offset!");

}

