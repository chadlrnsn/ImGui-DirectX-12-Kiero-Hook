#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Activatable_CharacterMutator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Activatable_CharacterMutator.BP_Activatable_CharacterMutator_C
// 0x0038 (0x0EA0 - 0x0E68)
class UBP_Activatable_CharacterMutator_C : public URGAbilityCharacterMutatorScript
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E68(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTexture2D*                             AbilityIcon;                                       // 0x0E70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SweetSpotIncrements;                               // 0x0E78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bChargeStarted;                                    // 0x0E7C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E7D[0x3];                                      // 0x0E7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           RechargeTimerHandleBP;                             // 0x0E80(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquippable;                                      // 0x0E88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E89[0x7];                                      // 0x0E89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CooldownFinishedSFX;                               // 0x0E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        LeftoverCooldown;                                  // 0x0E98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddStacks(int32 Delta);
	void AlterCurrentRechargeCooldown(double Delta);
	double CalculateSweetSpotTimer();
	void CancelRechargeTimer();
	void ExecuteUbergraph_BP_Activatable_CharacterMutator(int32 EntryPoint);
	void Get_Remaining_Cooldown(double* RemainingCooldown);
	void Get_Remaining_Recharge_Cooldown_BP(double* RemainingRechargeCooldown);
	void HasInputBlocker(bool* Value);
	void IsChargeUpDone(bool* RetValue);
	void IsRecharging(bool* Return);
	void K2_ActivateScript();
	void K2_DeactivateScript();
	void K2_OnAbilityActivate(int32 AbilityIndex_0);
	void K2_OnAbilityReleased(int32 AbilityIndex_0);
	void OnAbilityDisabled();
	void OnAbilityEnabled();
	void OnChargeStarted();
	void OnFinishedCooldown();
	void OnLevelChanged_Event();
	void OnReleaseChargeUp();
	void OnSegmentCompleted_Event(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment);
	void OnSegmentCompleted_Multicast();
	void RechargeDone();
	void ReduceCurrentRechargeCooldown(double ReductionPercentage);
	void RefillStacks();
	void ResetAbilityStacks();
	void SetCurrentRechargeCooldown(double Cooldown);
	void StartRechargeCooldown(double Cooldown);

	class FText GetDescription() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Activatable_CharacterMutator_C">();
	}
	static class UBP_Activatable_CharacterMutator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Activatable_CharacterMutator_C>();
	}
};
static_assert(alignof(UBP_Activatable_CharacterMutator_C) == 0x000008, "Wrong alignment on UBP_Activatable_CharacterMutator_C");
static_assert(sizeof(UBP_Activatable_CharacterMutator_C) == 0x000EA0, "Wrong size on UBP_Activatable_CharacterMutator_C");
static_assert(offsetof(UBP_Activatable_CharacterMutator_C, UberGraphFrame) == 0x000E68, "Member 'UBP_Activatable_CharacterMutator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Activatable_CharacterMutator_C, AbilityIcon) == 0x000E70, "Member 'UBP_Activatable_CharacterMutator_C::AbilityIcon' has a wrong offset!");
static_assert(offsetof(UBP_Activatable_CharacterMutator_C, SweetSpotIncrements) == 0x000E78, "Member 'UBP_Activatable_CharacterMutator_C::SweetSpotIncrements' has a wrong offset!");
static_assert(offsetof(UBP_Activatable_CharacterMutator_C, bChargeStarted) == 0x000E7C, "Member 'UBP_Activatable_CharacterMutator_C::bChargeStarted' has a wrong offset!");
static_assert(offsetof(UBP_Activatable_CharacterMutator_C, RechargeTimerHandleBP) == 0x000E80, "Member 'UBP_Activatable_CharacterMutator_C::RechargeTimerHandleBP' has a wrong offset!");
static_assert(offsetof(UBP_Activatable_CharacterMutator_C, IsEquippable) == 0x000E88, "Member 'UBP_Activatable_CharacterMutator_C::IsEquippable' has a wrong offset!");
static_assert(offsetof(UBP_Activatable_CharacterMutator_C, CooldownFinishedSFX) == 0x000E90, "Member 'UBP_Activatable_CharacterMutator_C::CooldownFinishedSFX' has a wrong offset!");
static_assert(offsetof(UBP_Activatable_CharacterMutator_C, LeftoverCooldown) == 0x000E98, "Member 'UBP_Activatable_CharacterMutator_C::LeftoverCooldown' has a wrong offset!");

}

