#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HealingFlask_CharacterMutator

#include "Basic.hpp"

#include "BP_FlaskBase_CharacterMutator_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HealingFlask_CharacterMutator.BP_HealingFlask_CharacterMutator_C
// 0x0028 (0x0EE0 - 0x0EB8)
class UBP_HealingFlask_CharacterMutator_C final : public UBP_FlaskBase_CharacterMutator_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_HealingFlask_CharacterMutator_C; // 0x0EB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ARPlayerPawn*                           As_RPlayer_Pawn;                                   // 0x0EC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Cast_Time;                                         // 0x0EC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnHealingFlaskHeal;                                // 0x0ED0(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnPlayerDowned(class ARPlayerPawn* Player);
	void OnNotifyEnd_3ECAEAC84DF83AE9B06581AF447B6167(class FName NotifyName);
	void OnNotifyBegin_3ECAEAC84DF83AE9B06581AF447B6167(class FName NotifyName);
	void OnLocalPlayerReconnectSync(const struct FRDisconnectedPlayerData& PlayerData);
	void OnInvoke_74952549483B23663A462690B2A8EC60();
	void OnInterrupted_3ECAEAC84DF83AE9B06581AF447B6167(class FName NotifyName);
	void OnCompleted_3ECAEAC84DF83AE9B06581AF447B6167(class FName NotifyName);
	void OnBlendOut_3ECAEAC84DF83AE9B06581AF447B6167(class FName NotifyName);
	void K2_OnDeath();
	void K2_OnAbilityActivate(int32 AbilityIndex_0);
	void K2_ActivateScript();
	void IsPlayerStateValid(bool* RetValue);
	void FireAbility();
	void ExecuteUbergraph_BP_HealingFlask_CharacterMutator(int32 EntryPoint);
	bool BPCanFireAbility();

	class FText GetDescription() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HealingFlask_CharacterMutator_C">();
	}
	static class UBP_HealingFlask_CharacterMutator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HealingFlask_CharacterMutator_C>();
	}
};
static_assert(alignof(UBP_HealingFlask_CharacterMutator_C) == 0x000008, "Wrong alignment on UBP_HealingFlask_CharacterMutator_C");
static_assert(sizeof(UBP_HealingFlask_CharacterMutator_C) == 0x000EE0, "Wrong size on UBP_HealingFlask_CharacterMutator_C");
static_assert(offsetof(UBP_HealingFlask_CharacterMutator_C, UberGraphFrame_BP_HealingFlask_CharacterMutator_C) == 0x000EB8, "Member 'UBP_HealingFlask_CharacterMutator_C::UberGraphFrame_BP_HealingFlask_CharacterMutator_C' has a wrong offset!");
static_assert(offsetof(UBP_HealingFlask_CharacterMutator_C, As_RPlayer_Pawn) == 0x000EC0, "Member 'UBP_HealingFlask_CharacterMutator_C::As_RPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(UBP_HealingFlask_CharacterMutator_C, Cast_Time) == 0x000EC8, "Member 'UBP_HealingFlask_CharacterMutator_C::Cast_Time' has a wrong offset!");
static_assert(offsetof(UBP_HealingFlask_CharacterMutator_C, OnHealingFlaskHeal) == 0x000ED0, "Member 'UBP_HealingFlask_CharacterMutator_C::OnHealingFlaskHeal' has a wrong offset!");

}

