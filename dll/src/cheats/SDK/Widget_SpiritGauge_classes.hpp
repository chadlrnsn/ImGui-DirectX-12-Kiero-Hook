#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_SpiritGauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_SpiritGauge.Widget_SpiritGauge_C
// 0x0058 (0x0328 - 0x02D0)
class UWidget_SpiritGauge_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ThresholdReached_Animation;                        // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Reset_Animation;                                   // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BecomeHidden_Animation;                            // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BecomeVisible_Animation;                           // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Frame;                                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FrameLines;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_0;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           SpiritGauge;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        TargetGaugePrecentage;                             // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Filled;                                            // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Widget_SpiritGauge(int32 EntryPoint);
	void GaugeReset();
	void SetGaugePercent(float Percent);
	void SetGaugeVisibility(ESlateVisibility Visibility_0);
	void ThresholdReached();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_SpiritGauge_C">();
	}
	static class UWidget_SpiritGauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_SpiritGauge_C>();
	}
};
static_assert(alignof(UWidget_SpiritGauge_C) == 0x000008, "Wrong alignment on UWidget_SpiritGauge_C");
static_assert(sizeof(UWidget_SpiritGauge_C) == 0x000328, "Wrong size on UWidget_SpiritGauge_C");
static_assert(offsetof(UWidget_SpiritGauge_C, UberGraphFrame) == 0x0002D0, "Member 'UWidget_SpiritGauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWidget_SpiritGauge_C, ThresholdReached_Animation) == 0x0002D8, "Member 'UWidget_SpiritGauge_C::ThresholdReached_Animation' has a wrong offset!");
static_assert(offsetof(UWidget_SpiritGauge_C, Reset_Animation) == 0x0002E0, "Member 'UWidget_SpiritGauge_C::Reset_Animation' has a wrong offset!");
static_assert(offsetof(UWidget_SpiritGauge_C, BecomeHidden_Animation) == 0x0002E8, "Member 'UWidget_SpiritGauge_C::BecomeHidden_Animation' has a wrong offset!");
static_assert(offsetof(UWidget_SpiritGauge_C, BecomeVisible_Animation) == 0x0002F0, "Member 'UWidget_SpiritGauge_C::BecomeVisible_Animation' has a wrong offset!");
static_assert(offsetof(UWidget_SpiritGauge_C, Frame) == 0x0002F8, "Member 'UWidget_SpiritGauge_C::Frame' has a wrong offset!");
static_assert(offsetof(UWidget_SpiritGauge_C, FrameLines) == 0x000300, "Member 'UWidget_SpiritGauge_C::FrameLines' has a wrong offset!");
static_assert(offsetof(UWidget_SpiritGauge_C, InvalidationBox_0) == 0x000308, "Member 'UWidget_SpiritGauge_C::InvalidationBox_0' has a wrong offset!");
static_assert(offsetof(UWidget_SpiritGauge_C, SpiritGauge) == 0x000310, "Member 'UWidget_SpiritGauge_C::SpiritGauge' has a wrong offset!");
static_assert(offsetof(UWidget_SpiritGauge_C, TargetGaugePrecentage) == 0x000318, "Member 'UWidget_SpiritGauge_C::TargetGaugePrecentage' has a wrong offset!");
static_assert(offsetof(UWidget_SpiritGauge_C, Filled) == 0x000320, "Member 'UWidget_SpiritGauge_C::Filled' has a wrong offset!");

}

