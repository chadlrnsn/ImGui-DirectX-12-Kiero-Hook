#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OceanGod_Tentacle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.AddSpawnableProjectileClass
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_AddSpawnableProjectileClass final
{
public:
	class UClass*                                 NewProjectileClass;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_AddSpawnableProjectileClass) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_AddSpawnableProjectileClass");
static_assert(sizeof(BP_OceanGod_Tentacle_C_AddSpawnableProjectileClass) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_AddSpawnableProjectileClass");
static_assert(offsetof(BP_OceanGod_Tentacle_C_AddSpawnableProjectileClass, NewProjectileClass) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_AddSpawnableProjectileClass::NewProjectileClass' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.AddToNumTentaclesSpawned
// 0x0038 (0x0038 - 0x0000)
struct BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned final
{
public:
	int32                                         NumSpawned;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URGCharacterMutatorScript*              CallFunc_GetCharacterMutator_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Ocean_GodPassive_CharacterMutatorScript_C* K2Node_DynamicCast_AsBP_Ocean_God_Passive_Character_Mutator_Script; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned");
static_assert(sizeof(BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned) == 0x000038, "Wrong size on BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned");
static_assert(offsetof(BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned, NumSpawned) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned::NumSpawned' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000008, "Member 'BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned, CallFunc_GetCharacterMutator_ReturnValue) == 0x000018, "Member 'BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned::CallFunc_GetCharacterMutator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned, CallFunc_HasMutator_ReturnValue) == 0x000020, "Member 'BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned::CallFunc_HasMutator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned, K2Node_DynamicCast_AsBP_Ocean_God_Passive_Character_Mutator_Script) == 0x000028, "Member 'BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned::K2Node_DynamicCast_AsBP_Ocean_God_Passive_Character_Mutator_Script' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_OceanGod_Tentacle_C_AddToNumTentaclesSpawned::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.AttackCooldown
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_AttackCooldown final
{
public:
	double                                        AttackCooldown_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_AttackCooldown) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_AttackCooldown");
static_assert(sizeof(BP_OceanGod_Tentacle_C_AttackCooldown) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_AttackCooldown");
static_assert(offsetof(BP_OceanGod_Tentacle_C_AttackCooldown, AttackCooldown_0) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_AttackCooldown::AttackCooldown_0' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.BP_AddSpawnableProjectileClass
// 0x0018 (0x0018 - 0x0000)
struct BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass final
{
public:
	const class UClass*                           NewProjectileClass;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsRProjectile;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass");
static_assert(sizeof(BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass) == 0x000018, "Wrong size on BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass");
static_assert(offsetof(BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass, NewProjectileClass) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass::NewProjectileClass' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass, K2Node_ClassDynamicCast_AsRProjectile) == 0x000008, "Member 'BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass::K2Node_ClassDynamicCast_AsRProjectile' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass, K2Node_ClassDynamicCast_bSuccess) == 0x000010, "Member 'BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass, CallFunc_Array_AddUnique_ReturnValue) == 0x000014, "Member 'BP_OceanGod_Tentacle_C_BP_AddSpawnableProjectileClass::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.CalculateLaunchVelocity
// 0x0210 (0x0210 - 0x0000)
struct BP_OceanGod_Tentacle_C_CalculateLaunchVelocity final
{
public:
	class ARProjectile*                           Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        AngleDegrees;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetPosition;                                    // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnVelocity;                                    // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InitialVelocity;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZOffset;                                           // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlanarPosition;                                    // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlanarTarget;                                      // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Gravity;                                           // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AngleRads;                                         // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cos_ReturnValue;                          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sin_ReturnValue;                          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Tan_ReturnValue;                          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sqrt_ReturnValue;                         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sqrt_ReturnValue_1;                       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cos_ReturnValue_1;                        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_CalculateLaunchVelocity");
static_assert(sizeof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity) == 0x000210, "Wrong size on BP_OceanGod_Tentacle_C_CalculateLaunchVelocity");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, Projectile) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::Projectile' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, AngleDegrees) == 0x000008, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::AngleDegrees' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, TargetPosition) == 0x000010, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::TargetPosition' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, ReturnVelocity) == 0x000028, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::ReturnVelocity' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, Velocity) == 0x000040, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, InitialVelocity) == 0x000058, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::InitialVelocity' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, ZOffset) == 0x000060, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::ZOffset' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, PlanarPosition) == 0x000068, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::PlanarPosition' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, PlanarTarget) == 0x000080, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::PlanarTarget' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, Gravity) == 0x000098, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::Gravity' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, AngleRads) == 0x0000A0, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::AngleRads' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, Distance) == 0x0000A8, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::Distance' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_BreakVector_X) == 0x0000B0, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_BreakVector_Y) == 0x0000B8, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_BreakVector_Z) == 0x0000C0, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_DegreesToRadians_ReturnValue) == 0x0000C8, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E8, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_BreakVector_X_1) == 0x000100, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_BreakVector_Y_1) == 0x000108, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_BreakVector_Z_1) == 0x000110, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000118, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000120, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_MakeVector_ReturnValue_1) == 0x000128, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Vector_Up_ReturnValue) == 0x000140, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_RotateAngleAxis_ReturnValue) == 0x000158, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Cos_ReturnValue) == 0x000170, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Sin_ReturnValue) == 0x000178, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Tan_ReturnValue) == 0x000180, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Tan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Sqrt_ReturnValue) == 0x000188, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000190, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000198, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0001A8, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0001B8, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Sqrt_ReturnValue_1) == 0x0001C0, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Sqrt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0001C8, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_MakeVector_ReturnValue_2) == 0x0001D0, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Cos_ReturnValue_1) == 0x0001E8, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Cos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0001F0, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0001F8, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000200, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CalculateLaunchVelocity, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000208, "Member 'BP_OceanGod_Tentacle_C_CalculateLaunchVelocity::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.CheckAndGetMultiplierForOceanPassive1
// 0x0098 (0x0098 - 0x0000)
struct BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1 final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewLocalVar;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URPlayerGScriptComponent*               GScriptOwnerComponent;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ARNPCPawnBase*>                  Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMutatorRank_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMutatorValueByArrayIndex_ReturnValue;  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllAliveEnemyPawnsInRadius_ReturnValue; // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectASoftClass_ReturnValue;           // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectChildOfSoftClass_ReturnValue;     // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMutatorRank_ReturnValue_1;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMutatorValueByArrayIndex_ReturnValue_1; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1");
static_assert(sizeof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1) == 0x000098, "Wrong size on BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, ReturnValue) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, NewLocalVar) == 0x000008, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, GScriptOwnerComponent) == 0x000010, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::GScriptOwnerComponent' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, Temp_object_Variable) == 0x000018, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_GetMutatorRank_ReturnValue) == 0x000040, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_GetMutatorRank_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_GetMutatorValueByArrayIndex_ReturnValue) == 0x000044, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_GetMutatorValueByArrayIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_GetAllAliveEnemyPawnsInRadius_ReturnValue) == 0x000048, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_GetAllAliveEnemyPawnsInRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005D, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_IsObjectASoftClass_ReturnValue) == 0x00005E, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_IsObjectASoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_IsObjectChildOfSoftClass_ReturnValue) == 0x00005F, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_IsObjectChildOfSoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_BooleanOR_ReturnValue) == 0x000060, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000068, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_HasMutator_ReturnValue) == 0x000071, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_HasMutator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_GetMutatorRank_ReturnValue_1) == 0x000074, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_GetMutatorRank_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_GetMutatorValueByArrayIndex_ReturnValue_1) == 0x000078, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_GetMutatorValueByArrayIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'BP_OceanGod_Tentacle_C_CheckAndGetMultiplierForOceanPassive1::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.DetermineSpawnAmount
// 0x00A8 (0x00A8 - 0x0000)
struct BP_OceanGod_Tentacle_C_DetermineSpawnAmount final
{
public:
	int32                                         ProjectileAmount;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RolledChance;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URPlayerGScriptComponent*               LocalGScriptComponent;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMutatorRank_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMutatorValueByArrayIndex_ReturnValue;  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMutatorRank_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMutatorValueByArrayIndex_ReturnValue_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue_1;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMutatorRank_ReturnValue_2;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMutatorValueByArrayIndex_ReturnValue_2; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue_2;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMutatorRank_ReturnValue_3;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue_3;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMutatorValueByArrayIndex_ReturnValue_3; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue_4;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue_5;                 // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast_1;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast_2;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast_3;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_DetermineSpawnAmount");
static_assert(sizeof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount) == 0x0000A8, "Wrong size on BP_OceanGod_Tentacle_C_DetermineSpawnAmount");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, ProjectileAmount) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::ProjectileAmount' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, RolledChance) == 0x000004, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::RolledChance' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, LocalGScriptComponent) == 0x000008, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::LocalGScriptComponent' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_GetMutatorRank_ReturnValue) == 0x000010, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_GetMutatorRank_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_GetMutatorValueByArrayIndex_ReturnValue) == 0x000020, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_GetMutatorValueByArrayIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000024, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_HasMutator_ReturnValue) == 0x000025, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_HasMutator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_BooleanAND_ReturnValue) == 0x000026, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_GetMutatorRank_ReturnValue_1) == 0x000028, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_GetMutatorRank_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_GetMutatorValueByArrayIndex_ReturnValue_1) == 0x00002C, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_GetMutatorValueByArrayIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000030, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_HasMutator_ReturnValue_1) == 0x000039, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_HasMutator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_BooleanAND_ReturnValue_1) == 0x00003A, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_GetMutatorRank_ReturnValue_2) == 0x00003C, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_GetMutatorRank_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_GetMutatorValueByArrayIndex_ReturnValue_2) == 0x000040, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_GetMutatorValueByArrayIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000048, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_HasMutator_ReturnValue_2) == 0x000051, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_HasMutator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_BooleanAND_ReturnValue_2) == 0x000052, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000058, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_GetMutatorRank_ReturnValue_3) == 0x000060, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_GetMutatorRank_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_HasMutator_ReturnValue_3) == 0x000064, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_HasMutator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_GetMutatorValueByArrayIndex_ReturnValue_3) == 0x000068, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_GetMutatorValueByArrayIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00006C, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_BooleanAND_ReturnValue_3) == 0x000071, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_HasMutator_ReturnValue_4) == 0x000072, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_HasMutator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_HasMutator_ReturnValue_5) == 0x000073, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_HasMutator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_BooleanOR_ReturnValue) == 0x000074, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_IsValid_ReturnValue) == 0x000075, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000078, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000088, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Less_DoubleDouble_B_ImplicitCast_1) == 0x000090, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Less_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Less_DoubleDouble_B_ImplicitCast_2) == 0x000098, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Less_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DetermineSpawnAmount, CallFunc_Less_DoubleDouble_B_ImplicitCast_3) == 0x0000A0, "Member 'BP_OceanGod_Tentacle_C_DetermineSpawnAmount::CallFunc_Less_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.DoesProjectileTargetEnemies
// 0x0018 (0x0018 - 0x0000)
struct BP_OceanGod_Tentacle_C_DoesProjectileTargetEnemies final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Ocean_God_Tentacle_Projectile_Base; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_DoesProjectileTargetEnemies) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_DoesProjectileTargetEnemies");
static_assert(sizeof(BP_OceanGod_Tentacle_C_DoesProjectileTargetEnemies) == 0x000018, "Wrong size on BP_OceanGod_Tentacle_C_DoesProjectileTargetEnemies");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DoesProjectileTargetEnemies, Result) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_DoesProjectileTargetEnemies::Result' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DoesProjectileTargetEnemies, K2Node_ClassDynamicCast_AsBP_Ocean_God_Tentacle_Projectile_Base) == 0x000008, "Member 'BP_OceanGod_Tentacle_C_DoesProjectileTargetEnemies::K2Node_ClassDynamicCast_AsBP_Ocean_God_Tentacle_Projectile_Base' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_DoesProjectileTargetEnemies, K2Node_ClassDynamicCast_bSuccess) == 0x000010, "Member 'BP_OceanGod_Tentacle_C_DoesProjectileTargetEnemies::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.ExecuteUbergraph_BP_OceanGod_Tentacle
// 0x0BA8 (0x0BA8 - 0x0000)
struct BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Event_NewProjectileClass;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0128(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Socket;                               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Bool;                                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_AttackCooldown;                 // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x0170(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAttackCooldown_Cooldown;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x01A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAttackCooldown_Cooldown_1;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AREnemySpawnManager*                    CallFunc_GetSpawnManager_ReturnValue;              // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AREnemySpawnAreaSegment*                K2Node_CustomEvent_EnemySpawnAreaSegment;          // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x01D0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x023C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetAttackCooldown_Cooldown_2;             // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_DetermineSpawnAmount_ProjectileAmount;    // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_EventName;                            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0288(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0298(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsRProjectile_Base;        // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB[0x1];                                      // 0x03AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0428(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0488(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_FindDefaultComponentByClass_ReturnValue;  // 0x0590(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0598(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetOverlayMaterial_ReturnValue;           // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x05B0(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x06B0(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x06C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x06CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CD[0x3];                                      // 0x06CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment)> K2Node_CreateDelegate_OutputDelegate_14; // 0x06D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x06E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EC[0x4];                                      // 0x06EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0718(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x0760(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0770(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A4[0x4];                                      // 0x07A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C9[0x7];                                      // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x07D0(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x08D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D5[0x3];                                      // 0x08D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLifeSpan_ReturnValue;                  // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x08DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E4[0x4];                                      // 0x08E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F1[0x7];                                      // 0x08F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x08F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_901[0x7];                                      // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0908(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0920(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0940(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0960(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0978(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x0980(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0A88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA1[0x7];                                      // 0x0AA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0AA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0AB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URAudioMixingSubsystem*                 CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0AC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0AD0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD9[0x3];                                      // 0x0AD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x0ADC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AEC[0x4];                                      // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0AF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B01[0x7];                                      // 0x0B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput; // 0x0B08(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0B18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URAudioMixingSubsystem*                 CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0B20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B29[0x7];                                      // 0x0B29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_2;              // 0x0B30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNonLocalPlayerVolumeMultiplier_ReturnValue; // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x0B3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3D[0x3];                                      // 0x0B3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNonLocalPlayerVolumeMultiplier_ReturnValue_1; // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B44[0x4];                                      // 0x0B44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_3;              // 0x0B48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SetAudioComponentSettingsMultiplayer_ReturnValue; // 0x0B50(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URAudioMixingSubsystem*                 CallFunc_GetWorldSubsystem_ReturnValue_2;          // 0x0B58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNonLocalPlayerVolumeMultiplier_ReturnValue_2; // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLifeSpan_InLifespan_ImplicitCast;      // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast; // 0x0B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B74[0x4];                                      // 0x0B74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RLerp_Alpha_ImplicitCast;                 // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B84[0x4];                                      // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0B94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0B98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0B9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle");
static_assert(sizeof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle) == 0x000BA8, "Wrong size on BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, EntryPoint) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_Event_NewProjectileClass) == 0x000008, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_Event_NewProjectileClass' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, Temp_name_Variable) == 0x000010, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_9) == 0x000018, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_8) == 0x000030, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_7) == 0x000048, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_6) == 0x000060, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_3) == 0x000068, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_5) == 0x000078, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_4) == 0x000080, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, Temp_name_Variable_1) == 0x000090, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_5) == 0x000098, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_4) == 0x0000A8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_3) == 0x0000B0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000B8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_2) == 0x0000C8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000D0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_1) == 0x0000E0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000E8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName) == 0x0000F8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_9) == 0x000100, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, Temp_name_Variable_2) == 0x000110, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, Temp_int_Array_Index_Variable) == 0x000118, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_IsValid_ReturnValue) == 0x00011C, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_14) == 0x000120, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_10) == 0x000128, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_10) == 0x000138, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_Event_Socket) == 0x000140, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_Event_Socket' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_Event_Bool) == 0x000148, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_Event_Bool' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000150, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_AttackCooldown) == 0x000168, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_AttackCooldown' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_11) == 0x000170, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000180, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetAttackCooldown_Cooldown) == 0x000188, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetAttackCooldown_Cooldown' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, Temp_int_Variable) == 0x000190, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_IsValid_ReturnValue_1) == 0x000194, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Add_IntInt_ReturnValue) == 0x000198, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x00019C, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_12) == 0x0001A0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetAttackCooldown_Cooldown_1) == 0x0001B0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetAttackCooldown_Cooldown_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetSpawnManager_ReturnValue) == 0x0001B8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetSpawnManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_EnemySpawnAreaSegment) == 0x0001C0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_EnemySpawnAreaSegment' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_IsValid_ReturnValue_2) == 0x0001C8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_MakeArray_Array) == 0x0001D0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001E0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0001F8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Add_VectorVector_ReturnValue) == 0x000210, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_11) == 0x000228, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000230, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_HasAuthority_ReturnValue) == 0x000238, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_13) == 0x00023C, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetAttackCooldown_Cooldown_2) == 0x000250, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetAttackCooldown_Cooldown_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000258, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_DetermineSpawnAmount_ProjectileAmount) == 0x00025C, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_DetermineSpawnAmount_ProjectileAmount' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_Event_EventName) == 0x000260, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_Event_EventName' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_SwitchName_CmpSuccess) == 0x000268, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000270, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000278, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_IsValid_ReturnValue_3) == 0x000280, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_IsValid_ReturnValue_4) == 0x000281, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, Temp_object_Variable) == 0x000288, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000298, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000398, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_ClassDynamicCast_AsRProjectile_Base) == 0x0003A0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_ClassDynamicCast_AsRProjectile_Base' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_ClassDynamicCast_bSuccess) == 0x0003A8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_bBlockingHit) == 0x0003A9, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003AA, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_Time) == 0x0003AC, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_Distance) == 0x0003B0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_Location) == 0x0003B8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_ImpactPoint) == 0x0003D0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_Normal) == 0x0003E8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_ImpactNormal) == 0x000400, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_PhysMat) == 0x000418, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_HitActor) == 0x000420, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_HitComponent) == 0x000428, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_HitBoneName) == 0x000430, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_BoneName) == 0x000438, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_HitItem) == 0x000440, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_ElementIndex) == 0x000444, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_FaceIndex) == 0x000448, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_TraceStart) == 0x000450, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_BreakHitResult_TraceEnd) == 0x000468, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_ClassIsChildOf_ReturnValue) == 0x000480, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000488, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000588, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_FindDefaultComponentByClass_ReturnValue) == 0x000590, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_FindDefaultComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000598, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_DynamicCast_bSuccess) == 0x0005A0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetOverlayMaterial_ReturnValue) == 0x0005A8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetOverlayMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0005B0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetMaterials_ReturnValue) == 0x0006B0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Array_Get_Item) == 0x0006C0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Array_Length_ReturnValue) == 0x0006C8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_SetStaticMesh_ReturnValue) == 0x0006CC, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_14) == 0x0006D0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_Event_DeltaSeconds) == 0x0006E0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_12) == 0x0006E4, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0006F0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0006F8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_IsValid_ReturnValue_5) == 0x000710, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000718, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000730, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000748, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_15) == 0x000760, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000770, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_MakeRotFromX_ReturnValue) == 0x000788, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, Temp_int_Loop_Counter_Variable) == 0x0007A0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0007A8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_RLerp_ReturnValue) == 0x0007B0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Less_IntInt_ReturnValue) == 0x0007C8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0007D0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Add_IntInt_ReturnValue_1) == 0x0008D0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_IsValid_ReturnValue_6) == 0x0008D4, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetLifeSpan_ReturnValue) == 0x0008D8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetLifeSpan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CustomEvent_NotifyName_13) == 0x0008DC, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0008E8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0008F0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x0008F8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_IsValid_ReturnValue_7) == 0x000900, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000908, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000920, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000928, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000940, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_RandomFloatInRange_ReturnValue) == 0x000948, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000950, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000958, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_MakeRotator_ReturnValue) == 0x000960, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000978, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x000980, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000A80, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000A88, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000AA0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetGameState_ReturnValue) == 0x000AA8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000AB0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000AC8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000AD0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_IsValid_ReturnValue_8) == 0x000AD8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, K2Node_CreateDelegate_OutputDelegate_16) == 0x000ADC, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetInstigator_ReturnValue) == 0x000AF0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000AF8, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_IsLocallyControlled_ReturnValue) == 0x000B00, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_SetFloatParameter_self_CastInput) == 0x000B08, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_SetFloatParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetInstigator_ReturnValue_1) == 0x000B18, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000B20, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000B28, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetInstigator_ReturnValue_2) == 0x000B30, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetInstigator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetNonLocalPlayerVolumeMultiplier_ReturnValue) == 0x000B38, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetNonLocalPlayerVolumeMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x000B3C, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetNonLocalPlayerVolumeMultiplier_ReturnValue_1) == 0x000B40, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetNonLocalPlayerVolumeMultiplier_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetInstigator_ReturnValue_3) == 0x000B48, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetInstigator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_SetAudioComponentSettingsMultiplayer_ReturnValue) == 0x000B50, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_SetAudioComponentSettingsMultiplayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetWorldSubsystem_ReturnValue_2) == 0x000B58, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetWorldSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_GetNonLocalPlayerVolumeMultiplier_ReturnValue_2) == 0x000B60, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_GetNonLocalPlayerVolumeMultiplier_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_SetLifeSpan_InLifespan_ImplicitCast) == 0x000B64, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_SetLifeSpan_InLifespan_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000B68, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast) == 0x000B6C, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Delay_Duration_ImplicitCast) == 0x000B70, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000B78, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_RLerp_Alpha_ImplicitCast) == 0x000B80, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_RLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000B88, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000B90, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000B94, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000B98, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000B9C, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x000BA0, "Member 'BP_OceanGod_Tentacle_C_ExecuteUbergraph_BP_OceanGod_Tentacle::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.FireProjectileAtTarget
// 0x0290 (0x0290 - 0x0000)
struct BP_OceanGod_Tentacle_C_FireProjectileAtTarget final
{
public:
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDamage_Damage;                         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_OceanGod_Tentacle_ProjectileBase_C* K2Node_DynamicCast_AsBP_Ocean_God_Tentacle_Projectile_Base; // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalculateLaunchVelocity_ReturnVelocity;   // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBaseDamage_newBaseDamage_ImplicitCast; // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget) == 0x000010, "Wrong alignment on BP_OceanGod_Tentacle_C_FireProjectileAtTarget");
static_assert(sizeof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget) == 0x000290, "Wrong size on BP_OceanGod_Tentacle_C_FireProjectileAtTarget");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_GetSocketLocation_ReturnValue) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000018, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_GetActorBounds_Origin) == 0x000038, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_GetActorBounds_BoxExtent) == 0x000050, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_Normal_ReturnValue) == 0x000080, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_MakeRotFromX_ReturnValue) == 0x000098, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000110, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000128, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_Vector_Up_ReturnValue) == 0x000140, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000158, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_FindLookAtRotation_ReturnValue) == 0x000170, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_Normal_ReturnValue_1) == 0x000188, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_GetForwardVector_ReturnValue) == 0x0001A0, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_GetDamage_Damage) == 0x0001B8, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_GetDamage_Damage' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_Cross_VectorVector_ReturnValue) == 0x0001C0, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001D8, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0001E0, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_DegAcos_ReturnValue) == 0x0001E8, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_SignOfFloat_ReturnValue) == 0x0001F0, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001F8, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000200, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_MakeRotator_ReturnValue) == 0x000208, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_FinishSpawningActor_ReturnValue) == 0x000220, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, K2Node_DynamicCast_AsBP_Ocean_God_Tentacle_Projectile_Base) == 0x000228, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::K2Node_DynamicCast_AsBP_Ocean_God_Tentacle_Projectile_Base' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, K2Node_DynamicCast_bSuccess) == 0x000230, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_CalculateLaunchVelocity_ReturnVelocity) == 0x000238, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_CalculateLaunchVelocity_ReturnVelocity' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000250, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000268, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_SetBaseDamage_newBaseDamage_ImplicitCast) == 0x000280, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_SetBaseDamage_newBaseDamage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_FireProjectileAtTarget, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000284, "Member 'BP_OceanGod_Tentacle_C_FireProjectileAtTarget::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.Get Targets in Radius
// 0x00B0 (0x00B0 - 0x0000)
struct BP_OceanGod_Tentacle_C_Get_Targets_in_Radius final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OriginActor;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TargetsFound;                                      // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARNPCPawnBase*>                  OutTargets;                                        // 0x0030(0x0010)(Parm, OutParm)
	TArray<class ARNPCPawnBase*>                  Targets;                                           // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	TArray<class ARPawnBase*>                     CallFunc_GetAllPawnsInRadius_ReturnValue;          // 0x0070(0x0010)(ReferenceParm)
	class ARPawnBase*                             CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARNPCPawnBase*                          K2Node_DynamicCast_AsRNPCPawn_Base;                // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInvulnerable_ReturnValue;              // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsAlive_ReturnValue;                   // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAllPawnsInRadius_Radius_ImplicitCast;  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_Get_Targets_in_Radius");
static_assert(sizeof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius) == 0x0000B0, "Wrong size on BP_OceanGod_Tentacle_C_Get_Targets_in_Radius");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, Origin) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::Origin' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, OriginActor) == 0x000018, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::OriginActor' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, Radius) == 0x000020, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::Radius' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, TargetsFound) == 0x000028, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::TargetsFound' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, OutTargets) == 0x000030, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::OutTargets' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, Targets) == 0x000040, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::Targets' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, CallFunc_GetAllPawnsInRadius_ReturnValue) == 0x000070, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::CallFunc_GetAllPawnsInRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, CallFunc_Array_IsEmpty_ReturnValue) == 0x000088, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, K2Node_DynamicCast_AsRNPCPawn_Base) == 0x000090, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::K2Node_DynamicCast_AsRNPCPawn_Base' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, CallFunc_GetInvulnerable_ReturnValue) == 0x00009A, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::CallFunc_GetInvulnerable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, CallFunc_GetIsAlive_ReturnValue) == 0x00009B, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::CallFunc_GetIsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, CallFunc_Array_AddUnique_ReturnValue) == 0x00009C, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_Get_Targets_in_Radius, CallFunc_GetAllPawnsInRadius_Radius_ImplicitCast) == 0x0000A8, "Member 'BP_OceanGod_Tentacle_C_Get_Targets_in_Radius::CallFunc_GetAllPawnsInRadius_Radius_ImplicitCast' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.GetAttackCooldown
// 0x00A0 (0x00A0 - 0x0000)
struct BP_OceanGod_Tentacle_C_GetAttackCooldown final
{
public:
	double                                        Cooldown;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URPlayerGScriptComponent*               GScriptOwnerComponent;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumSpawnedTentacles_NumTentaclesSpawned; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMutatorRank_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMutatorValueByArrayIndex_ReturnValue;  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_GetAttackCooldown) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_GetAttackCooldown");
static_assert(sizeof(BP_OceanGod_Tentacle_C_GetAttackCooldown) == 0x0000A0, "Wrong size on BP_OceanGod_Tentacle_C_GetAttackCooldown");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, Cooldown) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::Cooldown' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, GScriptOwnerComponent) == 0x000008, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::GScriptOwnerComponent' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_GetNumSpawnedTentacles_NumTentaclesSpawned) == 0x000010, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_GetNumSpawnedTentacles_NumTentaclesSpawned' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_HasMutator_ReturnValue) == 0x000020, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_HasMutator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_GetMutatorRank_ReturnValue) == 0x000024, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_GetMutatorRank_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_GetMutatorValueByArrayIndex_ReturnValue) == 0x000028, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_GetMutatorValueByArrayIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_RandomFloatInRange_ReturnValue) == 0x000040, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_FMax_ReturnValue) == 0x000058, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_FMax_ReturnValue_1) == 0x000080, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000088, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetAttackCooldown, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000098, "Member 'BP_OceanGod_Tentacle_C_GetAttackCooldown::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.GetDamage
// 0x00C8 (0x00C8 - 0x0000)
struct BP_OceanGod_Tentacle_C_GetDamage final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayersWithBackline;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URPlayerGScriptComponent*               GScriptOwnerComponent;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        DamageModifier;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CheckAndGetMultiplierForOceanPassive1_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARPlayerPawn*>                   CallFunc_GetAllPlayerPawnsInLevel_ReturnValue;     // 0x0040(0x0010)(ReferenceParm)
	class ARPlayerPawn*                           CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue;                   // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMutatorValueByArrayIndex_ReturnValue;  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_GetDamage) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_GetDamage");
static_assert(sizeof(BP_OceanGod_Tentacle_C_GetDamage) == 0x0000C8, "Wrong size on BP_OceanGod_Tentacle_C_GetDamage");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, Damage) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_GetDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, PlayersWithBackline) == 0x000008, "Member 'BP_OceanGod_Tentacle_C_GetDamage::PlayersWithBackline' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, GScriptOwnerComponent) == 0x000010, "Member 'BP_OceanGod_Tentacle_C_GetDamage::GScriptOwnerComponent' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, DamageModifier) == 0x000018, "Member 'BP_OceanGod_Tentacle_C_GetDamage::DamageModifier' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_OceanGod_Tentacle_C_GetDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_OceanGod_Tentacle_C_GetDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, Temp_int_Variable) == 0x00002C, "Member 'BP_OceanGod_Tentacle_C_GetDamage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_CheckAndGetMultiplierForOceanPassive1_ReturnValue) == 0x000030, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_CheckAndGetMultiplierForOceanPassive1_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_GetAllPlayerPawnsInLevel_ReturnValue) == 0x000040, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_GetAllPlayerPawnsInLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_HasMutator_ReturnValue) == 0x000064, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_HasMutator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Less_IntInt_ReturnValue) == 0x000065, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_GetMutatorValueByArrayIndex_ReturnValue) == 0x000068, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_GetMutatorValueByArrayIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000A0, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x0000A8, "Member 'BP_OceanGod_Tentacle_C_GetDamage::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_OceanGod_Tentacle_C_GetDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000B8, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetDamage, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000C0, "Member 'BP_OceanGod_Tentacle_C_GetDamage::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.GetNumSpawnedTentacles
// 0x0038 (0x0038 - 0x0000)
struct BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles final
{
public:
	int32                                         NumTentaclesSpawned;                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMutator_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URGCharacterMutatorScript*              CallFunc_GetCharacterMutator_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Ocean_GodPassive_CharacterMutatorScript_C* K2Node_DynamicCast_AsBP_Ocean_God_Passive_Character_Mutator_Script; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumTentaclesSpawned_NumTentaclesSpawned; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles");
static_assert(sizeof(BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles) == 0x000038, "Wrong size on BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles, NumTentaclesSpawned) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles::NumTentaclesSpawned' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000008, "Member 'BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles, CallFunc_HasMutator_ReturnValue) == 0x000011, "Member 'BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles::CallFunc_HasMutator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles, CallFunc_GetCharacterMutator_ReturnValue) == 0x000018, "Member 'BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles::CallFunc_GetCharacterMutator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles, K2Node_DynamicCast_AsBP_Ocean_God_Passive_Character_Mutator_Script) == 0x000028, "Member 'BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles::K2Node_DynamicCast_AsBP_Ocean_God_Passive_Character_Mutator_Script' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles, CallFunc_GetNumTentaclesSpawned_NumTentaclesSpawned) == 0x000034, "Member 'BP_OceanGod_Tentacle_C_GetNumSpawnedTentacles::CallFunc_GetNumTentaclesSpawned_NumTentaclesSpawned' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnAnimationTriggerEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnAnimationTriggerEvent final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnAnimationTriggerEvent) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnAnimationTriggerEvent");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnAnimationTriggerEvent) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnAnimationTriggerEvent");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnAnimationTriggerEvent, EventName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnAnimationTriggerEvent::EventName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnBlendOut_48C235394334D3ADF0EA73BD4874C9DD
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnBlendOut_48C235394334D3ADF0EA73BD4874C9DD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnBlendOut_48C235394334D3ADF0EA73BD4874C9DD) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnBlendOut_48C235394334D3ADF0EA73BD4874C9DD");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnBlendOut_48C235394334D3ADF0EA73BD4874C9DD) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnBlendOut_48C235394334D3ADF0EA73BD4874C9DD");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnBlendOut_48C235394334D3ADF0EA73BD4874C9DD, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnBlendOut_48C235394334D3ADF0EA73BD4874C9DD::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnBlendOut_A924E06541F794FBDE2568BAD296AD43
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnBlendOut_A924E06541F794FBDE2568BAD296AD43 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnBlendOut_A924E06541F794FBDE2568BAD296AD43) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnBlendOut_A924E06541F794FBDE2568BAD296AD43");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnBlendOut_A924E06541F794FBDE2568BAD296AD43) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnBlendOut_A924E06541F794FBDE2568BAD296AD43");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnBlendOut_A924E06541F794FBDE2568BAD296AD43, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnBlendOut_A924E06541F794FBDE2568BAD296AD43::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnBlendOut_F40FB19D42AC2DC77726D0802BF7C783
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnBlendOut_F40FB19D42AC2DC77726D0802BF7C783 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnBlendOut_F40FB19D42AC2DC77726D0802BF7C783) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnBlendOut_F40FB19D42AC2DC77726D0802BF7C783");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnBlendOut_F40FB19D42AC2DC77726D0802BF7C783) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnBlendOut_F40FB19D42AC2DC77726D0802BF7C783");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnBlendOut_F40FB19D42AC2DC77726D0802BF7C783, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnBlendOut_F40FB19D42AC2DC77726D0802BF7C783::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnCompleted_48C235394334D3ADF0EA73BD4874C9DD
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnCompleted_48C235394334D3ADF0EA73BD4874C9DD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnCompleted_48C235394334D3ADF0EA73BD4874C9DD) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnCompleted_48C235394334D3ADF0EA73BD4874C9DD");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnCompleted_48C235394334D3ADF0EA73BD4874C9DD) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnCompleted_48C235394334D3ADF0EA73BD4874C9DD");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnCompleted_48C235394334D3ADF0EA73BD4874C9DD, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnCompleted_48C235394334D3ADF0EA73BD4874C9DD::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnCompleted_A924E06541F794FBDE2568BAD296AD43
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnCompleted_A924E06541F794FBDE2568BAD296AD43 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnCompleted_A924E06541F794FBDE2568BAD296AD43) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnCompleted_A924E06541F794FBDE2568BAD296AD43");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnCompleted_A924E06541F794FBDE2568BAD296AD43) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnCompleted_A924E06541F794FBDE2568BAD296AD43");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnCompleted_A924E06541F794FBDE2568BAD296AD43, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnCompleted_A924E06541F794FBDE2568BAD296AD43::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnCompleted_F40FB19D42AC2DC77726D0802BF7C783
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnCompleted_F40FB19D42AC2DC77726D0802BF7C783 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnCompleted_F40FB19D42AC2DC77726D0802BF7C783) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnCompleted_F40FB19D42AC2DC77726D0802BF7C783");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnCompleted_F40FB19D42AC2DC77726D0802BF7C783) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnCompleted_F40FB19D42AC2DC77726D0802BF7C783");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnCompleted_F40FB19D42AC2DC77726D0802BF7C783, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnCompleted_F40FB19D42AC2DC77726D0802BF7C783::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnInterrupted_48C235394334D3ADF0EA73BD4874C9DD
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnInterrupted_48C235394334D3ADF0EA73BD4874C9DD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnInterrupted_48C235394334D3ADF0EA73BD4874C9DD) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnInterrupted_48C235394334D3ADF0EA73BD4874C9DD");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnInterrupted_48C235394334D3ADF0EA73BD4874C9DD) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnInterrupted_48C235394334D3ADF0EA73BD4874C9DD");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnInterrupted_48C235394334D3ADF0EA73BD4874C9DD, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnInterrupted_48C235394334D3ADF0EA73BD4874C9DD::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnInterrupted_A924E06541F794FBDE2568BAD296AD43
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnInterrupted_A924E06541F794FBDE2568BAD296AD43 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnInterrupted_A924E06541F794FBDE2568BAD296AD43) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnInterrupted_A924E06541F794FBDE2568BAD296AD43");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnInterrupted_A924E06541F794FBDE2568BAD296AD43) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnInterrupted_A924E06541F794FBDE2568BAD296AD43");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnInterrupted_A924E06541F794FBDE2568BAD296AD43, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnInterrupted_A924E06541F794FBDE2568BAD296AD43::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnInterrupted_F40FB19D42AC2DC77726D0802BF7C783
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnInterrupted_F40FB19D42AC2DC77726D0802BF7C783 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnInterrupted_F40FB19D42AC2DC77726D0802BF7C783) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnInterrupted_F40FB19D42AC2DC77726D0802BF7C783");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnInterrupted_F40FB19D42AC2DC77726D0802BF7C783) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnInterrupted_F40FB19D42AC2DC77726D0802BF7C783");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnInterrupted_F40FB19D42AC2DC77726D0802BF7C783, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnInterrupted_F40FB19D42AC2DC77726D0802BF7C783::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnNotifyBegin_48C235394334D3ADF0EA73BD4874C9DD
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnNotifyBegin_48C235394334D3ADF0EA73BD4874C9DD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnNotifyBegin_48C235394334D3ADF0EA73BD4874C9DD) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnNotifyBegin_48C235394334D3ADF0EA73BD4874C9DD");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnNotifyBegin_48C235394334D3ADF0EA73BD4874C9DD) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnNotifyBegin_48C235394334D3ADF0EA73BD4874C9DD");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnNotifyBegin_48C235394334D3ADF0EA73BD4874C9DD, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnNotifyBegin_48C235394334D3ADF0EA73BD4874C9DD::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnNotifyBegin_A924E06541F794FBDE2568BAD296AD43
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnNotifyBegin_A924E06541F794FBDE2568BAD296AD43 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnNotifyBegin_A924E06541F794FBDE2568BAD296AD43) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnNotifyBegin_A924E06541F794FBDE2568BAD296AD43");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnNotifyBegin_A924E06541F794FBDE2568BAD296AD43) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnNotifyBegin_A924E06541F794FBDE2568BAD296AD43");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnNotifyBegin_A924E06541F794FBDE2568BAD296AD43, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnNotifyBegin_A924E06541F794FBDE2568BAD296AD43::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnNotifyBegin_F40FB19D42AC2DC77726D0802BF7C783
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnNotifyBegin_F40FB19D42AC2DC77726D0802BF7C783 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnNotifyBegin_F40FB19D42AC2DC77726D0802BF7C783) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnNotifyBegin_F40FB19D42AC2DC77726D0802BF7C783");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnNotifyBegin_F40FB19D42AC2DC77726D0802BF7C783) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnNotifyBegin_F40FB19D42AC2DC77726D0802BF7C783");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnNotifyBegin_F40FB19D42AC2DC77726D0802BF7C783, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnNotifyBegin_F40FB19D42AC2DC77726D0802BF7C783::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnNotifyEnd_48C235394334D3ADF0EA73BD4874C9DD
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnNotifyEnd_48C235394334D3ADF0EA73BD4874C9DD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnNotifyEnd_48C235394334D3ADF0EA73BD4874C9DD) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnNotifyEnd_48C235394334D3ADF0EA73BD4874C9DD");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnNotifyEnd_48C235394334D3ADF0EA73BD4874C9DD) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnNotifyEnd_48C235394334D3ADF0EA73BD4874C9DD");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnNotifyEnd_48C235394334D3ADF0EA73BD4874C9DD, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnNotifyEnd_48C235394334D3ADF0EA73BD4874C9DD::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnNotifyEnd_A924E06541F794FBDE2568BAD296AD43
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnNotifyEnd_A924E06541F794FBDE2568BAD296AD43 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnNotifyEnd_A924E06541F794FBDE2568BAD296AD43) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnNotifyEnd_A924E06541F794FBDE2568BAD296AD43");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnNotifyEnd_A924E06541F794FBDE2568BAD296AD43) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnNotifyEnd_A924E06541F794FBDE2568BAD296AD43");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnNotifyEnd_A924E06541F794FBDE2568BAD296AD43, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnNotifyEnd_A924E06541F794FBDE2568BAD296AD43::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnNotifyEnd_F40FB19D42AC2DC77726D0802BF7C783
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnNotifyEnd_F40FB19D42AC2DC77726D0802BF7C783 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnNotifyEnd_F40FB19D42AC2DC77726D0802BF7C783) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnNotifyEnd_F40FB19D42AC2DC77726D0802BF7C783");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnNotifyEnd_F40FB19D42AC2DC77726D0802BF7C783) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnNotifyEnd_F40FB19D42AC2DC77726D0802BF7C783");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnNotifyEnd_F40FB19D42AC2DC77726D0802BF7C783, NotifyName) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnNotifyEnd_F40FB19D42AC2DC77726D0802BF7C783::NotifyName' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnSegmentCompleted_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_OceanGod_Tentacle_C_OnSegmentCompleted_Event final
{
public:
	class AREnemySpawnAreaSegment*                EnemySpawnAreaSegment;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnSegmentCompleted_Event) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_OnSegmentCompleted_Event");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnSegmentCompleted_Event) == 0x000008, "Wrong size on BP_OceanGod_Tentacle_C_OnSegmentCompleted_Event");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnSegmentCompleted_Event, EnemySpawnAreaSegment) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnSegmentCompleted_Event::EnemySpawnAreaSegment' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.OnToggleEvent
// 0x000C (0x000C - 0x0000)
struct BP_OceanGod_Tentacle_C_OnToggleEvent final
{
public:
	class FName                                   Socket;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bool;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_OnToggleEvent) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_OnToggleEvent");
static_assert(sizeof(BP_OceanGod_Tentacle_C_OnToggleEvent) == 0x00000C, "Wrong size on BP_OceanGod_Tentacle_C_OnToggleEvent");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnToggleEvent, Socket) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_OnToggleEvent::Socket' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_OnToggleEvent, Bool) == 0x000008, "Member 'BP_OceanGod_Tentacle_C_OnToggleEvent::Bool' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_OceanGod_Tentacle_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_OceanGod_Tentacle_C_ReceiveTick");
static_assert(sizeof(BP_OceanGod_Tentacle_C_ReceiveTick) == 0x000004, "Wrong size on BP_OceanGod_Tentacle_C_ReceiveTick");
static_assert(offsetof(BP_OceanGod_Tentacle_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.SetRandomProjectileClass
// 0x0020 (0x0020 - 0x0000)
struct BP_OceanGod_Tentacle_C_SetRandomProjectileClass final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Random_OutItem;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_SetRandomProjectileClass) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_SetRandomProjectileClass");
static_assert(sizeof(BP_OceanGod_Tentacle_C_SetRandomProjectileClass) == 0x000020, "Wrong size on BP_OceanGod_Tentacle_C_SetRandomProjectileClass");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomProjectileClass, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_SetRandomProjectileClass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomProjectileClass, Temp_int_Variable) == 0x000004, "Member 'BP_OceanGod_Tentacle_C_SetRandomProjectileClass::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomProjectileClass, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_OceanGod_Tentacle_C_SetRandomProjectileClass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomProjectileClass, CallFunc_Array_Random_OutItem) == 0x000010, "Member 'BP_OceanGod_Tentacle_C_SetRandomProjectileClass::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomProjectileClass, CallFunc_Array_Random_OutIndex) == 0x000018, "Member 'BP_OceanGod_Tentacle_C_SetRandomProjectileClass::CallFunc_Array_Random_OutIndex' has a wrong offset!");

// Function BP_OceanGod_Tentacle.BP_OceanGod_Tentacle_C.SetRandomTarget
// 0x0370 (0x0370 - 0x0000)
struct BP_OceanGod_Tentacle_C_SetRandomTarget final
{
public:
	TArray<class AActor*>                         CurrentValidTargets;                               // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARNPCPawnBase*>                  Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_Array_Random_OutItem;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0078(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesProjectileTargetEnemies_Result;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllAliveEnemyPawnsInRadius_ReturnValue; // 0x0118(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0170(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectASoftClass_ReturnValue;           // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x034D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectChildOfSoftClass_ReturnValue;     // 0x034E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x034F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetRandomAlivePlayerController_ReturnValue; // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OceanGod_Tentacle_C_SetRandomTarget) == 0x000008, "Wrong alignment on BP_OceanGod_Tentacle_C_SetRandomTarget");
static_assert(sizeof(BP_OceanGod_Tentacle_C_SetRandomTarget) == 0x000370, "Wrong size on BP_OceanGod_Tentacle_C_SetRandomTarget");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CurrentValidTargets) == 0x000000, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CurrentValidTargets' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00001D, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Not_PreBool_ReturnValue_1) == 0x000024, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, Temp_object_Variable) == 0x000038, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Array_Random_OutItem) == 0x000048, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Array_Random_OutIndex) == 0x000050, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, Temp_object_Variable_1) == 0x000058, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A8, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BooleanAND_ReturnValue) == 0x0000E0, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, K2Node_MakeArray_Array_1) == 0x0000E8, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000F8, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_DoesProjectileTargetEnemies_Result) == 0x000110, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_DoesProjectileTargetEnemies_Result' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_GetAllAliveEnemyPawnsInRadius_ReturnValue) == 0x000118, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_GetAllAliveEnemyPawnsInRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Array_Get_Item_1) == 0x000128, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_GetActorBounds_Origin) == 0x000138, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_GetActorBounds_BoxExtent) == 0x000150, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Less_IntInt_ReturnValue_1) == 0x000168, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000170, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000270, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BooleanAND_ReturnValue_1) == 0x000271, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_bBlockingHit) == 0x000272, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_bInitialOverlap) == 0x000273, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_Time) == 0x000274, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_Distance) == 0x000278, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_Location) == 0x000280, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_ImpactPoint) == 0x000298, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_Normal) == 0x0002B0, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_ImpactNormal) == 0x0002C8, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_PhysMat) == 0x0002E0, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_HitActor) == 0x0002E8, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_HitComponent) == 0x0002F0, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_HitBoneName) == 0x0002F8, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_BoneName) == 0x000300, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_HitItem) == 0x000308, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_ElementIndex) == 0x00030C, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_FaceIndex) == 0x000310, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_TraceStart) == 0x000318, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BreakHitResult_TraceEnd) == 0x000330, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Array_Length_ReturnValue_2) == 0x000348, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_IsObjectASoftClass_ReturnValue) == 0x00034C, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_IsObjectASoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x00034D, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_IsObjectChildOfSoftClass_ReturnValue) == 0x00034E, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_IsObjectChildOfSoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_BooleanOR_ReturnValue) == 0x00034F, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_Array_AddUnique_ReturnValue) == 0x000350, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000354, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_GetRandomAlivePlayerController_ReturnValue) == 0x000358, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_GetRandomAlivePlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_K2_GetPawn_ReturnValue) == 0x000360, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OceanGod_Tentacle_C_SetRandomTarget, CallFunc_IsValid_ReturnValue) == 0x000368, "Member 'BP_OceanGod_Tentacle_C_SetRandomTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

