#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RoomObjectiveObject_ChargeZone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_RoomObjectiveObject_ChargeZone.BP_RoomObjectiveObject_ChargeZone_C.BroadcastOnRoomObjectiveObjectUpdated_Multicast
// 0x0008 (0x0008 - 0x0000)
struct BP_RoomObjectiveObject_ChargeZone_C_BroadcastOnRoomObjectiveObjectUpdated_Multicast final
{
public:
	float                                         AmountProgressed;                                  // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AmountRequired;                                    // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoomObjectiveObject_ChargeZone_C_BroadcastOnRoomObjectiveObjectUpdated_Multicast) == 0x000004, "Wrong alignment on BP_RoomObjectiveObject_ChargeZone_C_BroadcastOnRoomObjectiveObjectUpdated_Multicast");
static_assert(sizeof(BP_RoomObjectiveObject_ChargeZone_C_BroadcastOnRoomObjectiveObjectUpdated_Multicast) == 0x000008, "Wrong size on BP_RoomObjectiveObject_ChargeZone_C_BroadcastOnRoomObjectiveObjectUpdated_Multicast");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_BroadcastOnRoomObjectiveObjectUpdated_Multicast, AmountProgressed) == 0x000000, "Member 'BP_RoomObjectiveObject_ChargeZone_C_BroadcastOnRoomObjectiveObjectUpdated_Multicast::AmountProgressed' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_BroadcastOnRoomObjectiveObjectUpdated_Multicast, AmountRequired) == 0x000004, "Member 'BP_RoomObjectiveObject_ChargeZone_C_BroadcastOnRoomObjectiveObjectUpdated_Multicast::AmountRequired' has a wrong offset!");

// Function BP_RoomObjectiveObject_ChargeZone.BP_RoomObjectiveObject_ChargeZone_C.ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone
// 0x00A8 (0x00A8 - 0x0000)
struct BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AREnemySpawnAreaSegment* EnemySpawnAreaSegment)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AREnemySpawnManager*                    CallFunc_GetSpawnManager_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AREnemySpawnAreaSegment*                K2Node_CustomEvent_EnemySpawnAreaSegment;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentSegment_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumPlayersInProximity_NumPlayers;      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_SelectName_ReturnValue;                   // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AmountProgressed;               // 0x0084(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AmountRequired;                 // 0x0088(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetTriggerParameter_self_CastInput; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectCompleted_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone) == 0x000008, "Wrong alignment on BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone");
static_assert(sizeof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone) == 0x0000A8, "Wrong size on BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, EntryPoint) == 0x000000, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_GetSpawnManager_ReturnValue) == 0x000028, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_GetSpawnManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, K2Node_CustomEvent_EnemySpawnAreaSegment) == 0x000040, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::K2Node_CustomEvent_EnemySpawnAreaSegment' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_IsCurrentSegment_ReturnValue) == 0x000048, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_IsCurrentSegment_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_Array_AddUnique_ReturnValue) == 0x00004C, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_GetNumPlayersInProximity_NumPlayers) == 0x000068, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_GetNumPlayersInProximity_NumPlayers' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000070, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_SelectName_ReturnValue) == 0x00007C, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_SelectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, K2Node_CustomEvent_AmountProgressed) == 0x000084, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::K2Node_CustomEvent_AmountProgressed' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, K2Node_CustomEvent_AmountRequired) == 0x000088, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::K2Node_CustomEvent_AmountRequired' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_SetTriggerParameter_self_CastInput) == 0x000090, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_SetTriggerParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_IsObjectCompleted_ReturnValue) == 0x0000A0, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_IsObjectCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0000A4, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ExecuteUbergraph_BP_RoomObjectiveObject_ChargeZone::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_RoomObjectiveObject_ChargeZone.BP_RoomObjectiveObject_ChargeZone_C.GetNumPlayersInProximity
// 0x0048 (0x0048 - 0x0000)
struct BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity final
{
public:
	int32                                         NumPlayers;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumPlayersInProximity;                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0018(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity) == 0x000008, "Wrong alignment on BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity");
static_assert(sizeof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity) == 0x000048, "Wrong size on BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, NumPlayers) == 0x000000, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::NumPlayers' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, NumPlayersInProximity) == 0x000004, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::NumPlayersInProximity' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, Temp_int_Variable) == 0x000014, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000018, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000038, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetNumPlayersInProximity::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_RoomObjectiveObject_ChargeZone.BP_RoomObjectiveObject_ChargeZone_C.GetPlayerPawnsInProximity
// 0x0060 (0x0060 - 0x0000)
struct BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity final
{
public:
	TArray<class ARPlayerPawn*>                   PlayerPawns;                                       // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ARPlayerPawn*>                   RPlayerPawns;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0030(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity) == 0x000008, "Wrong alignment on BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity");
static_assert(sizeof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity) == 0x000060, "Wrong size on BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity, PlayerPawns) == 0x000000, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity::PlayerPawns' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity, RPlayerPawns) == 0x000010, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity::RPlayerPawns' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000030, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000048, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity, CallFunc_Array_AddUnique_ReturnValue) == 0x000058, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetPlayerPawnsInProximity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_RoomObjectiveObject_ChargeZone.BP_RoomObjectiveObject_ChargeZone_C.GetProgressionAmountPerTick
// 0x00A0 (0x00A0 - 0x0000)
struct BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick final
{
public:
	double                                        ProgressionAmountPerTick;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SelectedChargeValue;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0020(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	float                                         CallFunc_GetChargeValueFromPlayers_ReturnValue;    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumPlayersInProximity_NumPlayers;      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRequiredProgressionAmount_Value;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick) == 0x000008, "Wrong alignment on BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick");
static_assert(sizeof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick) == 0x0000A0, "Wrong size on BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, ProgressionAmountPerTick) == 0x000000, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::ProgressionAmountPerTick' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, SelectedChargeValue) == 0x000008, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::SelectedChargeValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, Temp_bool_Variable) == 0x00000C, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, Temp_real_Variable) == 0x000010, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, Temp_real_Variable_1) == 0x000018, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000020, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_Array_IsEmpty_ReturnValue) == 0x000038, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_GetChargeValueFromPlayers_ReturnValue) == 0x000050, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_GetChargeValueFromPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_GetNumPlayersInProximity_NumPlayers) == 0x000054, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_GetNumPlayersInProximity_NumPlayers' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_GetRequiredProgressionAmount_Value) == 0x000068, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_GetRequiredProgressionAmount_Value' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_SafeDivide_ReturnValue) == 0x000070, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, K2Node_Select_Default) == 0x000078, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000090, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick, CallFunc_SafeDivide_B_ImplicitCast) == 0x000098, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetProgressionAmountPerTick::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");

// Function BP_RoomObjectiveObject_ChargeZone.BP_RoomObjectiveObject_ChargeZone_C.GetRequiredProgressionAmount
// 0x0018 (0x0018 - 0x0000)
struct BP_RoomObjectiveObject_ChargeZone_C_GetRequiredProgressionAmount final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoomObjectiveObject_ChargeZone_C_GetRequiredProgressionAmount) == 0x000008, "Wrong alignment on BP_RoomObjectiveObject_ChargeZone_C_GetRequiredProgressionAmount");
static_assert(sizeof(BP_RoomObjectiveObject_ChargeZone_C_GetRequiredProgressionAmount) == 0x000018, "Wrong size on BP_RoomObjectiveObject_ChargeZone_C_GetRequiredProgressionAmount");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetRequiredProgressionAmount, Value) == 0x000000, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetRequiredProgressionAmount::Value' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetRequiredProgressionAmount, CallFunc_SafeDivide_ReturnValue) == 0x000008, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetRequiredProgressionAmount::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetRequiredProgressionAmount, CallFunc_SafeDivide_A_ImplicitCast) == 0x000010, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetRequiredProgressionAmount::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");

// Function BP_RoomObjectiveObject_ChargeZone.BP_RoomObjectiveObject_ChargeZone_C.OnSegmentCompleted_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_RoomObjectiveObject_ChargeZone_C_OnSegmentCompleted_Event final
{
public:
	class AREnemySpawnAreaSegment*                EnemySpawnAreaSegment;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoomObjectiveObject_ChargeZone_C_OnSegmentCompleted_Event) == 0x000008, "Wrong alignment on BP_RoomObjectiveObject_ChargeZone_C_OnSegmentCompleted_Event");
static_assert(sizeof(BP_RoomObjectiveObject_ChargeZone_C_OnSegmentCompleted_Event) == 0x000008, "Wrong size on BP_RoomObjectiveObject_ChargeZone_C_OnSegmentCompleted_Event");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_OnSegmentCompleted_Event, EnemySpawnAreaSegment) == 0x000000, "Member 'BP_RoomObjectiveObject_ChargeZone_C_OnSegmentCompleted_Event::EnemySpawnAreaSegment' has a wrong offset!");

// Function BP_RoomObjectiveObject_ChargeZone.BP_RoomObjectiveObject_ChargeZone_C.ProximityTick
// 0x00F0 (0x00F0 - 0x0000)
struct BP_RoomObjectiveObject_ChargeZone_C_ProximityTick final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARPlayerPawn*>                   CallFunc_GetPlayerPawnsInProximity_PlayerPawns;    // 0x0010(0x0010)(ReferenceParm)
	class ARObjectiveManager*                     CallFunc_GetObjectiveManager_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AREnemySpawnManager*                    CallFunc_GetSpawnManager_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AREnemySpawnAreaSegment*                CallFunc_GetCurrentSpawnAreaSegment_ReturnValue;   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRequiredProgressionAmount_Value;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRequiredProgressionAmount_Value_1;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRequiredProgressionAmount_Value_2;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRequiredProgressionAmount_Value_3;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetProgressionAmountPerTick_ProgressionAmountPerTick; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRequiredProgressionAmount_Value_4;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BroadcastOnRoomObjectiveObjectUpdated_Multicast_AmountProgressed_ImplicitCast; // 0x00C8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick) == 0x000008, "Wrong alignment on BP_RoomObjectiveObject_ChargeZone_C_ProximityTick");
static_assert(sizeof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick) == 0x0000F0, "Wrong size on BP_RoomObjectiveObject_ChargeZone_C_ProximityTick");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_GetPlayerPawnsInProximity_PlayerPawns) == 0x000010, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_GetPlayerPawnsInProximity_PlayerPawns' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_GetObjectiveManager_ReturnValue) == 0x000020, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_GetObjectiveManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_GetSpawnManager_ReturnValue) == 0x000028, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_GetSpawnManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_GetCurrentSpawnAreaSegment_ReturnValue) == 0x000038, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_GetCurrentSpawnAreaSegment_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_GetRequiredProgressionAmount_Value) == 0x000048, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_GetRequiredProgressionAmount_Value' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000050, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_SafeDivide_ReturnValue) == 0x000058, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_GetRequiredProgressionAmount_Value_1) == 0x000060, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_GetRequiredProgressionAmount_Value_1' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_IsValid_ReturnValue_2) == 0x000068, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_SafeDivide_ReturnValue_1) == 0x000070, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_Less_IntInt_ReturnValue) == 0x000081, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000082, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_BooleanAND_ReturnValue) == 0x000083, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_GetRequiredProgressionAmount_Value_2) == 0x000088, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_GetRequiredProgressionAmount_Value_2' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_GetRequiredProgressionAmount_Value_3) == 0x000090, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_GetRequiredProgressionAmount_Value_3' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000099, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_GetProgressionAmountPerTick_ProgressionAmountPerTick) == 0x0000A0, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_GetProgressionAmountPerTick_ProgressionAmountPerTick' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_GetRequiredProgressionAmount_Value_4) == 0x0000A8, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_GetRequiredProgressionAmount_Value_4' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_FClamp_ReturnValue) == 0x0000C0, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_BroadcastOnRoomObjectiveObjectUpdated_Multicast_AmountProgressed_ImplicitCast) == 0x0000C8, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_BroadcastOnRoomObjectiveObjectUpdated_Multicast_AmountProgressed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000D8, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x0000E0, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_ProximityTick, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x0000E8, "Member 'BP_RoomObjectiveObject_ChargeZone_C_ProximityTick::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_RoomObjectiveObject_ChargeZone.BP_RoomObjectiveObject_ChargeZone_C.GetRadarIconColor
// 0x0010 (0x0010 - 0x0000)
struct BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconColor) == 0x000004, "Wrong alignment on BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconColor");
static_assert(sizeof(BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconColor) == 0x000010, "Wrong size on BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconColor");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconColor, ReturnValue) == 0x000000, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconColor::ReturnValue' has a wrong offset!");

// Function BP_RoomObjectiveObject_ChargeZone.BP_RoomObjectiveObject_ChargeZone_C.GetRadarIconSize
// 0x0010 (0x0010 - 0x0000)
struct BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconSize final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconSize) == 0x000008, "Wrong alignment on BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconSize");
static_assert(sizeof(BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconSize) == 0x000010, "Wrong size on BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconSize");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconSize, ReturnValue) == 0x000000, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetRadarIconSize::ReturnValue' has a wrong offset!");

// Function BP_RoomObjectiveObject_ChargeZone.BP_RoomObjectiveObject_ChargeZone_C.GetRadarObjectIcon
// 0x0008 (0x0008 - 0x0000)
struct BP_RoomObjectiveObject_ChargeZone_C_GetRadarObjectIcon final
{
public:
	class USlateBrushAsset*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoomObjectiveObject_ChargeZone_C_GetRadarObjectIcon) == 0x000008, "Wrong alignment on BP_RoomObjectiveObject_ChargeZone_C_GetRadarObjectIcon");
static_assert(sizeof(BP_RoomObjectiveObject_ChargeZone_C_GetRadarObjectIcon) == 0x000008, "Wrong size on BP_RoomObjectiveObject_ChargeZone_C_GetRadarObjectIcon");
static_assert(offsetof(BP_RoomObjectiveObject_ChargeZone_C_GetRadarObjectIcon, ReturnValue) == 0x000000, "Member 'BP_RoomObjectiveObject_ChargeZone_C_GetRadarObjectIcon::ReturnValue' has a wrong offset!");

}

