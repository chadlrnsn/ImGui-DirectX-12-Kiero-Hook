#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NodeRewardSpawnPoint

#include "Basic.hpp"

#include "BP_NodeRewardSpawnPoint_classes.hpp"
#include "BP_NodeRewardSpawnPoint_parameters.hpp"


namespace SDK
{

// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.CheckAndUpdateCharmSpawn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::CheckAndUpdateCharmSpawn(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "CheckAndUpdateCharmSpawn");

	Params::BP_NodeRewardSpawnPoint_C_CheckAndUpdateCharmSpawn Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.CheckSkillTreePoints
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_NodeRewardSpawnPoint_C::CheckSkillTreePoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "CheckSkillTreePoints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.ExecuteUbergraph_BP_NodeRewardSpawnPoint
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::ExecuteUbergraph_BP_NodeRewardSpawnPoint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "ExecuteUbergraph_BP_NodeRewardSpawnPoint");

	Params::BP_NodeRewardSpawnPoint_C_ExecuteUbergraph_BP_NodeRewardSpawnPoint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.GetCurrentOverworldNodeRewardClass
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass**                          RewardClass                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::GetCurrentOverworldNodeRewardClass(class UClass** RewardClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "GetCurrentOverworldNodeRewardClass");

	Params::BP_NodeRewardSpawnPoint_C_GetCurrentOverworldNodeRewardClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RewardClass != nullptr)
		*RewardClass = Parms.RewardClass;
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.GetRewardClass
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass**                          RewardClass                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::GetRewardClass(class UClass** RewardClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "GetRewardClass");

	Params::BP_NodeRewardSpawnPoint_C_GetRewardClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RewardClass != nullptr)
		*RewardClass = Parms.RewardClass;
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.OnCharmPASet
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class URMutatorPrimaryAsset*            NewPrimaryAsset                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::OnCharmPASet(class URMutatorPrimaryAsset* NewPrimaryAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "OnCharmPASet");

	Params::BP_NodeRewardSpawnPoint_C_OnCharmPASet Parms{};

	Parms.NewPrimaryAsset = NewPrimaryAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.OnInvoke_15090FCD4FFD735DAD9397BFE465A7FA
// (BlueprintCallable, BlueprintEvent)

void ABP_NodeRewardSpawnPoint_C::OnInvoke_15090FCD4FFD735DAD9397BFE465A7FA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "OnInvoke_15090FCD4FFD735DAD9397BFE465A7FA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.OnLevelChanged_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_NodeRewardSpawnPoint_C::OnLevelChanged_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "OnLevelChanged_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.OnMutatorPickedUp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPickupableItem*                 PickedUpItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   PickupCost                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::OnMutatorPickedUp(class ARPickupableItem* PickedUpItem, int32 PickupCost, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "OnMutatorPickedUp");

	Params::BP_NodeRewardSpawnPoint_C_OnMutatorPickedUp Parms{};

	Parms.PickedUpItem = PickedUpItem;
	Parms.PickupCost = PickupCost;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.PlayerStateIsValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::PlayerStateIsValid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "PlayerStateIsValid");

	Params::BP_NodeRewardSpawnPoint_C_PlayerStateIsValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.PruneEventNodeRewards
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   WasPruned                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::PruneEventNodeRewards(bool* WasPruned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "PruneEventNodeRewards");

	Params::BP_NodeRewardSpawnPoint_C_PruneEventNodeRewards Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WasPruned != nullptr)
		*WasPruned = Parms.WasPruned;
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_NodeRewardSpawnPoint_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.RetrySelectRewardType
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EncounterRoomPos                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::RetrySelectRewardType(int32 EncounterRoomPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "RetrySelectRewardType");

	Params::BP_NodeRewardSpawnPoint_C_RetrySelectRewardType Parms{};

	Parms.EncounterRoomPos = EncounterRoomPos;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.RewardRequirementsMet
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::RewardRequirementsMet(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "RewardRequirementsMet");

	Params::BP_NodeRewardSpawnPoint_C_RewardRequirementsMet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.SelectRewardType
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NodeRewardSpawnPoint_C::SelectRewardType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "SelectRewardType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.SetCharmForController
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URMutatorPrimaryAsset*            CharmPrimaryAsset                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bCharmPickedUp                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::SetCharmForController(class URMutatorPrimaryAsset* CharmPrimaryAsset, bool bCharmPickedUp, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "SetCharmForController");

	Params::BP_NodeRewardSpawnPoint_C_SetCharmForController Parms{};

	Parms.CharmPrimaryAsset = CharmPrimaryAsset;
	Parms.bCharmPickedUp = bCharmPickedUp;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.SetNodeRewardType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              RewardTypeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::SetNodeRewardType(const struct FGameplayTag& RewardTypeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "SetNodeRewardType");

	Params::BP_NodeRewardSpawnPoint_C_SetNodeRewardType Parms{};

	Parms.RewardTypeTag = std::move(RewardTypeTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NodeRewardSpawnPoint.BP_NodeRewardSpawnPoint_C.SpawnRewardFromClass
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ActorClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NodeRewardSpawnPoint_C::SpawnRewardFromClass(class UClass* ActorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeRewardSpawnPoint_C", "SpawnRewardFromClass");

	Params::BP_NodeRewardSpawnPoint_C_SpawnRewardFromClass Parms{};

	Parms.ActorClass = ActorClass;

	UObject::ProcessEvent(Func, &Parms);
}

}

