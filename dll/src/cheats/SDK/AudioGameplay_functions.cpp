#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioGameplay

#include "Basic.hpp"

#include "AudioGameplay_classes.hpp"
#include "AudioGameplay_parameters.hpp"


namespace SDK
{

// Function AudioGameplay.AudioGameplayCondition.ConditionMet
// (RequiredAPI, Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAudioGameplayCondition::ConditionMet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AudioGameplayCondition", "ConditionMet");

	Params::AudioGameplayCondition_ConditionMet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AudioGameplay.AudioGameplayCondition.ConditionMet_Position
// (RequiredAPI, Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   Position                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IAudioGameplayCondition::ConditionMet_Position(const struct FVector& Position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AudioGameplayCondition", "ConditionMet_Position");

	Params::AudioGameplayCondition_ConditionMet_Position Parms{};

	Parms.Position = std::move(Position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AudioGameplay.AudioGameplayVolumeInteraction.OnListenerEnter
// (RequiredAPI, Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IAudioGameplayVolumeInteraction::OnListenerEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AudioGameplayVolumeInteraction", "OnListenerEnter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioGameplayVolumeInteraction.OnListenerExit
// (RequiredAPI, Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IAudioGameplayVolumeInteraction::OnListenerExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AudioGameplayVolumeInteraction", "OnListenerExit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.StaticGetOrCreateComponentGroup
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponentGroup*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponentGroup* UAudioComponentGroup::StaticGetOrCreateComponentGroup(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AudioComponentGroup", "StaticGetOrCreateComponentGroup");

	Params::AudioComponentGroup_StaticGetOrCreateComponentGroup Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AudioGameplay.AudioComponentGroup.AddExtension
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IAudioComponentGroupExtension>NewExtension                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::AddExtension(TScriptInterface<class IAudioComponentGroupExtension> NewExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "AddExtension");

	Params::AudioComponentGroup_AddExtension Parms{};

	Parms.NewExtension = NewExtension;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.AddExternalComponent
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  ComponentToAdd                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::AddExternalComponent(class UAudioComponent* ComponentToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "AddExternalComponent");

	Params::AudioComponentGroup_AddExternalComponent Parms{};

	Parms.ComponentToAdd = ComponentToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.BroadcastEvent
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       EventName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::BroadcastEvent(const class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "BroadcastEvent");

	Params::AudioComponentGroup_BroadcastEvent Parms{};

	Parms.EventName = EventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.BroadcastKill
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void UAudioComponentGroup::BroadcastKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "BroadcastKill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.BroadcastStopAll
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void UAudioComponentGroup::BroadcastStopAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "BroadcastStopAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.DisableVirtualization
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void UAudioComponentGroup::DisableVirtualization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "DisableVirtualization");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.EnableVirtualization
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void UAudioComponentGroup::EnableVirtualization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "EnableVirtualization");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.RemoveExtension
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IAudioComponentGroupExtension>NewExtension                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::RemoveExtension(TScriptInterface<class IAudioComponentGroupExtension> NewExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "RemoveExtension");

	Params::AudioComponentGroup_RemoveExtension Parms{};

	Parms.NewExtension = NewExtension;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.RemoveExternalComponent
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  ComponentToRemove                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::RemoveExternalComponent(class UAudioComponent* ComponentToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "RemoveExternalComponent");

	Params::AudioComponentGroup_RemoveExternalComponent Parms{};

	Parms.ComponentToRemove = ComponentToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.SetLowPassFilter
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InFrequency                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::SetLowPassFilter(const float InFrequency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "SetLowPassFilter");

	Params::AudioComponentGroup_SetLowPassFilter Parms{};

	Parms.InFrequency = InFrequency;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.SetPitchMultiplier
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InPitch                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::SetPitchMultiplier(const float InPitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "SetPitchMultiplier");

	Params::AudioComponentGroup_SetPitchMultiplier Parms{};

	Parms.InPitch = InPitch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.SetVolumeMultiplier
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InVolume                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::SetVolumeMultiplier(const float InVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "SetVolumeMultiplier");

	Params::AudioComponentGroup_SetVolumeMultiplier Parms{};

	Parms.InVolume = InVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.StopSound
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             FadeTime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::StopSound(class USoundBase* Sound, const float FadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "StopSound");

	Params::AudioComponentGroup_StopSound Parms{};

	Parms.Sound = Sound;
	Parms.FadeTime = FadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.SubscribeToBool
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       ParamName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const bool ParamValue)>  Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::SubscribeToBool(const class FName ParamName, TDelegate<void(const bool ParamValue)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "SubscribeToBool");

	Params::AudioComponentGroup_SubscribeToBool Parms{};

	Parms.ParamName = ParamName;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.SubscribeToEvent
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       EventName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FName& EventName)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::SubscribeToEvent(const class FName EventName, TDelegate<void(const class FName& EventName)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "SubscribeToEvent");

	Params::AudioComponentGroup_SubscribeToEvent Parms{};

	Parms.EventName = EventName;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.SubscribeToStringParam
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       ParamName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const class FString& Value)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::SubscribeToStringParam(const class FName ParamName, TDelegate<void(const class FString& Value)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "SubscribeToStringParam");

	Params::AudioComponentGroup_SubscribeToStringParam Parms{};

	Parms.ParamName = ParamName;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.UnsubscribeObject
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAudioComponentGroup::UnsubscribeObject(const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "UnsubscribeObject");

	Params::AudioComponentGroup_UnsubscribeObject Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AudioGameplay.AudioComponentGroup.GetBoolParamValue
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       ParamName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAudioComponentGroup::GetBoolParamValue(const class FName ParamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "GetBoolParamValue");

	Params::AudioComponentGroup_GetBoolParamValue Parms{};

	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AudioGameplay.AudioComponentGroup.GetFloatParamValue
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       ParamName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAudioComponentGroup::GetFloatParamValue(const class FName ParamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "GetFloatParamValue");

	Params::AudioComponentGroup_GetFloatParamValue Parms{};

	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AudioGameplay.AudioComponentGroup.GetStringParamValue
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       ParamName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAudioComponentGroup::GetStringParamValue(const class FName ParamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "GetStringParamValue");

	Params::AudioComponentGroup_GetStringParamValue Parms{};

	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AudioGameplay.AudioComponentGroup.IsPlayingAny
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAudioComponentGroup::IsPlayingAny() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "IsPlayingAny");

	Params::AudioComponentGroup_IsPlayingAny Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AudioGameplay.AudioComponentGroup.IsVirtualized
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAudioComponentGroup::IsVirtualized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioComponentGroup", "IsVirtualized");

	Params::AudioComponentGroup_IsVirtualized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AudioGameplay.AudioParameterComponent.GetParameters
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FAudioParameter>    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FAudioParameter> UAudioParameterComponent::GetParameters() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AudioParameterComponent", "GetParameters");

	Params::AudioParameterComponent_GetParameters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

