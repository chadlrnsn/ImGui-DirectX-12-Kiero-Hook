#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Base_ModScript

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_structs.hpp"
#include "RGame_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Base_ModScript.BP_Base_ModScript_C
// 0x0030 (0x0150 - 0x0120)
class UBP_Base_ModScript_C : public URGWeaponModScript
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0120(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 CustomCrosshairWidgetClass;                        // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class URSubCrosshair*                         CustomCrosshairWidget;                             // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FireSound;                                         // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class URSubCrosshair*                         CooldownCrosshair;                                 // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldSpawnProjectileLines;                        // 0x0148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Base_ModScript(int32 EntryPoint);
	void Fire();
	void IsCrosshairValid(bool* RetValue);
	void K2_ActivateScript();
	void K2_DeactivateScript();
	void K2_OnProjectileSpawned(class ARProjectileBase* SpawnedProjectile);
	void K2_OnProjectileSpawnedClientDummy(const struct FVector& Direction);
	void K2_OnReload();
	void K2_TickScript(float DeltaTime);
	void LoopBody_3F348FE649F7BB9A3BAA2686C05EC8C3();
	void OnFinish_3F348FE649F7BB9A3BAA2686C05EC8C3();
	void SetCrosshairVisible(bool bVisible);
	void SpawnWeaponFireSFX(class USoundBase* SoundTemplate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Base_ModScript_C">();
	}
	static class UBP_Base_ModScript_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Base_ModScript_C>();
	}
};
static_assert(alignof(UBP_Base_ModScript_C) == 0x000008, "Wrong alignment on UBP_Base_ModScript_C");
static_assert(sizeof(UBP_Base_ModScript_C) == 0x000150, "Wrong size on UBP_Base_ModScript_C");
static_assert(offsetof(UBP_Base_ModScript_C, UberGraphFrame) == 0x000120, "Member 'UBP_Base_ModScript_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Base_ModScript_C, CustomCrosshairWidgetClass) == 0x000128, "Member 'UBP_Base_ModScript_C::CustomCrosshairWidgetClass' has a wrong offset!");
static_assert(offsetof(UBP_Base_ModScript_C, CustomCrosshairWidget) == 0x000130, "Member 'UBP_Base_ModScript_C::CustomCrosshairWidget' has a wrong offset!");
static_assert(offsetof(UBP_Base_ModScript_C, FireSound) == 0x000138, "Member 'UBP_Base_ModScript_C::FireSound' has a wrong offset!");
static_assert(offsetof(UBP_Base_ModScript_C, CooldownCrosshair) == 0x000140, "Member 'UBP_Base_ModScript_C::CooldownCrosshair' has a wrong offset!");
static_assert(offsetof(UBP_Base_ModScript_C, ShouldSpawnProjectileLines) == 0x000148, "Member 'UBP_Base_ModScript_C::ShouldSpawnProjectileLines' has a wrong offset!");

}

