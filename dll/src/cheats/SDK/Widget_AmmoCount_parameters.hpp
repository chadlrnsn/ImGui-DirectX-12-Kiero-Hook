#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_AmmoCount

#include "Basic.hpp"


namespace SDK::Params
{

// Function Widget_AmmoCount.Widget_AmmoCount_C.ExecuteUbergraph_Widget_AmmoCount
// 0x00B0 (0x00B0 - 0x0000)
struct Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ARPlayerPawn* Player, class URGScript* SourceScript, int32 Ammo, int32 Delta)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ARWeapon* Weapon)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 ClipSize)>               K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_CustomEvent_Player;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URGScript*                              K2Node_CustomEvent_SourceScript;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Ammo;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Delta;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0010)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARWeapon*                               K2Node_CustomEvent_Weapon;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIntegerWeaponStat_ReturnValue;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAmmoInClip_ReturnValue;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ClipSize;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount) == 0x000008, "Wrong alignment on Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount");
static_assert(sizeof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount) == 0x0000B0, "Wrong size on Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, EntryPoint) == 0x000000, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, Temp_bool_Variable) == 0x000004, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, K2Node_CustomEvent_Player) == 0x000038, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, K2Node_CustomEvent_SourceScript) == 0x000040, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::K2Node_CustomEvent_SourceScript' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, K2Node_CustomEvent_Ammo) == 0x000048, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::K2Node_CustomEvent_Ammo' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, K2Node_CustomEvent_Delta) == 0x00004C, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::K2Node_CustomEvent_Delta' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, K2Node_CustomEvent_Weapon) == 0x000068, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::K2Node_CustomEvent_Weapon' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, K2Node_Select_Default) == 0x000070, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, CallFunc_PlayAnimation_ReturnValue) == 0x000080, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000088, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, CallFunc_GetIntegerWeaponStat_ReturnValue) == 0x000090, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::CallFunc_GetIntegerWeaponStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000098, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, CallFunc_GetAmmoInClip_ReturnValue) == 0x0000A4, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::CallFunc_GetAmmoInClip_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, K2Node_CustomEvent_ClipSize) == 0x0000A8, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::K2Node_CustomEvent_ClipSize' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'Widget_AmmoCount_C_ExecuteUbergraph_Widget_AmmoCount::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Widget_AmmoCount.Widget_AmmoCount_C.OnAmmoUpdated
// 0x0018 (0x0018 - 0x0000)
struct Widget_AmmoCount_C_OnAmmoUpdated final
{
public:
	class ARPlayerPawn*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URGScript*                              SourceScript;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Ammo_0;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Delta;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_AmmoCount_C_OnAmmoUpdated) == 0x000008, "Wrong alignment on Widget_AmmoCount_C_OnAmmoUpdated");
static_assert(sizeof(Widget_AmmoCount_C_OnAmmoUpdated) == 0x000018, "Wrong size on Widget_AmmoCount_C_OnAmmoUpdated");
static_assert(offsetof(Widget_AmmoCount_C_OnAmmoUpdated, Player) == 0x000000, "Member 'Widget_AmmoCount_C_OnAmmoUpdated::Player' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_OnAmmoUpdated, SourceScript) == 0x000008, "Member 'Widget_AmmoCount_C_OnAmmoUpdated::SourceScript' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_OnAmmoUpdated, Ammo_0) == 0x000010, "Member 'Widget_AmmoCount_C_OnAmmoUpdated::Ammo_0' has a wrong offset!");
static_assert(offsetof(Widget_AmmoCount_C_OnAmmoUpdated, Delta) == 0x000014, "Member 'Widget_AmmoCount_C_OnAmmoUpdated::Delta' has a wrong offset!");

// Function Widget_AmmoCount.Widget_AmmoCount_C.OnClipSizeUpdated
// 0x0004 (0x0004 - 0x0000)
struct Widget_AmmoCount_C_OnClipSizeUpdated final
{
public:
	int32                                         ClipSize;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_AmmoCount_C_OnClipSizeUpdated) == 0x000004, "Wrong alignment on Widget_AmmoCount_C_OnClipSizeUpdated");
static_assert(sizeof(Widget_AmmoCount_C_OnClipSizeUpdated) == 0x000004, "Wrong size on Widget_AmmoCount_C_OnClipSizeUpdated");
static_assert(offsetof(Widget_AmmoCount_C_OnClipSizeUpdated, ClipSize) == 0x000000, "Member 'Widget_AmmoCount_C_OnClipSizeUpdated::ClipSize' has a wrong offset!");

// Function Widget_AmmoCount.Widget_AmmoCount_C.OnWeaponEquipped
// 0x0008 (0x0008 - 0x0000)
struct Widget_AmmoCount_C_OnWeaponEquipped final
{
public:
	class ARWeapon*                               Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_AmmoCount_C_OnWeaponEquipped) == 0x000008, "Wrong alignment on Widget_AmmoCount_C_OnWeaponEquipped");
static_assert(sizeof(Widget_AmmoCount_C_OnWeaponEquipped) == 0x000008, "Wrong size on Widget_AmmoCount_C_OnWeaponEquipped");
static_assert(offsetof(Widget_AmmoCount_C_OnWeaponEquipped, Weapon) == 0x000000, "Member 'Widget_AmmoCount_C_OnWeaponEquipped::Weapon' has a wrong offset!");

}

