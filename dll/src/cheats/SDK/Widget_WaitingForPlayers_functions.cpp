#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_WaitingForPlayers

#include "Basic.hpp"

#include "Widget_WaitingForPlayers_classes.hpp"
#include "Widget_WaitingForPlayers_parameters.hpp"


namespace SDK
{

// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWidget_WaitingForPlayers_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.ExecuteUbergraph_Widget_WaitingForPlayers
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_WaitingForPlayers_C::ExecuteUbergraph_Widget_WaitingForPlayers(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "ExecuteUbergraph_Widget_WaitingForPlayers");

	Params::Widget_WaitingForPlayers_C_ExecuteUbergraph_Widget_WaitingForPlayers Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.HandlePlayerLeft
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWidget_WaitingForPlayers_C::HandlePlayerLeft(class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "HandlePlayerLeft");

	Params::Widget_WaitingForPlayers_C_HandlePlayerLeft Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.HideWidget
// (BlueprintCallable, BlueprintEvent)

void UWidget_WaitingForPlayers_C::HideWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "HideWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.OnFinishedWaitingForPlayers
// (BlueprintCallable, BlueprintEvent)

void UWidget_WaitingForPlayers_C::OnFinishedWaitingForPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "OnFinishedWaitingForPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWidget_WaitingForPlayers_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.OnInputMethodChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        bNewInputType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_WaitingForPlayers_C::OnInputMethodChanged_Event(ECommonInputType bNewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "OnInputMethodChanged_Event");

	Params::Widget_WaitingForPlayers_C_OnInputMethodChanged_Event Parms{};

	Parms.bNewInputType = bNewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.OnLevelChanged
// (BlueprintCallable, BlueprintEvent)

void UWidget_WaitingForPlayers_C::OnLevelChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "OnLevelChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.OnLobbyElevatorSequenceStart_Event
// (BlueprintCallable, BlueprintEvent)

void UWidget_WaitingForPlayers_C::OnLobbyElevatorSequenceStart_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "OnLobbyElevatorSequenceStart_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.OnUngluTeleportSequenceStarted_Event
// (BlueprintCallable, BlueprintEvent)

void UWidget_WaitingForPlayers_C::OnUngluTeleportSequenceStarted_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "OnUngluTeleportSequenceStarted_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.OnVoteToProceed
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumVotes                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumPlayers                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TimeLeft                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_WaitingForPlayers_C::OnVoteToProceed(int32 NumVotes, int32 NumPlayers, int32 TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "OnVoteToProceed");

	Params::Widget_WaitingForPlayers_C_OnVoteToProceed Parms{};

	Parms.NumVotes = NumVotes;
	Parms.NumPlayers = NumPlayers;
	Parms.TimeLeft = TimeLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.OnVoteToProceedTimerTick
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TimeLeft                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_WaitingForPlayers_C::OnVoteToProceedTimerTick(int32 TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "OnVoteToProceedTimerTick");

	Params::Widget_WaitingForPlayers_C_OnVoteToProceedTimerTick Parms{};

	Parms.TimeLeft = TimeLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.StopWait
// (BlueprintCallable, BlueprintEvent)

void UWidget_WaitingForPlayers_C::StopWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "StopWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Widget_WaitingForPlayers.Widget_WaitingForPlayers_C.UpdateText
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidget_WaitingForPlayers_C::UpdateText(ECommonInputType Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Widget_WaitingForPlayers_C", "UpdateText");

	Params::Widget_WaitingForPlayers_C_UpdateText Parms{};

	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);
}

}

