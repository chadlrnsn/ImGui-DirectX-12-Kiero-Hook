#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Breakable_Master

#include "Basic.hpp"

#include "RGame_structs.hpp"


namespace SDK::Params
{

// Function BP_Breakable_Master.BP_Breakable_Master_C.ExecuteUbergraph_BP_Breakable_Master
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URHealthComponent*                      K2Node_CustomEvent_Component;                      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     K2Node_CustomEvent_DamageEventData;                // 0x0010(0x00C0)()
	TDelegate<void(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEventData)> K2Node_CreateDelegate_OutputDelegate; // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master) == 0x000008, "Wrong alignment on BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master");
static_assert(sizeof(BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master) == 0x0000E0, "Wrong size on BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master");
static_assert(offsetof(BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master, EntryPoint) == 0x000000, "Member 'BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master, K2Node_CustomEvent_Component) == 0x000008, "Member 'BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master::K2Node_CustomEvent_Component' has a wrong offset!");
static_assert(offsetof(BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master, K2Node_CustomEvent_DamageEventData) == 0x000010, "Member 'BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master::K2Node_CustomEvent_DamageEventData' has a wrong offset!");
static_assert(offsetof(BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master, K2Node_CreateDelegate_OutputDelegate) == 0x0000D0, "Member 'BP_Breakable_Master_C_ExecuteUbergraph_BP_Breakable_Master::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_Breakable_Master.BP_Breakable_Master_C.OnBroken
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Breakable_Master_C_OnBroken final
{
public:
	class URHealthComponent*                      Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDamageCombatEvent                     DamageEventData;                                   // 0x0008(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Breakable_Master_C_OnBroken) == 0x000008, "Wrong alignment on BP_Breakable_Master_C_OnBroken");
static_assert(sizeof(BP_Breakable_Master_C_OnBroken) == 0x0000C8, "Wrong size on BP_Breakable_Master_C_OnBroken");
static_assert(offsetof(BP_Breakable_Master_C_OnBroken, Component) == 0x000000, "Member 'BP_Breakable_Master_C_OnBroken::Component' has a wrong offset!");
static_assert(offsetof(BP_Breakable_Master_C_OnBroken, DamageEventData) == 0x000008, "Member 'BP_Breakable_Master_C_OnBroken::DamageEventData' has a wrong offset!");

}

