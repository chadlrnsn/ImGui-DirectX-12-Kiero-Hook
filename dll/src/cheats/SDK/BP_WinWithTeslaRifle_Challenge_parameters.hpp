#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WinWithTeslaRifle_Challenge

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_WinWithTeslaRifle_Challenge.BP_WinWithTeslaRifle_Challenge_C.ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge
// 0x0070 (0x0070 - 0x0000)
struct BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool RunFailed)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChallengeCompleted_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool RunFailed)>               K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RunFailed;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue_1;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge) == 0x000008, "Wrong alignment on BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge");
static_assert(sizeof(BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge) == 0x000070, "Wrong size on BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge");
static_assert(offsetof(BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge, EntryPoint) == 0x000000, "Member 'BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge, CallFunc_GetChallengeManager_ReturnValue) == 0x000018, "Member 'BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge, CallFunc_IsChallengeCompleted_ReturnValue) == 0x000020, "Member 'BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge::CallFunc_IsChallengeCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge, CallFunc_GetRGameState_ReturnValue) == 0x000028, "Member 'BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge::CallFunc_GetRGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge, K2Node_CustomEvent_RunFailed) == 0x000050, "Member 'BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge::K2Node_CustomEvent_RunFailed' has a wrong offset!");
static_assert(offsetof(BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge, CallFunc_GetRGameState_ReturnValue_1) == 0x000058, "Member 'BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge::CallFunc_GetRGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge, K2Node_CreateDelegate_OutputDelegate_3) == 0x000060, "Member 'BP_WinWithTeslaRifle_Challenge_C_ExecuteUbergraph_BP_WinWithTeslaRifle_Challenge::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function BP_WinWithTeslaRifle_Challenge.BP_WinWithTeslaRifle_Challenge_C.OnRunFinished
// 0x0001 (0x0001 - 0x0000)
struct BP_WinWithTeslaRifle_Challenge_C_OnRunFinished final
{
public:
	bool                                          RunFailed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinWithTeslaRifle_Challenge_C_OnRunFinished) == 0x000001, "Wrong alignment on BP_WinWithTeslaRifle_Challenge_C_OnRunFinished");
static_assert(sizeof(BP_WinWithTeslaRifle_Challenge_C_OnRunFinished) == 0x000001, "Wrong size on BP_WinWithTeslaRifle_Challenge_C_OnRunFinished");
static_assert(offsetof(BP_WinWithTeslaRifle_Challenge_C_OnRunFinished, RunFailed) == 0x000000, "Member 'BP_WinWithTeslaRifle_Challenge_C_OnRunFinished::RunFailed' has a wrong offset!");

}

