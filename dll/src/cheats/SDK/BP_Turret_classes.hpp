#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Turret

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "RGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Turret.BP_Turret_C
// 0x0358 (0x0600 - 0x02A8)
class ABP_Turret_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SK_PlayerTurret_Body;                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDMActorProximitySphereComponent*       DMActorProximitySphere2;                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_PlayerTurret_UnstablePowerCores_Attached_01;    // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDMActorProximitySphereComponent*       DMActorProximitySphere;                            // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URHealthComponent*                      RHealth;                                           // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CutoutTimeline_Percentage_EE32214E416CC0C143F31AB9170F60AE; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CutoutTimeline__Direction_EE32214E416CC0C143F31AB9170F60AE; // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CutoutTimeline;                                    // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           OwningPlayerPawn;                                  // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ARNPCPawnBase*                          TargetEnemy;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRMutableFloat                         Damage;                                            // 0x0308(0x0128)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRMutableFloat                         RateOfFire;                                        // 0x0430(0x0128)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	double                                        PostDeathLifeSpan;                                 // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProximitySphere*                       ProximitySphere;                                   // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        PerTurretDamageIncreasePercent;                    // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class ARProjectile* Projectile)> OnProjectileFired;                // 0x0570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        PerPlayerFirerateIncreasePercent;                  // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SniperMode;                                        // 0x0588(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SharingIsCaringTimer;                              // 0x0590(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TargetHorizontalRotation;                          // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetVerticalRotation;                            // 0x059C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasUnstablePowerCores;                             // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        MSS_PassiveLoop;                                   // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        MSS_TargetFound;                                   // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FireTimer;                                         // 0x05B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldUpdateRateOfFireTimer;                      // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProximitySphere*                       ProximitySphere2;                                  // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LifeTimeTimer;                                     // 0x05D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         RemainingLifeTime;                                 // 0x05D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DC[0x4];                                      // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARNPCPawnBase*                          LastFiredAtTarget;                                 // 0x05E0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         MoraleBoostStacks;                                 // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EC[0x4];                                      // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CachedController;                                  // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnDelay;                                        // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateBuddySystem();
	void ActivateSentinel();
	void ActivateSharingIsCaring(double Time);
	void AddMoraleBoostMulti();
	void BndEvt__BP_Turret_RHealth_K2Node_ComponentBoundEvent_0_OnHealthDepleted__DelegateSignature(class URHealthComponent* Component, const struct FDamageCombatEvent& DamageEventData);
	void BP_Turret_AutoGenFunc(bool* RetValue);
	void BroadcastOnProjectileFired(class ARProjectile* Projectile);
	void CutoutTimeline__FinishedFunc();
	void CutoutTimeline__UpdateFunc();
	void DisableSharingIsCaringBuff();
	void ExecuteUbergraph_BP_Turret(int32 EntryPoint);
	void FindAndAttackTarget();
	void FireProjectileSpawnFX(const struct FVector& Location, const struct FVector& Direction);
	void GetProjectileClass(class UClass** AsRProjectile);
	void OnActorEnterProximity(class AActor* Actor);
	void OnActorExitProximity(class AActor* Actor);
	void OnDurationEnded();
	void OnInvoke_9DC7927B469A9972D31A4CBFA159964B();
	void OnPlayerEnterProximity(class AActor* Actor);
	void OnPlayerExitProximity(class AActor* Actor);
	void PlayCutoutTimeline(double Duration, double From, double To);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ResetFoundTargetSFX();
	void ToggleUnstableCoresVFX(bool Visible);
	void ToggleUnstableCoresVFXMulticast(bool Visible);
	void UpdateLifeTime(double LifetimeMultiplier);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Turret_C">();
	}
	static class ABP_Turret_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Turret_C>();
	}
};
static_assert(alignof(ABP_Turret_C) == 0x000008, "Wrong alignment on ABP_Turret_C");
static_assert(sizeof(ABP_Turret_C) == 0x000600, "Wrong size on ABP_Turret_C");
static_assert(offsetof(ABP_Turret_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_Turret_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, SK_PlayerTurret_Body) == 0x0002B0, "Member 'ABP_Turret_C::SK_PlayerTurret_Body' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, Capsule) == 0x0002B8, "Member 'ABP_Turret_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, DMActorProximitySphere2) == 0x0002C0, "Member 'ABP_Turret_C::DMActorProximitySphere2' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, NS_PlayerTurret_UnstablePowerCores_Attached_01) == 0x0002C8, "Member 'ABP_Turret_C::NS_PlayerTurret_UnstablePowerCores_Attached_01' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, PointLight) == 0x0002D0, "Member 'ABP_Turret_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, DMActorProximitySphere) == 0x0002D8, "Member 'ABP_Turret_C::DMActorProximitySphere' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, RHealth) == 0x0002E0, "Member 'ABP_Turret_C::RHealth' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, CutoutTimeline_Percentage_EE32214E416CC0C143F31AB9170F60AE) == 0x0002E8, "Member 'ABP_Turret_C::CutoutTimeline_Percentage_EE32214E416CC0C143F31AB9170F60AE' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, CutoutTimeline__Direction_EE32214E416CC0C143F31AB9170F60AE) == 0x0002EC, "Member 'ABP_Turret_C::CutoutTimeline__Direction_EE32214E416CC0C143F31AB9170F60AE' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, CutoutTimeline) == 0x0002F0, "Member 'ABP_Turret_C::CutoutTimeline' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, OwningPlayerPawn) == 0x0002F8, "Member 'ABP_Turret_C::OwningPlayerPawn' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, TargetEnemy) == 0x000300, "Member 'ABP_Turret_C::TargetEnemy' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, Damage) == 0x000308, "Member 'ABP_Turret_C::Damage' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, RateOfFire) == 0x000430, "Member 'ABP_Turret_C::RateOfFire' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, PostDeathLifeSpan) == 0x000558, "Member 'ABP_Turret_C::PostDeathLifeSpan' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, ProximitySphere) == 0x000560, "Member 'ABP_Turret_C::ProximitySphere' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, PerTurretDamageIncreasePercent) == 0x000568, "Member 'ABP_Turret_C::PerTurretDamageIncreasePercent' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, OnProjectileFired) == 0x000570, "Member 'ABP_Turret_C::OnProjectileFired' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, PerPlayerFirerateIncreasePercent) == 0x000580, "Member 'ABP_Turret_C::PerPlayerFirerateIncreasePercent' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, SniperMode) == 0x000588, "Member 'ABP_Turret_C::SniperMode' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, SharingIsCaringTimer) == 0x000590, "Member 'ABP_Turret_C::SharingIsCaringTimer' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, TargetHorizontalRotation) == 0x000598, "Member 'ABP_Turret_C::TargetHorizontalRotation' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, TargetVerticalRotation) == 0x00059C, "Member 'ABP_Turret_C::TargetVerticalRotation' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, HasUnstablePowerCores) == 0x0005A0, "Member 'ABP_Turret_C::HasUnstablePowerCores' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, MSS_PassiveLoop) == 0x0005A8, "Member 'ABP_Turret_C::MSS_PassiveLoop' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, MSS_TargetFound) == 0x0005B0, "Member 'ABP_Turret_C::MSS_TargetFound' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, FireTimer) == 0x0005B8, "Member 'ABP_Turret_C::FireTimer' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, bShouldUpdateRateOfFireTimer) == 0x0005C0, "Member 'ABP_Turret_C::bShouldUpdateRateOfFireTimer' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, ProximitySphere2) == 0x0005C8, "Member 'ABP_Turret_C::ProximitySphere2' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, LifeTimeTimer) == 0x0005D0, "Member 'ABP_Turret_C::LifeTimeTimer' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, RemainingLifeTime) == 0x0005D8, "Member 'ABP_Turret_C::RemainingLifeTime' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, LastFiredAtTarget) == 0x0005E0, "Member 'ABP_Turret_C::LastFiredAtTarget' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, MoraleBoostStacks) == 0x0005E8, "Member 'ABP_Turret_C::MoraleBoostStacks' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, CachedController) == 0x0005F0, "Member 'ABP_Turret_C::CachedController' has a wrong offset!");
static_assert(offsetof(ABP_Turret_C, SpawnDelay) == 0x0005F8, "Member 'ABP_Turret_C::SpawnDelay' has a wrong offset!");

}

