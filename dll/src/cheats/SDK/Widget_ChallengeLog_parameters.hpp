#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_ChallengeLog

#include "Basic.hpp"

#include "RGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Widget_ChallengeLog.Widget_ChallengeLog_C.Update Info
// 0x02D0 (0x02D0 - 0x0000)
struct Widget_ChallengeLog_C_Update_Info final
{
public:
	class UObject*                                RChallengeGridItem;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x0010(0x00B0)()
	class URChallengeGridItem*                    K2Node_DynamicCast_AsRChallenge_Grid_Item;         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_ParseChallengeDescription_ReturnValue;    // 0x00D0(0x0010)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00F0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0138(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_1;       // 0x0190(0x00B0)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0240(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0250(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0298(0x0010)(ReferenceParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02B0(0x0010)()
	class FText                                   CallFunc_SelectText_ReturnValue;                   // 0x02C0(0x0010)()
};
static_assert(alignof(Widget_ChallengeLog_C_Update_Info) == 0x000010, "Wrong alignment on Widget_ChallengeLog_C_Update_Info");
static_assert(sizeof(Widget_ChallengeLog_C_Update_Info) == 0x0002D0, "Wrong size on Widget_ChallengeLog_C_Update_Info");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, RChallengeGridItem) == 0x000000, "Member 'Widget_ChallengeLog_C_Update_Info::RChallengeGridItem' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x000010, "Member 'Widget_ChallengeLog_C_Update_Info::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, K2Node_DynamicCast_AsRChallenge_Grid_Item) == 0x0000C0, "Member 'Widget_ChallengeLog_C_Update_Info::K2Node_DynamicCast_AsRChallenge_Grid_Item' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'Widget_ChallengeLog_C_Update_Info::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, CallFunc_ParseChallengeDescription_ReturnValue) == 0x0000D0, "Member 'Widget_ChallengeLog_C_Update_Info::CallFunc_ParseChallengeDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000E0, "Member 'Widget_ChallengeLog_C_Update_Info::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000E8, "Member 'Widget_ChallengeLog_C_Update_Info::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, K2Node_MakeStruct_FormatArgumentData) == 0x0000F0, "Member 'Widget_ChallengeLog_C_Update_Info::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, K2Node_MakeStruct_FormatArgumentData_1) == 0x000138, "Member 'Widget_ChallengeLog_C_Update_Info::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, K2Node_MakeArray_Array) == 0x000180, "Member 'Widget_ChallengeLog_C_Update_Info::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, CallFunc_MakeBrushFromTexture_ReturnValue_1) == 0x000190, "Member 'Widget_ChallengeLog_C_Update_Info::CallFunc_MakeBrushFromTexture_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, CallFunc_Format_ReturnValue) == 0x000240, "Member 'Widget_ChallengeLog_C_Update_Info::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, K2Node_MakeStruct_FormatArgumentData_2) == 0x000250, "Member 'Widget_ChallengeLog_C_Update_Info::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, K2Node_MakeArray_Array_1) == 0x000298, "Member 'Widget_ChallengeLog_C_Update_Info::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, CallFunc_TextIsEmpty_ReturnValue) == 0x0002A8, "Member 'Widget_ChallengeLog_C_Update_Info::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, CallFunc_Format_ReturnValue_1) == 0x0002B0, "Member 'Widget_ChallengeLog_C_Update_Info::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_Update_Info, CallFunc_SelectText_ReturnValue) == 0x0002C0, "Member 'Widget_ChallengeLog_C_Update_Info::CallFunc_SelectText_ReturnValue' has a wrong offset!");

// Function Widget_ChallengeLog.Widget_ChallengeLog_C.SpecificCategorySelected
// 0x0004 (0x0004 - 0x0000)
struct Widget_ChallengeLog_C_SpecificCategorySelected final
{
public:
	int32                                         ButtonIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_ChallengeLog_C_SpecificCategorySelected) == 0x000004, "Wrong alignment on Widget_ChallengeLog_C_SpecificCategorySelected");
static_assert(sizeof(Widget_ChallengeLog_C_SpecificCategorySelected) == 0x000004, "Wrong size on Widget_ChallengeLog_C_SpecificCategorySelected");
static_assert(offsetof(Widget_ChallengeLog_C_SpecificCategorySelected, ButtonIndex) == 0x000000, "Member 'Widget_ChallengeLog_C_SpecificCategorySelected::ButtonIndex' has a wrong offset!");

// Function Widget_ChallengeLog.Widget_ChallengeLog_C.SortByRewardCategory
// 0x01E0 (0x01E0 - 0x0000)
struct Widget_ChallengeLog_C_SortByRewardCategory final
{
public:
	ERChallengeRewardCategory                     RewardCategory;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRChallenge>                    CallFunc_GetAllChallenges_ReturnValue;             // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRChallenge                            CallFunc_Array_Get_Item;                           // 0x0050(0x0178)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URChallengeGridItem*                    CallFunc_CreateChallengeGridItem_ReturnValue;      // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_ChallengeLog_C_SortByRewardCategory) == 0x000008, "Wrong alignment on Widget_ChallengeLog_C_SortByRewardCategory");
static_assert(sizeof(Widget_ChallengeLog_C_SortByRewardCategory) == 0x0001E0, "Wrong size on Widget_ChallengeLog_C_SortByRewardCategory");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, RewardCategory) == 0x000000, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::RewardCategory' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000010, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_GetChallengeManager_ReturnValue) == 0x000018, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_GetOwningPlayerPawn_ReturnValue_1) == 0x000020, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_GetOwningPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_GetChallengeManager_ReturnValue_1) == 0x000030, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_GetChallengeManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_GetAllChallenges_ReturnValue) == 0x000038, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_GetAllChallenges_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_Array_Get_Item) == 0x000050, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_CreateChallengeGridItem_ReturnValue) == 0x0001D0, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_CreateChallengeGridItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001D8, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_SortByRewardCategory, CallFunc_BooleanOR_ReturnValue) == 0x0001D9, "Member 'Widget_ChallengeLog_C_SortByRewardCategory::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Widget_ChallengeLog.Widget_ChallengeLog_C.SetAllSelected
// 0x0001 (0x0001 - 0x0000)
struct Widget_ChallengeLog_C_SetAllSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_ChallengeLog_C_SetAllSelected) == 0x000001, "Wrong alignment on Widget_ChallengeLog_C_SetAllSelected");
static_assert(sizeof(Widget_ChallengeLog_C_SetAllSelected) == 0x000001, "Wrong size on Widget_ChallengeLog_C_SetAllSelected");
static_assert(offsetof(Widget_ChallengeLog_C_SetAllSelected, Selected) == 0x000000, "Member 'Widget_ChallengeLog_C_SetAllSelected::Selected' has a wrong offset!");

// Function Widget_ChallengeLog.Widget_ChallengeLog_C.ScrollToChallengeByAsset
// 0x01E8 (0x01E8 - 0x0000)
struct Widget_ChallengeLog_C_ScrollToChallengeByAsset final
{
public:
	class URPrimaryDataAsset*                     Asset;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CachedChallengeId;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRChallenge                            CallFunc_GetChallengeByRewardAsset_ReturnValue;    // 0x0030(0x0178)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_GetListItems_ReturnValue;                 // 0x01B0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URChallengeGridItem*                    K2Node_DynamicCast_AsRChallenge_Grid_Item;         // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_ChallengeLog_C_ScrollToChallengeByAsset) == 0x000008, "Wrong alignment on Widget_ChallengeLog_C_ScrollToChallengeByAsset");
static_assert(sizeof(Widget_ChallengeLog_C_ScrollToChallengeByAsset) == 0x0001E8, "Wrong size on Widget_ChallengeLog_C_ScrollToChallengeByAsset");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, Asset) == 0x000000, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::Asset' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, CachedChallengeId) == 0x000008, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::CachedChallengeId' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, CallFunc_GetChallengeManager_ReturnValue) == 0x000028, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, CallFunc_GetChallengeByRewardAsset_ReturnValue) == 0x000030, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::CallFunc_GetChallengeByRewardAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, CallFunc_Add_IntInt_ReturnValue) == 0x0001A8, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, CallFunc_GetListItems_ReturnValue) == 0x0001B0, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::CallFunc_GetListItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, CallFunc_IsValid_ReturnValue_1) == 0x0001C0, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, CallFunc_Array_Get_Item) == 0x0001C8, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, K2Node_DynamicCast_AsRChallenge_Grid_Item) == 0x0001D0, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::K2Node_DynamicCast_AsRChallenge_Grid_Item' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, CallFunc_Array_Length_ReturnValue) == 0x0001DC, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, CallFunc_Less_IntInt_ReturnValue) == 0x0001E0, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ScrollToChallengeByAsset, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0001E1, "Member 'Widget_ChallengeLog_C_ScrollToChallengeByAsset::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function Widget_ChallengeLog.Widget_ChallengeLog_C.ExecuteUbergraph_Widget_ChallengeLog
// 0x0118 (0x0118 - 0x0000)
struct Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Item, class UUserWidget* Widget)> K2Node_CreateDelegate_OutputDelegate; // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         Temp_wildcard_Variable;                            // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UImage*>                         Temp_wildcard_Variable_1;                          // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_CustomEvent_Widget_1;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_ComponentBoundEvent_Item;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsHovered;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_GetListItems_ReturnValue;                 // 0x0088(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(class UObject* Item, class UUserWidget* Widget)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Item;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_CustomEvent_Widget;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget_ChallengeLogEntry_C*            K2Node_DynamicCast_AsWidget_Challenge_Log_Entry;   // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Selected;                       // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00E0(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00F4(0x0014)()
	int32                                         K2Node_CustomEvent_ButtonIndex;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog) == 0x000008, "Wrong alignment on Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog");
static_assert(sizeof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog) == 0x000118, "Wrong size on Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, EntryPoint) == 0x000000, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, Temp_bool_Has_Been_Initd_Variable) == 0x000008, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, Temp_wildcard_Variable) == 0x000030, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, Temp_wildcard_Variable_1) == 0x000040, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_CustomEvent_Item_1) == 0x000068, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_CustomEvent_Item_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_CustomEvent_Widget_1) == 0x000070, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_CustomEvent_Widget_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_ComponentBoundEvent_Item) == 0x000078, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_ComponentBoundEvent_bIsHovered) == 0x000080, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_ComponentBoundEvent_bIsHovered' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, CallFunc_GetListItems_ReturnValue) == 0x000088, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::CallFunc_GetListItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_CreateDelegate_OutputDelegate_1) == 0x000098, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_CustomEvent_Item) == 0x0000B0, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_CustomEvent_Widget) == 0x0000B8, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_CustomEvent_Widget' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_DynamicCast_AsWidget_Challenge_Log_Entry) == 0x0000C0, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_DynamicCast_AsWidget_Challenge_Log_Entry' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_CustomEvent_Selected) == 0x0000C9, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_CustomEvent_Selected' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_MakeArray_Array) == 0x0000D0, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_MakeStruct_SlateColor) == 0x0000E0, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_MakeStruct_SlateColor_1) == 0x0000F4, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, K2Node_CustomEvent_ButtonIndex) == 0x000108, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::K2Node_CustomEvent_ButtonIndex' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, Temp_bool_IsClosed_Variable) == 0x00010C, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'Widget_ChallengeLog_C_ExecuteUbergraph_Widget_ChallengeLog::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function Widget_ChallengeLog.Widget_ChallengeLog_C.BP_OnItemScrolledIntoView_Event
// 0x0010 (0x0010 - 0x0000)
struct Widget_ChallengeLog_C_BP_OnItemScrolledIntoView_Event final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_ChallengeLog_C_BP_OnItemScrolledIntoView_Event) == 0x000008, "Wrong alignment on Widget_ChallengeLog_C_BP_OnItemScrolledIntoView_Event");
static_assert(sizeof(Widget_ChallengeLog_C_BP_OnItemScrolledIntoView_Event) == 0x000010, "Wrong size on Widget_ChallengeLog_C_BP_OnItemScrolledIntoView_Event");
static_assert(offsetof(Widget_ChallengeLog_C_BP_OnItemScrolledIntoView_Event, Item) == 0x000000, "Member 'Widget_ChallengeLog_C_BP_OnItemScrolledIntoView_Event::Item' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_BP_OnItemScrolledIntoView_Event, Widget) == 0x000008, "Member 'Widget_ChallengeLog_C_BP_OnItemScrolledIntoView_Event::Widget' has a wrong offset!");

// Function Widget_ChallengeLog.Widget_ChallengeLog_C.BP_OnEntryInitialized_Event
// 0x0010 (0x0010 - 0x0000)
struct Widget_ChallengeLog_C_BP_OnEntryInitialized_Event final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_ChallengeLog_C_BP_OnEntryInitialized_Event) == 0x000008, "Wrong alignment on Widget_ChallengeLog_C_BP_OnEntryInitialized_Event");
static_assert(sizeof(Widget_ChallengeLog_C_BP_OnEntryInitialized_Event) == 0x000010, "Wrong size on Widget_ChallengeLog_C_BP_OnEntryInitialized_Event");
static_assert(offsetof(Widget_ChallengeLog_C_BP_OnEntryInitialized_Event, Item) == 0x000000, "Member 'Widget_ChallengeLog_C_BP_OnEntryInitialized_Event::Item' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_BP_OnEntryInitialized_Event, Widget) == 0x000008, "Member 'Widget_ChallengeLog_C_BP_OnEntryInitialized_Event::Widget' has a wrong offset!");

// Function Widget_ChallengeLog.Widget_ChallengeLog_C.BndEvt__Widget_ChallengeLog_ChallengeGrid_K2Node_ComponentBoundEvent_0_OnItemIsHoveredChangedDynamic__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Widget_ChallengeLog_C_BndEvt__Widget_ChallengeLog_ChallengeGrid_K2Node_ComponentBoundEvent_0_OnItemIsHoveredChangedDynamic__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHovered;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_ChallengeLog_C_BndEvt__Widget_ChallengeLog_ChallengeGrid_K2Node_ComponentBoundEvent_0_OnItemIsHoveredChangedDynamic__DelegateSignature) == 0x000008, "Wrong alignment on Widget_ChallengeLog_C_BndEvt__Widget_ChallengeLog_ChallengeGrid_K2Node_ComponentBoundEvent_0_OnItemIsHoveredChangedDynamic__DelegateSignature");
static_assert(sizeof(Widget_ChallengeLog_C_BndEvt__Widget_ChallengeLog_ChallengeGrid_K2Node_ComponentBoundEvent_0_OnItemIsHoveredChangedDynamic__DelegateSignature) == 0x000010, "Wrong size on Widget_ChallengeLog_C_BndEvt__Widget_ChallengeLog_ChallengeGrid_K2Node_ComponentBoundEvent_0_OnItemIsHoveredChangedDynamic__DelegateSignature");
static_assert(offsetof(Widget_ChallengeLog_C_BndEvt__Widget_ChallengeLog_ChallengeGrid_K2Node_ComponentBoundEvent_0_OnItemIsHoveredChangedDynamic__DelegateSignature, Item) == 0x000000, "Member 'Widget_ChallengeLog_C_BndEvt__Widget_ChallengeLog_ChallengeGrid_K2Node_ComponentBoundEvent_0_OnItemIsHoveredChangedDynamic__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(Widget_ChallengeLog_C_BndEvt__Widget_ChallengeLog_ChallengeGrid_K2Node_ComponentBoundEvent_0_OnItemIsHoveredChangedDynamic__DelegateSignature, bIsHovered) == 0x000008, "Member 'Widget_ChallengeLog_C_BndEvt__Widget_ChallengeLog_ChallengeGrid_K2Node_ComponentBoundEvent_0_OnItemIsHoveredChangedDynamic__DelegateSignature::bIsHovered' has a wrong offset!");

}

