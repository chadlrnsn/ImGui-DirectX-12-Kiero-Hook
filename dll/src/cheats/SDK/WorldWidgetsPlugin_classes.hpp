#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WorldWidgetsPlugin

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "WorldWidgetsPlugin_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class WorldWidgetsPlugin.WorldWidgetCanvas
// 0x0060 (0x0330 - 0x02D0)
class UWorldWidgetCanvas final : public UUserWidget
{
public:
	uint8                                         Pad_2D0[0x58];                                     // 0x02D0(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GlobalZOrder;                                      // 0x0328(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void DestroyPushedWorldWidget(class UObject* WorldContextObject, class UUserWidget* Widget);
	static struct FVector2D GetWorldWidgetScreenLocation(class UObject* WorldContextObject, class UUserWidget* Widget);
	static struct FWorldWidgetInfo GetWorldWidgetSettings(class UObject* WorldContextObject, class UUserWidget* Widget);
	static void HidePushedWorldWidget(class UObject* WorldContextObject, class UUserWidget* Widget);
	static class UUserWidget* PushAttachedWorldWidget(class UObject* WorldContextObject, class APlayerController* PlayerController, TSubclassOf<class UUserWidget> WidgetClass, class USceneComponent* AttachToComponent, class FName AttachSocket, const struct FWorldWidgetInfo& widgetInfo);
	static TArray<class UUserWidget*> PushAttachedWorldWidgetAllLocalPlayers(class UObject* WorldContextObject, TSubclassOf<class UUserWidget> WidgetClass, class USceneComponent* AttachToComponent, class FName AttachSocket, const struct FWorldWidgetInfo& widgetInfo);
	static class UUserWidget* PushWorldWidgetToLocation(class UObject* WorldContextObject, class APlayerController* PlayerController, TSubclassOf<class UUserWidget> WidgetClass, const struct FVector& WorldLocation, const struct FWorldWidgetInfo& widgetInfo);
	static TArray<class UUserWidget*> PushWorldWidgetToLocationAllLocalPlayer(class UObject* WorldContextObject, TSubclassOf<class UUserWidget> WidgetClass, const struct FVector& WorldLocation, const struct FWorldWidgetInfo& widgetInfo);
	static void ShowPushedWorldWidget(class UObject* WorldContextObject, class UUserWidget* Widget);
	static void UpdateWidgetLocation(class UObject* WorldContextObject, class UUserWidget* Widget, const struct FVector& NewLocation);
	static void UpdateWorldWidgetSettings(class UObject* WorldContextObject, class UUserWidget* Widget, const struct FWorldWidgetInfo& newSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WorldWidgetCanvas">();
	}
	static class UWorldWidgetCanvas* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWorldWidgetCanvas>();
	}
};
static_assert(alignof(UWorldWidgetCanvas) == 0x000008, "Wrong alignment on UWorldWidgetCanvas");
static_assert(sizeof(UWorldWidgetCanvas) == 0x000330, "Wrong size on UWorldWidgetCanvas");
static_assert(offsetof(UWorldWidgetCanvas, GlobalZOrder) == 0x000328, "Member 'UWorldWidgetCanvas::GlobalZOrder' has a wrong offset!");

// Class WorldWidgetsPlugin.WorldWidgetComponent
// 0x0160 (0x0390 - 0x0230)
class UWorldWidgetComponent final : public USceneComponent
{
public:
	TArray<class UUserWidget*>                    OwnedWidgets;                                      // 0x0230(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>                WidgetClass;                                       // 0x0240(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FWorldWidgetInfo                       WidgetSettings;                                    // 0x0248(0x0130)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class UWorldWidgetComponent* Component, const TArray<class UUserWidget*>& Widgets)> OnWidgetsCreated; // 0x0378(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WorldWidgetComponent">();
	}
	static class UWorldWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWorldWidgetComponent>();
	}
};
static_assert(alignof(UWorldWidgetComponent) == 0x000010, "Wrong alignment on UWorldWidgetComponent");
static_assert(sizeof(UWorldWidgetComponent) == 0x000390, "Wrong size on UWorldWidgetComponent");
static_assert(offsetof(UWorldWidgetComponent, OwnedWidgets) == 0x000230, "Member 'UWorldWidgetComponent::OwnedWidgets' has a wrong offset!");
static_assert(offsetof(UWorldWidgetComponent, WidgetClass) == 0x000240, "Member 'UWorldWidgetComponent::WidgetClass' has a wrong offset!");
static_assert(offsetof(UWorldWidgetComponent, WidgetSettings) == 0x000248, "Member 'UWorldWidgetComponent::WidgetSettings' has a wrong offset!");
static_assert(offsetof(UWorldWidgetComponent, OnWidgetsCreated) == 0x000378, "Member 'UWorldWidgetComponent::OnWidgetsCreated' has a wrong offset!");

}

