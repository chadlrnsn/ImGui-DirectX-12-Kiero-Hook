#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CoralShaman

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_CoralShaman_structs.hpp"
#include "E_Shaman_States_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CoralShaman.ABP_CoralShaman_C
// 0x2030 (0x28B0 - 0x0880)
class UABP_CoralShaman_C final : public UREnemyAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0880(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_CoralShaman::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;              // 0x0888(0x0048)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x08D0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x08D8(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x08E0(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x0900(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x09B8(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0A70(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0B28(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x0BE0(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x0C60(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x0CE0(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x0D60(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x0DE0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x0E08(0x0028)()
	struct FAnimNode_MultiWayBlend                AnimGraphNode_MultiWayBlend;                       // 0x0E30(0x0050)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x0E80(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x0EA8(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0ED0(0x0020)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x0EF0(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x0FB8(0x0070)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x1028(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x10F0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1110(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1130(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x1178(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x11E8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x1258(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x12C8(0x0070)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x1338(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1400(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x1420(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x14E8(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1568(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x1590(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x15B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x15E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x1608(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1630(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1658(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x16A0(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1710(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1780(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x17A0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x17C8(0x0020)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x17E8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x18B0(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x18F8(0x00C8)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x19C0(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x1A00(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1A40(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1A60(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1B28(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1BA8(0x0048)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x1BF0(0x0550)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x2140(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x2188(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x21B0(0x00E8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x2298(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x2318(0x00E8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x2400(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2448(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2470(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2498(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x24C0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2508(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2528(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2570(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x2590(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x25B8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x25D8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x26A0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x2720(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x2748(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x2770(0x00E8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2858(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2880(0x0028)()
	bool                                          Sprinting;                                         // 0x28A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Shaman_States                               States;                                            // 0x28A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          base;                                              // 0x28AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Explosive;                                         // 0x28AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWalking;                                          // 0x28AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFalling;                                          // 0x28AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_FootStep();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void CycleBlending(const struct FPoseLink& F, const struct FPoseLink& B, const struct FPoseLink& L, const struct FPoseLink& R, struct FPoseLink* CycleBlending_0);
	void ExecuteUbergraph_ABP_CoralShaman(int32 EntryPoint);
	void UpdateLocomotionStates();
	void UpdateShamanStates();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CoralShaman_C">();
	}
	static class UABP_CoralShaman_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CoralShaman_C>();
	}
};
static_assert(alignof(UABP_CoralShaman_C) == 0x000010, "Wrong alignment on UABP_CoralShaman_C");
static_assert(sizeof(UABP_CoralShaman_C) == 0x0028B0, "Wrong size on UABP_CoralShaman_C");
static_assert(offsetof(UABP_CoralShaman_C, UberGraphFrame) == 0x000880, "Member 'UABP_CoralShaman_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, __AnimBlueprintMutables) == 0x000888, "Member 'UABP_CoralShaman_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimBlueprintExtension_PropertyAccess) == 0x0008D0, "Member 'UABP_CoralShaman_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimBlueprintExtension_Base) == 0x0008D8, "Member 'UABP_CoralShaman_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_Root_1) == 0x0008E0, "Member 'UABP_CoralShaman_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_LinkedInputPose_3) == 0x000900, "Member 'UABP_CoralShaman_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_LinkedInputPose_2) == 0x0009B8, "Member 'UABP_CoralShaman_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_LinkedInputPose_1) == 0x000A70, "Member 'UABP_CoralShaman_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_LinkedInputPose) == 0x000B28, "Member 'UABP_CoralShaman_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SaveCachedPose_7) == 0x000BE0, "Member 'UABP_CoralShaman_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SaveCachedPose_6) == 0x000C60, "Member 'UABP_CoralShaman_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SaveCachedPose_5) == 0x000CE0, "Member 'UABP_CoralShaman_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SaveCachedPose_4) == 0x000D60, "Member 'UABP_CoralShaman_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_UseCachedPose_10) == 0x000DE0, "Member 'UABP_CoralShaman_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_UseCachedPose_9) == 0x000E08, "Member 'UABP_CoralShaman_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_MultiWayBlend) == 0x000E30, "Member 'UABP_CoralShaman_C::AnimGraphNode_MultiWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_UseCachedPose_8) == 0x000E80, "Member 'UABP_CoralShaman_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_UseCachedPose_7) == 0x000EA8, "Member 'UABP_CoralShaman_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_Root) == 0x000ED0, "Member 'UABP_CoralShaman_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_TwoWayBlend_1) == 0x000EF0, "Member 'UABP_CoralShaman_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_BlendSpacePlayer_6) == 0x000FB8, "Member 'UABP_CoralShaman_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_ApplyAdditive_1) == 0x001028, "Member 'UABP_CoralShaman_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_ComponentToLocalSpace) == 0x0010F0, "Member 'UABP_CoralShaman_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_LocalToComponentSpace) == 0x001110, "Member 'UABP_CoralShaman_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SequencePlayer_3) == 0x001130, "Member 'UABP_CoralShaman_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_BlendSpacePlayer_5) == 0x001178, "Member 'UABP_CoralShaman_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_BlendSpacePlayer_4) == 0x0011E8, "Member 'UABP_CoralShaman_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_BlendSpacePlayer_3) == 0x001258, "Member 'UABP_CoralShaman_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_BlendSpacePlayer_2) == 0x0012C8, "Member 'UABP_CoralShaman_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_LinkedAnimLayer) == 0x001338, "Member 'UABP_CoralShaman_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_StateResult_6) == 0x001400, "Member 'UABP_CoralShaman_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_StateMachine_2) == 0x001420, "Member 'UABP_CoralShaman_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SaveCachedPose_3) == 0x0014E8, "Member 'UABP_CoralShaman_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_TransitionResult_8) == 0x001568, "Member 'UABP_CoralShaman_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_TransitionResult_7) == 0x001590, "Member 'UABP_CoralShaman_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_TransitionResult_6) == 0x0015B8, "Member 'UABP_CoralShaman_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_TransitionResult_5) == 0x0015E0, "Member 'UABP_CoralShaman_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_TransitionResult_4) == 0x001608, "Member 'UABP_CoralShaman_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_TransitionResult_3) == 0x001630, "Member 'UABP_CoralShaman_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_BlendListByBool) == 0x001658, "Member 'UABP_CoralShaman_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0016A0, "Member 'UABP_CoralShaman_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_BlendSpacePlayer) == 0x001710, "Member 'UABP_CoralShaman_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_StateResult_5) == 0x001780, "Member 'UABP_CoralShaman_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_UseCachedPose_6) == 0x0017A0, "Member 'UABP_CoralShaman_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_StateResult_4) == 0x0017C8, "Member 'UABP_CoralShaman_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_ApplyAdditive) == 0x0017E8, "Member 'UABP_CoralShaman_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SequencePlayer_2) == 0x0018B0, "Member 'UABP_CoralShaman_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_TwoWayBlend) == 0x0018F8, "Member 'UABP_CoralShaman_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SequenceEvaluator_1) == 0x0019C0, "Member 'UABP_CoralShaman_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SequenceEvaluator) == 0x001A00, "Member 'UABP_CoralShaman_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_StateResult_3) == 0x001A40, "Member 'UABP_CoralShaman_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_StateMachine_1) == 0x001A60, "Member 'UABP_CoralShaman_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SaveCachedPose_2) == 0x001B28, "Member 'UABP_CoralShaman_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_Slot_2) == 0x001BA8, "Member 'UABP_CoralShaman_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_Inertialization) == 0x001BF0, "Member 'UABP_CoralShaman_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_Slot_1) == 0x002140, "Member 'UABP_CoralShaman_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_UseCachedPose_5) == 0x002188, "Member 'UABP_CoralShaman_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_LayeredBoneBlend_2) == 0x0021B0, "Member 'UABP_CoralShaman_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SaveCachedPose_1) == 0x002298, "Member 'UABP_CoralShaman_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_LayeredBoneBlend_1) == 0x002318, "Member 'UABP_CoralShaman_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_Slot) == 0x002400, "Member 'UABP_CoralShaman_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_TransitionResult_2) == 0x002448, "Member 'UABP_CoralShaman_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_TransitionResult_1) == 0x002470, "Member 'UABP_CoralShaman_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_TransitionResult) == 0x002498, "Member 'UABP_CoralShaman_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SequencePlayer_1) == 0x0024C0, "Member 'UABP_CoralShaman_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_StateResult_2) == 0x002508, "Member 'UABP_CoralShaman_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SequencePlayer) == 0x002528, "Member 'UABP_CoralShaman_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_StateResult_1) == 0x002570, "Member 'UABP_CoralShaman_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_UseCachedPose_4) == 0x002590, "Member 'UABP_CoralShaman_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_StateResult) == 0x0025B8, "Member 'UABP_CoralShaman_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_StateMachine) == 0x0025D8, "Member 'UABP_CoralShaman_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_SaveCachedPose) == 0x0026A0, "Member 'UABP_CoralShaman_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_UseCachedPose_3) == 0x002720, "Member 'UABP_CoralShaman_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_UseCachedPose_2) == 0x002748, "Member 'UABP_CoralShaman_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_LayeredBoneBlend) == 0x002770, "Member 'UABP_CoralShaman_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_UseCachedPose_1) == 0x002858, "Member 'UABP_CoralShaman_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, AnimGraphNode_UseCachedPose) == 0x002880, "Member 'UABP_CoralShaman_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, Sprinting) == 0x0028A8, "Member 'UABP_CoralShaman_C::Sprinting' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, States) == 0x0028A9, "Member 'UABP_CoralShaman_C::States' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, base) == 0x0028AA, "Member 'UABP_CoralShaman_C::base' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, Explosive) == 0x0028AB, "Member 'UABP_CoralShaman_C::Explosive' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, bWalking) == 0x0028AC, "Member 'UABP_CoralShaman_C::bWalking' has a wrong offset!");
static_assert(offsetof(UABP_CoralShaman_C, bFalling) == 0x0028AD, "Member 'UABP_CoralShaman_C::bFalling' has a wrong offset!");

}

