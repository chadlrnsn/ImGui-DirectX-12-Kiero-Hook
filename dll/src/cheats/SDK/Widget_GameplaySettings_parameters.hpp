#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_GameplaySettings

#include "Basic.hpp"

#include "RGame_structs.hpp"


namespace SDK::Params
{

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.SetWidgetCurrentValues
// 0x0160 (0x0160 - 0x0000)
struct Widget_GameplaySettings_C_SetWidgetCurrentValues final
{
public:
	TArray<class FString>                         Temp_wildcard_Variable;                            // 0x0000(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGamepadIconScheme                            CallFunc_GetGamepadIconScheme_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_1;       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameLanguage_ReturnValue;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_2;       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAllowTelemetryDataCollection_ReturnValue; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_3;       // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDisableLanguageFiltering_ReturnValue;  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_4;       // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowDashIndicator_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_5;       // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECrosshairAlignmentOption                     CallFunc_GetCrosshairAlignmentOption_ReturnValue;  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCrosshairAlignmentIndexByOption_Index; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_6;       // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAimAssistStrength_ReturnValue;         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetControllerScopedYSensitivity_ReturnValue; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetControllerScopedXSensitivity_ReturnValue; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetControllerYSensitivity_ReturnValue;    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetControllerXSensitivity_ReturnValue;    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageNumbersOption                          CallFunc_GetShowDamageNumbers_ReturnValue;         // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDamageNumbersIndexByOption_Index;      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_7;       // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAimSensitivity_ReturnValue;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInvertXAxis_ReturnValue;               // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScopedAimSensitivity_ReturnValue;      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPerformCameraShakes_ReturnValue;       // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowPlayerNames_ReturnValue;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowPlayerHUD_ReturnValue;             // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowCrosshair_ReturnValue;             // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInvertYAxis_ReturnValue;               // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowHealthBars_ReturnValue;            // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHoldToScope_ReturnValue;               // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFieldOfView_ReturnValue;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetValue_InValue_ImplicitCast;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetValue_InValue_ImplicitCast_1;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetValue_InValue_ImplicitCast_2;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetValue_InValue_ImplicitCast_3;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetValue_InValue_ImplicitCast_4;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_SetWidgetCurrentValues) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_SetWidgetCurrentValues");
static_assert(sizeof(Widget_GameplaySettings_C_SetWidgetCurrentValues) == 0x000160, "Wrong size on Widget_GameplaySettings_C_SetWidgetCurrentValues");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, Temp_wildcard_Variable) == 0x000000, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetRGameUserSettings_ReturnValue) == 0x000038, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetRGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetGamepadIconScheme_ReturnValue) == 0x000040, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetGamepadIconScheme_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000048, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetRGameUserSettings_ReturnValue_1) == 0x000058, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetRGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetGameLanguage_ReturnValue) == 0x000060, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetGameLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000070, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetRGameUserSettings_ReturnValue_2) == 0x000078, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetRGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetAllowTelemetryDataCollection_ReturnValue) == 0x000080, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetAllowTelemetryDataCollection_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetRGameUserSettings_ReturnValue_3) == 0x000088, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetRGameUserSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetDisableLanguageFiltering_ReturnValue) == 0x000090, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetDisableLanguageFiltering_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetRGameUserSettings_ReturnValue_4) == 0x000098, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetRGameUserSettings_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetShowDashIndicator_ReturnValue) == 0x0000A0, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetShowDashIndicator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetRGameUserSettings_ReturnValue_5) == 0x0000A8, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetRGameUserSettings_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetCrosshairAlignmentOption_ReturnValue) == 0x0000B0, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetCrosshairAlignmentOption_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetCrosshairAlignmentIndexByOption_Index) == 0x0000B4, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetCrosshairAlignmentIndexByOption_Index' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetRGameUserSettings_ReturnValue_6) == 0x0000B8, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetRGameUserSettings_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetAimAssistStrength_ReturnValue) == 0x0000C0, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetAimAssistStrength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetControllerScopedYSensitivity_ReturnValue) == 0x0000C4, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetControllerScopedYSensitivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetControllerScopedXSensitivity_ReturnValue) == 0x0000D0, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetControllerScopedXSensitivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetControllerYSensitivity_ReturnValue) == 0x0000D4, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetControllerYSensitivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetControllerXSensitivity_ReturnValue) == 0x0000D8, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetControllerXSensitivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetShowDamageNumbers_ReturnValue) == 0x0000DC, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetShowDamageNumbers_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetDamageNumbersIndexByOption_Index) == 0x0000E0, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetDamageNumbersIndexByOption_Index' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetRGameUserSettings_ReturnValue_7) == 0x0000E8, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetRGameUserSettings_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetAimSensitivity_ReturnValue) == 0x0000F0, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetAimSensitivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetInvertXAxis_ReturnValue) == 0x0000F4, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetInvertXAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000F8, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetScopedAimSensitivity_ReturnValue) == 0x000100, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetScopedAimSensitivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetPerformCameraShakes_ReturnValue) == 0x000104, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetPerformCameraShakes_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000108, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetShowPlayerNames_ReturnValue) == 0x000110, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetShowPlayerNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetShowPlayerHUD_ReturnValue) == 0x000111, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetShowPlayerHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetShowCrosshair_ReturnValue) == 0x000112, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetShowCrosshair_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetInvertYAxis_ReturnValue) == 0x000113, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetInvertYAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetShowHealthBars_ReturnValue) == 0x000114, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetShowHealthBars_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetHoldToScope_ReturnValue) == 0x000115, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetHoldToScope_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_GetFieldOfView_ReturnValue) == 0x000118, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_GetFieldOfView_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000120, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_SetValue_InValue_ImplicitCast) == 0x000128, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_SetValue_InValue_ImplicitCast_1) == 0x000130, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_SetValue_InValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_SetValue_InValue_ImplicitCast_2) == 0x000138, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_SetValue_InValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_SetValue_InValue_ImplicitCast_3) == 0x000140, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_SetValue_InValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000148, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x000150, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetWidgetCurrentValues, CallFunc_SetValue_InValue_ImplicitCast_4) == 0x000158, "Member 'Widget_GameplaySettings_C_SetWidgetCurrentValues::CallFunc_SetValue_InValue_ImplicitCast_4' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.SetIconSchemeOptions
// 0x0078 (0x0078 - 0x0000)
struct Widget_GameplaySettings_C_SetIconSchemeOptions final
{
public:
	TArray<class FText>                           Options;                                           // 0x0000(0x0010)(Edit, BlueprintVisible)
	EGamepadIconScheme                            Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0040(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0010)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_SetIconSchemeOptions) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_SetIconSchemeOptions");
static_assert(sizeof(Widget_GameplaySettings_C_SetIconSchemeOptions) == 0x000078, "Wrong size on Widget_GameplaySettings_C_SetIconSchemeOptions");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, Options) == 0x000000, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::Options' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, Temp_byte_Variable) == 0x000010, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, CallFunc_MakeLiteralInt_ReturnValue) == 0x000014, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, Temp_int_Variable) == 0x000018, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, Temp_int_Variable_1) == 0x00001C, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, CallFunc_Conv_IntToByte_ReturnValue) == 0x000020, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, CallFunc_GetValidValue_ReturnValue) == 0x000028, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000029, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00002A, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, CallFunc_Less_IntInt_ReturnValue) == 0x00002B, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00002C, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000040, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, K2Node_Select_Default) == 0x000050, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_SetIconSchemeOptions, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'Widget_GameplaySettings_C_SetIconSchemeOptions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.PreviousWidgetSettingsValue
// 0x0018 (0x0018 - 0x0000)
struct Widget_GameplaySettings_C_PreviousWidgetSettingsValue final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget_SettingsSlider_C*               K2Node_DynamicCast_AsWidget_Settings_Slider;       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_PreviousWidgetSettingsValue) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_PreviousWidgetSettingsValue");
static_assert(sizeof(Widget_GameplaySettings_C_PreviousWidgetSettingsValue) == 0x000018, "Wrong size on Widget_GameplaySettings_C_PreviousWidgetSettingsValue");
static_assert(offsetof(Widget_GameplaySettings_C_PreviousWidgetSettingsValue, Widget) == 0x000000, "Member 'Widget_GameplaySettings_C_PreviousWidgetSettingsValue::Widget' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_PreviousWidgetSettingsValue, K2Node_DynamicCast_AsWidget_Settings_Slider) == 0x000008, "Member 'Widget_GameplaySettings_C_PreviousWidgetSettingsValue::K2Node_DynamicCast_AsWidget_Settings_Slider' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_PreviousWidgetSettingsValue, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Widget_GameplaySettings_C_PreviousWidgetSettingsValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.NextWidgetSettingsValue
// 0x0018 (0x0018 - 0x0000)
struct Widget_GameplaySettings_C_NextWidgetSettingsValue final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget_SettingsSlider_C*               K2Node_DynamicCast_AsWidget_Settings_Slider;       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_NextWidgetSettingsValue) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_NextWidgetSettingsValue");
static_assert(sizeof(Widget_GameplaySettings_C_NextWidgetSettingsValue) == 0x000018, "Wrong size on Widget_GameplaySettings_C_NextWidgetSettingsValue");
static_assert(offsetof(Widget_GameplaySettings_C_NextWidgetSettingsValue, Widget) == 0x000000, "Member 'Widget_GameplaySettings_C_NextWidgetSettingsValue::Widget' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_NextWidgetSettingsValue, K2Node_DynamicCast_AsWidget_Settings_Slider) == 0x000008, "Member 'Widget_GameplaySettings_C_NextWidgetSettingsValue::K2Node_DynamicCast_AsWidget_Settings_Slider' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_NextWidgetSettingsValue, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Widget_GameplaySettings_C_NextWidgetSettingsValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.GetDesiredFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct Widget_GameplaySettings_C_GetDesiredFocusWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_GetDesiredFocusWidget) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_GetDesiredFocusWidget");
static_assert(sizeof(Widget_GameplaySettings_C_GetDesiredFocusWidget) == 0x000008, "Wrong size on Widget_GameplaySettings_C_GetDesiredFocusWidget");
static_assert(offsetof(Widget_GameplaySettings_C_GetDesiredFocusWidget, ReturnValue) == 0x000000, "Member 'Widget_GameplaySettings_C_GetDesiredFocusWidget::ReturnValue' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.GetDamageNumbersOptionByIndex
// 0x0008 (0x0008 - 0x0000)
struct Widget_GameplaySettings_C_GetDamageNumbersOptionByIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageNumbersOption                          Option;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_GetDamageNumbersOptionByIndex) == 0x000004, "Wrong alignment on Widget_GameplaySettings_C_GetDamageNumbersOptionByIndex");
static_assert(sizeof(Widget_GameplaySettings_C_GetDamageNumbersOptionByIndex) == 0x000008, "Wrong size on Widget_GameplaySettings_C_GetDamageNumbersOptionByIndex");
static_assert(offsetof(Widget_GameplaySettings_C_GetDamageNumbersOptionByIndex, Index_0) == 0x000000, "Member 'Widget_GameplaySettings_C_GetDamageNumbersOptionByIndex::Index_0' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_GetDamageNumbersOptionByIndex, Option) == 0x000004, "Member 'Widget_GameplaySettings_C_GetDamageNumbersOptionByIndex::Option' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_GetDamageNumbersOptionByIndex, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'Widget_GameplaySettings_C_GetDamageNumbersOptionByIndex::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.GetDamageNumbersIndexByOption
// 0x000C (0x000C - 0x0000)
struct Widget_GameplaySettings_C_GetDamageNumbersIndexByOption final
{
public:
	EDamageNumbersOption                          Option;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_GetDamageNumbersIndexByOption) == 0x000004, "Wrong alignment on Widget_GameplaySettings_C_GetDamageNumbersIndexByOption");
static_assert(sizeof(Widget_GameplaySettings_C_GetDamageNumbersIndexByOption) == 0x00000C, "Wrong size on Widget_GameplaySettings_C_GetDamageNumbersIndexByOption");
static_assert(offsetof(Widget_GameplaySettings_C_GetDamageNumbersIndexByOption, Option) == 0x000000, "Member 'Widget_GameplaySettings_C_GetDamageNumbersIndexByOption::Option' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_GetDamageNumbersIndexByOption, Index_0) == 0x000004, "Member 'Widget_GameplaySettings_C_GetDamageNumbersIndexByOption::Index_0' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_GetDamageNumbersIndexByOption, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'Widget_GameplaySettings_C_GetDamageNumbersIndexByOption::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.GetCrosshairAlignmentOptionByIndex
// 0x0008 (0x0008 - 0x0000)
struct Widget_GameplaySettings_C_GetCrosshairAlignmentOptionByIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrosshairAlignmentOption                     Option;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_GetCrosshairAlignmentOptionByIndex) == 0x000004, "Wrong alignment on Widget_GameplaySettings_C_GetCrosshairAlignmentOptionByIndex");
static_assert(sizeof(Widget_GameplaySettings_C_GetCrosshairAlignmentOptionByIndex) == 0x000008, "Wrong size on Widget_GameplaySettings_C_GetCrosshairAlignmentOptionByIndex");
static_assert(offsetof(Widget_GameplaySettings_C_GetCrosshairAlignmentOptionByIndex, Index_0) == 0x000000, "Member 'Widget_GameplaySettings_C_GetCrosshairAlignmentOptionByIndex::Index_0' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_GetCrosshairAlignmentOptionByIndex, Option) == 0x000004, "Member 'Widget_GameplaySettings_C_GetCrosshairAlignmentOptionByIndex::Option' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_GetCrosshairAlignmentOptionByIndex, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'Widget_GameplaySettings_C_GetCrosshairAlignmentOptionByIndex::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.GetCrosshairAlignmentIndexByOption
// 0x000C (0x000C - 0x0000)
struct Widget_GameplaySettings_C_GetCrosshairAlignmentIndexByOption final
{
public:
	ECrosshairAlignmentOption                     Option;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_GetCrosshairAlignmentIndexByOption) == 0x000004, "Wrong alignment on Widget_GameplaySettings_C_GetCrosshairAlignmentIndexByOption");
static_assert(sizeof(Widget_GameplaySettings_C_GetCrosshairAlignmentIndexByOption) == 0x00000C, "Wrong size on Widget_GameplaySettings_C_GetCrosshairAlignmentIndexByOption");
static_assert(offsetof(Widget_GameplaySettings_C_GetCrosshairAlignmentIndexByOption, Option) == 0x000000, "Member 'Widget_GameplaySettings_C_GetCrosshairAlignmentIndexByOption::Option' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_GetCrosshairAlignmentIndexByOption, Index_0) == 0x000004, "Member 'Widget_GameplaySettings_C_GetCrosshairAlignmentIndexByOption::Index_0' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_GetCrosshairAlignmentIndexByOption, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'Widget_GameplaySettings_C_GetCrosshairAlignmentIndexByOption::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.GetAvailableLanguages
// 0x0028 (0x0028 - 0x0000)
struct Widget_GameplaySettings_C_GetAvailableLanguages final
{
public:
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameLanguage_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetLocalizedCultures_ReturnValue;         // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(Widget_GameplaySettings_C_GetAvailableLanguages) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_GetAvailableLanguages");
static_assert(sizeof(Widget_GameplaySettings_C_GetAvailableLanguages) == 0x000028, "Wrong size on Widget_GameplaySettings_C_GetAvailableLanguages");
static_assert(offsetof(Widget_GameplaySettings_C_GetAvailableLanguages, CallFunc_GetRGameUserSettings_ReturnValue) == 0x000000, "Member 'Widget_GameplaySettings_C_GetAvailableLanguages::CallFunc_GetRGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_GetAvailableLanguages, CallFunc_GetGameLanguage_ReturnValue) == 0x000008, "Member 'Widget_GameplaySettings_C_GetAvailableLanguages::CallFunc_GetGameLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_GetAvailableLanguages, CallFunc_GetLocalizedCultures_ReturnValue) == 0x000018, "Member 'Widget_GameplaySettings_C_GetAvailableLanguages::CallFunc_GetLocalizedCultures_ReturnValue' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.ExecuteUbergraph_Widget_GameplaySettings
// 0x0238 (0x0238 - 0x0000)
struct Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_Value_7;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Percent_7;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Value_6;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Percent_6;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_1;       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_State_10;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_2;       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_3;       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_State_9;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_4;       // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_State_8;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_5;       // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_State_7;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_State_6;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_6;       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_7;       // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_State_5;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_8;       // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_State_4;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_9;       // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Index_3;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageNumbersOption                          CallFunc_GetDamageNumbersOptionByIndex_Option;     // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_Value_5;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Percent_5;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_10;      // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_11;      // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_NewOption_1;            // 0x00F0(0x0010)()
	int32                                         K2Node_ComponentBoundEvent_Index_2;                // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_12;      // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCurrentCulture_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_Value_4;                // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Percent_4;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Value_3;                // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Percent_3;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_13;      // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Value_2;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Percent_2;              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Value_1;                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Percent_1;              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_14;      // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Value;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Percent;                // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_15;      // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_16;      // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Index_1;                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_State_3;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrosshairAlignmentOption                     CallFunc_GetCrosshairAlignmentOptionByIndex_Option; // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_17;      // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_State_2;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_18;      // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_State_1;                // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget_TelemetryConsentScreen_C*       CallFunc_PushWidget_OutWidget;                     // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_19;      // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAllowTelemetryDataCollection_ReturnValue; // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_20;      // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_NewOption;              // 0x01E0(0x0010)()
	int32                                         K2Node_ComponentBoundEvent_Index;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_State;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGamepadIconScheme                            CallFunc_Map_Find_Value;                           // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URGameUserSettings*                     CallFunc_GetRGameUserSettings_ReturnValue_21;      // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAimSensitivity_newValue_ImplicitCast;  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_newValue_ImplicitCast;     // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScopedAimSensitivity_newValue_ImplicitCast; // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetControllerXSensitivity_newValue_ImplicitCast; // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetControllerYSensitivity_newValue_ImplicitCast; // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetControllerScopedXSensitivity_newValue_ImplicitCast; // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetControllerScopedYSensitivity_newValue_ImplicitCast; // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAimAssistStrength_NewStrength_ImplicitCast; // 0x0234(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings");
static_assert(sizeof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings) == 0x000238, "Wrong size on Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, EntryPoint) == 0x000000, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Value_7) == 0x000008, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Value_7' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Percent_7) == 0x000010, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Percent_7' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue) == 0x000018, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Value_6) == 0x000028, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Value_6' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Percent_6) == 0x000030, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Percent_6' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_1) == 0x000038, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_State_10) == 0x000040, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_State_10' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_2) == 0x000048, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_3) == 0x000050, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_State_9) == 0x000058, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_State_9' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_4) == 0x000060, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_State_8) == 0x000068, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_State_8' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_5) == 0x000070, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_State_7) == 0x000078, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_State_7' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_State_6) == 0x000079, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_State_6' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_6) == 0x000080, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_7) == 0x000088, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_State_5) == 0x000090, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_State_5' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_CreateDelegate_OutputDelegate) == 0x000094, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_8) == 0x0000A8, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_State_4) == 0x0000B0, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_State_4' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_9) == 0x0000B8, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Index_3) == 0x0000C0, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Index_3' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetDamageNumbersOptionByIndex_Option) == 0x0000C4, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetDamageNumbersOptionByIndex_Option' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Value_5) == 0x0000C8, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Value_5' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Percent_5) == 0x0000D0, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Percent_5' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_10) == 0x0000E0, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_11) == 0x0000E8, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_NewOption_1) == 0x0000F0, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_NewOption_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Index_2) == 0x000100, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Index_2' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_12) == 0x000108, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_SetCurrentCulture_ReturnValue) == 0x000110, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_SetCurrentCulture_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Value_4) == 0x000118, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Value_4' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Percent_4) == 0x000120, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Percent_4' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Value_3) == 0x000128, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Value_3' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Percent_3) == 0x000130, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Percent_3' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_13) == 0x000138, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Value_2) == 0x000140, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Value_2' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Percent_2) == 0x000148, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Percent_2' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Value_1) == 0x000150, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Percent_1) == 0x000158, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Percent_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_14) == 0x000160, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Value) == 0x000168, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Percent) == 0x000170, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Percent' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000178, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_15) == 0x000180, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_16) == 0x000188, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Index_1) == 0x000190, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Index_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_State_3) == 0x000194, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_State_3' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetCrosshairAlignmentOptionByIndex_Option) == 0x000195, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetCrosshairAlignmentOptionByIndex_Option' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_17) == 0x000198, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_State_2) == 0x0001A0, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_State_2' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_18) == 0x0001A8, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_Not_PreBool_ReturnValue) == 0x0001B0, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_State_1) == 0x0001B1, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_State_1' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetOwningPlayer_ReturnValue) == 0x0001B8, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_PushWidget_OutWidget) == 0x0001C0, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_PushWidget_OutWidget' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_19) == 0x0001C8, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetAllowTelemetryDataCollection_ReturnValue) == 0x0001D0, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetAllowTelemetryDataCollection_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_20) == 0x0001D8, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_NewOption) == 0x0001E0, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_NewOption' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_Index) == 0x0001F0, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_Index' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_Conv_TextToString_ReturnValue) == 0x0001F8, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, K2Node_ComponentBoundEvent_State) == 0x000208, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::K2Node_ComponentBoundEvent_State' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_Map_Find_Value) == 0x000209, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_Map_Find_ReturnValue) == 0x00020A, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_GetRGameUserSettings_ReturnValue_21) == 0x000210, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_GetRGameUserSettings_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_SetAimSensitivity_newValue_ImplicitCast) == 0x000218, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_SetAimSensitivity_newValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_SetFieldOfView_newValue_ImplicitCast) == 0x00021C, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_SetFieldOfView_newValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_SetScopedAimSensitivity_newValue_ImplicitCast) == 0x000220, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_SetScopedAimSensitivity_newValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_SetControllerXSensitivity_newValue_ImplicitCast) == 0x000224, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_SetControllerXSensitivity_newValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_SetControllerYSensitivity_newValue_ImplicitCast) == 0x000228, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_SetControllerYSensitivity_newValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_SetControllerScopedXSensitivity_newValue_ImplicitCast) == 0x00022C, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_SetControllerScopedXSensitivity_newValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_SetControllerScopedYSensitivity_newValue_ImplicitCast) == 0x000230, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_SetControllerScopedYSensitivity_newValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings, CallFunc_SetAimAssistStrength_NewStrength_ImplicitCast) == 0x000234, "Member 'Widget_GameplaySettings_C_ExecuteUbergraph_Widget_GameplaySettings::CallFunc_SetAimAssistStrength_NewStrength_ImplicitCast' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BP_GetScrollBoxWidget
// 0x0008 (0x0008 - 0x0000)
struct Widget_GameplaySettings_C_BP_GetScrollBoxWidget final
{
public:
	class UScrollBox*                             Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BP_GetScrollBoxWidget) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_BP_GetScrollBoxWidget");
static_assert(sizeof(Widget_GameplaySettings_C_BP_GetScrollBoxWidget) == 0x000008, "Wrong size on Widget_GameplaySettings_C_BP_GetScrollBoxWidget");
static_assert(offsetof(Widget_GameplaySettings_C_BP_GetScrollBoxWidget, Result) == 0x000000, "Member 'Widget_GameplaySettings_C_BP_GetScrollBoxWidget::Result' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_Widget_SettingsSlider_2_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsSlider_2_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsSlider_2_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsSlider_2_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsSlider_2_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature) == 0x000010, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsSlider_2_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsSlider_2_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsSlider_2_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsSlider_2_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature, Percent) == 0x000008, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsSlider_2_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature::Percent' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_Widget_SettingsComboBox_K2Node_ComponentBoundEvent_8_OnOptionChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsComboBox_K2Node_ComponentBoundEvent_8_OnOptionChanged__DelegateSignature final
{
public:
	class FText                                   NewOption;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsComboBox_K2Node_ComponentBoundEvent_8_OnOptionChanged__DelegateSignature) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsComboBox_K2Node_ComponentBoundEvent_8_OnOptionChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsComboBox_K2Node_ComponentBoundEvent_8_OnOptionChanged__DelegateSignature) == 0x000018, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsComboBox_K2Node_ComponentBoundEvent_8_OnOptionChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsComboBox_K2Node_ComponentBoundEvent_8_OnOptionChanged__DelegateSignature, NewOption) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsComboBox_K2Node_ComponentBoundEvent_8_OnOptionChanged__DelegateSignature::NewOption' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsComboBox_K2Node_ComponentBoundEvent_8_OnOptionChanged__DelegateSignature, Index_0) == 0x000010, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsComboBox_K2Node_ComponentBoundEvent_8_OnOptionChanged__DelegateSignature::Index_0' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_Widget_SettingsCheckbox_1_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsCheckbox_1_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsCheckbox_1_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature) == 0x000001, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsCheckbox_1_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsCheckbox_1_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature) == 0x000001, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsCheckbox_1_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsCheckbox_1_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature, State) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Widget_SettingsCheckbox_1_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature::State' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_TELEMETRY_CONSENT_K2Node_ComponentBoundEvent_20_OnValueChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_TELEMETRY_CONSENT_K2Node_ComponentBoundEvent_20_OnValueChanged__DelegateSignature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_TELEMETRY_CONSENT_K2Node_ComponentBoundEvent_20_OnValueChanged__DelegateSignature) == 0x000001, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_TELEMETRY_CONSENT_K2Node_ComponentBoundEvent_20_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_TELEMETRY_CONSENT_K2Node_ComponentBoundEvent_20_OnValueChanged__DelegateSignature) == 0x000001, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_TELEMETRY_CONSENT_K2Node_ComponentBoundEvent_20_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_TELEMETRY_CONSENT_K2Node_ComponentBoundEvent_20_OnValueChanged__DelegateSignature, State) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_TELEMETRY_CONSENT_K2Node_ComponentBoundEvent_20_OnValueChanged__DelegateSignature::State' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_ScreenShake_K2Node_ComponentBoundEvent_10_OnValueChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScreenShake_K2Node_ComponentBoundEvent_10_OnValueChanged__DelegateSignature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScreenShake_K2Node_ComponentBoundEvent_10_OnValueChanged__DelegateSignature) == 0x000001, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScreenShake_K2Node_ComponentBoundEvent_10_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScreenShake_K2Node_ComponentBoundEvent_10_OnValueChanged__DelegateSignature) == 0x000001, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScreenShake_K2Node_ComponentBoundEvent_10_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScreenShake_K2Node_ComponentBoundEvent_10_OnValueChanged__DelegateSignature, State) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScreenShake_K2Node_ComponentBoundEvent_10_OnValueChanged__DelegateSignature::State' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_ScopedSensitivity_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScopedSensitivity_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScopedSensitivity_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScopedSensitivity_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScopedSensitivity_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature) == 0x000010, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScopedSensitivity_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScopedSensitivity_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScopedSensitivity_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScopedSensitivity_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature, Percent) == 0x000008, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ScopedSensitivity_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature::Percent' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_PlayerNames_K2Node_ComponentBoundEvent_9_OnValueChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerNames_K2Node_ComponentBoundEvent_9_OnValueChanged__DelegateSignature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerNames_K2Node_ComponentBoundEvent_9_OnValueChanged__DelegateSignature) == 0x000001, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerNames_K2Node_ComponentBoundEvent_9_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerNames_K2Node_ComponentBoundEvent_9_OnValueChanged__DelegateSignature) == 0x000001, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerNames_K2Node_ComponentBoundEvent_9_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerNames_K2Node_ComponentBoundEvent_9_OnValueChanged__DelegateSignature, State) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerNames_K2Node_ComponentBoundEvent_9_OnValueChanged__DelegateSignature::State' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_PlayerHUD_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerHUD_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerHUD_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature) == 0x000001, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerHUD_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerHUD_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature) == 0x000001, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerHUD_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerHUD_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature, State) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_PlayerHUD_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature::State' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_LANGUAGE_FILTERING_K2Node_ComponentBoundEvent_18_OnValueChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_LANGUAGE_FILTERING_K2Node_ComponentBoundEvent_18_OnValueChanged__DelegateSignature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_LANGUAGE_FILTERING_K2Node_ComponentBoundEvent_18_OnValueChanged__DelegateSignature) == 0x000001, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_LANGUAGE_FILTERING_K2Node_ComponentBoundEvent_18_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_LANGUAGE_FILTERING_K2Node_ComponentBoundEvent_18_OnValueChanged__DelegateSignature) == 0x000001, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_LANGUAGE_FILTERING_K2Node_ComponentBoundEvent_18_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_LANGUAGE_FILTERING_K2Node_ComponentBoundEvent_18_OnValueChanged__DelegateSignature, State) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_LANGUAGE_FILTERING_K2Node_ComponentBoundEvent_18_OnValueChanged__DelegateSignature::State' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_InvertedYAxis_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedYAxis_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedYAxis_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature) == 0x000001, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedYAxis_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedYAxis_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature) == 0x000001, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedYAxis_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedYAxis_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature, State) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedYAxis_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature::State' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_InvertedXAxis_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedXAxis_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedXAxis_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature) == 0x000001, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedXAxis_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedXAxis_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature) == 0x000001, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedXAxis_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedXAxis_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature, State) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_InvertedXAxis_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature::State' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_ICON_SCHEME_K2Node_ComponentBoundEvent_23_OnOptionChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ICON_SCHEME_K2Node_ComponentBoundEvent_23_OnOptionChanged__DelegateSignature final
{
public:
	class FText                                   NewOption;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ICON_SCHEME_K2Node_ComponentBoundEvent_23_OnOptionChanged__DelegateSignature) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ICON_SCHEME_K2Node_ComponentBoundEvent_23_OnOptionChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ICON_SCHEME_K2Node_ComponentBoundEvent_23_OnOptionChanged__DelegateSignature) == 0x000018, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ICON_SCHEME_K2Node_ComponentBoundEvent_23_OnOptionChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ICON_SCHEME_K2Node_ComponentBoundEvent_23_OnOptionChanged__DelegateSignature, NewOption) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ICON_SCHEME_K2Node_ComponentBoundEvent_23_OnOptionChanged__DelegateSignature::NewOption' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ICON_SCHEME_K2Node_ComponentBoundEvent_23_OnOptionChanged__DelegateSignature, Index_0) == 0x000010, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ICON_SCHEME_K2Node_ComponentBoundEvent_23_OnOptionChanged__DelegateSignature::Index_0' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_HealthBars_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_HealthBars_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_HealthBars_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature) == 0x000001, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_HealthBars_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_HealthBars_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature) == 0x000001, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_HealthBars_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_HealthBars_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature, State) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_HealthBars_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature::State' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_FOV_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_FOV_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_FOV_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_FOV_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_FOV_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature) == 0x000010, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_FOV_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_FOV_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_FOV_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_FOV_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature, Percent) == 0x000008, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_FOV_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature::Percent' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_DashIndicator_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DashIndicator_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DashIndicator_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature) == 0x000001, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DashIndicator_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DashIndicator_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature) == 0x000001, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DashIndicator_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DashIndicator_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature, State) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DashIndicator_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature::State' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_DamageNumbers_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DamageNumbers_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DamageNumbers_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DamageNumbers_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DamageNumbers_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DamageNumbers_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DamageNumbers_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature, Index_0) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_DamageNumbers_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature::Index_0' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_CrosshairAlignment_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_CrosshairAlignment_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_CrosshairAlignment_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_CrosshairAlignment_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_CrosshairAlignment_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_CrosshairAlignment_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_CrosshairAlignment_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature, Index_0) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_CrosshairAlignment_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature::Index_0' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_Crosshair_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Crosshair_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Crosshair_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature) == 0x000001, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Crosshair_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Crosshair_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature) == 0x000001, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Crosshair_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Crosshair_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature, State) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_Crosshair_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature::State' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_ControllerYSensitivity_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerYSensitivity_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerYSensitivity_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerYSensitivity_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerYSensitivity_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature) == 0x000010, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerYSensitivity_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerYSensitivity_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerYSensitivity_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerYSensitivity_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature, Percent) == 0x000008, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerYSensitivity_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature::Percent' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_ControllerXSensitivity_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerXSensitivity_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerXSensitivity_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerXSensitivity_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerXSensitivity_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature) == 0x000010, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerXSensitivity_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerXSensitivity_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerXSensitivity_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerXSensitivity_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature, Percent) == 0x000008, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerXSensitivity_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature::Percent' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_ControllerScopedYSensitivity_K2Node_ComponentBoundEvent_15_OnValueChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedYSensitivity_K2Node_ComponentBoundEvent_15_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedYSensitivity_K2Node_ComponentBoundEvent_15_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedYSensitivity_K2Node_ComponentBoundEvent_15_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedYSensitivity_K2Node_ComponentBoundEvent_15_OnValueChanged__DelegateSignature) == 0x000010, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedYSensitivity_K2Node_ComponentBoundEvent_15_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedYSensitivity_K2Node_ComponentBoundEvent_15_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedYSensitivity_K2Node_ComponentBoundEvent_15_OnValueChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedYSensitivity_K2Node_ComponentBoundEvent_15_OnValueChanged__DelegateSignature, Percent) == 0x000008, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedYSensitivity_K2Node_ComponentBoundEvent_15_OnValueChanged__DelegateSignature::Percent' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_ControllerScopedXSensitivity_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedXSensitivity_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedXSensitivity_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedXSensitivity_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedXSensitivity_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature) == 0x000010, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedXSensitivity_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedXSensitivity_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedXSensitivity_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedXSensitivity_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature, Percent) == 0x000008, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerScopedXSensitivity_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature::Percent' has a wrong offset!");

// Function Widget_GameplaySettings.Widget_GameplaySettings_C.BndEvt__Widget_GameplaySettings_ControllerAimAssistStrength_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerAimAssistStrength_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerAimAssistStrength_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerAimAssistStrength_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature");
static_assert(sizeof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerAimAssistStrength_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature) == 0x000010, "Wrong size on Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerAimAssistStrength_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerAimAssistStrength_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerAimAssistStrength_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerAimAssistStrength_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature, Percent) == 0x000008, "Member 'Widget_GameplaySettings_C_BndEvt__Widget_GameplaySettings_ControllerAimAssistStrength_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature::Percent' has a wrong offset!");

}

