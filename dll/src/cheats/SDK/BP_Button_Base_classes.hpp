#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Button_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Button_Base.BP_Button_Base_C
// 0x0028 (0x02D0 - 0x02A8)
class ABP_Button_Base_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TargetActors;                                      // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         ActivationID;                                      // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool CanInteract(class APlayerController* Controller);
	void ExecuteUbergraph_BP_Button_Base(int32 EntryPoint);
	void OnFocus(class APlayerController* Controller);
	void OnFocusGone(class APlayerController* Controller);
	void OnInteract(class APlayerController* Controller);
	void OnLeverInteracted();
	void ToggleInteractionIndicatorVisibility(class AActor* InteractingActor, const bool NewVisible);

	class FText GetInteractableAlternativeDescription() const;
	int32 GetInteractableCost() const;
	class FText GetInteractableCostCurrencyType() const;
	class FText GetInteractableDescription() const;
	class FText GetInteractableName() const;
	class FText GetInteractableSubHeader() const;
	class UWidgetComponent* GetInteractionIndicatorWidget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Button_Base_C">();
	}
	static class ABP_Button_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Button_Base_C>();
	}
};
static_assert(alignof(ABP_Button_Base_C) == 0x000008, "Wrong alignment on ABP_Button_Base_C");
static_assert(sizeof(ABP_Button_Base_C) == 0x0002D0, "Wrong size on ABP_Button_Base_C");
static_assert(offsetof(ABP_Button_Base_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_Button_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Button_Base_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_Button_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Button_Base_C, TargetActors) == 0x0002B8, "Member 'ABP_Button_Base_C::TargetActors' has a wrong offset!");
static_assert(offsetof(ABP_Button_Base_C, ActivationID) == 0x0002C8, "Member 'ABP_Button_Base_C::ActivationID' has a wrong offset!");

}

