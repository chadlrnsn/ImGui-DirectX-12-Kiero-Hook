#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Souvenir_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Souvenir_Base.BP_Souvenir_Base_C
// 0x0088 (0x0338 - 0x02B0)
class ABP_Souvenir_Base_C : public ARSouvenirBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_InteractableIndicator_C*           BPC_InteractableIndicator;                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FText                                   EnemyType;                                         // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UStaticMesh*                            SouvenirMesh;                                      // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   Header_Text;                                       // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Description_Text;                                  // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AlwaysVisible;                                     // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Item_Description;                                  // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SouvenirUnlocked;                                  // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Challenge_Id;                                      // 0x031C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ItemDescription;                                   // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	bool CanInteract(class APlayerController* Controller);
	void ExecuteUbergraph_BP_Souvenir_Base(int32 EntryPoint);
	void OnFocus(class APlayerController* Controller);
	void OnFocusGone(class APlayerController* Controller);
	void OnInteract(class APlayerController* Controller);
	void ReceiveBeginPlay();
	void ToggleInteractionIndicatorVisibility(class AActor* InteractingActor, const bool NewVisible);
	void UserConstructionScript();

	class FText GetInteractableAlternativeDescription() const;
	int32 GetInteractableCost() const;
	class FText GetInteractableCostCurrencyType() const;
	class FText GetInteractableDescription() const;
	class FText GetInteractableName() const;
	class FText GetInteractableSubHeader() const;
	class UWidgetComponent* GetInteractionIndicatorWidget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Souvenir_Base_C">();
	}
	static class ABP_Souvenir_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Souvenir_Base_C>();
	}
};
static_assert(alignof(ABP_Souvenir_Base_C) == 0x000008, "Wrong alignment on ABP_Souvenir_Base_C");
static_assert(sizeof(ABP_Souvenir_Base_C) == 0x000338, "Wrong size on ABP_Souvenir_Base_C");
static_assert(offsetof(ABP_Souvenir_Base_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_Souvenir_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Souvenir_Base_C, BPC_InteractableIndicator) == 0x0002B8, "Member 'ABP_Souvenir_Base_C::BPC_InteractableIndicator' has a wrong offset!");
static_assert(offsetof(ABP_Souvenir_Base_C, StaticMesh) == 0x0002C0, "Member 'ABP_Souvenir_Base_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Souvenir_Base_C, EnemyType) == 0x0002C8, "Member 'ABP_Souvenir_Base_C::EnemyType' has a wrong offset!");
static_assert(offsetof(ABP_Souvenir_Base_C, SouvenirMesh) == 0x0002D8, "Member 'ABP_Souvenir_Base_C::SouvenirMesh' has a wrong offset!");
static_assert(offsetof(ABP_Souvenir_Base_C, Header_Text) == 0x0002E0, "Member 'ABP_Souvenir_Base_C::Header_Text' has a wrong offset!");
static_assert(offsetof(ABP_Souvenir_Base_C, Description_Text) == 0x0002F0, "Member 'ABP_Souvenir_Base_C::Description_Text' has a wrong offset!");
static_assert(offsetof(ABP_Souvenir_Base_C, AlwaysVisible) == 0x000300, "Member 'ABP_Souvenir_Base_C::AlwaysVisible' has a wrong offset!");
static_assert(offsetof(ABP_Souvenir_Base_C, Item_Description) == 0x000308, "Member 'ABP_Souvenir_Base_C::Item_Description' has a wrong offset!");
static_assert(offsetof(ABP_Souvenir_Base_C, SouvenirUnlocked) == 0x000318, "Member 'ABP_Souvenir_Base_C::SouvenirUnlocked' has a wrong offset!");
static_assert(offsetof(ABP_Souvenir_Base_C, Challenge_Id) == 0x00031C, "Member 'ABP_Souvenir_Base_C::Challenge_Id' has a wrong offset!");
static_assert(offsetof(ABP_Souvenir_Base_C, ItemDescription) == 0x000328, "Member 'ABP_Souvenir_Base_C::ItemDescription' has a wrong offset!");

}

