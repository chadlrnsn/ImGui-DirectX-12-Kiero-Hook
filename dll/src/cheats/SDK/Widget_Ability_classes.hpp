#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Widget_Ability

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Widget_Ability.Widget_Ability_C
// 0x0068 (0x0338 - 0x02D0)
class UWidget_Ability_C final : public URCooldownEntryWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 AbilityIcon;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Background_Shadow;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Background_Shadow_1;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CooldownImage;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_0;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             StackCountText;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget_HUD_Background_C*               Widget_HUD_Background;                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 KeybindName;                                       // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           CooldownTimer;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class URCharacterMutatorPrimaryAsset*> FixedCharacterMutatorPA;                           // 0x0328(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly)

public:
	void Construct();
	void ExecuteUbergraph_Widget_Ability(int32 EntryPoint);
	void Get_Current_Equipped_Ability(class URGAbilityCharacterMutatorScript** RGAbilityCharacterMutatorScript, class URCharacterMutatorPrimaryAsset** RCharacterMutatorPrimaryAsset);
	void IsHealAbility(bool* IsHealAbility_0, class URGAbilityCharacterMutatorScript** RGAbilityCharacterMutatorScript, class URCharacterMutatorPrimaryAsset** OutSelecterMutatorPrimaryAsset);
	void OnAbilityFired(class URGScript* AbilityScript);
	void OnCharacterMutatorsChanged(class URPlayerGScriptComponent* Owner);
	void OnStacksUpdated(class URGAbilityCharacterMutatorScript* RGAbilityCharacterMutatorScript, int32 NumStacksRemaining);
	void SetCooldownProgress(float Progress);
	void UpdateAbilityIcon(class URPrimaryDataAsset* Mutator);
	void UpdateCooldownTimer();
	void UpdateCooldownVisuals(class UObject* Mutator);
	void UpdateStacksText(int32 NumStacks);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Widget_Ability_C">();
	}
	static class UWidget_Ability_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidget_Ability_C>();
	}
};
static_assert(alignof(UWidget_Ability_C) == 0x000008, "Wrong alignment on UWidget_Ability_C");
static_assert(sizeof(UWidget_Ability_C) == 0x000338, "Wrong size on UWidget_Ability_C");
static_assert(offsetof(UWidget_Ability_C, UberGraphFrame) == 0x0002D0, "Member 'UWidget_Ability_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWidget_Ability_C, AbilityIcon) == 0x0002D8, "Member 'UWidget_Ability_C::AbilityIcon' has a wrong offset!");
static_assert(offsetof(UWidget_Ability_C, Background_Shadow) == 0x0002E0, "Member 'UWidget_Ability_C::Background_Shadow' has a wrong offset!");
static_assert(offsetof(UWidget_Ability_C, Background_Shadow_1) == 0x0002E8, "Member 'UWidget_Ability_C::Background_Shadow_1' has a wrong offset!");
static_assert(offsetof(UWidget_Ability_C, CooldownImage) == 0x0002F0, "Member 'UWidget_Ability_C::CooldownImage' has a wrong offset!");
static_assert(offsetof(UWidget_Ability_C, InvalidationBox_0) == 0x0002F8, "Member 'UWidget_Ability_C::InvalidationBox_0' has a wrong offset!");
static_assert(offsetof(UWidget_Ability_C, StackCountText) == 0x000300, "Member 'UWidget_Ability_C::StackCountText' has a wrong offset!");
static_assert(offsetof(UWidget_Ability_C, Widget_HUD_Background) == 0x000308, "Member 'UWidget_Ability_C::Widget_HUD_Background' has a wrong offset!");
static_assert(offsetof(UWidget_Ability_C, KeybindName) == 0x000310, "Member 'UWidget_Ability_C::KeybindName' has a wrong offset!");
static_assert(offsetof(UWidget_Ability_C, CooldownTimer) == 0x000320, "Member 'UWidget_Ability_C::CooldownTimer' has a wrong offset!");
static_assert(offsetof(UWidget_Ability_C, FixedCharacterMutatorPA) == 0x000328, "Member 'UWidget_Ability_C::FixedCharacterMutatorPA' has a wrong offset!");

}

