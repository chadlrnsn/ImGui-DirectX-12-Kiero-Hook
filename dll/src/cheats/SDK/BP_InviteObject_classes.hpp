#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InviteObject

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RGame_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_InviteObject.BP_InviteObject_C
// 0x0030 (0x02E0 - 0x02B0)
class ABP_InviteObject_C final : public ARPingableActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDMActorProximityBoxComponent*          ProximityBox_Highlight;                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       ObjectHighlightWidgetComponent;                    // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_InteractableIndicator_C*           BPC_InteractableIndicator;                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldShowHighlight;                               // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_InviteObject_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature(class AActor* Actor);
	void BndEvt__BP_InviteObject_ProximityBox_Highlight_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature(class AActor* Actor);
	bool CanInteract(class APlayerController* Controller);
	void ExecuteUbergraph_BP_InviteObject(int32 EntryPoint);
	void OnFocus(class APlayerController* Controller);
	void OnFocusGone(class APlayerController* Controller);
	void OnInteract(class APlayerController* Controller);
	void ReceiveBeginPlay();
	void SetHighlightActive(bool Active);
	void SetupHighlight();
	void ToggleInteractionIndicatorVisibility(class AActor* InteractingActor, const bool NewVisible);

	class FText GetInteractableAlternativeDescription() const;
	int32 GetInteractableCost() const;
	class FText GetInteractableCostCurrencyType() const;
	class FText GetInteractableDescription() const;
	class FText GetInteractableName() const;
	class FText GetInteractableSubHeader() const;
	class UWidgetComponent* GetInteractionIndicatorWidget() const;
	struct FLinearColor GetRadarIconColor() const;
	struct FVector2D GetRadarIconSize() const;
	class USlateBrushAsset* GetRadarObjectIcon() const;
	bool ShouldShowOnRadar() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InviteObject_C">();
	}
	static class ABP_InviteObject_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_InviteObject_C>();
	}
};
static_assert(alignof(ABP_InviteObject_C) == 0x000008, "Wrong alignment on ABP_InviteObject_C");
static_assert(sizeof(ABP_InviteObject_C) == 0x0002E0, "Wrong size on ABP_InviteObject_C");
static_assert(offsetof(ABP_InviteObject_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_InviteObject_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_InviteObject_C, ProximityBox_Highlight) == 0x0002B8, "Member 'ABP_InviteObject_C::ProximityBox_Highlight' has a wrong offset!");
static_assert(offsetof(ABP_InviteObject_C, ObjectHighlightWidgetComponent) == 0x0002C0, "Member 'ABP_InviteObject_C::ObjectHighlightWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_InviteObject_C, BPC_InteractableIndicator) == 0x0002C8, "Member 'ABP_InviteObject_C::BPC_InteractableIndicator' has a wrong offset!");
static_assert(offsetof(ABP_InviteObject_C, StaticMesh) == 0x0002D0, "Member 'ABP_InviteObject_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_InviteObject_C, ShouldShowHighlight) == 0x0002D8, "Member 'ABP_InviteObject_C::ShouldShowHighlight' has a wrong offset!");

}

