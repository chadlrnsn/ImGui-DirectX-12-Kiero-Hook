#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Windburst_Behavior_Mutator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "RGame_classes.hpp"
#include "Niagara_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Windburst_Behavior_Mutator.BP_Windburst_Behavior_Mutator_C
// 0x0060 (0x0170 - 0x0110)
class UBP_Windburst_Behavior_Mutator_C final : public URGCharBehaviorMutatorScript
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0110(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         WindburstRadius;                                   // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FVector& Location, double Radius, TArray<struct FHitResult>& Hits)> OnWindburstExplosion; // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector                                TargetLocation;                                    // 0x0130(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeBetweenWindbursts;                             // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARNPCPawnBase*                          CurrentHitTarget;                                  // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Damaged_Actor;                                     // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        HealthDamage;                                      // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindburstStartRadius;                              // 0x0168(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckAndRunWindPassive5Behavior(const struct FVector& Location, class ARNPCPawnBase* Target);
	void ExecuteUbergraph_BP_Windburst_Behavior_Mutator(int32 EntryPoint);
	void FireWindburstLoop(const struct FVector& Location, class ARNPCPawnBase* TargetActor);
	double GetDamageToDeal(double HitDamage);
	void K2_ActivateScript();
	void K2_DeactivateScript();
	void K2_OnEnemyKilled(class AActor* KilledActor);
	void LoopBody_766292D94D3F6D4A914C788BE3B676F2(int32 Index_0);
	void LoopBodyWindburst_766292D94D3F6D4A914C788BE3B676F2(int32 Index_0, const struct FVector& Location, class ARNPCPawnBase* Target);
	void OnCancelled_766292D94D3F6D4A914C788BE3B676F2();
	void OnExplosion_976B8F71410D6673DEBF549771C1545B(const TArray<struct FHitResult>& HitResults, float ActualExplosionRadius);
	void OnFail_976B8F71410D6673DEBF549771C1545B();
	void OnFinish_766292D94D3F6D4A914C788BE3B676F2();
	void OnFinished_976B8F71410D6673DEBF549771C1545B();
	void OnMutatorRankChanged(int32 NewRank, class URMutatorPrimaryAsset* MutatorPrimaryAsset);
	void PlayPassive5FX(const struct FVector& StartLocation, const struct FVector& TargetLocation_0);
	void RemoveDamageModifiers();
	void RunAbilityBehavior(class AActor* TriggeringActor, int32 DamageSourceMask, float HealthDamage_0, class AActor* OptionalAvatarActor);
	void RunBehaviour(class AActor* TriggeringActor);
	void RunMeleeBehavior();
	void RunPrimaryFireBehavior(float HealthDamage_0);
	void RunSecondaryFireBehavior(class AActor* TriggeringActor, float HealthDamage_0);
	void SpawnWindburstEffects(const struct FVector& Location, float ExplosionRadius);
	void UpdateDamageModifiers();
	void UpdateWindburstRadius();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Windburst_Behavior_Mutator_C">();
	}
	static class UBP_Windburst_Behavior_Mutator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Windburst_Behavior_Mutator_C>();
	}
};
static_assert(alignof(UBP_Windburst_Behavior_Mutator_C) == 0x000008, "Wrong alignment on UBP_Windburst_Behavior_Mutator_C");
static_assert(sizeof(UBP_Windburst_Behavior_Mutator_C) == 0x000170, "Wrong size on UBP_Windburst_Behavior_Mutator_C");
static_assert(offsetof(UBP_Windburst_Behavior_Mutator_C, UberGraphFrame) == 0x000110, "Member 'UBP_Windburst_Behavior_Mutator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Windburst_Behavior_Mutator_C, WindburstRadius) == 0x000118, "Member 'UBP_Windburst_Behavior_Mutator_C::WindburstRadius' has a wrong offset!");
static_assert(offsetof(UBP_Windburst_Behavior_Mutator_C, OnWindburstExplosion) == 0x000120, "Member 'UBP_Windburst_Behavior_Mutator_C::OnWindburstExplosion' has a wrong offset!");
static_assert(offsetof(UBP_Windburst_Behavior_Mutator_C, TargetLocation) == 0x000130, "Member 'UBP_Windburst_Behavior_Mutator_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(UBP_Windburst_Behavior_Mutator_C, TimeBetweenWindbursts) == 0x000148, "Member 'UBP_Windburst_Behavior_Mutator_C::TimeBetweenWindbursts' has a wrong offset!");
static_assert(offsetof(UBP_Windburst_Behavior_Mutator_C, CurrentHitTarget) == 0x000150, "Member 'UBP_Windburst_Behavior_Mutator_C::CurrentHitTarget' has a wrong offset!");
static_assert(offsetof(UBP_Windburst_Behavior_Mutator_C, Damaged_Actor) == 0x000158, "Member 'UBP_Windburst_Behavior_Mutator_C::Damaged_Actor' has a wrong offset!");
static_assert(offsetof(UBP_Windburst_Behavior_Mutator_C, HealthDamage) == 0x000160, "Member 'UBP_Windburst_Behavior_Mutator_C::HealthDamage' has a wrong offset!");
static_assert(offsetof(UBP_Windburst_Behavior_Mutator_C, WindburstStartRadius) == 0x000168, "Member 'UBP_Windburst_Behavior_Mutator_C::WindburstStartRadius' has a wrong offset!");

}

