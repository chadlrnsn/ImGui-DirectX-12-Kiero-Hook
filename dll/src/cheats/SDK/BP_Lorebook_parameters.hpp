#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lorebook

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Lorebook.BP_Lorebook_C.BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature) == 0x000008, "Wrong alignment on BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature");
static_assert(sizeof(BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature) == 0x000008, "Wrong size on BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature");
static_assert(offsetof(BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature, Actor) == 0x000000, "Member 'BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_0_OnOverlapProximityBoxComponentEnter__DelegateSignature::Actor' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature) == 0x000008, "Wrong alignment on BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature");
static_assert(sizeof(BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature) == 0x000008, "Wrong size on BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature");
static_assert(offsetof(BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature, Actor) == 0x000000, "Member 'BP_Lorebook_C_BndEvt__BP_Lorebook_DMActorProximityBox_K2Node_ComponentBoundEvent_1_OnOverlapProximityBoxComponentExit__DelegateSignature::Actor' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.CanInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_Lorebook_C_CanInteract final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lorebook_C_CanInteract) == 0x000008, "Wrong alignment on BP_Lorebook_C_CanInteract");
static_assert(sizeof(BP_Lorebook_C_CanInteract) == 0x000010, "Wrong size on BP_Lorebook_C_CanInteract");
static_assert(offsetof(BP_Lorebook_C_CanInteract, Controller) == 0x000000, "Member 'BP_Lorebook_C_CanInteract::Controller' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_CanInteract, ReturnValue) == 0x000008, "Member 'BP_Lorebook_C_CanInteract::ReturnValue' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.ExecuteUbergraph_BP_Lorebook
// 0x0080 (0x0080 - 0x0000)
struct BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_controller_2;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_controller_1;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewVisible;                           // 0x0020(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_controller;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget_JournalDialog_C*                CallFunc_PushWidget_OutWidget;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       CallFunc_GetInteractionIndicatorWidget_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Actor_1;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Actor;                  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook) == 0x000008, "Wrong alignment on BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook");
static_assert(sizeof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook) == 0x000080, "Wrong size on BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, EntryPoint) == 0x000000, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, K2Node_Event_controller_2) == 0x000008, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::K2Node_Event_controller_2' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, K2Node_Event_controller_1) == 0x000010, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::K2Node_Event_controller_1' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, K2Node_Event_InteractingActor) == 0x000018, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, K2Node_Event_NewVisible) == 0x000020, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::K2Node_Event_NewVisible' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, K2Node_Event_controller) == 0x000028, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::K2Node_Event_controller' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, K2Node_DynamicCast_AsPawn) == 0x000030, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, CallFunc_PushWidget_OutWidget) == 0x000040, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::CallFunc_PushWidget_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, CallFunc_GetController_ReturnValue) == 0x000048, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, K2Node_DynamicCast_AsPlayer_Controller) == 0x000050, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, CallFunc_GetInteractionIndicatorWidget_ReturnValue) == 0x000060, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::CallFunc_GetInteractionIndicatorWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000068, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, K2Node_ComponentBoundEvent_Actor_1) == 0x000070, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::K2Node_ComponentBoundEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook, K2Node_ComponentBoundEvent_Actor) == 0x000078, "Member 'BP_Lorebook_C_ExecuteUbergraph_BP_Lorebook::K2Node_ComponentBoundEvent_Actor' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.OnFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_Lorebook_C_OnFocus final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lorebook_C_OnFocus) == 0x000008, "Wrong alignment on BP_Lorebook_C_OnFocus");
static_assert(sizeof(BP_Lorebook_C_OnFocus) == 0x000008, "Wrong size on BP_Lorebook_C_OnFocus");
static_assert(offsetof(BP_Lorebook_C_OnFocus, Controller) == 0x000000, "Member 'BP_Lorebook_C_OnFocus::Controller' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.OnFocusGone
// 0x0008 (0x0008 - 0x0000)
struct BP_Lorebook_C_OnFocusGone final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lorebook_C_OnFocusGone) == 0x000008, "Wrong alignment on BP_Lorebook_C_OnFocusGone");
static_assert(sizeof(BP_Lorebook_C_OnFocusGone) == 0x000008, "Wrong size on BP_Lorebook_C_OnFocusGone");
static_assert(offsetof(BP_Lorebook_C_OnFocusGone, Controller) == 0x000000, "Member 'BP_Lorebook_C_OnFocusGone::Controller' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_Lorebook_C_OnInteract final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lorebook_C_OnInteract) == 0x000008, "Wrong alignment on BP_Lorebook_C_OnInteract");
static_assert(sizeof(BP_Lorebook_C_OnInteract) == 0x000008, "Wrong size on BP_Lorebook_C_OnInteract");
static_assert(offsetof(BP_Lorebook_C_OnInteract, Controller) == 0x000000, "Member 'BP_Lorebook_C_OnInteract::Controller' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.ToggleInteractionIndicatorVisibility
// 0x0010 (0x0010 - 0x0000)
struct BP_Lorebook_C_ToggleInteractionIndicatorVisibility final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVisible;                                        // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lorebook_C_ToggleInteractionIndicatorVisibility) == 0x000008, "Wrong alignment on BP_Lorebook_C_ToggleInteractionIndicatorVisibility");
static_assert(sizeof(BP_Lorebook_C_ToggleInteractionIndicatorVisibility) == 0x000010, "Wrong size on BP_Lorebook_C_ToggleInteractionIndicatorVisibility");
static_assert(offsetof(BP_Lorebook_C_ToggleInteractionIndicatorVisibility, InteractingActor) == 0x000000, "Member 'BP_Lorebook_C_ToggleInteractionIndicatorVisibility::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Lorebook_C_ToggleInteractionIndicatorVisibility, NewVisible) == 0x000008, "Member 'BP_Lorebook_C_ToggleInteractionIndicatorVisibility::NewVisible' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.GetInteractableAlternativeDescription
// 0x0010 (0x0010 - 0x0000)
struct BP_Lorebook_C_GetInteractableAlternativeDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_Lorebook_C_GetInteractableAlternativeDescription) == 0x000008, "Wrong alignment on BP_Lorebook_C_GetInteractableAlternativeDescription");
static_assert(sizeof(BP_Lorebook_C_GetInteractableAlternativeDescription) == 0x000010, "Wrong size on BP_Lorebook_C_GetInteractableAlternativeDescription");
static_assert(offsetof(BP_Lorebook_C_GetInteractableAlternativeDescription, ReturnValue) == 0x000000, "Member 'BP_Lorebook_C_GetInteractableAlternativeDescription::ReturnValue' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.GetInteractableCost
// 0x0004 (0x0004 - 0x0000)
struct BP_Lorebook_C_GetInteractableCost final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lorebook_C_GetInteractableCost) == 0x000004, "Wrong alignment on BP_Lorebook_C_GetInteractableCost");
static_assert(sizeof(BP_Lorebook_C_GetInteractableCost) == 0x000004, "Wrong size on BP_Lorebook_C_GetInteractableCost");
static_assert(offsetof(BP_Lorebook_C_GetInteractableCost, ReturnValue) == 0x000000, "Member 'BP_Lorebook_C_GetInteractableCost::ReturnValue' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.GetInteractableCostCurrencyType
// 0x0010 (0x0010 - 0x0000)
struct BP_Lorebook_C_GetInteractableCostCurrencyType final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_Lorebook_C_GetInteractableCostCurrencyType) == 0x000008, "Wrong alignment on BP_Lorebook_C_GetInteractableCostCurrencyType");
static_assert(sizeof(BP_Lorebook_C_GetInteractableCostCurrencyType) == 0x000010, "Wrong size on BP_Lorebook_C_GetInteractableCostCurrencyType");
static_assert(offsetof(BP_Lorebook_C_GetInteractableCostCurrencyType, ReturnValue) == 0x000000, "Member 'BP_Lorebook_C_GetInteractableCostCurrencyType::ReturnValue' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.GetInteractableDescription
// 0x0010 (0x0010 - 0x0000)
struct BP_Lorebook_C_GetInteractableDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_Lorebook_C_GetInteractableDescription) == 0x000008, "Wrong alignment on BP_Lorebook_C_GetInteractableDescription");
static_assert(sizeof(BP_Lorebook_C_GetInteractableDescription) == 0x000010, "Wrong size on BP_Lorebook_C_GetInteractableDescription");
static_assert(offsetof(BP_Lorebook_C_GetInteractableDescription, ReturnValue) == 0x000000, "Member 'BP_Lorebook_C_GetInteractableDescription::ReturnValue' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.GetInteractableName
// 0x0010 (0x0010 - 0x0000)
struct BP_Lorebook_C_GetInteractableName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_Lorebook_C_GetInteractableName) == 0x000008, "Wrong alignment on BP_Lorebook_C_GetInteractableName");
static_assert(sizeof(BP_Lorebook_C_GetInteractableName) == 0x000010, "Wrong size on BP_Lorebook_C_GetInteractableName");
static_assert(offsetof(BP_Lorebook_C_GetInteractableName, ReturnValue) == 0x000000, "Member 'BP_Lorebook_C_GetInteractableName::ReturnValue' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.GetInteractableSubHeader
// 0x0010 (0x0010 - 0x0000)
struct BP_Lorebook_C_GetInteractableSubHeader final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_Lorebook_C_GetInteractableSubHeader) == 0x000008, "Wrong alignment on BP_Lorebook_C_GetInteractableSubHeader");
static_assert(sizeof(BP_Lorebook_C_GetInteractableSubHeader) == 0x000010, "Wrong size on BP_Lorebook_C_GetInteractableSubHeader");
static_assert(offsetof(BP_Lorebook_C_GetInteractableSubHeader, ReturnValue) == 0x000000, "Member 'BP_Lorebook_C_GetInteractableSubHeader::ReturnValue' has a wrong offset!");

// Function BP_Lorebook.BP_Lorebook_C.GetInteractionIndicatorWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_Lorebook_C_GetInteractionIndicatorWidget final
{
public:
	class UWidgetComponent*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lorebook_C_GetInteractionIndicatorWidget) == 0x000008, "Wrong alignment on BP_Lorebook_C_GetInteractionIndicatorWidget");
static_assert(sizeof(BP_Lorebook_C_GetInteractionIndicatorWidget) == 0x000008, "Wrong size on BP_Lorebook_C_GetInteractionIndicatorWidget");
static_assert(offsetof(BP_Lorebook_C_GetInteractionIndicatorWidget, ReturnValue) == 0x000000, "Member 'BP_Lorebook_C_GetInteractionIndicatorWidget::ReturnValue' has a wrong offset!");

}

