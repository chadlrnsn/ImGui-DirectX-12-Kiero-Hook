#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EngineRifle_Script

#include "Basic.hpp"

#include "BP_EngineRifle_Script_classes.hpp"
#include "BP_EngineRifle_Script_parameters.hpp"


namespace SDK
{

// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.ActivateOverheat
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_EngineRifle_Script_C::ActivateOverheat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "ActivateOverheat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.CheckBinaryCooling
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_EngineRifle_Script_C::CheckBinaryCooling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "CheckBinaryCooling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.ExecuteUbergraph_BP_EngineRifle_Script
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EngineRifle_Script_C::ExecuteUbergraph_BP_EngineRifle_Script(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "ExecuteUbergraph_BP_EngineRifle_Script");

	Params::BP_EngineRifle_Script_C_ExecuteUbergraph_BP_EngineRifle_Script Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.ForceSetHeat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewHeat                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EngineRifle_Script_C::ForceSetHeat(double NewHeat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "ForceSetHeat");

	Params::BP_EngineRifle_Script_C_ForceSetHeat Parms{};

	Parms.NewHeat = NewHeat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.GetMotorSFX
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USoundBase**                      MotorSound                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_EngineRifle_Script_C::GetMotorSFX(class USoundBase** MotorSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "GetMotorSFX");

	Params::BP_EngineRifle_Script_C_GetMotorSFX Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MotorSound != nullptr)
		*MotorSound = Parms.MotorSound;
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.IncreaseHeat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  HeatIncrease                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EngineRifle_Script_C::IncreaseHeat(double HeatIncrease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "IncreaseHeat");

	Params::BP_EngineRifle_Script_C_IncreaseHeat Parms{};

	Parms.HeatIncrease = HeatIncrease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.InitOverheatBarVisibility
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_EngineRifle_Script_C::InitOverheatBarVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "InitOverheatBarVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.IsHoldingOverheatingModFire
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EngineRifle_Script_C::IsHoldingOverheatingModFire(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "IsHoldingOverheatingModFire");

	Params::BP_EngineRifle_Script_C_IsHoldingOverheatingModFire Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.IsOverheated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsOverheated_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EngineRifle_Script_C::IsOverheated(bool* IsOverheated_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "IsOverheated");

	Params::BP_EngineRifle_Script_C_IsOverheated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOverheated_0 != nullptr)
		*IsOverheated_0 = Parms.IsOverheated_0;
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.IsOverheatingMod
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class URGWeaponModScript*               Mod                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EngineRifle_Script_C::IsOverheatingMod(class URGWeaponModScript* Mod, bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "IsOverheatingMod");

	Params::BP_EngineRifle_Script_C_IsOverheatingMod Parms{};

	Parms.Mod = Mod;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.K2_ActivateScript
// (Event, Public, BlueprintEvent)

void UBP_EngineRifle_Script_C::K2_ActivateScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "K2_ActivateScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.K2_DeactivateScript
// (Event, Public, BlueprintEvent)

void UBP_EngineRifle_Script_C::K2_DeactivateScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "K2_DeactivateScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.K2_OnEquip
// (Event, Public, BlueprintEvent)

void UBP_EngineRifle_Script_C::K2_OnEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "K2_OnEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.K2_TickScript
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EngineRifle_Script_C::K2_TickScript(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "K2_TickScript");

	Params::BP_EngineRifle_Script_C_K2_TickScript Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.OnOverheatingModFire
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPrimaryMod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EngineRifle_Script_C::OnOverheatingModFire(bool IsPrimaryMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "OnOverheatingModFire");

	Params::BP_EngineRifle_Script_C_OnOverheatingModFire Parms{};

	Parms.IsPrimaryMod = IsPrimaryMod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.PlayBarrelSpinSFX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPrimaryMod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EngineRifle_Script_C::PlayBarrelSpinSFX(bool IsPrimaryMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "PlayBarrelSpinSFX");

	Params::BP_EngineRifle_Script_C_PlayBarrelSpinSFX Parms{};

	Parms.IsPrimaryMod = IsPrimaryMod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.ReduceHeat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  HeatReduction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EngineRifle_Script_C::ReduceHeat(double HeatReduction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "ReduceHeat");

	Params::BP_EngineRifle_Script_C_ReduceHeat Parms{};

	Parms.HeatReduction = HeatReduction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.RemoveOverheat
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_EngineRifle_Script_C::RemoveOverheat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "RemoveOverheat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EngineRifle_Script.BP_EngineRifle_Script_C.UpdateOverheatVFX
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARPlayerPawn*                     PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               NewOverlayMaterial                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_EngineRifle_Script_C::UpdateOverheatVFX(class ARPlayerPawn* PlayerPawn, class UMaterialInterface* NewOverlayMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EngineRifle_Script_C", "UpdateOverheatVFX");

	Params::BP_EngineRifle_Script_C_UpdateOverheatVFX Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.NewOverlayMaterial = NewOverlayMaterial;

	UObject::ProcessEvent(Func, &Parms);
}

}

