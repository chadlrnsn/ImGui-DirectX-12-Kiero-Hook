#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DMOnlinePlugin

#include "Basic.hpp"

#include "DMOnlinePlugin_classes.hpp"
#include "DMOnlinePlugin_parameters.hpp"


namespace SDK
{

// Function DMOnlinePlugin.DMOnlineAsyncProxies.CreateAutoLoginProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       SubsystemName                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USPAutoLoginBlueprintProxy*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USPAutoLoginBlueprintProxy* UDMOnlineAsyncProxies::CreateAutoLoginProxyObject(class UObject* WorldContextObject, const class FName SubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineAsyncProxies", "CreateAutoLoginProxyObject");

	Params::DMOnlineAsyncProxies_CreateAutoLoginProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SubsystemName = SubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineAsyncProxies.CreateCreateSessionProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLAN                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxNrOfPlayers                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FName, struct FDMSessionSetting>&CustomSessionSettings                                  (Parm, NativeAccessSpecifierPublic)
// class FName                             SubsystemName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USPCreateSessionBlueprintProxy*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USPCreateSessionBlueprintProxy* UDMOnlineAsyncProxies::CreateCreateSessionProxyObject(class UObject* WorldContextObject, bool bLAN, int32 MaxNrOfPlayers, const TMap<class FName, struct FDMSessionSetting>& CustomSessionSettings, class FName SubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineAsyncProxies", "CreateCreateSessionProxyObject");

	Params::DMOnlineAsyncProxies_CreateCreateSessionProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bLAN = bLAN;
	Parms.MaxNrOfPlayers = MaxNrOfPlayers;
	Parms.CustomSessionSettings = std::move(CustomSessionSettings);
	Parms.SubsystemName = SubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineAsyncProxies.CreateDestroySessionProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SubsystemName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USPDestroySessionBlueprintProxy*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USPDestroySessionBlueprintProxy* UDMOnlineAsyncProxies::CreateDestroySessionProxyObject(class UObject* WorldContextObject, class FName SubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineAsyncProxies", "CreateDestroySessionProxyObject");

	Params::DMOnlineAsyncProxies_CreateDestroySessionProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SubsystemName = SubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineAsyncProxies.CreateDummyProxyObject
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USPDummyBlueprintProxy*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USPDummyBlueprintProxy* UDMOnlineAsyncProxies::CreateDummyProxyObject(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineAsyncProxies", "CreateDummyProxyObject");

	Params::DMOnlineAsyncProxies_CreateDummyProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineAsyncProxies.CreateFindSessionByIdProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    SessionId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SubsystemName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USPFindSessionByIdBlueprintProxy* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USPFindSessionByIdBlueprintProxy* UDMOnlineAsyncProxies::CreateFindSessionByIdProxyObject(class UObject* WorldContextObject, const class FString& SessionId, class FName SubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineAsyncProxies", "CreateFindSessionByIdProxyObject");

	Params::DMOnlineAsyncProxies_CreateFindSessionByIdProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SessionId = std::move(SessionId);
	Parms.SubsystemName = SubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineAsyncProxies.CreateFindSessionProxyObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLAN                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FName, struct FDMSearchSetting>&CustomSearchSettings                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             SubsystemName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxResults                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USPFindSessionBlueprintProxy*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USPFindSessionBlueprintProxy* UDMOnlineAsyncProxies::CreateFindSessionProxyObject(class UObject* WorldContextObject, bool bLAN, const TMap<class FName, struct FDMSearchSetting>& CustomSearchSettings, class FName SubsystemName, int32 MaxResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineAsyncProxies", "CreateFindSessionProxyObject");

	Params::DMOnlineAsyncProxies_CreateFindSessionProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bLAN = bLAN;
	Parms.CustomSearchSettings = std::move(CustomSearchSettings);
	Parms.SubsystemName = SubsystemName;
	Parms.MaxResults = MaxResults;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineAsyncProxies.CreateJoinFirstAvailableSessionProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLAN                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SubsystemName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USPJoinFirstAvailableSessionBlueprintProxy*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USPJoinFirstAvailableSessionBlueprintProxy* UDMOnlineAsyncProxies::CreateJoinFirstAvailableSessionProxyObject(class UObject* WorldContextObject, bool bLAN, class FName SubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineAsyncProxies", "CreateJoinFirstAvailableSessionProxyObject");

	Params::DMOnlineAsyncProxies_CreateJoinFirstAvailableSessionProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bLAN = bLAN;
	Parms.SubsystemName = SubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineAsyncProxies.CreateJoinSessionProxyObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBlueprintSessionResult&   Session                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             SubsystemName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USPJoinSessionBlueprintProxy*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USPJoinSessionBlueprintProxy* UDMOnlineAsyncProxies::CreateJoinSessionProxyObject(class UObject* WorldContextObject, const struct FBlueprintSessionResult& Session, class FName SubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineAsyncProxies", "CreateJoinSessionProxyObject");

	Params::DMOnlineAsyncProxies_CreateJoinSessionProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Session = std::move(Session);
	Parms.SubsystemName = SubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineAsyncProxies.CreateStartMatchmakingProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FName, struct FDMSearchSetting>&CustomSearchSettings                                   (Parm, NativeAccessSpecifierPublic)
// const TMap<class FName, struct FDMSessionSetting>&CustomSessionSettings                                  (Parm, NativeAccessSpecifierPublic)
// class FName                             SubsystemName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USPStartMatchmakingProxy*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USPStartMatchmakingProxy* UDMOnlineAsyncProxies::CreateStartMatchmakingProxyObject(class UObject* WorldContextObject, const TMap<class FName, struct FDMSearchSetting>& CustomSearchSettings, const TMap<class FName, struct FDMSessionSetting>& CustomSessionSettings, class FName SubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineAsyncProxies", "CreateStartMatchmakingProxyObject");

	Params::DMOnlineAsyncProxies_CreateStartMatchmakingProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CustomSearchSettings = std::move(CustomSearchSettings);
	Parms.CustomSessionSettings = std::move(CustomSessionSettings);
	Parms.SubsystemName = SubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineAsyncProxies.CreateStartSessionProxyObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SubsystemName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USPStartSessionBlueprintProxy*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USPStartSessionBlueprintProxy* UDMOnlineAsyncProxies::CreateStartSessionProxyObject(class UObject* WorldContextObject, class FName SubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineAsyncProxies", "CreateStartSessionProxyObject");

	Params::DMOnlineAsyncProxies_CreateStartSessionProxyObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SubsystemName = SubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.BranchByNativeOSS
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ENativeOSSBranches*                     Branches                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDMOnlineFunctionLibrary::BranchByNativeOSS(ENativeOSSBranches* Branches)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "BranchByNativeOSS");

	Params::DMOnlineFunctionLibrary_BranchByNativeOSS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Branches != nullptr)
		*Branches = Parms.Branches;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.GetActiveSessionCustomSettings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FName, class FString>        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FName, class FString> UDMOnlineFunctionLibrary::GetActiveSessionCustomSettings(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "GetActiveSessionCustomSettings");

	Params::DMOnlineFunctionLibrary_GetActiveSessionCustomSettings Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.GetPlayerAvatar
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class APlayerState*               PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool bSuccess, class UTexture2D* Texture)>&Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDMOnlineFunctionLibrary::GetPlayerAvatar(const class UObject* WorldContextObject, const class APlayerState* PlayerState, const TDelegate<void(bool bSuccess, class UTexture2D* Texture)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "GetPlayerAvatar");

	Params::DMOnlineFunctionLibrary_GetPlayerAvatar Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerState = PlayerState;
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.GetSessionCustomSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FBlueprintSessionResult&   SessionSearchResult                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TMap<class FName, class FString>        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FName, class FString> UDMOnlineFunctionLibrary::GetSessionCustomSettings(const struct FBlueprintSessionResult& SessionSearchResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "GetSessionCustomSettings");

	Params::DMOnlineFunctionLibrary_GetSessionCustomSettings Parms{};

	Parms.SessionSearchResult = std::move(SessionSearchResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.IsCurrentlyActiveSession
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBlueprintSessionResult&   SessionSearchResult                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDMOnlineFunctionLibrary::IsCurrentlyActiveSession(const class UObject* WorldContextObject, const struct FBlueprintSessionResult& SessionSearchResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "IsCurrentlyActiveSession");

	Params::DMOnlineFunctionLibrary_IsCurrentlyActiveSession Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SessionSearchResult = std::move(SessionSearchResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.IsLoggedIn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      SubsystemName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDMOnlineFunctionLibrary::IsLoggedIn(const class UObject* WorldContextObject, const class FName& SubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "IsLoggedIn");

	Params::DMOnlineFunctionLibrary_IsLoggedIn Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SubsystemName = SubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.IsSessionHost
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDMOnlineFunctionLibrary::IsSessionHost(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "IsSessionHost");

	Params::DMOnlineFunctionLibrary_IsSessionHost Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.IsSessionSingleplayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDMOnlineFunctionLibrary::IsSessionSingleplayer(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "IsSessionSingleplayer");

	Params::DMOnlineFunctionLibrary_IsSessionSingleplayer Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.OpenSteamBrowser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDMOnlineFunctionLibrary::OpenSteamBrowser(const class UObject* WorldContextObject, const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "OpenSteamBrowser");

	Params::DMOnlineFunctionLibrary_OpenSteamBrowser Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.PerformClientTravel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Adress                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDMOnlineFunctionLibrary::PerformClientTravel(class UObject* WorldContextObject, const class FString& Adress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "PerformClientTravel");

	Params::DMOnlineFunctionLibrary_PerformClientTravel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Adress = std::move(Adress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.PerformServerTravel
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       WorldPath                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       GameMode                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAbsolute                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSeamlessTravel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStartSession                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      SubsystemName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDMOnlineFunctionLibrary::PerformServerTravel(class UObject* WorldContextObject, const class FName WorldPath, const class FName GameMode, bool bAbsolute, bool bSeamlessTravel, bool bStartSession, const class FName& SubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "PerformServerTravel");

	Params::DMOnlineFunctionLibrary_PerformServerTravel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WorldPath = WorldPath;
	Parms.GameMode = GameMode;
	Parms.bAbsolute = bAbsolute;
	Parms.bSeamlessTravel = bSeamlessTravel;
	Parms.bStartSession = bStartSession;
	Parms.SubsystemName = SubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.RegisterPlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      SubsystemName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDMOnlineFunctionLibrary::RegisterPlayer(class APlayerController* PlayerController, const class FName& SubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "RegisterPlayer");

	Params::DMOnlineFunctionLibrary_RegisterPlayer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.SubsystemName = SubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.ShowFriendsUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDMOnlineFunctionLibrary::ShowFriendsUI(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "ShowFriendsUI");

	Params::DMOnlineFunctionLibrary_ShowFriendsUI Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.UnregisterPlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      SubsystemName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDMOnlineFunctionLibrary::UnregisterPlayer(class APlayerController* PlayerController, const class FName& SubsystemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "UnregisterPlayer");

	Params::DMOnlineFunctionLibrary_UnregisterPlayer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.SubsystemName = SubsystemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.UpdateCustomSessionSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TMap<class FName, struct FDMSessionSetting>&CustomSettings                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             SubsystemName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool bWasSuccessful)>&Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDMOnlineFunctionLibrary::UpdateCustomSessionSettings(const TMap<class FName, struct FDMSessionSetting>& CustomSettings, class FName SubsystemName, const TDelegate<void(bool bWasSuccessful)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "UpdateCustomSessionSettings");

	Params::DMOnlineFunctionLibrary_UpdateCustomSessionSettings Parms{};

	Parms.CustomSettings = std::move(CustomSettings);
	Parms.SubsystemName = SubsystemName;
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DMOnlinePlugin.DMOnlineFunctionLibrary.UpdateSessionSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TMap<class FName, class FString>& CustomSettings                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FName&                      SubsystemName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void(bool bWasSuccessful)>&Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDMOnlineFunctionLibrary::UpdateSessionSettings(const TMap<class FName, class FString>& CustomSettings, const class FName& SubsystemName, const TDelegate<void(bool bWasSuccessful)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DMOnlineFunctionLibrary", "UpdateSessionSettings");

	Params::DMOnlineFunctionLibrary_UpdateSessionSettings Parms{};

	Parms.CustomSettings = std::move(CustomSettings);
	Parms.SubsystemName = SubsystemName;
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

